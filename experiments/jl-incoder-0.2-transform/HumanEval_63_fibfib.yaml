name: HumanEval_63_fibfib
language: jl
prompt: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
  \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  \    Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\n    >>> fibfib(1)\n    0\n    >>> fibfib(5)\n    4\n    >>>\
  \ fibfib(8)\n    24\n    \"\"\"\nfunction fibfib(n::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
  \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
  \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
  \ == 927)\nend\n"
completions: ["    if n == 0\n        0\n    else if n == 1\n        0\n    else if\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nI believe this should be\
    \ the accepted answer. No need to reinvent the wheel. Just use the built-in `fibfib`\
    \ function.\n<|/ c |>\n<| a dscore=5 |>\nThe accepted answer uses recursion and\
    \ is therefore inefficient. Here is a solution using memoization:\n<code>", " \
    \   if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise:\
    \ Write a function that computes the n-th Fibonacci number using a recursive function.",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=fibonacci,julia\
    \ |>\n<code>", "    if n == 0\n        0\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=fibonacci,julia |>\n<| c |>\nThis does\
    \ not answer the question. OP wants to compute a Fibonacci number in Julia. Your\
    \ code computes Fibonacci numbers in Python.\n<|/ c |>\n<| c |>\nThe question\
    \ was about how to compute a Fibonacci number in Julia. Your code computes Fibonacci\
    \ numbers in Python.\n<|/ c |>\n<| c |>\nThe question was about how to compute\
    \ a Fibonacci number in Julia. Your code computes Fibonacci numbers in Python.\n\
    <|/ c |>\n<| c |>\nThe question was about how to compute a Fibonacci number in\
    \ Julia. Your code computes Fibonacci numbers in Python.\n<|/ c |>\n<| c |>\n\
    The question was about how to compute a Fibonacci number in Julia. Your code computes\
    \ Fibonacci numbers in Python.\n<|/ c |>\n<| a tags=fibonacci,julia |>\n<code>",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n   \
    \     1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...\
    \  2  1  $$\nWrite a function to efficiently compute the factorial of a given\
    \ number.\nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nPlease write a function to efficiently compute the factorial\
    \ of a given number.\nThe factorial of a number $n$ is defined as:\n$$n! = n \
    \ (n-1)  (n-2)  ...  2  1  $$\nPlease write a function to efficiently compute\
    \ the factorial of a given number.\nThe factorial of a number $n$ is defined as:\n\
    $$n! = n  (n-1)  (n-2)  ...  2  1  $$\nPlease write a function to efficiently\
    \ compute the factorial of a given number.\nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nPlease write a function to efficiently\
    \ compute the factorial of a given number.\nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nPlease write a function to efficiently\
    \ compute the factorial of a given number.\nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nPlease write a function to efficiently\
    \ compute the factorial of a given number.\nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nPlease write a function to efficiently\
    \ compute the factorial of a given number.\nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nPlease write a function to efficiently\
    \ compute the factorial of a given number.\nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n", "    if n == 0\n        0\n    else if n == 1\n        0\n\
    \    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that computes\
    \ the n-th Fibonacci number using recursion.", "    if n == 0 \n        0\n  \
    \  else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n   \
    \     fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise:\
    \ Write a function that computes the n-th element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0\n        0\n    else if n == 1\n        0\n    else\
    \ if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that computes the factorial of a given number.\
    \ For example, factorial(5) == 120.\nHint: use recursion.", "    if n == 0\n \
    \       0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "    if n == 0 || n == 1 \n    \
    \    then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis is not an answer to the question. Your code does\
    \ not return the Fibonacci sequence. Your code does not use recursion.\n<|/ c\
    \ |>\n<| c |>\nThe question was how to compute the nth element of the Fibonacci\
    \ sequence. My code does exactly that. Recursion is used here to compute the nth\
    \ element of the Fibonacci sequence without having to store all the previous elements.\
    \ Recursion is used here to compute the nth element of the Fibonacci sequence\
    \ without having to store all the previous elements. Recursion is used here to\
    \ compute the nth element of the Fibonacci sequence without having to store all\
    \ the previous elements. Recursion is used here to compute the nth element of\
    \ the Fibonacci sequence without having to store all the previous elements.\n\
    <|/ c |>\n<| c |>\nThe question was how to compute the nth element of the Fibonacci\
    \ sequence. My code does exactly that. Recursion is used here to compute the nth\
    \ element of the Fibonacci sequence without having to store all the previous elements.\
    \ Recursion is used here to compute the nth element of the Fibonacci sequence\
    \ without having to store all the previous elements. Recursion is used here to\
    \ compute the nth element of the Fibonacci sequence without having to store all\
    \ the previous elements. Recursion is used here to compute the nth element of\
    \ the Fibonacci sequence without having to store all the previous elements.\n\
    <|/ c |>\n<| c |>\nThe question was how to compute the nth element of the Fibonacci\
    \ sequence. My code does exactly that. Recursion is used here to compute the nth\
    \ element of the Fibonacci sequence without having to store all the previous elements.\
    \ Recursion is used here to compute the nth element of the Fibonacci sequence\
    \ without having to store all the previous elements. Recursion is used here to\
    \ compute the nth element of the Fibonacci sequence without having to store all\
    \ the previous elements. Recursion is used here to compute the nth element of\
    \ the Fibonacci sequence without having to store all the previous elements.\n\
    <|/ c |>\n<| c |>\nThe question was how to compute the nth element of the Fibonacci\
    \ sequence. My code does exactly that. Recursion is used here to compute the nth\
    \ element of the Fibonac", "    if n == 0\n        0\n    else if n == 1\n   \
    \     0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\nfibfib(8)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(n::Int64) = (n==0)?0:(n==1)?0:(n==2)?1:fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(1)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.3>\nfibfib(8)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n::Int64) = (n==0)?0:(n==1)?0:(n==2)?1:fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(1)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.3>\nfibfib(8)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n::Int64) = (n==0)?0:(n==1)?0:(n==2)?1:fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(1)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.3>\nfibfib(8)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n::Int64) = (n==0)?0:(n==1)?0:(n==2)?1:fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(1)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.3>\nfibfib(8)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n::Int64) = (n==0)?0:(n==1)?0:(n==2)?1:fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n\
    </", "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n\
    \ == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=0 |>\n\
    <code>", "    if n == 0\n        0\n    elseif n == 1\n        0\n    else\n \
    \       fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| a dscore=1 |>\n<code>", "    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci,recursion |>\n<| a dscore=2 |>\n<code>", "    if n\
    \ == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n    \
    \    1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis answer would be better if\
    \ you explained how it works.\n<|/ c |>\n<| c |>\nI added some explanation.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>", "    if n == 0 \n        0\n    else if n\
    \ == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \ \\times n-1 \\times n-2 \\times ...$$\nFor example, 5! = 5 \\times 4 \\times\
    \ 3 \\times 2 \\times 1 = 120\nWrite a function to compute the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times ...$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times\
    \ 2 \\times 1 = 120\nWrite a function to compute the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times ...$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times\
    \ 1 = 120\nWrite a function to compute the factorial of a given number. \nThe\
    \ factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\\
    times ...$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\n\
    Write a function to compute the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    For example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function\
    \ to compute the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nFor example,\
    \ 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function to compute\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nFor example, 5! = 5 \\\
    times 4 \\times ", "    if n == 0\n        0\n    else if n == 1\n        0\n\
    \    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the\
    \ factorial of a given number. \nThe factorial of a number is defined as:\n$$\
    \ n! = n \\cdot (n-1)! + n \\cdot (n-2)! + n \\cdot (n-3)! + \\cdots + n \\cdot\
    \ 1 $$\nWrite a function that computes the factorial of a given number using recursion.\
    \ \nThe factorial of a number is defined as:\n$$ n! = n \\cdot (n-1)! + n \\cdot\
    \ (n-2)! + n \\cdot (n-3)! + \\cdots + n \\cdot 1 $$\nWrite a function that computes\
    \ the factorial of a given number using memoization. \nThe factorial of a number\
    \ is defined as:\n$$ n! = n \\cdot (n-1)! + n \\cdot (n-2)! + n \\cdot (n-3)!\
    \ + \\cdots + n \\cdot 1 $$\nWrite a function that computes the factorial of a\
    \ given number using dynamic programming. \nThe factorial of a number is defined\
    \ as:\n$$ n! = n \\cdot (n-1)! + n \\cdot (n-2)! + n \\cdot (n-3)! + \\cdots +\
    \ n \\cdot 1 $$\nWrite a function that computes the factorial of a given number\
    \ using dynamic programming and memoization. \nThe factorial of a number is defined\
    \ as:\n$$ n! = n \\cdot (n-1)! + n \\cdot (n-2)! + n \\cdot (n-3)! + \\cdots +\
    \ n \\cdot 1 $$\nWrite a function that computes the factorial of a given number\
    \ using dynamic programming and memoization and recursion. \nThe factorial of\
    \ a number is defined as:\n$$ n! = n \\cdot (n-1)! + n \\cdot (n-2)! + n \\cdot\
    \ (n-3)! + \\cdots + n \\cdot 1 $$\nWrite a function that computes the factorial\
    \ of a given number using dynamic ", "    if n == 0 \n        0\n    else if n\
    \ == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(8)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that computes the n-th Fibonacci number using recursion.", "    if n == 0 \n\
    \        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n \
    \   else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.1>\nfibfib(1)\n</cell>\n<code language=julia-1.1>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.1>\nfibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <text>\nProblem 3\nWrite a function to compute the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times .... 1 \\times 0 $$\nFor example, $5! = 5 \\times 4 \\times 3 \\\
    times 2 \\times 1 = 120$", "    if n == 0 \n        0\n    else if n == 1 \n \
    \       0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=2 |>\nThe Julia\
    \ standard library has this functionality built in:\n<code>\njulia> fibfib(n)\
    \ = fib(n-1) + fib(n-2) + fib(n-3)\nfibfib (generic function with 1 method)",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 \n        0\n    else if n == 1 \n\
    \        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThe Fibonacci\
    \ sequence is defined as `fibfib(n) = fibfib(n-1) + fibfib(n-2)`. Your code computes\
    \ `fibfib(n) = fibfib(n-1) + fibfib(n-2)` which is not the definition of the Fibonacci\
    \ sequence.\n<|/ c |>\n<| c |>\nThe Fibonacci sequence is defined as `fibfib(n)\
    \ = fibfib(n-1) + fibfib(n-2)`. Your code computes `fibfib(n) = fibfib(n-1) +\
    \ fibfib(n-2)` which is not the definition of the Fibonacci sequence.\n<|/ c |>\n\
    <| c |>\nThe Fibonacci sequence is defined as `fibfib(n) = fibfib(n-1) + fibfib(n-2)`.\
    \ Your code computes `fibfib(n) = fibfib(n-1) + fibfib(n-2)` which is not the\
    \ definition of the Fibonacci sequence.\n<|/ c |>\n<| c |>\nThe Fibonacci sequence\
    \ is defined as `fibfib(n) = fibfib(n-1) + fibfib(n-2)`. Your code computes `fibfib(n)\
    \ = fibfib(n-1) + fibfib(n-2)` which is not the definition of the Fibonacci sequence.\n\
    <|/ c |>\n<| c |>\nThe Fibonacci sequence is defined as `fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2)`. Your code computes `fibfib(n) = fibfib(n-1) + fibfib(n-2)` which\
    \ is not the definition of the Fibonacci sequence.\n<|/ c |>\n<| a dscore=3 |>\n\
    The Fibonacci sequence is defined as fibfib(n) = fibfib(n-1) + fibfib(n-2), so\
    \ you can just use that:\n<code>", "    if n == 0\n        0\n    else if n ==\
    \ 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,fibonacci,recursion\
    \ |>\n<code>", "    if n == 0\n        0\n    else if n == 1\n        0\n    else\
    \ if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.\nThe Fibonacci sequence is defined as follows:\n    fibfib(0) ==\
    \ 0\n    fibfib(1) == 0\n    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    Please write a function to efficiently compute the n-th\
    \ element of the Fibonacci sequence.\n    >>> fibfib(1)\n    0\n    >>> fibfib(5)\n\
    \    5\n    >>> fibfib(8)\n    13\n    \"\"\"", "    if n == 0\n        0\n  \
    \  else if n == 1\n        0\n    else if n == 2\n        1\n    else \n     \
    \   fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function to compute the factorial of a number.", "    if n == 0\n    \
    \    0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.1>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.1>\nfibfib(5)\n</cell>\n<code language=julia-1.1>\n\
    fibfib(8)\n</cell>\n<text>\nExercise\nWrite a function that computes the n-th\
    \ Fibonacci number using recursion.", "    if n == 0 \n        0\n    else if\
    \ n == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the factorial\
    \ of a given number. \nFor example, factorial(5) == 120. \nHint: use the factorial\
    \ function from the Base package.", "    if n == 0 \n        0\n    else if n\
    \ == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(8)\n</cell>\n<text>\nExercise: Write a function\
    \ that computes the n-th Fibonacci number using memoization.", "    if n == 0\n\
    \        0\n    elseif n == 1\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThe `fibfib`\
    \ function can be simplified to: `fibfib(n) = n < 2 ? n : fibfib(n-1) + fibfib(n-2)`\n\
    <|/ c |>\n<| c |>\nThanks, I didn't know that. I've edited my answer to include\
    \ your suggestion.\n<|/ c |>\n<| a dscore=3 |>\nThe Julia standard library has\
    \ a Fibonacci function which does exactly what you want.\n<code>\njulia> fibonacci(5)\n\
    5", "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n\
    \ == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times \\times \\\
    times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\", "    if n == 0 \n     \
    \   0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n    else\
    \ \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\\begin{equation}\nn! = n  n-1  n-2  ... \
    \ 1  \n\\end{equation}$$\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$\\begin{equation}\n\
    n! = n  n-1  n-2  ...  1  \n\\end{equation}$$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$\\begin{equation}\nn! = n  n-1  n-2  ...  1  \n\\end{equation}$$\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$\\begin{equation}\nn! = n  n-1  n-2  ...  1 \
    \ \n\\end{equation}$$\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$\\begin{equation}\n\
    n! = n  n-1  n-2  ...  1  \n\\end{equation}$$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$\\begin{equation}\nn! = n  n-1  n-2  ...  1  \n\\end{equation}$$\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$\\begin{equation}\nn! = n  n-1  n-2  ...  1 \
    \ \n\\end{equation}$$\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$\\begin{equation}\n\
    n! = n  n-1  n-2  ...  1  \n\\end{equation}$$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$\\begin{equation}\nn! = n  n-1  n-2  ...  1  \n\\end{equation}$$\nWrite\
    \ a function that computes the ", "    if n == 0\n        0\n    else if n ==\
    \ 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.5>", "    if n == 0 \n        0\n \
    \   else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n  \
    \      fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.5>", "    if n == 0 \n        0\n \
    \   else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n  \
    \      fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.0>\n@time fibfib(5)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(8)\n</cell>\n<text>\nExercise: Write a\
    \ function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    elseif n == 1\n        1\n    elseif n == 2\n   \
    \     1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\nfibfib(8)\n\
    </cell>\n<text>\nProblem 7\nWrite a function to compute the factorial of a given\
    \ number. \nFor example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n ==\
    \ 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n        1\n\
    \    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.3>\nfibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis is not an answer. Just a comment. Try to avoid\
    \ posting code only answers.\n<|/ c |>\n<| c |>\nI agree with you. But the code\
    \ was already given and I wanted to give the OP an idea of how to solve the problem\
    \ using recursion. He didn't ask for an entire solution, just an idea of how to\
    \ solve the problem.\n<|/ c |>\n<| c |>\nI didn't downvote your answer. Just trying\
    \ to help. :)\n<|/ c |>\n<| c |>\nThanks for the feedback. I'll keep that in mind\
    \ next time I post an answer.\n<|/ c |>\n<| c |>\nThanks for the feedback. I'll\
    \ keep that in mind next time I post an answer.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>", "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else\
    \ if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that computes the factorial of a given number. \nFor example\
    \ factorial(5) == 120\nHint: use recursion.", "    if n == 0\n        0\n    elseif\
    \ n == 1\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times .... \\times 2 \\times 1$$\nWrite a function to compute the factorial\
    \ of a given number using recursion.", "    if n == 0\n        0\n    else if\
    \ n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(8)\n</cell>\n<text>\nExercise: Write a function\
    \ to compute the n-th element of the Fibonacci sequence using recursion.", " \
    \   if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.3>\n@time fibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0\n \
    \       0\n    elseif n == 1\n        0\n    elseif n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that computes the factorial of a number. \nFor example,\
    \ factorial(5) = 5 x 4 x 3 x 2 x 1 = 120\nHint: use recursion.", "    if n ==\
    \ 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    if n == 0 \n\
    \        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n \
    \   else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    fibfib2(m::Int64)::Int64\n    \n    Computes fibfib2(m) efficiently\n\
    \    \n    fibfib2(m) computes the n-th element of the Fibonacci sequence fibfib2(m)\
    \ where fibfib2(0) is 0 and fibfib2(1) is 1.\n    \n    fibfib2(m) uses recursion\
    \ to compute the n-th element of the Fibonacci sequence fibfib2(m).\n    \n  \
    \  fibfib2(m) uses memoization to compute the n-th element of the Fibonacci sequence\
    \ fibfib2(m).\n    \n    fibfib2(m) uses dynamic programming to compute the n-th\
    \ element of the Fibonacci sequence fibfib2(m).\n    \n    fibfib2(m) uses memoization\
    \ to compute the n-th element of the Fibonacci sequence fibfib2(m).\n    \n  \
    \  fibfib2(m) uses dynamic programming to compute the n-th element of the Fibonacci\
    \ sequence fibfib2(m).\n    \n    fibfib2(m) uses memoization to compute the n-th\
    \ element of the Fibonacci sequence fibfib2(m).\n    \n    fibfib2(m) uses dynamic\
    \ programming to compute the n-th element of the Fibonacci sequence fibfib2(m).\n\
    \    \n    fibfib2(m) uses memoization to compute the n-th element of the Fibonacci\
    \ sequence fibfib2(m).\n    \n    fibfib2(m) uses dynamic programming to compute\
    \ the n-th element of the Fibonacci sequence fibfib2(m).\n    \n    fibfib2(m)\
    \ uses memoization to compute the n-th element of the Fibonacci sequence fibfib2(m).\n\
    \    \n    fibfib2(m) uses dynamic programming to compute the n-th element of\
    \ the Fibonacci sequence fibfib2(m).\n    \n    fibfib2(m) uses memoization to\
    \ compute the n-th element of the Fibonacci sequence fibfib2(", "    if n == 0\n\
    \        0\n    else if n == 1\n        0\n    else if n == 2\n        1\n   \
    \ else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a |>\n\
    <| a dscore=0 |>\n<code>", "    if n == 0 \n        0\n    else if n == 1 \n \
    \       0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0 \n\
    \        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n \
    \   else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function to compute the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times ", "    if n == 0\n\
    \        0\n    elseif n == 1\n        0\n    elseif n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThis is not the Fibonacci sequence. Fibonacci sequence starts with\
    \ 0 and 1. Your code starts with 1 and 1.\n<|/ c |>\n<| c |>\nI fixed the code\
    \ so that it starts with 0 and 1. Thanks for pointing that out.\n<|/ c |>\n<|\
    \ c |>\nThis code does not work. Try fibfib(0). It returns 0.\n<|/ c |>\n<| c\
    \ |>\nI fixed the code so that it starts with 0 and 1. Thanks for pointing that\
    \ out.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    if n == 0\n        0\n    elseif\
    \ n == 1\n        0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    if n == 0 || n == 1\n        return 0\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n == 0\n        0\n    elseif\
    \ n == 1\n        0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.3>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.3>\n@time fibfib(8)\n</cell>\n<text>\nExercise\nWrite a function\
    \ to compute the n-th element of the Fibonacci sequence using recursion.", " \
    \   if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.\nThe Fibonacci sequence is defined as follows:\n    fibfib(0) ==\
    \ 0\n    fibfib(1) == 0\n    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    Please write a function to efficiently compute the n-th\
    \ element of the Fibonacci sequence.\n    >>> fibfib(1)\n    0\n    >>> fibfib(2)\n\
    \    1\n    >>> fibfib(5)\n    5\n    >>> fibfib(8)\n    13\n    \"\"\"", "  \
    \  if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n == 0 \n  \
    \      0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n   \
    \ else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n   \
    \     1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| c |>\nThis doesn't work. `fibfib(1)` returns\
    \ `0` instead of `1`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I fixed\
    \ the code accordingly.\n<|/ c |>\n<| c |>\nThis doesn't work. `fibfib(1)` returns\
    \ `0` instead of `1`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I fixed\
    \ the code accordingly.\n<|/ c |>\n<| a dscore=4 |>\n<code>", "    if n == 0\n\
    \        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThis answer does not answer the question. OP asked\
    \ for Julia code, not Python code.\n<|/ c |>\n<| c |>\nThe question was tagged\
    \ Julia. Julia code was the only code that was asked for. Python code was the\
    \ only code that was asked for. Julia code was the only code that was asked for.\
    \ Julia code was the only code that was asked for. Julia code was the only code\
    \ that was asked for. Julia code was the only code that was asked for. Julia code\
    \ was the only code that was asked for. Julia code was the only code that was\
    \ asked for. Julia code was the only code that was asked for. Julia code was the\
    \ only code that was asked for. Julia code was the only code that was asked for.\
    \ Julia code was the only code that was asked for. Julia code was the only code\
    \ that was asked for. Julia code was the only code that was asked for. Julia code\
    \ was the only code that was asked for. Julia code was the only code that was\
    \ asked for. Julia code was the only code that was asked for. Julia code was the\
    \ only code that was asked for. Julia code was the only code that was asked for.\
    \ Julia code was the only code that was asked for. Julia code was the only code\
    \ that was asked for. Julia code was the only code that was asked for. Julia code\
    \ was the only code that was asked for. Julia code was the only code that was\
    \ asked for. Julia code was the only code that was asked for. Julia code was the\
    \ only code that was asked for. Julia code was the only code that was asked for.\
    \ Julia code was the only code that was asked for. Julia code was the only code\
    \ that was asked for. Julia code was the only code that was asked for. Julia code\
    \ was the only code that was asked for. Julia code was the only code that was\
    \ asked for. Julia code was the only code that was asked for. Julia code was the\
    \ only code that was asked for. Julia code was the only code that was asked for.\
    \ Julia code was the only code that was asked for. Juli", "    if n == 0\n   \
    \     0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=fibonacci,julia,recursion\
    \ |>\n<| a |>\nI wanted to add this as a comment to Chris Rackauckas answer, but\
    \ I don't have enough reputation to do so. \nI wanted to add that Chris Rackauckas\
    \ answer can be simplified a little bit by using the following code:\n<code>",
  "    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=fibonacci,julia |>\nI wrote a recursive\
    \ function which returns nth fibonacci number in Julia. \n<code>", "    if n ==\
    \ 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n       \
    \ 1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as the product of all the numbers\
    \ from 1 to $n$, inclusive.\nFor example, the factorial of $n$ is $n!$, where\
    \ $n$ is 1, 2, 3, and so on.\nFor example, factorial(3) = 6 because $3! = 6 \\\
    times 2 \\times 1$\nWrite a function that computes the factorial of a given number\
    \ using recursion.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using iteration.\nWrite a function that computes the factorial of a given number\
    \ using ", "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</code>\n<|/\
    \ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n\
    \ == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n    \
    \    1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.\nThe Fibonacci sequence is defined as follows:\n \
    \   fibfib(0) == 0\n    fibfib(1) == 0\n    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3).\n    Please write a function to efficiently compute\
    \ the n-th element of the fibfib number sequence.\n    >>> fibfib(1)\n    0\n\
    \    >>> fibfib(5)\n    4\n    >>> fibfib(8)\n    24\n    \"\"\"", "    if n ==\
    \ 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n        1\n \
    \   else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n<text>\n\
    Exercise: Write a function to compute the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0 \n        0\n    else if n == 1 \n       \
    \ 0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci,recursion |>\n<| c |>\n\
    I believe this should be the accepted answer. Although it does require a recursive\
    \ function call, the recursive call is hidden inside the function itself.\n<|/\
    \ c |>\n<| c |>\nThis answer is wrong. `fibfib` returns `Int64`, not `Int`. `fibfib(1)`\
    \ returns `0`, not `1`.\n<|/ c |>\n<| c |>\nThis answer is not wrong, it is just\
    \ not very idiomatic Julia. `fibfib` returns `Int64`, not `Int`. `fibfib(1)` returns\
    \ `0`, not `1`.\n<|/ c |>\n<| c |>\nI agree with you, my answer was more a proof\
    \ of concept to show how it could be done in Julia.\n<|/ c |>\n<| a dscore=5 |>\n\
    The accepted answer by is wrong. fibfib returns Int64, not Int. fibfib(1) returns\
    \ 0, not 1.\nThe correct answer is:\n<code>", "    if n == 0 \n        0\n   \
    \ else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n    \
    \    fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$\\begin{align}\n\
    n! = n \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times ",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n   \
    \     1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n</code>\n<|/ a dscore=0 |>\n<| a tags=fibonacci,julia,recursion\
    \ |>\n<code>", "    if n == 0 \n        0\n    else if n == 1 \n        0\n  \
    \  else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=3 |>\n\
    Here is a recursive solution that is also very efficient:\n<code>", "    if n\
    \ == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n       \
    \ 1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.4>\nfibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.4>\nfibfib(8)\n</cell>\n<text>\nExercise: Write\
    \ a function that computes the n-th Fibonacci number using recursion.", "    if\
    \ n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n     \
    \   1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times ...$$\nFor example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times\
    \ 1 = 120$", "    if n == 0\n        0\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis is\
    \ not the Fibonacci sequence. `fibfib(0)` is `0`, not `1`.\n<|/ c |>\n<| c |>\n\
    Thanks for pointing that out. I've fixed the code accordingly.\n<|/ c |>\n<| a\
    \ dscore=4 |>\nThe Fibonacci sequence is defined as:\n<code>\nF(0) = 0\nF(1) =\
    \ 1\nF(n) = F(n-1) + F(n-2)\n</code>\nIn Julia, you can define this as:\n<code>",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise: Write a function to compute the n-th element of the Fibonacci\
    \ sequence using memoization.", "    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,fibonacci,recursion\
    \ |>\n<code>", "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise: Write a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0\n        0\n    elseif n == 1\n \
    \       0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 \n        0\n    else if n == 1 \n\
    \        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<text>\nExercise: Write a function to compute the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0\n \
    \       0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n == 0 \n        0\n    else\
    \ if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.4>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.4>\nfibfib(5)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.", "    if n == 0\n        0\n   \
    \ else if n == 1\n        0\n    else if n == 2\n        1\n    else\n       \
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.\nHint: use fibonacci(n-1) + fibonacci(n-2)\
    \ + fibonacci(n-3)", "    if n == 0\n        0\n    elseif n == 1\n        0\n\
    \    elseif n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=fibonacci,julia,recursion |>\n<| a tags=fibonacci,julia,recursion\
    \ |>\n<code>", "    if n == 0 \n        0\n    else if n == 1 \n        0\n  \
    \  else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</cell>\n<text>\nExercise\nWrite a function that computes\
    \ the n-th element of the Fibonacci sequence using recursion.", "    if n == 0\
    \ || n == 1\n        return 0\n    else\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(8)\n</cell>\n<text>\nExercise\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.", "    if n == 0\n      \
    \  0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci,recursion\
    \ |>\n<| c |>\nThis doesn't seem to work for me. `fibfib(1)` returns `0` instead\
    \ of `1`.\n<|/ c |>\n<| c |>\nI tested it and it works for me. Are you sure you\
    \ copied it correctly? I tested it on Julia 0.6.2\n<|/ c |>\n<| c |>\nI tested\
    \ it on Julia 0.6.2\n<|/ c |>\n<| c |>\nI tested it on Julia 0.6.2\n<|/ c |>\n\
    <| c |>\nI tested it on Julia 0.6.2\n<|/ c |>\n<| a tags=julia,fibonacci,recursion\
    \ |>\n<code>", "    if n == 0\n        0\n    else if n == 1\n        0\n    else\
    \ if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0\n        0\n    elseif n == 1\n \
    \       0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n\
    </cell>\n<code language=julia-1.0>\n\"\"\"\n    fibfib2(n::Int64)::Int64\n   \
    \ \n    Computes fibfib(n) using recursion.\n    \n    fibfib2(n) computes fibfib(n)\
    \ using recursion.\n    \n    fibfib2(n) computes fibfib(n) using recursion.\n\
    \    \n    fibfib2(n) computes fibfib(n) using recursion.\n    \n    fibfib2(n)\
    \ computes fibfib(n) using recursion.\n    \n    fibfib2(n) computes fibfib(n)\
    \ using recursion.\n    \n    fibfib2(n) computes fibfib(n) using recursion.\n\
    \    \n    fibfib2(n) computes fibfib(n) using recursion.\n    \n    fibfib2(n)\
    \ computes fibfib(n) using recursion.\n    \n    fibfib2(n) computes fibfib(n)\
    \ using recursion.\n    \n    fibfib2(n) computes fibfib(n) using recursion.\n\
    \    \n    fibfib2(n) computes fibfib(n) using recursion.\n    \n    fibfib2(n)\
    \ computes fibfib(n) using recursion.\n    \n    fibfib2(n) computes fibfib(n)\
    \ using recursion.\n    \n    fibfib2(n) computes fibfib(n) using recursion.\n\
    \    \n    fibfib2(n) computes fibfib(n) using recursion.\n    \n    fibfib2(n)\
    \ computes fibfib(n) using recursion.\n    \n    fibfib2(n) computes fibfib(n)\
    \ using recursion.\n    \n    fibfib2(n) computes fibfib(n) using recursion.\n\
    \    \n    fibfib2(n) computes fibfib(n) using recursion.\n    \n    fibfib2(n)\
    \ computes fibfib(n) using recursion.\n    \n    fibfib2(n) computes fibfib(n)\
    \ using recursion.\n    \n    fibfib2(n) ", "    if n == 0 || n == 1 \n      \
    \  then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(1)\n\
    </cell>\n<text>\nExercise 3\nWrite a function to compute the factorial of a number.\
    \ \nThe factorial of a number is defined as:\n$$\\begin{align}\n!n! = n \\times\
    \ \\cdots \\times 3\\times 2 \\times 1\n\\end{align}$$\nWrite a function to compute\
    \ the factorial of a number using recursion.\nThe factorial of a number is defined\
    \ as:\n$$\\begin{align}\n!n! = n \\times \\cdots \\times 3\\times 2 \\times 1\n\
    \\end{align}$$\nWrite a function to compute the factorial of a number using recursion.\n\
    The factorial of a number is defined as:\n$$\\begin{align}\n!n! = n \\times \\\
    cdots \\times 3\\times 2 \\times 1\n\\end{align}$$\nWrite a function to compute\
    \ the factorial of a number using recursion.\nThe factorial of a number is defined\
    \ as:\n$$\\begin{align}\n!n! = n \\times \\cdots \\times 3\\times 2 \\times 1\n\
    \\end{align}$$\nWrite a function to compute the factorial of a number using recursion.\n\
    The factorial of a number is defined as:\n$$\\begin{align}\n!n! = n \\times \\\
    cdots \\times 3\\times 2 \\times 1\n\\end{align}$$\nWrite a function to compute\
    \ the factorial of a number using recursion.\nThe factorial of a number is defined\
    \ as:\n$$\\begin{align}\n!n! = n \\times \\cdots \\times 3\\times 2 \\times 1\n\
    \\end{align}$$\nWrite a function to compute the factorial of a number using recursion.\n\
    The factorial of a number is defined as:\n$$\\begin{align}\n!n! = n \\times \\\
    cdots \\times 3\\times 2 \\times 1\n\\end{align}$$\nWrite a function to compute\
    \ the factorial of a number using recursion.\nThe factorial of a number is defined\
    \ as:\n$$\\begin{align}\n!n! = n \\times \\cdots \\times 3\\times 2 \\times 1\n\
    \\end{align}$$\nWrite a function to compute the factorial of a number using recursion.\n\
    The factorial of a number is defined as:\n$$\\begin{align}\n!n! = n \\times \\\
    cdots \\times 3\\times 2 \\times 1", "    if n == 0\n        0\n    else if n\
    \ == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.5>", "    if n == 0\n        0\n  \
    \  else if n == 1\n        0\n    else if n == 2\n        1\n    else\n      \
    \  fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(8)\n</cell>\n<text>\nExercise: Write a\
    \ function that computes the factorial of a given number. Hint: use the factorial\
    \ function.", "    if n == 0 \n        0\n    else if n == 1 \n        0\n   \
    \ else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.3>\nfibfib(1)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.3>\nfibfib(8)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number is defined as the product of all the numbers from 1 to that number.\
    \ \nFor example, the factorial of 8 is 1*2*3*4*5*6*7*8 = 8! \nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number is\
    \ defined as the product of all the numbers from 1 to that number. \nFor example,\
    \ the factorial of 8 is 1*2*3*4*5*6*7*8 = 8! \nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number is defined as the\
    \ product of all the numbers from 1 to that number. \nFor example, the factorial\
    \ of 8 is 1*2*3*4*5*6*7*8 = 8! \nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number is defined as the product of\
    \ all the numbers from 1 to that number. \nFor example, the factorial of 8 is\
    \ 1*2*3*4*5*6*7*8 = 8! \nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number is defined as the product of all the numbers\
    \ from 1 to that number. \nFor example, the factorial of 8 is 1*2*3*4*5*6*7*8\
    \ = 8! \nWrite a function that computes the factorial of a given number. \nThe\
    \ factorial of a number is defined as the product of all the numbers from 1 to\
    \ that number. \nFor example, the factorial of 8 is 1*2*3*4*5*6*7*8 = 8! \nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number is defined as the product of all the numbers from 1 to that number.\
    \ \nFor example, the factorial of 8 is 1*2*3*4*5*6*7*8 = 8! \nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number is\
    \ defined as the product of all the numbers from 1 to that number. \nFor example,\
    \ the factorial of 8 is 1*2*3*4*5*6*7*8 = 8! \nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number is defined as the ",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n   \
    \     1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=fibonacci,julia |>\n<code>", "    if n == 0 \n  \
    \      0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n   \
    \ else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nProblem 4\nWrite\
    \ a function to compute the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ... \\times\
    \ 2 \\times 1$$\nFor example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times 1\
    \ = 120$", "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n@time fibfib(5)\n@time\
    \ fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the n-th\
    \ Fibonacci number using recursion.\nThe Fibonacci sequence is defined by the\
    \ recurrence relation:\n$$ Fn = F{n-1} + F_{n-2} $$\nwhere $F_0 = 0$ and $F_1\
    \ = 1$. Write a recursive function that computes the n-th Fibonacci number.\n\
    The Fibonacci sequence is defined by the recurrence relation:\n$$ Fn = F{n-1}\
    \ + F_{n-2} $$\nwhere $F_0 = 0$ and $F_1 = 1$. Write a recursive function that\
    \ computes the n-th Fibonacci number.\nThe Fibonacci sequence is defined by the\
    \ recurrence relation:\n$$ Fn = F{n-1} + F_{n-2} $$\nwhere $F_0 = 0$ and $F_1\
    \ = 1$. Write a recursive function that computes the n-th Fibonacci number.\n\
    The Fibonacci sequence is defined by the recurrence relation:\n$$ Fn = F{n-1}\
    \ + F_{n-2} $$\nwhere $F_0 = 0$ and $F_1 = 1$. Write a recursive function that\
    \ computes the n-th Fibonacci number.\nThe Fibonacci sequence is defined by the\
    \ recurrence relation:\n$$ Fn = F{n-1} + F_{n-2} $$\nwhere $F_0 = 0$ and $F_1\
    \ = 1$. Write a recursive function that computes the n-th Fibonacci number.\n\
    The Fibonacci sequence is defined by the recurrence relation:\n$$ Fn = F{n-1}\
    \ + F_{n-2} $$\nwhere $F_0 = 0$ and $F_1 = 1$. Write a recursive function that\
    \ computes the n-th Fibonacci number.\nThe Fibonacci sequence is defined by the\
    \ recurrence relation:\n$$ Fn = F{n-1} + F_{n-2} $$\nwhere $F_0 = 0$ and $F_1\
    \ = 1$", "    if n == 0\n        0\n    else if n == 1\n        0\n    else if\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 || n == 1\n        return 0\n   \
    \ else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise: Write\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<|\
    \ c |>\nThis doesn't work. `fibfib(0)` returns `0`, not `1`. And `fibfib(1)` returns\
    \ `0`, not `1`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've fixed the\
    \ code accordingly.\n<|/ c |>\n<| a dscore=3 |>\nHere's a solution using recursion:\n\
    <code>", "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else\
    \ if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that computes the n-th Fibonacci\
    \ number using the recursive definition of the Fibonacci number sequence. Test\
    \ your function by computing the first 20 Fibonacci numbers. Remember that you\
    \ can use the function fibfib(n) to compute the n-th Fibonacci number.", "   \
    \ if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci |>\n<code>",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n   \
    \     1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.4>\n@time fibfib(1)\n</cell>\n<code language=julia-1.4>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.4>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise: Write a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 \n        0\n    else if n == 1 \n\
    \        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=3 |>\n\
    In Julia 1.3 you can use the Fibonacci function from the Base package:\n<code>\n\
    julia> Base.Fibonacci(10)\n55\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=2\
    \ |>\nIn Julia 1.3 you can use the Fibonacci function from the Base package:\n\
    <code>\njulia> Base.Fibonacci(10)\n55\n</code>\n<|/ a tags=julia,fibonacci |>\n\
    <| a dscore=2 |>\nIn Julia 1.3 you can use the Fibonacci function from the Base\
    \ package:\n<code>\njulia> Base.Fibonacci(10)\n55\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| a tags=julia,fibonacci |>\nIn Julia 1.3 you can use the Fibonacci function\
    \ from the Base package:\n<code>\njulia> Base.Fibonacci(10)\n55\n</code>\n<|/\
    \ a dscore=2 |>\n<| a tags=julia,fibonacci |>\nIn Julia 1.3 you can use the Fibonacci\
    \ function from the Base package:\n<code>\njulia> Base.Fibonacci(10)\n55\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=julia,fibonacci |>\nIn Julia 1.3 you can use the\
    \ Fibonacci function from the Base package:\n<code>\njulia> Base.Fibonacci(10)\n\
    55\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\nIn Julia 1.3 you can use the\
    \ Fibonacci function from the Base package:\n<code>\njulia> Base.Fibonacci(10)\n\
    55\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=1 |>\nIn Julia 1.3 you\
    \ can use the Fibonacci function from the Base package:\n<code>\njulia> Base.Fibonacci(10)\n\
    55\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a ", "    if n == 0\n        0\n\
    \    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n    \
    \    fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that computes the factorial of a given number. For example, factorial(5)\
    \ = 5 x 4 x 3 x 2 x 1 = 120", "    if n == 0\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.0>\n@time fibfib(8)\n</cell>\n<text>\nExercise: Write a function\
    \ that computes the n-th Fibonacci number using the recursive formula.", "   \
    \ if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis doesn't work for me.\
    \ `fibfib(1)` returns `0` instead of `1`.\n<|/ c |>\n<| c |>\nThe code I posted\
    \ is correct and works for me. Are you sure you copied it correctly? What Julia\
    \ version are you using?\n<|/ c |>\n<| c |>\nI'm using Julia 1.5.1. I copied it\
    \ exactly as you posted it. I also tried it on another computer with Julia 1.5.1\
    \ and it didn't work. I'm going to try it on another computer with Julia 1.6.\n\
    <|/ c |>\n<| c |>\nI tested it on another computer with Julia 1.6.1 and it worked.\
    \ Thanks for your help!\n<|/ c |>\n<| c |>\nI tested it on another computer with\
    \ Julia 1.6.1 and it worked. Thanks for your help!\n<|/ c |>\n<| a dscore=2 |>\n\
    The accepted answer does not work for me. \n<code>\njulia> fibfib(1)\n0", "  \
    \  if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise\n\
    Write a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n  n-1  n-2  ...  1  $$\nWrite a function\
    \ that computes the factorial of a given number using recursion.", "    if n ==\
    \ 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n        1\n \
    \   else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function to compute the factorial of a given number. \nThe\
    \ factorial of a number $n$ is defined as the product of all the numbers from\
    \ 1 to $n$. \nFor example, the factorial of $n$ is $n!$, where $n$ is any positive\
    \ integer.\nWrite a function to compute the factorial of a given number using\
    \ recursion.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to compute the factorial of a given number using\
    \ iteration.\nWrite a function to ", "    if n == 0 \n        0\n    else if n\
    \ == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nI believe\
    \ this should be the accepted answer. Although it does require a recursive solution,\
    \ it is much more efficient than the other solutions presented here.\n<|/ c |>\n\
    <| a dscore=2 |>\nThe easiest way is to just use an array:\n<code>", "    if n\
    \ == 0\n        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "    if n == 0 || n == 1\n       \
    \ return 0\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis was my first attempt at recursion\
    \ and I thought it was a good way to learn it, but I couldn't get it to work.\
    \ I'm still trying to figure out why.\n<|/ c |>\n<| c |>\nI added a recursive\
    \ solution to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks so much! I\
    \ appreciate it!\n<|/ c |>\n<| a |>\nThe recursive solution is very elegant and\
    \ simple. \n<code>", "    if n == 0 \n        0\n    else if n == 1 \n       \
    \ 0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis doesn't\
    \ work. `fibfib(1)` returns `0` instead of `1`.\n<|/ c |>\n<| c |>\nThanks for\
    \ pointing that out. I've fixed it.\n<|/ c |>\n<| c |>\nThis doesn't work. `fibfib(1)`\
    \ returns `0` instead of `1`.\n<|/ c |>\n<| c |>\nThanks for pointing that out.\
    \ I've fixed it.\n<|/ c |>\n<| a dscore=3 |>\n<code>", "    if n == 0 \n     \
    \   0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n    else\
    \ \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise\
    \ 10\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0 || n == 1\n        return 0\n    else\n  \
    \      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$\\begin{align}\n\
    n! = n \\times n-1 \\times n-2 \\times \\cdots \\times 2 \\times 1\n\\end{align}$$\n\
    Write a function to compute the factorial of a given number.\nThe factorial of\
    \ a number $n$ is defined as:\n$$\\begin{align}\nn! = n \\times n-1 \\times n-2\
    \ \\times \\cdots \\times 2 \\times 1\n\\end{align}$$\nWrite a function to compute\
    \ the factorial of a given number.\nThe factorial of a number $n$ is defined as:\n\
    $$\\begin{align}\nn! = n \\times n-1 \\times n-2 \\times \\cdots \\times 2 \\\
    times 1\n\\end{align}$$\nWrite a function to compute the factorial of a given\
    \ number.\nThe factorial of a number $n$ is defined as:\n$$\\begin{align}\nn!\
    \ = n \\times n-1 \\times n-2 \\times \\cdots \\times 2 \\times 1\n\\end{align}$$\n\
    Write a function to compute the factorial of a given number.\nThe factorial of\
    \ a number $n$ is defined as:\n$$\\begin{align}\nn! = n \\times n-1 \\times n-2\
    \ \\times \\cdots \\times 2 \\times 1\n\\end{align}$$\nWrite a function to compute\
    \ the factorial of a given number.\nThe factorial of a number $n$ is defined as:\n\
    $$\\begin{align}\nn! = n \\times n-1 \\times n-2 \\times \\cdots \\times 2 \\\
    times 1\n\\end{align}$$\nWrite a function to compute the factorial of a given\
    \ number.\nThe factorial of a number $n$ is defined as:\n$$\\begin{align}\nn!\
    \ = n \\times n-1 \\times n-2 \\times \\cdots \\times 2 \\times 1\n\\end{align}$$\n\
    Write a function to compute the factorial of a given number.\nThe factorial of\
    \ a ", "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n\
    \ == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<text>\nProblem 7\nWrite a function that returns the factorial of\
    \ a given number. \nFor example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120\nHint:\
    \ use the factorial function in the math package", "    if n == 0\n        0\n\
    \    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n    \
    \    fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.0>", "    if n == 0\n        0\n  \
    \  else if n == 1\n        0\n    else if n == 2\n        1\n    else\n      \
    \  fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>", "    if n == 0\n        0\n    else if n == 1\n   \
    \     0\n    else if n == 2\n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.", "    if n == 0 \n        0\n    else if\
    \ n == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=2 |>\n<| a tags=fibonacci,julia\
    \ |>\n<code>", "    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(1)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    The Fibonacci sequence is defined as follows:\n    fibfib(0) == 0\n    fibfib(1)\
    \ = 1\n    fibfib(n) = fibfib(n-1) + fibfib(n-2).\n    Please write a function\
    \ to efficiently compute the n-th element of the Fibonacci sequence.\n    >>>\
    \ fibfib(1)\n    1\n    >>> fibfib(2)\n    1\n    >>> fibfib(3)\n    2\n    >>>\
    \ fibfib(5)\n    8\n    >>> fibfib(8)\n    13\n    \"\"\"", "    if n == 0 \n\
    \        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n \
    \   else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/\
    \ a dscore=2 |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n == 0 then return\
    \ 0\n    if n == 1 then return 1\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a dscore=1 |>\n<| a tags=recursion,julia,fibonacci |>\n<code>",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>", "    if n == 0\n        0\n    elseif\
    \ n == 1\n        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,fibonacci |>\n<code>", "    if\
    \ n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n       \
    \ 1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| c |>\nThis does not provide an answer to the\
    \ question. To critique or request clarification from an author, leave a comment\
    \ below their post. - [From Review](/review/low-quality-posts/26812847)\n<|/ c\
    \ |>\n<| c |>\nThe question was \"How to compute Fibonacci numbers in Julia?\"\
    \ The answer was \"Use a recursive function\". The question was \"How to compute\
    \ Fibonacci numbers in Julia?\" The answer was \"Use a recursive function\". The\
    \ question was \"How to compute Fibonacci numbers in Julia?\" The answer was \"\
    Use a recursive function\". The question was \"How to compute Fibonacci numbers\
    \ in Julia?\" The answer was \"Use a recursive function\". The question was \"\
    How to compute Fibonacci numbers in Julia?\" The answer was \"Use a recursive\
    \ function\". The question was \"How to compute Fibonacci numbers in Julia?\"\
    \ The answer was \"Use a recursive function\". The question was \"How to compute\
    \ Fibonacci numbers in Julia?\" The answer was \"Use a recursive function\". The\
    \ question was \"How to compute Fibonacci numbers in Julia?\" The answer was \"\
    Use a recursive function\". The question was \"How to compute Fibonacci numbers\
    \ in Julia?\" The answer was \"Use a recursive function\". The question was \"\
    How to compute Fibonacci numbers in Julia?\" The answer was \"Use a recursive\
    \ function\". The question was \"How to compute Fibonacci numbers in Julia?\"\
    \ The answer was \"Use a recursive function\". The question was \"How to compute\
    \ Fibonacci numbers in Julia?\" The answer was \"Use a recursive function\". The\
    \ question was \"How to compute Fibonacci numbers in Julia?\" The answer was \"\
    Use a recursive function\". The question was \"How to compute Fibonacci numbers\
    \ in Julia?\" The answer was \"Use a recursive function\". The question was \"\
    How to compute Fibonacci numbers in Julia?\" The answer was \"Use a recursive\
    \ function\". The ", "    if n == 0\n        0\n    else if n == 1\n        0\n\
    \    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci\
    \ |>\nHere's a Julia implementation that uses memoization to speed up the calculation\
    \ of fib(n) up to n = 20 (the largest number that can be represented as a 64-bit\
    \ integer). \n<code>", "    if n == 0 \n        0\n    else if n == 1 \n     \
    \   0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<text>\nProblem 7\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nFor example, 5! = 5 x 4 x 3 x 2\
    \ x 1 = 120.\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...\
    \  2  1  $$\nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120.\nHint: Use a for loop\
    \ to compute the factorial.", "    if n == 0\n        0\n    elseif n == 1\n \
    \       0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis doesn't\
    \ answer the question. The question was about how to write this in Julia.\n<|/\
    \ c |>\n<| c |>\nThe question was about how to write this in Julia. Your answer\
    \ doesn't answer the question. The question was about how to write this in Julia.\
    \ Your answer doesn't answer the question. The question was about how to write\
    \ this in Julia. Your answer doesn't answer the question. The question was about\
    \ how to write this in Julia. Your answer doesn't answer the question. The question\
    \ was about how to write this in Julia. Your answer doesn't answer the question.\
    \ The question was about how to write this in Julia. Your answer doesn't answer\
    \ the question. The question was about how to write this in Julia. Your answer\
    \ doesn't answer the question. The question was about how to write this in Julia.\
    \ Your answer doesn't answer the question. The question was about how to write\
    \ this in Julia. Your answer doesn't answer the question. The question was about\
    \ how to write this in Julia. Your answer doesn't answer the question. The question\
    \ was about how to write this in Julia. Your answer doesn't answer the question.\
    \ The question was about how to write this in Julia. Your answer doesn't answer\
    \ the question. The question was about how to write this in Julia. Your answer\
    \ doesn't answer the question. The question was about how to write this in Julia.\
    \ Your answer doesn't answer the question. The question was about how to write\
    \ this in Julia. Your answer doesn't answer the question. The question was about\
    \ how to write this in Julia. Your answer doesn't answer the question. The question\
    \ was about how to write this in Julia. Your answer doesn't answer the question.\
    \ The question was about how to write this in Julia. Your answer doesn't answer\
    \ the question. The question was about how to write this in Julia. Your answer\
    \ doesn't answer the question. The question was about how to write this in Julia.\
    \ Your answer doesn't answer the question. The question was about how to write\
    \ this in Julia. Your answer doesn't answer the question. The question was about\
    \ how to write this in Julia. Your answer doesn't answer the question. The question\
    \ was about how to write this in Julia. Your answer doesn't answer the question.\
    \ The question was about how to write this in Julia. Your answer doesn't answer\
    \ the question. The question was about how to write this in Julia. Your answer\
    \ doesn't ", "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else\
    \ if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise: Write a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 \n        0\n    else if n == 1 \n\
    \        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(8)\n</cell>\n<text>\nExercise: Write a function that computes the\
    \ n-th Fibonacci number using recursion.", "    if n == 0\n        0\n    else\
    \ if n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.0>\n@time fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ to compute the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nFor example,\
    \ 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function to compute\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nFor example,\
    \ 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function to compute\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nFor example,\
    \ 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function to compute\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nFor example,\
    \ 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function to compute\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nFor example,\
    \ 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function to compute\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nFor example,\
    \ 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function to compute\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times ", "    if n == 0\n       \
    \ 0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,fibonacci,recursion\
    \ |>\n<code>", "    if n == 0\n        0\n    else if n == 1\n        0\n    else\
    \ if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0 \n        0\n    else if n == 1 \n        0\n  \
    \  else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(8)\n</cell>\n<text>\nExercise: Write a function that computes the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0\n \
    \       0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as the product\
    \ of all the numbers from 1 to $n$, inclusive.\nFor example, 5! = 5 x 4 x 3 x\
    \ 2 x 1 = 120.\nWrite a function to compute the factorial of a given number. \n\
    The factorial of a number $n$ is defined as the product of all the numbers from\
    \ 1 to $n$, inclusive.\nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120.\nHint: Use\
    \ a for loop to compute the factorial.", "    if n == 0\n        0\n    else if\
    \ n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<|\
    \ c |>\nThis doesn't work for me. `fibfib(1)` returns `1` instead of `0`.\n<|/\
    \ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now it works.\n\
    <|/ c |>\n<| a dscore=2 |>\nHere's a recursive solution:\n<code>\nfibfib(n) =\
    \ n < 2 ? n : fibfib(n-1) + fibfib(n-2)\n</code>\n<|/ a tags=julia,fibonacci |>\n\
    <| c |>\nThis doesn't work for me. `fibfib(1)` returns `1` instead of `0`.\n<|/\
    \ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now it works.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\nfibfib(n) = n < 2 ? n : fibfib(n-1) + fibfib(n-2)\n\
    </code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis doesn't work for me. `fibfib(1)`\
    \ returns `1` instead of `0`.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for\
    \ pointing it out. Now it works.\n<|/ c |>\n<| a tags=julia,fibonacci |>\n<code>",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n   \
    \     1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't work. `fibfib(1)` returns `0`, not `1`.\n\
    <|/ c |>\n<| c |>\nI fixed the code. Thanks for pointing it out.\n<|/ c |>\n<|\
    \ a tags=julia,fibonacci |>\n<code>", "    if n == 0 \n        0\n    else if\
    \ n == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of\
    \ a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)\
    \  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...\
    \  2  1  $$\nWrite a function that computes the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2 \
    \ 1  $$\nWrite a function that computes the factorial of a given number. \nThe\
    \ factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1\
    \  $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a\
    \ function that computes the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n", "    if n == 0\n        0\n    else if\
    \ n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<text>\nProblem 3\nWrite a function to compute the sum of\
    \ the squares of the first n positive integers. \nFor example, \nif n = 4, \n\
    the sum of the squares of the first 4 positive integers is 25. \nIf n is negative,\
    \ your function should return \u2212\u221E.", "    if n == 0\n        0\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the factorial\
    \ of a given number. \nFor example, factorial(5) == 120.\nHint: use recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that computes the factorial of a given number.\
    \ For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.", "    if n == 0\n    \
    \    0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.4>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(5)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(8)\n</cell>\n<text>\nExercise: Write a function that computes the n-th\
    \ Fibonacci number in the Fibonacci sequence. Test it by computing the first 10\
    \ Fibonacci numbers. Then test it by computing the first 100 Fibonacci numbers.",
  "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the n-th Fibonacci number using\
    \ the Fibonacci sequence formula from Exercise 1.", "    if n == 0\n        0\n\
    \    else\n        if n == 1\n            0\n        else\n            if n ==\
    \ 2\n                1\n            else\n                fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$\n\\begin{align}\n\\text{Factorial}(n) &= n!\\\n\\text{Factorial}(n)\
    \ &= n\\cdot (n-1)\\cdot (n-2)\\cdot \\cdots \\cdot 1\n\\end{align}\n$$\nWrite\
    \ a function that computes the factorial of a given number using a recursive function.\n\
    Write a function that computes the factorial of a given number using a recursive\
    \ function and memoization.\nWrite a function that computes the factorial of a\
    \ given number using a recursive function and memoization and memoization with\
    \ caching.\nWrite a function that computes the factorial of a given number using\
    \ a recursive function and memoization and memoization with caching and memoization\
    \ with caching.\nWrite a function that computes the factorial of a given number\
    \ using a recursive function and memoization and memoization with caching and\
    \ memoization with caching and memoization with caching.\nWrite a function that\
    \ computes the factorial of a given number using a recursive function and memoization\
    \ and memoization with caching and memoization with caching and memoization with\
    \ caching and memoization with caching.\nWrite a function that computes the factorial\
    \ of a given number using a recursive function and memoization and memoization\
    \ with caching and memoization with caching and memoization with caching and memoization\
    \ with caching and memoization with caching and memoization with caching.\nWrite\
    \ a function that computes the factorial of a given number using a recursive function\
    \ and memoization and memoization with caching and memoization with caching and\
    \ memoization with caching and memoization with caching and memoization with caching\
    \ and memoization with caching and memoization with caching and memoization with\
    \ caching and memoization with caching and memoization with caching and memoization\
    \ with caching and memoization with caching and memoization with caching and memoization\
    \ with caching and memoization with caching and memoization with caching and memoization\
    \ with caching and memoization with caching and memoization with caching and memoization\
    \ with caching and memoization with caching and memoization with caching and memoization\
    \ with caching and memoization with caching and memoization with caching and memoization\
    \ with caching and memoization with caching and memoization with caching and memoization\
    \ with caching and memoization ", "    if n == 0 \n        0\n    else if n ==\
    \ 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.4>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.4>\nfibfib(5)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.", "    if n == 0\n        0\n   \
    \ else if n == 1\n        0\n    else if n == 2\n        1\n    else\n       \
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th Fibonacci\
    \ number using recursion.", "    if n == 0\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nFor example,\
    \ 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function that\
    \ computes the factorial of a given number using recursion.\nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    For example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function\
    \ that computes the factorial of a given number using recursion.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    For example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function\
    \ that computes the factorial of a given number using recursion.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    For example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function\
    \ that computes the factorial of a given number using recursion.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    For example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function\
    \ that computes the factorial of a given number using recursion.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    For example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function\
    \ that computes the factorial of a given number using recursion.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    For example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function\
    \ that computes the factorial of a given number using recursion.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 ", "    if n == 0\n   \
    \     0\n    elseif n == 1\n        0\n    elseif n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis is not an answer to the question. He is asking how to compute\
    \ fibonacci numbers in Julia.\n<|/ c |>\n<| c |>\nThe question was how to compute\
    \ fibonacci numbers in Julia. He was asking how to write an efficient recursive\
    \ function which computes fibonacci numbers. I provided an answer that does exactly\
    \ that. He was asking how to write an efficient recursive function which computes\
    \ fibonacci numbers. I provided an answer that does exactly that. He was asking\
    \ how to write an efficient recursive function which computes fibonacci numbers.\
    \ I provided an answer that does exactly that. He was asking how to write an efficient\
    \ recursive function which computes fibonacci numbers. I provided an answer that\
    \ does exactly that. He was asking how to write an efficient recursive function\
    \ which computes fibonacci numbers. I provided an answer that does exactly that.\
    \ He was asking how to write an efficient recursive function which computes fibonacci\
    \ numbers. I provided an answer that does exactly that. He was asking how to write\
    \ an efficient recursive function which computes fibonacci numbers. I provided\
    \ an answer that does exactly that. He was asking how to write an efficient recursive\
    \ function which computes fibonacci numbers. I provided an answer that does exactly\
    \ that. He was asking how to write an efficient recursive function which computes\
    \ fibonacci numbers. I provided an answer that does exactly that.\n<|/ c |>\n\
    <| c |>\nI provided an answer that does exactly that. He was asking how to write\
    \ an efficient recursive function which computes fibonacci numbers. I provided\
    \ an answer that does exactly that. He was asking how to write an efficient recursive\
    \ function which computes fibonacci numbers. I provided an answer that does exactly\
    \ that. He was asking how to write an efficient recursive function which computes\
    \ fibonacci numbers. I provided an answer that does exactly that. He was asking\
    \ how to write an efficient recursive function which computes fibonacci numbers.\
    \ I provided an answer ", "    if n == 0\n        0\n    else if n == 1\n    \
    \    0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that computes\
    \ the factorial of a number.", "    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the factorial of a given number. \nFor example, factorial(4) ==\
    \ 24. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\\
    times n-2 \\times ...$$\nWrite a recursive function factorial(n) that computes\
    \ the factorial of a given number. \nFor example, factorial(4) == 24. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a recursive function factorial(n) that computes the factorial of a given\
    \ number. \nFor example, factorial(4) == 24. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nWrite a recursive\
    \ function factorial(n) that computes the factorial of a given number. \nFor example,\
    \ factorial(4) == 24. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \ \\times n-1 \\times n-2 \\times ...$$\nWrite a recursive function factorial(n)\
    \ that computes the factorial of a given number. \nFor example, factorial(4) ==\
    \ 24. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\\
    times n-2 \\times ...$$\nWrite a recursive function factorial(n) that computes\
    \ the factorial of a given number. \nFor example, factorial(4) == 24. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a recursive function factorial(n) that computes the factorial of a given\
    \ number. \nFor example, factorial(4) == 24. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nWrite a recursive\
    \ function factorial(n) that computes the factorial of a given number. \nFor example,\
    \ factorial(4) == 24. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \ \\times n-1 \\times n-2 \\times ...$$\nWrite a recursive function factorial(n)\
    \ that computes the factorial of a given number. \nFor example, factorial(", " \
    \   if n == 0\n        0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThe recursive\
    \ solution is very elegant and efficient, but I wonder if there is a way to do\
    \ it without recursion.\n<|/ c |>\n<| c |>\nI agree, this is very elegant and\
    \ efficient, but I wonder if there is a way to do it without recursion.\n<|/ c\
    \ |>\n<| c |>\nI added a non-recursive solution\n<|/ c |>\n<| c |>\nI added a\
    \ non-recursive solution\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    if n == 0\
    \ || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a dscore=1 |>\n<| a tags=recursion,julia |>\nHere is a recursive\
    \ solution that is similar to your original solution:\n<code>", "    if n == 0\n\
    \        0\n    elseif n == 1\n        0\n    elseif n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fib", "    if n\
    \ == 0 || n == 1\n        return 0\n    else\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    </cell>\n<code language=julia-1.1>\n\"\"\"\nThe Fibonacci sequence is a sequence\
    \ of numbers, starting with 0 and 1, that each occur consecutively and in ascending\
    \ order. \nThe first two numbers in the sequence are 0 and 1, the second two numbers\
    \ are 1 and 2, and so on. \nThe Fibonacci sequence is commonly used to describe\
    \ the mathematical relation between a positive integer $n$ and its successor.\
    \ \nFor example, the number $n$ can be written as the sum of two Fibonacci numbers,\
    \ $Fn = F{n-1} + F_{n-2}$, where $F_0 = 0$ and $F_1 = 1$. \nThe first few numbers\
    \ in the sequence are $F_0 = 0$ and $F_1 = 1$, followed by $F_2 = 1$ and $F_3\
    \ = 2$, and so on. \nThe Fibonacci sequence is also known as the tribonacci sequence.\
    \ \nThe first few numbers in the sequence are $F_0 = 0$ and $F_1 = 1$, followed\
    \ by $F_2 = 1$ and $F_3 = 2$, and so on. \nThe Fibonacci sequence is also known\
    \ as the pentagonal number. \nThe first few numbers in the sequence are $F_0 =\
    \ 0$ and $F_1 = 1$, followed by $F_2 = 1$ and $F_3 = 2$, and so on. \nThe Fibonacci\
    \ sequence is also known as the hexagonal number. \nThe first few numbers in the\
    \ sequence are $F_0 = 0$ and $F_1 = 1$, followed by $F_2 = 1$ and $F_3 = 2$, and\
    \ so on. \nThe Fibonacci sequence is also known as the heptagonal number. \nThe\
    \ first few numbers in the sequence are $F_0 = 0$ and $F_1 = 1$, followed by $F_2\
    \ = 1$ and $F_3 = 2$, and so on. \nThe Fibonacci sequence is also known as the\
    \ octagonal number. \nThe first few numbers in the sequence are $F_0 = 0$ and\
    \ $F_1 = 1$, followed by $F_2 = 1$ and $F_3 = 2$, and so on. \nThe Fibonacci sequence\
    \ is also known as the nonagon", "    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=1 |>\n\
    The Fibonacci sequence is defined as:\n<code>\nF(0) = 0\nF(1) = 1\nF(n) = F(n-1)\
    \ + F(n-2)\n</code>\nIn Julia, you can implement this as:\n<code>", "    if n\
    \ == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n    \
    \    1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=julia,fibonacci |>\nHere is a recursive implementation\
    \ using tail recursion:\n<code>", "    if n == 0\n        0\n    else if n ==\
    \ 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ answer the question. How does this answer the question?\n<|/ c |>\n<| c |>\n\
    The question was \"Please write a function to efficiently compute the n-th element\
    \ of the fibfib number sequence.\" The answer is \"fibfib(n)\"\n<|/ c |>\n<| c\
    \ |>\nThe question was \"Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\" The answer is \"fibfib(n)\"\n<|/ c\
    \ |>\n<| c |>\nThe question was \"Please write a function to efficiently compute\
    \ the n-th element of the fibfib number sequence.\" The answer is \"fibfib(n)\"\
    \n<|/ c |>\n<| c |>\nThe question was \"Please write a function to efficiently\
    \ compute the n-th element of the fibfib number sequence.\" The answer is \"fibfib(n)\"\
    \n<|/ c |>\n<| a dscore=0 |>\n<code>", "    if n == 0\n        0\n    elseif n\
    \ == 1\n        0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<|\
    \ c |>\nThis is not the correct answer, as this does not take into account the\
    \ fact that fibfib(n) can be computed using fibfib(n-1) and fibfib(n-2).\n<|/\
    \ c |>\n<| c |>\nThe question was about how to compute fibfib(n), not how to compute\
    \ fibfib(n-1) and fibfib(n-2).\n<|/ c |>\n<| c |>\nThe question was about how\
    \ to compute fibfib(n), not how to compute fibfib(n-1) and fibfib(n-2).\n<|/ c\
    \ |>\n<| c |>\nThe question was about how to compute fibfib(n), not how to compute\
    \ fibfib(n-1) and fibfib(n-2).\n<|/ c |>\n<| c |>\nThe question was about how\
    \ to compute fibfib(n), not how to compute fibfib(n-1) and fibfib(n-2).\n<|/ c\
    \ |>\n<| a dscore=5 tags=julia,fibonacci |>\nI wrote a package for Julia that\
    \ does this for you:\nhttps://github.com/jrm/fibfib\n<code>\njulia> using fibfib",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 then 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)\
    \  (n-2)  ...  2  1  $$\nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120.\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nFor example, 5! = 5 x\
    \ 4 x 3 x 2 x 1 = 120.\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120.\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nFor example, 5! = 5 x\
    \ 4 x 3 x 2 x 1 = 120.\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120.\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nFor example, 5! = 5 x\
    \ 4 x 3 x 2 x 1 = 120.\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120.\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nFor example, 5! = 5 x\
    \ 4 x 3 x 2 x 1 = 120.\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n!", "    if n ==\
    \ 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(1)\n</cell>\n<text>\nExercise: Write a function that computes the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0\n \
    \       0\n    elseif n == 1\n        0\n    elseif n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0\n        0\n    else if n == 1\n        0\n\
    \    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</cell>\n<code language=julia-1.4>\nfibfib(1)\n</cell>\n<code\
    \ language=julia-1.4>\nfibfib(5)\n</cell>\n<code language=julia-1.4>\nfibfib(8)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the n-th Fibonacci\
    \ number using recursion.", "    if n == 0\n        0\n    elseif n == 1\n   \
    \     0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/26899474)\n<|/ c |>\n<| c |>\n\
    The question was how to compute fibfib(n) efficiently, not how to compute fibfib(n-1)+fibfib(n-2)+fibfib(n-3).\
    \ Your answer does not address that.\n<|/ c |>\n<| c |>\nThe question was how\
    \ to compute fibfib(n) efficiently, not how to compute fibfib(n-1)+fibfib(n-2)+fibfib(n-3).\
    \ Your answer does not address that.\n<|/ c |>\n<| c |>\nThe question was how\
    \ to compute fibfib(n) efficiently, not how to compute fibfib(n-1)+fibfib(n-2)+fibfib(n-3).\
    \ Your answer does not address that.\n<|/ c |>\n<| c |>\nThe question was how\
    \ to compute fibfib(n) efficiently, not how to compute fibfib(n-1)+fibfib(n-2)+fibfib(n-3).\
    \ Your answer does not address that.\n<|/ c |>\n<| a dscore=0 |>\n<code>", " \
    \   if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n\\cdot (n-1)\\cdot \\cdots \\cdot 2\
    \ \\cdot 1 \\cdot 1 \\cdot \\cdots \\cdot 1 \\cdot 0$$\nFor example, $5! = 5 \\\
    times 4 \\times 3 \\times 2 \\times 1 = 120$", "    if n == 0 \n        0\n  \
    \  else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n   \
    \     fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ....\
    \ \\times 2 \\times 1$$\nWrite a function to compute the factorial of a given\
    \ number using recursion.\nThe factorial of a number $n$ is defined as:\n$$n!\
    \ = n \\times n-1 \\times n-2 \\times .... \\times 2 \\times 1$$\nWrite a function\
    \ to compute the factorial of a given number using recursion.\nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\\
    times 2 \\times 1$$\nWrite a function to compute the factorial of a given number\
    \ using recursion.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\\
    times n-1 \\times n-2 \\times .... \\times 2 \\times 1$$\nWrite a function to\
    \ compute the factorial of a given number using recursion.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\\
    times 2 \\times 1$$\nWrite a function to compute the factorial of a given number\
    \ using recursion.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\\
    times n-1 \\times n-2 \\times .... \\times 2 \\times 1$$\nWrite a function to\
    \ compute the factorial of a given number using recursion.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\\
    times 2 \\times 1$$\nWrite a function to compute the factorial of a given number\
    \ using recursion.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\\
    times n-1 \\times n-2 \\times .... \\times 2 \\times 1$$\nWrite a function to\
    \ compute the factorial of a given number using recursion.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\\
    times 2 \\times 1$$\nWrite a function to compute the factorial of a ", "    if\
    \ n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n  \
    \      1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the n-th Fibonacci number using the recursive formula\
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2).", "    if n == 0\n        0\n    else\
    \ if n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<|\
    \ c |>\nThis doesn't work for me. `fibfib(1)` returns `0`, not `1`.\n<|/ c |>\n\
    <| c |>\nI tested it and it works for me. Are you sure you copied it correctly?\n\
    <|/ c |>\n<| c |>\nYes, I copied it correctly. I'm using Julia 1.5.1. Maybe it's\
    \ an issue with my Julia installation?\n<|/ c |>\n<| c |>\nI tested it on Julia\
    \ 1.5.1 too. Maybe it's an issue with your Julia installation? What happens if\
    \ you try `fibfib(1)` on Julia REPL?\n<|/ c |>\n<| c |>\nIt returns `1` on Julia\
    \ REPL.\n<|/ c |>\n<| a dscore=2 |>\nThe accepted answer does not work for me.\
    \ \n<code>\nfibfib(1)\n</code>\nreturns 0 instead of 1.\nI solved it by changing\
    \ the last line to:\n<code>\nfibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci |>\n<code>", "    if\
    \ n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n     \
    \   1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0\n        0\n    elseif n == 1\n \
    \       0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a |>\n<| a |>\n<code>", "    if n == 0\n  \
    \      0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(1)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the n-th Fibonacci number using the recursive formula fibfib(n)\
    \ = fibfib(n-1) + fibfib(n-2).", "    if n == 0 \n        0\n    else if n ==\
    \ 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ does not provide an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26817376)\n<|/ c |>\n<| c |>\nThe\
    \ question was how to compute Fibonacci numbers. I provided a solution that does\
    \ that. Why do you think this does not provide an answer?\n<|/ c |>\n<| c |>\n\
    The question was how to compute Fibonacci numbers. I provided a solution that\
    \ does that. Why do you think this does not provide an answer?\n<|/ c |>\n<| c\
    \ |>\nThe question was how to compute Fibonacci numbers. I provided a solution\
    \ that does that. Why do you think this does not provide an answer?\n<|/ c |>\n\
    <| c |>\nThe question was how to compute Fibonacci numbers. I provided a solution\
    \ that does that. Why do you think this does not provide an answer?\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>", "    if n == 0\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ doesn't answer the question, which is about how to write an efficient Fibonacci\
    \ function in Julia.\n<|/ c |>\n<| c |>\nThe question was about how to write an\
    \ efficient Fibonacci function in Julia. My answer was to show how to write an\
    \ efficient Fibonacci function in Julia. My answer was also a solution to the\
    \ question. My answer was also a solution to the question. My answer was also\
    \ a solution to the question. My answer was also a solution to the question. My\
    \ answer was also a solution to the question. My answer was also a solution to\
    \ the question. My answer was also a solution to the question. My answer was also\
    \ a solution to the question. My answer was also a solution to the question. My\
    \ answer was also a solution to the question. My answer was also a solution to\
    \ the question. My answer was also a solution to the question. My answer was also\
    \ a solution to the question. My answer was also a solution to the question. My\
    \ answer was also a solution to the question. My answer was also a solution to\
    \ the question. My answer was also a solution to the question. My answer was also\
    \ a solution to the question. My answer was also a solution to the question. My\
    \ answer was also a solution to the question. My answer was also a solution to\
    \ the question. My answer was also a solution to the question. My answer was also\
    \ a solution to the question. My answer was also a solution to the question. My\
    \ answer was also a solution to the question. My answer was also a solution to\
    \ the question. My answer was also a solution to the question. My answer was also\
    \ a solution to the question. My answer was also a solution to the question. My\
    \ answer was also a solution to the question. My answer was also a solution to\
    \ the question. My answer was also a solution to the question. My answer was also\
    \ a solution to the question. My answer was also a solution to the question. My\
    \ answer was also a solution to the question. My answer was also a solution to\
    \ the question. My answer was also a solution to the question. My answer was also\
    \ a solution to the question. My answer was also a solution to the question. My\
    \ answer was also a solution to the question. My answer was also a solution to\
    \ the question. My answer was also a solution to the question. My answer was also\
    \ a solution to the question. My answer was also a solution to the question. My\
    \ answer was also ", "    if n == 0\n        0\n    else if n == 1\n        0\n\
    \    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThe `fibfib`\
    \ function can be written more concisely as `fibfib = n -> n < 3 ? n : fibfib(n-1)\
    \ + fibfib(n-2)`\n<|/ c |>\n<| a dscore=3 |>\nThe accepted answer by is great,\
    \ but I wanted to add that you can also use recursion to solve this problem in\
    \ Julia:\n<code>", "    if n == 0\n        0\n    else if n == 1\n        0\n\
    \    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,fibonacci |>\n\
    <code>", "    if n == 0\n        0\n    elseif n == 1\n        0\n    else\n \
    \       fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(8)\n</cell>\n<text>\nExercise\nWrite a\
    \ function that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nProblem 7\nWrite\
    \ a function to compute the factorial of a given number.", "    if n == 0\n  \
    \      0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n@time\
    \ fibfib(5)\n@time fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function to\
    \ compute the n-th element of the Fibonacci sequence using recursion.", "    if\
    \ n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n     \
    \   1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 3\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0\n        0\n    elseif n == 1\n \
    \       0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>", "    if n\
    \ == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n       \
    \ 1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=fibonacci,julia |>\n<| a dscore=1 |>\n<code>", "    if n == 0 \n  \
    \      0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n   \
    \ else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\n\
    Problem 7\nWrite a function to compute the factorial of a number.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ....\
    \ \\times 1 $$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 =\
    \ 120\nWrite a function to compute the factorial of a number using recursion.\n\
    The factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2\
    \ \\times .... \\times 1 $$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2\
    \ \\times 1 = 120\nWrite a function to compute the factorial of a number using\
    \ iteration.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1\
    \ \\times n-2 \\times .... \\times 1 $$\nFor example, 5! = 5 \\times 4 \\times\
    \ 3 \\times 2 \\times 1 = 120\nWrite a function to compute the factorial of a\
    \ number using iteration.\nThe factorial of a number $n$ is defined as:\n$$n!\
    \ = n \\times n-1 \\times n-2 \\times .... \\times 1 $$\nFor example, 5! = 5 \\\
    times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function to compute the factorial\
    \ of a number using iteration.\nThe factorial of a number $n$ is defined as:\n\
    $$n! = n \\times n-1 \\times n-2 \\times .... \\times 1 $$\nFor example, 5! =\
    \ 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function to compute\
    \ the factorial of a number using iteration.\nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\times 1 $$\nFor\
    \ example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function\
    \ to compute the factorial of a number using iteration.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\times 1\
    \ $$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite\
    \ a function to compute the factorial of a number using ", "    if n == 0\n  \
    \      0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis doesn't answer the question. OP asked for a recursive solution.\
    \ Your solution doesn't use recursion.\n<|/ c |>\n<| c |>\nI believe it does.\
    \ OP asked for a recursive solution. Your solution doesn't use recursion.\n<|/\
    \ c |>\n<| c |>\nThe question asked for a recursive solution. Your solution doesn't\
    \ use recursion.\n<|/ c |>\n<| c |>\nThe question asked for a recursive solution.\
    \ Your solution doesn't use recursion.\n<|/ c |>\n<| c |>\nThe question asked\
    \ for a recursive solution. Your solution doesn't use recursion.\n<|/ c |>\n<|\
    \ a dscore=1 |>\n<code>", "    if n == 0\n        0\n    else if n == 1\n    \
    \    0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.4>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.4>\nfibfib(5)\n</cell>\n<code language=julia-1.4>\nfibfib(8)\n\
    </cell>\n<code language=julia-1.4>\nfibfib(2)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.4>\nfibfib(0)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.4>\nfibfib(0)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.4>\nfibfib(0)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.4>\nfibfib(0)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.4>\nfibfib(0)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.4>\nfibfib(0)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.4>\nfibfib(0)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(3)\n</cell", "    if n == 0 \n        0\n    else if n == 1 \n        0\n\
    \    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n\
    </cell>\n<text>\nExercise: Write a function to compute the n-th element of the\
    \ Fibonacci number sequence using recursion.", "    if n == 0 \n        0\n  \
    \  else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n   \
    \     fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the factorial\
    \ of a given number. \nFor example, factorial(3) == 3 * 2 * 1.\nHint: use the\
    \ factorial function from the math package.", "    if n == 0 || n == 1\n     \
    \   return 0\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise:\
    \ Write a function that computes the n-th element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0\n        0\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>", "    if n == 0 \n        0\n    else if n == 1 \n        0\n  \
    \  else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</cell>\n<text>\nExercise\nWrite a function that computes\
    \ the n-th element of the Fibonacci sequence using recursion.", "    if n == 0\
    \ \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n\
    \    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.4>\nfibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.4>\nfibfib(8)\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function to compute the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times ", "    if n == 0\n\
    \        0\n    elseif n == 1\n        0\n    elseif n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a |>\n<| a\
    \ tags=fibonacci,julia |>\nI wrote a Julia package for Fibonacci numbers. You\
    \ can find it here: https://github.com/jrwlkz/Fibonacci.jl\n<code>\nusing Fibonacci",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThis is not the correct solution. `fibfib(1)` returns\
    \ `0` instead of `1`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I fixed\
    \ the code.\n<|/ c |>\n<| a tags=julia |>\nHere is a solution using recursion:\n\
    <code>", "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else\
    \ if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 3\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.\nThe Fibonacci sequence is defined as follows:\n \
    \   fibfib(0) == 0\n    fibfib(1) == 0\n    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3).\n    Please write a function to efficiently compute\
    \ the n-th element of the Fibonacci sequence.\n    >>> fibfib(1)\n    0\n    >>>\
    \ fibfib(2)\n    1\n    >>> fibfib(5)\n    5\n    >>> fibfib(8)\n    13\n    \"\
    \"\"", "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n\
    \ == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci,recursion |>\n<| a tags=julia,fibonacci,recursion\
    \ |>\n<code>", "    if n == 0\n        0\n    else if n == 1\n        0\n    else\
    \ if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThanks for your answer!\
    \ I did try this but my Julia compiler complained about a syntax error at the\
    \ first line of the function definition. Do you know what could be causing this?\n\
    <|/ c |>\n<| c |>\nI edited my answer to include the function definition. Does\
    \ it work now?\n<|/ c |>\n<| c |>\nYes, it works now! Thanks so much! I guess\
    \ I didn't realize that Julia had a recursive function definition. I'm still a\
    \ beginner at Julia so I appreciate your help.\n<|/ c |>\n<| c |>\nGlad I could\
    \ help! Recursive functions are a very useful feature of Julia. Good luck!\n<|/\
    \ c |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n == 0\n        0\n   \
    \ elseif n == 1\n        0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that\
    \ computes the factorial of a given number. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the\
    \ factorial of a given number. \nThe factorial of a number $n$ is defined as:\n\
    $$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of\
    \ a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)\
    \  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...\
    \  2  1  $$\nWrite a function that computes the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2 \
    \ 1  $$\nWrite a function that computes the factorial of a given number. \nThe\
    \ factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1\
    \  $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  ", "    if n ==\
    \ 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n       \
    \ 1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| c |>\nThis doesn't answer the question of how\
    \ to implement this in Julia.\n<|/ c |>\n<| c |>\nThis answer does answer the\
    \ question. `fibfib(n)` returns the nth element of the Fibonacci sequence. `fibfib`\
    \ returns a function which computes the nth element of the Fibonacci sequence.\
    \ `fibfib(n)()` is the nth element of the Fibonacci sequence. `fibfib(n)` can\
    \ be called repeatedly to compute the nth element of the Fibonacci sequence. `fibfib(n)`\
    \ can be called repeatedly to compute the nth element of the Fibonacci sequence.\
    \ `fibfib(n)` can be called repeatedly to compute the nth element of the Fibonacci\
    \ sequence. `fibfib(n)` can be called repeatedly to compute the nth element of\
    \ the Fibonacci sequence.\n<|/ c |>\n<| c |>\nThis answer does answer the question.\
    \ `fibfib(n)` returns the nth element of the Fibonacci sequence. `fibfib` returns\
    \ a function which computes the nth element of the Fibonacci sequence. `fibfib(n)()`\
    \ is the nth element of the Fibonacci sequence. `fibfib(n)` can be called repeatedly\
    \ to compute the nth element of the Fibonacci sequence. `fibfib(n)` can be called\
    \ repeatedly to compute the nth element of the Fibonacci sequence. `fibfib(n)`\
    \ can be called repeatedly to compute the nth element of the Fibonacci sequence.\
    \ `fibfib(n)` can be called repeatedly to compute the nth element of the Fibonacci\
    \ sequence.\n<|/ c |>\n<| c |>\nThis answer does answer the question. `fibfib(n)`\
    \ returns the nth element of the Fibonacci sequence. `fibfib` returns a function\
    \ which computes the nth element of the Fibonacci sequence. `fibfib(n)()` is the\
    \ nth element of the Fibonacci sequence. `fibfib(n)` can be called repeatedly\
    \ to compute the nth element of the Fibonacci sequence. `fibfib(n)` can be called\
    \ repeatedly to compute the n", "    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n\
    </cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.", "    if n == 0\n        0\n    else if\
    \ n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the factorial\
    \ of a given number. For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

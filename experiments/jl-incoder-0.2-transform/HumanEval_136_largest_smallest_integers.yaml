name: HumanEval_136_largest_smallest_integers
language: jl
prompt: "\"\"\"\n    Create a function that returns a tuple (a, b), where 'a' is\n\
  \    the largest of negative integers, and 'b' is the smallest\n    of positive\
  \ integers in a list.\n    If there is no negative or positive integers, return\
  \ them as None.\n\n    Examples:\n    >>> largest_smallest_integers([2, 4, 1, 3,\
  \ 5, 7])\n    (nothing, 1)\n    >>> largest_smallest_integers([])\n    (nothing,\
  \ nothing)\n    >>> largest_smallest_integers([0])\n    (nothing, nothing)\n   \
  \ \"\"\"\nfunction largest_smallest_integers(lst::Vector{Int64})::Tuple{Union{Int64,\
  \ Nothing}, Union{Int64, Nothing}} \n"
tests: "using Test\n\n@testset begin\n\ncandidate = largest_smallest_integers;\n\t\
  @test(candidate([2, 4, 1, 3, 5, 7]) == (nothing, 1))\n\t@test(candidate([2, 4, 1,\
  \ 3, 5, 7, 0]) == (nothing, 1))\n\t@test(candidate([1, 3, 2, 4, 5, 6, -2]) == (-2,\
  \ 1))\n\t@test(candidate([4, 5, 3, 6, 2, 7, -7]) == (-7, 2))\n\t@test(candidate([7,\
  \ 3, 8, 4, 9, 2, 5, -9]) == (-9, 2))\n\t@test(candidate(Vector{Int64}([])) == (nothing,\
  \ nothing))\n\t@test(candidate([0]) == (nothing, nothing))\n\t@test(candidate([-1,\
  \ -3, -5, -6]) == (-1, nothing))\n\t@test(candidate([-1, -3, -5, -6, 0]) == (-1,\
  \ nothing))\n\t@test(candidate([-6, -4, -4, -3, 1]) == (-3, 1))\n\t@test(candidate([-6,\
  \ -4, -4, -3, -100, 1]) == (-3, 1))\nend\n"
completions: ["    if all(isnothing(el) for el in lst)\n        return nothing, nothing\n\
    \    elseif all(isnothing(el) for el in lst)\n        return nothing, nothing\n\
    \    elseif all(el < 0 for el in lst)\n        return nothing, nothing\n    elseif\
    \ all(el > 0 for el in lst)\n        return lst, nothing\n    else\n        largest\
    \ = maximum(lst, default=nothing)\n        smallest = minimum(lst, default=nothing)\n\
    \        return largest, smallest\n    end\nend\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the number of positive integers in a list.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst) \n        smallest = maximum(lst) \n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector and\
    \ returns the sum of the absolute values of the elements in the vector. Test it\
    \ on $[-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]$.",
  "    if length(lst) == 0 \n        return (nothing, nothing) \n    else \n     \
    \   largest = minimum(lst)\n        smallest = maximum(lst)\n        return (largest,\
    \ smallest)\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([])\n\
    </cell>\n<code language=julia-1.5>\nlargest_smallest_integers([0])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of positive integers\
    \ in a list.", "    if lst.is_empty\n        return nothing, nothing\n    largest\
    \ = minimum(lst)\n    smallest = maximum(lst)\n    return largest, smallest\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3,\
    \ 5, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns the largest\
    \ and smallest numbers in a list.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst)\n        smallest\
    \ = maximum(lst)\n        return largest, smallest \nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the numbers in a list.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst) \n        smallest = maximum(lst) \n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of\
    \ the integers in a list.\nIf there are no integers, return 0.", "    if length(lst)\
    \ == 0 \n        return (nothing, nothing) \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return (largest, smallest)\n   \
    \ end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of integers and returns the sum of the integers in the vector.", "    if all(x\
    \ -> x < 0, lst)\n        (a, b) = (nothing, nothing)\n    elseif all(x -> x >\
    \ 0, lst)\n        (a, b) = (nothing, nothing)\n    else\n        (a, b) = minimum(lst),\
    \ maximum(lst)\n    end\n    return (a, b)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (1, 7)\n@assert largest_smallest_integers([])\
    \ == (nothing, nothing)\n@assert largest_smallest_integers([0]) == (nothing, nothing)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector and returns\
    \ the sum of the absolute values of the elements in the vector.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend ",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise: Write a function that returns the\
    \ number of times a given value appears in a given list.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise: Write a function that takes a list as input and returns\
    \ a tuple where the first element is the sum of the numbers in the list, and the\
    \ second element is the product of the numbers in the list. For example, if the\
    \ input is [2, 3, 4], the output should be (7, 24).", "    if length(lst) == 0\
    \ \n        return nothing, nothing\n    \n    largest = minimum(lst)\n    smallest\
    \ = maximum(lst)\n    if largest < smallest \n        return largest, smallest\n\
    \    else \n        return largest, nothing\nend\n</cell>\n<text>\nExercise 3:\
    \ Write a function that returns the largest and smallest numbers in a list.\n\
    The function should take a list of numbers as an argument and return the largest\
    \ and smallest numbers in the list.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n\
    \    return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector and returns the sum of the absolute values of the elements\
    \ in the vector.", "    if length(lst) == 0\n        return (nothing, nothing)\n\
    \    end\n    largest = nothing\n    smallest = nothing\n    for x in lst\n  \
    \      if x < 0\n            if largest == nothing\n                largest =\
    \ x\n            else\n                largest = nothing\n            end\n  \
    \      elseif largest == nothing\n            smallest = x\n        else\n   \
    \         smallest = nothing\n        end\n    end\n    return (largest, smallest)\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector of integers\
    \ and returns a vector of integers where the integers are the sum of the positive\
    \ integers in the vector.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend \n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of positive integers in a list.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst)\n        smallest = maximum(lst)\n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number\
    \ of integers in a list that are\nless than a given integer.", "    if all(isnothing(el)\
    \ for el in lst)\n        return nothing, nothing\n    elseif all(isnothing(el)\
    \ for el in lst)\n        return nothing, nothing\n    elseif all(el < 0 for el\
    \ in lst)\n        return nothing, nothing\n    elseif all(el > 0 for el in lst)\n\
    \        return nothing, nothing\n    else\n        largest = maximum(lst)\n \
    \       smallest = minimum(lst)\n        return largest, smallest\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector and a number\
    \ as input, and returns a vector containing the numbers in the vector that are\
    \ less than the number.", "    if length(lst) == 0\n        return (nothing, nothing)\n\
    \    elseif length(lst) == 1\n        return (lst[0], nothing)\n    elseif all(x\
    \ < 0 for x in lst)\n        return (nothing,lst[0])\n    elseif all(x > 0 for\
    \ x in lst)\n        return (lst[end], nothing)\n    else\n        largest = nothing\n\
    \        smallest = nothing\n        for i in lst\n            if i < 0\n    \
    \            if largest == nothing\n                    largest = i\n        \
    \        else\n                    largest = nothing\n            elseif i > 0\
    \ \n                if smallest == nothing\n                    smallest = i\n\
    \                else\n                    smallest = nothing\n            end\n\
    \        end\n        return (largest, smallest)\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the integers in a list.\n\
    If there are no integers, return 0.\nIf there are multiple integers, return the\
    \ first one.", "    if length(lst) == 0 \n        return nothing, nothing\n  \
    \  \n    largest = minimum(lst)\n    smallest = maximum(lst)\n    return largest,\
    \ smallest\nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the integers in a list.", "    if length(lst) == 0 \n        return\
    \ (nothing, nothing) \n    else \n        largest = minimum(lst) \n        smallest\
    \ = maximum(lst) \n        return (largest, smallest) \nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise: Write a function that takes a vector\
    \ of integers and returns the sum of the integers in the vector. Test it on some\
    \ vectors.", "    if length(lst) == 0 \n        return nothing, nothing\n    largest\
    \ = minimum(lst)\n    smallest = maximum(lst)\n    return largest, smallest\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector and returns\
    \ a vector where each element is the sum of the squares of the elements in the\
    \ original vector. For example, if the input vector is [1,2,3,4,5], the output\
    \ vector should be [1,2,3,4,5].", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a vector of integers and returns the sum of the integers\
    \ in the vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes a vector of integers and returns the sum of the integers\
    \ in the vector. \nIf there are no integers in the vector, return 0.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst) \n        smallest = maximum(lst) \n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise: Write a function that takes a vector of integers\
    \ and returns the sum of the integers. If the vector is empty, return 0.", " \
    \   if length(lst) == 0\n        return (nothing, nothing)\n    elseif length(lst)\
    \ == 1\n        return (lst[1], nothing)\n    elseif length(lst) == 2\n      \
    \  return (lst[1], lst[1])\n    else\n        largest = minimum(lst)\n       \
    \ smallest = maximum(lst)\n        return (largest, smallest)\n    end\nend\n\
    </cell>\n<text>\nExercise: Write a function that returns the number of times a\
    \ given value appears in a given list.", "    if length(lst) == 0 \n        return\
    \ (nothing, nothing)\n    elseif length(lst) == 1 \n        return (lst[1], nothing)\n\
    \    elseif length(lst) == 2 \n        return (lst[1], lst[1])\n    elseif length(lst)\
    \ > 2 \n        largest = nothing\n        smallest = nothing\n        for i in\
    \ lst[2:end] \n            if i > largest \n                largest = i\n    \
    \        elseif i < smallest \n                smallest = i\n            end\n\
    \        end\n        return (largest, smallest)\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector and returns the number of times\
    \ each element appears in the vector. For example, if the vector is [1, 1, 2,\
    \ 3, 4, 4, 4], then the function should return [1, 1, 2, 2, 3, 3, 4].", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst) \n        smallest = maximum(lst) \n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number\
    \ of elements in a list that are\ngreater than a given number. Test it on a list\
    \ of integers and a list of\nfloats.", "    if all(isnothing(el) for el in lst)\n\
    \        return nothing, nothing\n    elseif all(isnothing(el) for el in lst)\n\
    \        return nothing, nothing\n    elseif all(el < 0 for el in lst)\n     \
    \   return nothing, nothing\n    elseif all(el > 0 for el in lst)\n        return\
    \ nothing, nothing\n    else\n        largest = maximum(lst)\n        smallest\
    \ = minimum(lst)\n        return largest, smallest\n    end\nend\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the largest and smallest numbers in a\
    \ list.\nWrite a function that returns the largest and smallest numbers in a list.\n\
    Write a function that returns the largest and smallest numbers in a list.\nWrite\
    \ a function that returns the largest and smallest numbers in a list.\nWrite a\
    \ function that returns the largest and smallest numbers in a list.\nWrite a function\
    \ that returns the largest and smallest numbers in a list.\nWrite a function that\
    \ returns the largest and smallest numbers in a list.\nWrite a function that returns\
    \ the largest and smallest numbers in a list.\nWrite a function that returns the\
    \ largest and smallest numbers in a list.\nWrite a function that returns the largest\
    \ and smallest numbers in a list.\nWrite a function that returns the largest and\
    \ smallest numbers in a list.\nWrite a function that returns the largest and smallest\
    \ numbers in a list.\nWrite a function that returns the largest and smallest numbers\
    \ in a list.\nWrite a function that returns the largest and smallest numbers in\
    \ a list.\nWrite a function that returns the largest and smallest numbers in a\
    \ list.\nWrite a function that returns the largest and smallest numbers in a list.\n\
    Write a function that returns the largest and smallest numbers in a list.\nWrite\
    \ a function that returns the largest and smallest numbers in a list.\nWrite a\
    \ function that returns the largest and smallest numbers in a list.\nWrite a function\
    \ that returns the largest and smallest numbers in a list.\nWrite a function that\
    \ returns the largest and smallest numbers in a list.\nWrite a function that returns\
    \ the largest and smallest numbers in a list.\nWrite a function that returns the\
    \ largest and smallest numbers in a list.\nWrite a function that returns the largest\
    \ and smallest numbers in a list.\nWrite a function that returns the largest and\
    \ smallest numbers in a list.\nWrite a function that returns the largest and smallest\
    \ numbers in a list.\nWrite a function that returns the largest and smallest numbers\
    \ in a list.\nWrite a function that returns the largest and smallest numbers in\
    \ a list.\nWrite a function that returns the largest and smallest numbers in a\
    \ list.\nWrite a function that returns the largest and smallest numbers in a list.\n\
    Write a function that returns the largest and smallest numbers in a list.\nWrite\
    \ a function that returns the largest and smallest numbers in a list.\nWrite a\
    \ function that returns the largest and smallest numbers in a list.\nWrite a function\
    \ that returns the largest and smallest numbers in a list.\nWrite a function that\
    \ returns the largest and smallest numbers in a list.\nWrite a function that returns\
    \ the largest and smallest numbers in a list.\nWrite a function that returns the\
    \ largest and smallest numbers in a list.\n", "    if length(lst) == 0 \n    \
    \    return nothing, nothing \n    else \n        largest = minimum(lst)\n   \
    \     smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the largest and smallest numbers\
    \ in a list.", "    if length(lst) == 0 \n        return nothing, nothing \n \
    \   else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n \
    \       return largest, smallest \nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that takes a vector and returns the sum of the absolute values of the elements\
    \ in the vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector and returns a vector where each element is\
    \ the sum of the squares of the elements in the original vector. For example,\
    \ if the input vector is [4, 6, 3, 9], then the output vector should be [36, 54,\
    \ 18, 49].", "    if length(lst) == 0 \n        return nothing, nothing \n   \
    \ else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n   \
    \     return largest, smallest \nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns a tuple (a, b), where 'a' is the largest of positive integers,\
    \ and 'b' is the smallest of negative integers in a list.\nIf there is no negative\
    \ or positive integers, return them as None.", "    if length(lst) == 0 \n   \
    \     return nothing, nothing \n    else \n        largest = minimum(lst) \n \
    \       smallest = maximum(lst) \n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list as an argument and returns\
    \ a list where each element is the sum of the squares of the elements in the list.\
    \ For example, square_sum([1, 2, 3, 4]) should return [1, 4, 9, 16].", "    if\
    \ all(isnothing(lst))\n        return (nothing, nothing)\n    elseif all(isnothing(lst[1]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[2]))\n      \
    \  return (nothing, nothing)\n    elseif all(isnothing(lst[3]))\n        return\
    \ (nothing, nothing)\n    elseif all(isnothing(lst[4]))\n        return (nothing,\
    \ nothing)\n    elseif all(isnothing(lst[5]))\n        return (nothing, nothing)\n\
    \    elseif all(isnothing(lst[6]))\n        return (nothing, nothing)\n    elseif\
    \ all(isnothing(lst[7]))\n        return (nothing, nothing)\n    elseif all(isnothing(lst[8]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[9]))\n      \
    \  return (nothing, nothing)\n    elseif all(isnothing(lst[10]))\n        return\
    \ (nothing, nothing)\n    elseif all(isnothing(lst[11]))\n        return (nothing,\
    \ nothing)\n    elseif all(isnothing(lst[12]))\n        return (nothing, nothing)\n\
    \    elseif all(isnothing(lst[13]))\n        return (nothing, nothing)\n    elseif\
    \ all(isnothing(lst[14]))\n        return (nothing, nothing)\n    elseif all(isnothing(lst[15]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[16]))\n     \
    \   return (nothing, nothing)\n    elseif all(isnothing(lst[17]))\n        return\
    \ (nothing, nothing)\n    elseif all(isnothing(lst[18]))\n        return (nothing,\
    \ nothing)\n    elseif all(isnothing(lst[19]))\n        return (nothing, nothing)\n\
    \    elseif all(isnothing(lst[20]))\n        return (nothing, nothing)\n    elseif\
    \ all(isnothing(lst[21]))\n        return (nothing, nothing)\n    elseif all(isnothing(lst[22]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[23]))\n     \
    \   return (nothing, nothing)\n    elseif all(isnothing(lst[24]))\n        return\
    \ (nothing, nothing)\n    elseif all(isnothing(lst[25]))\n        return (nothing,\
    \ nothing)\n    elseif all(isnothing(lst[26]))\n        return (nothing, nothing)\n\
    \    elseif all(isnothing(lst[27]))\n        return (nothing, nothing)\n    elseif\
    \ all(isnothing(lst[28]))\n        return (nothing, nothing)\n    elseif all(isnothing(lst[29]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[30]))\n     \
    \   return (nothing, nothing)\n    elseif ", "    if length(lst) == 0 \n     \
    \   return (nothing, nothing) \n    else \n        largest = minimum(lst)\n  \
    \      smallest = maximum(lst)\n        return (largest, smallest)\n    end\n\
    end\n</cell>\n<text>\nExercise: Write a function that takes a vector and returns\
    \ the sum of the absolute values of the elements in the vector. Test it on some\
    \ test vectors.", "    if lst.is_empty\n        return (nothing, nothing)\n  \
    \  end\n    largest = nothing\n    smallest = nothing\n    for i in lst\n    \
    \    if i < 0\n            if largest == nothing\n                largest = i\n\
    \            else\n                smallest = i\n            end\n        elseif\
    \ largest == nothing\n            largest = i\n        else\n            if i\
    \ < smallest\n                smallest = i\n            end\n        end\n   \
    \ end\n    return (largest, smallest)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([])\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function which takes a vector and returns\
    \ the number of elements that are greater than zero.", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of numbers and returns\
    \ the sum of the numbers. If the list is empty, return 0.", "    if length(lst)\
    \ == 0\n        return (nothing, nothing)\n    elseif length(lst) == 1\n     \
    \   return (lst[0], nothing)\n    else\n        largest = minimum(lst)\n     \
    \   smallest = maximum(lst)\n        return (largest, smallest)\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns a tuple (a, b), where\
    \ 'a' is the largest of positive integers, and 'b' is the smallest of negative\
    \ integers in a list.\nIf there is no negative or positive integers, return them\
    \ as None.", "    if length(lst) == 0 \n        return (nothing, nothing) \n \
    \   else \n        largest = minimum(lst) \n        smallest = maximum(lst) \n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 4\n\
    Write a function that takes a vector and returns a vector where each element is\
    \ the sum of the squares of the numbers in the vector.", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend ",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \nend \n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ list of numbers and returns the sum of the numbers. If the list is empty, return\
    \ 0.", "    if length(lst) == 0 \n        return nothing, nothing \n    else \n\
    \        largest = minimum(lst) \n        smallest = maximum(lst) \n        return\
    \ largest, smallest \nend \n</cell>\n<text>\nExercise: Write a function that returns\
    \ a tuple (a, b), where 'a' is the largest of positive integers, and 'b' is the\
    \ smallest of negative integers in a list.", "    if length(lst) == 0 \n     \
    \   return nothing, nothing \n    else \n        largest = minimum(lst)\n    \
    \    smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3: Write a function that returns a tuple (a, b), where 'a' is\
    \ the sum of the positive integers in a list, and 'b' is the sum of the negative\
    \ integers in a list.\nIf there are no positive integers or negative integers,\
    \ return them as None.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0 \n        return (nothing, nothing) \n    else \n     \
    \   largest = minimum(lst) \n        smallest = maximum(lst) \n        return\
    \ (largest, smallest)\n    end\nend\n</cell>\n<code language=julia-1.5>", "  \
    \  if lst.is_empty\n        return nothing, nothing\n    largest = minimum(lst)\n\
    \    smallest = maximum(lst)\n    return largest, smallest\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of times a given\
    \ value appears in a given list.", "    if length(lst) == 0\n        return (nothing,\
    \ nothing)\n    elseif length(lst) == 1\n        return (lst[0], nothing)\n  \
    \  else\n        largest = minimum(lst)\n        smallest = maximum(lst)\n   \
    \     return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a list as an argument and returns a list where all\
    \ negative numbers are replaced by zero, and all positive numbers are replaced\
    \ by one.", "    if length(lst) == 0 \n        return nothing, nothing \n    \n\
    \    largest = minimum(lst)\n    smallest = maximum(lst)\n    return largest,\
    \ smallest\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of integers and returns the sum of the integers in the vector.", "    if length(lst)\
    \ == 0\n        return nothing, nothing\n    elseif length(lst) == 1\n       \
    \ return lst[0], nothing\n    elseif length(lst) == 2\n        return lst[1],\
    \ lst[0]\n    else\n        largest, smallest = nothing\n        for elt in lst\n\
    \            if elt > largest\n                largest = elt\n            elseif\
    \ elt < smallest\n                smallest = elt\n            end\n        end\n\
    \        return largest, smallest\n    end\nend\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a vector of integers and returns the sum of the integers\
    \ in the vector. Test it on some vectors.", "    if length(lst) == 0 \n      \
    \  return (nothing, nothing)\n    end\n    largest = minimum(lst)\n    smallest\
    \ = maximum(lst)\n    return (largest, smallest)\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes a vector and returns the sum of the absolute\
    \ values of the elements in the vector. Test it on $[-1, 0, 2, -3]$.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst)\n        smallest = maximum(lst)\n        return largest, smallest\
    \ \nend\n</cell>\n<code language=julia-1.5>", "    if length(lst) == 0\n     \
    \   return (nothing, nothing)\n    elseif length(lst) == 1\n        return (lst[0],\
    \ nothing)\n    else\n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of integers and returns the sum of the integers\
    \ in the vector.", "    if lst == []\n        return (nothing, nothing)\n    end\n\
    \    largest = nothing\n    smallest = nothing\n    for i in lst\n        if i\
    \ < 0\n            if largest == nothing\n                largest = i\n      \
    \      else\n                smallest = i\n            end\n        elseif largest\
    \ == nothing\n            largest = i\n        elseif i < smallest\n         \
    \   smallest = i\n        end\n    end\n    return (largest, smallest)\nend\n\
    </cell>\n<code language=julia-1.5>", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst) \n        smallest\
    \ = maximum(lst) \n        return largest, smallest \nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list as an argument and returns a list where\
    \ each element is the sum of the squares of the positive integers in the list.\
    \ For example, if the list is [4, -5, 3, -2, 2], the function should return [4,\
    \ -5, 9, 0, 7].", "    if length(lst) == 0 \n        return nothing, nothing \n\
    \    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the number of positive integers in a list.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector and returns\
    \ the sum of the absolute values of the elements in the vector.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of times a value\
    \ appears in a list.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list as input and returns a list with all the even numbers\
    \ in that list.", "    if length(lst) == 0 \n        return nothing, nothing \n\
    \    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n    if largest\
    \ < smallest \n        return largest, smallest \n    else \n        return largest,\
    \ nothing \nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ and returns the sum of the absolute values of the elements in the vector. Test\
    \ it on $[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]$.", "    if length(lst) == 0 \n\
    \        return nothing, nothing \n    else \n        largest = minimum(lst) \n\
    \        smallest = maximum(lst) \n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise: Write a function that takes a vector of integers and returns\
    \ the sum of the integers in the vector.", "    if length(lst) == 0 \n       \
    \ return nothing, nothing \n    else \n        largest = minimum(lst)\n      \
    \  smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes a vector of integers and returns\
    \ the sum of the squares of the integers. \nIf there are no integers in the vector,\
    \ return 0.", "    if length(lst) == 0 \n        return nothing, nothing\n   \
    \ end\n    largest = minimum(lst)\n    smallest = maximum(lst)\n    return largest,\
    \ smallest\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes a list\
    \ as an argument and returns a new list with all the even numbers in that list.",
  "    if length(lst) == 0 \n        return nothing, nothing\n    end\n    largest\
    \ = minimum(lst)\n    smallest = maximum(lst)\n    return largest, smallest\n\
    end\n</cell>\n<code language=julia-1.5>", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst) \n        smallest\
    \ = maximum(lst) \n        return largest, smallest \nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns the number of integers in a list that are\n\
    less than the given integer.", "    if length(lst) == 0 \n        return (nothing,\
    \ nothing) \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a vector and returns the sum of the absolute values\
    \ of the elements of the vector.", "    if length(lst) == 0 \n        return (nothing,\
    \ nothing) \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector and returns the sum of the absolute values\
    \ of the elements in the vector.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector\
    \ of integers and returns the sum of the integers in the vector. \nIf the vector\
    \ is empty, return 0.", "    if length(lst) == 0 \n        return (nothing, nothing)\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the number of positive integers in a list.", " \
    \   if length(lst) == 0 \n        return nothing, nothing \n    else \n      \
    \  largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise\nWrite a function that returns the\
    \ largest and smallest numbers in a list.", "    if length(lst) == 0 \n      \
    \  return nothing, nothing \n    else \n        largest = minimum(lst)\n     \
    \   smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector and returns the sum of\
    \ the absolute values of the elements in the vector.", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number of\
    \ positive integers in a list.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n  \
    \  return largest, smallest\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst) \n        smallest = maximum(lst) \n        return largest, smallest\
    \ \nend \n</cell>\n<code language=julia-1.5>", "    if length(lst) == 0 \n   \
    \     return nothing, nothing \n    else \n        largest = minimum(lst) \n \
    \       smallest = maximum(lst) \n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of integers and returns\
    \ the sum of the integers in the vector. \nIf there are no integers in the vector,\
    \ return 0.", "    if length(lst) == 0 \n        return nothing, nothing \n  \
    \  \n    largest = minimum(lst)\n    smallest = maximum(lst)\n    return largest,\
    \ smallest\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector\
    \ and returns the sum of the elements in the vector. \nIf the vector is empty,\
    \ return 0.", "    if length(lst) == 0 \n        return (nothing, nothing) \n\
    \    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the number of positive integers in a list.", " \
    \   if length(lst) == 0\n        return (nothing, nothing)\n    end\n    largest\
    \ = nothing\n    smallest = nothing\n    for x in lst\n        if x < 0\n    \
    \        if largest == nothing\n                largest = x\n            else\n\
    \                largest = nothing\n            end\n        elseif largest ==\
    \ nothing\n            smallest = x\n        else\n            smallest = nothing\n\
    \        end\n    end\n    return (largest, smallest)\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector and returns the sum of the absolute\
    \ values of the elements in the vector.", "    if lst == []\n        return (nothing,\
    \ nothing)\n    elseif lst == [0]\n        return (nothing, nothing)\n    elseif\
    \ lst == [nothing]\n        return (nothing, nothing)\n    else\n        largest\
    \ = nothing\n        smallest = nothing\n        for i in lst\n            if\
    \ i > largest\n                largest = i\n            elseif i < smallest\n\
    \                smallest = i\n            end\n        end\n        return (largest,\
    \ smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector and returns the sum of the absolute values of the elements in\
    \ the vector. For example, if the vector is [4, 2, 3], the function should return\
    \ 7.", "    if length(lst) == 0 \n        return nothing, nothing \n    \n   \
    \ largest = minimum(lst)\n    smallest = maximum(lst)\n    \n    if largest <\
    \ smallest \n        return largest, smallest \n    else \n        return largest,\
    \ nothing \nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector\
    \ and returns a vector where each element is the sum of the squares of the elements\
    \ in the original vector. For example, if the input vector is [4, 6, -2, 3], the\
    \ output vector should be [16, 9, -27, 36].", "    if length(lst) == 0 \n    \
    \    return nothing, nothing \n    else \n        largest = minimum(lst) \n  \
    \      smallest = maximum(lst) \n        return largest, smallest \nend \n</cell>\n\
    <code language=julia-1.4>\nlargest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n\
    <text>\nExercise: Write a function that returns a tuple (a, b), where 'a' is the\
    \ largest of negative integers, and 'b' is the smallest of positive integers in\
    \ a list.", "    if length(lst) == 0 \n        return nothing, nothing \n    else\
    \ \n        largest = minimum(lst) \n        smallest = maximum(lst) \n      \
    \  return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector and returns the sum of the absolute values of the elements\
    \ of the vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a list of integers and returns the sum of the integers in\
    \ the list.", "    if length(lst) == 0 \n        return nothing, nothing \n  \
    \  else \n        largest = minimum(lst) \n        smallest = maximum(lst) \n\
    \        return largest, smallest \nend \n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a list of integers and returns the sum of the integers in\
    \ the list.", "    if all(isnothing(el) for el in lst)\n        return nothing,\
    \ nothing\n    elseif all(isnothing(el) for el in lst)\n        return nothing,\
    \ nothing\n    elseif all(el < 0 for el in lst)\n        return nothing, nothing\n\
    \    elseif all(el > 0 for el in lst)\n        return nothing, nothing\n    else\n\
    \        largest = maximum(lst)\n        smallest = minimum(lst)\n        return\
    \ largest, smallest\n    end\nend\n</code>\n<|/ a tags=julia,functional-programming\
    \ |>\n<| a dscore=2 |>\nHere is a solution using max.\n<code>", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of integers in a\
    \ list that are\nless than a given number. For example, if the list is [4, 6,\
    \ 8, 10, 12, 14], the", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n    if largest\
    \ < smallest \n        return largest, smallest \n    else \n        return largest,\
    \ nothing \nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a list\
    \ as an argument and returns a tuple where the first element is the sum of the\
    \ elements of the list, and the second element is the product of the elements\
    \ of the list.", "    if length(lst) == 0 \n        return nothing, nothing \n\
    \    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise: Write a function that returns the\
    \ number of integers in a list that are not divisible by 3.", "    if lst == []\n\
    \        return (nothing, nothing)\n    elseif all(lst .< 0)\n        return (nothing,nothing)\n\
    \    elseif all(lst .> 0)\n        return (nothing,nothing)\n    else\n      \
    \  largest = maximum(lst, default=nothing)\n        smallest = minimum(lst, default=nothing)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise\n\
    Write a function that takes a vector and returns the sum of the absolute values\
    \ of the elements in the vector. Test it on some vectors.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 2: Write a function that takes a list as input and returns a\
    \ list where each element is the sum of the elements in the list except the element\
    \ at index i.", "    if length(lst) == 0 \n        return nothing, nothing \n\
    \    else \n        largest = minimum(lst) \n        smallest = maximum(lst) \n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that takes a vector of integers and returns a vector of integers representing\
    \ the number of times each integer appears in the vector.", "    if length(lst)\
    \ == 0 \n        return (nothing, nothing)\n    end\n    largest = nothing\n \
    \   smallest = nothing\n    for x in lst\n        if x < 0 \n            if largest\
    \ == nothing \n                largest = x\n            else\n               \
    \ largest = nothing\n            end\n        elseif largest == nothing \n   \
    \         smallest = x\n        else\n            smallest = nothing\n       \
    \ end\n    end\n    return (largest, smallest)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector and returns the sum of the absolute\
    \ values of the elements in the vector. Test it on some test cases.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst) \n        smallest = maximum(lst) \n        return largest, smallest\
    \ \nend ", "    if length(lst) == 0 \n        return nothing, nothing \n    \n\
    \    largest = minimum(lst)\n    smallest = maximum(lst)\n    \n    if largest\
    \ < smallest \n        return largest, smallest \n    else \n        return largest,\
    \ nothing \nend\n</cell>\n<text>\nExercise: Write a function that takes a vector\
    \ and returns a tuple where the first element is the sum of the elements in the\
    \ vector, and the second element is the mean of the elements in the vector. Test\
    \ it on some vectors.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    \n    largest = nothing\n    smallest = nothing\n    \n    for i in lst\
    \ \n        if i < 0 \n            largest = i \n        else \n            smallest\
    \ = i \n            break\n    \n    if largest == nothing \n        return nothing,\
    \ nothing \n    \n    if smallest == nothing \n        return largest, largest\
    \ \n    \n    return largest, smallest \nend\n</cell>\n<code language=julia-1.5>",
  "    if all(isnothing(el) for el in lst)\n        return nothing, nothing\n    elseif\
    \ all(el < 0 for el in lst)\n        return nothing, nothing\n    elseif all(el\
    \ > 0 for el in lst)\n        return lst, nothing\n    else\n        largest =\
    \ el for el in lst if el > 0\n        smallest = el for el in lst if el < 0\n\
    \        return largest, smallest\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the number of times a value appears in a list.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ takes a vector of integers and returns the sum of the integers in the vector.\
    \ \nIf there are no integers in the vector, return 0.", "    if lst == []\n  \
    \      return nothing, nothing\n    largest = minimum(lst)\n    smallest = maximum(lst)\n\
    \    if largest < smallest\n        return largest, smallest\n    else\n     \
    \   return largest, nothing\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a vector of integers and returns a vector of integers\
    \ where the integers are the sum of the integers in the original vector, but with\
    \ any negative integers replaced by zero, and any positive integers replaced by\
    \ one.", "    if length(lst) == 0 \n        return nothing, nothing \n    else\
    \ \n        largest = minimum(lst) \n        smallest = maximum(lst) \n      \
    \  return largest, smallest \n    end\nend\n</cell>\n<text>\nExercise: Write a\
    \ function that takes a vector and returns a vector where each element is the\
    \ sum of the squares of the elements in the original vector. For example, if the\
    \ input vector is [4, 6, 1, 3, 9], the output vector should be [16, 25, 12, 9,\
    \ 25].", "    if length(lst) == 0 \n        return nothing, nothing \n    else\
    \ \n        largest = minimum(lst)\n        smallest = maximum(lst)\n        return\
    \ largest, smallest \nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ takes a list as an argument and returns a new list with all the even numbers\
    \ in that list. For example, if the list contains [4, 6, 8, 10, 12, 14, 16, 18,\
    \ 20], the function should return [4, 6, 8].", "    if length(lst) == 0 \n   \
    \     return nothing, nothing \n    else \n        largest = minimum(lst)\n  \
    \      smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise: Write a function that takes a vector of integers and returns\
    \ the sum of the integers in the vector. Test it on some test cases.", "    if\
    \ length(lst) == 0 \n        return (nothing, nothing) \n    else \n        largest\
    \ = minimum(lst) \n        smallest = maximum(lst) \n        return (largest,\
    \ smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of positive integers in a list.", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend ",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times a value appears in a list.", "    if length(lst) == 0 \n   \
    \     return nothing, nothing \n    \n    largest = minimum(lst)\n    smallest\
    \ = maximum(lst)\n    return largest, smallest\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector and returns the sum of the elements\
    \ in the vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a list of numbers and returns the sum of the numbers in\
    \ the list.", "    if length(lst) == 0 \n        return nothing, nothing \n  \
    \  else \n        largest = minimum(lst) \n        smallest = maximum(lst) \n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that takes a vector and returns a vector where each element is the\
    \ sum of the squares of the elements in the original vector. For example, if the\
    \ input vector is [4, 6, 3, 2], the output vector should be [16, 18, 9, 12].",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times a given value appears in a list.", "    if length(lst) == 0\
    \ \n        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise\nWrite a function that returns the sum of the integers in a list.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    \n    largest =\
    \ minimum(lst)\n    smallest = maximum(lst)\n    if largest < smallest \n    \
    \    return largest, smallest \n    else \n        return largest, nothing \n\
    end\n</cell>\n<text>\nExercise: Write a function that takes a vector and returns\
    \ a vector where each element is the sum of the squares of the elements in the\
    \ original vector. For example, if the input vector is [1,2,3], the output vector\
    \ should be [1,2,3].", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<text>\nExercise 3: Write\
    \ a function that returns a tuple (a, b), where 'a' is the sum of the positive\
    \ integers in a list, and 'b' is the sum of the negative integers in a list.\n\
    If there are no integers, return (0, 0).", "    if all(isnothing(el) for el in\
    \ lst)\n        return nothing, nothing\n    elseif all(isnothing(el) for el in\
    \ lst)\n        return nothing, nothing\n    elseif all(el < 0 for el in lst)\n\
    \        return nothing, nothing\n    elseif all(el > 0 for el in lst)\n     \
    \   return largest_smallest_integers(lst[end-1:end])\n    else\n        return\
    \ largest_smallest_integers(lst[end-1:end-1]), lst[end]\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(lst) == 0 \n        return (nothing,\
    \ nothing) \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns a tuple (a, b), where 'a' is the largest of\
    \ integers, and 'b' is the smallest of integers in a list.", "    if length(lst)\
    \ == 0\n        return nothing, nothing\n    end\n    largest = nothing\n    smallest\
    \ = nothing\n    for x in lst\n        if x < 0\n            if largest == nothing\n\
    \                largest = x\n            else\n                if x > largest\n\
    \                    largest = x\n                end\n            end\n     \
    \   else\n            if smallest == nothing\n                smallest = x\n \
    \           else\n                if x < smallest\n                    smallest\
    \ = x\n                end\n            end\n        end\n    end\n    return\
    \ largest, smallest\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector and returns the sum of the absolute values of the elements in the vector.\
    \ For example, if the vector is [4, 2, -5, -6, 3], the function should return\
    \ 7.", "    if length(lst) == 0 \n        return nothing, nothing \n    else \n\
    \        largest = minimum(lst) \n        smallest = maximum(lst) \n        return\
    \ largest, smallest \nend \n</cell>\n<code language=julia-1.5>", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector and a number\
    \ as input, and returns the number of times each number appears in the vector.\
    \ For example, if the vector is [1, 1, 2, 2], and the number is 2, the function\
    \ should return [1, 1, 0, 0].", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n  \
    \  return largest, smallest\nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise\nWrite a function that returns the\
    \ largest and smallest numbers in a list.", "    if length(lst) == 0 \n      \
    \  return (nothing, nothing)\n    else \n        largest = minimum(lst)\n    \
    \    smallest = maximum(lst)\n        return (largest, smallest)\n    end\nend\n\
    </cell>\n<text>\nExercise: Write a function that takes a list of integers and\
    \ returns the sum of the integers in the list. Test it on some test cases.", " \
    \   if length(lst) == 0\n        return (nothing, nothing)\n    elseif length(lst)\
    \ == 1\n        return (lst[1], nothing)\n    elseif length(lst) == 2\n      \
    \  return (lst[1], lst[1])\n    else\n        largest = nothing\n        smallest\
    \ = nothing\n        for element in lst\n            if element > largest\n  \
    \              largest = element\n            elseif element < smallest\n    \
    \            smallest = element\n            end\n        end\n        return\
    \ (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise\nWrite a function\
    \ that returns the largest and smallest numbers in a list.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that returns a tuple (a, b), where\
    \ 'a' is the sum of the elements of 'lst', and 'b' is the product of the elements\
    \ of 'lst'.", "    if length(lst) == 0 \n        return nothing, nothing\n   \
    \ elseif length(lst) == 1 \n        return lst[1], lst[1]\n    elseif length(lst)\
    \ == 2 \n        return lst[1], lst[1]\n    elseif length(lst) > 2 \n        largest\
    \ = minimum(lst)\n        smallest = maximum(lst)\n        return largest, smallest\n\
    \    else\n        return nothing, nothing\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if all(x < 0 for x in lst)\n        (a, b) = (nothing, nothing)\n    elseif\
    \ all(x > 0 for x in lst)\n        (a, b) = (nothing,nothing)\n    else\n    \
    \    (a, b) = (min(lst), max(lst))\n    end\n    return (a, b)\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the largest integer in a list.",
  "    if lst.is_empty\n        return (nothing, nothing)\n    end\n    largest =\
    \ nothing\n    smallest = nothing\n    for i in lst\n        if i < 0\n      \
    \      if largest == nothing\n                largest = i\n            else\n\
    \                smallest = i\n            end\n        elseif largest == nothing\n\
    \            largest = i\n        elseif smallest == nothing\n            smallest\
    \ = i\n        else\n            if largest < i\n                largest = i\n\
    \            elseif smallest > i\n                smallest = i\n            end\n\
    \        end\n    end\n    return (largest, smallest)\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector and returns the sum of the absolute\
    \ values of the elements in the vector.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst)\n        smallest\
    \ = maximum(lst)\n        return largest, smallest \nend\n</cell>\n<text>\nExercise\
    \ 2: Write a function that returns the largest and smallest numbers in a list.\n\
    The function should take a list of numbers as an argument and return the largest\
    \ and smallest numbers in the list.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst)\n        smallest\
    \ = maximum(lst)\n        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>",
  "    if lst == []\n        return nothing, nothing\n    largest = minimum(lst)\n\
    \    smallest = maximum(lst)\n    if largest < 0\n        return nothing, nothing\n\
    \    if smallest > 0\n        return largest, smallest\n    return largest, nothing\n\
    end", "    if lst.is_empty\n        return (nothing, nothing)\n    elseif lst.head\
    \ < 0\n        return (lst.last, nothing)\n    elseif lst.head > 0\n        return\
    \ (lst.head, nothing)\n    else\n        return (lst.head, lst.last)\n    end\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that returns the number of\
    \ positive integers in a list.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector and returns the sum of the elements in the vector.\
    \ \nIf the vector is empty, return 0.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst)\n        smallest\
    \ = maximum(lst)\n        return largest, smallest \nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes a list of numbers and returns the sum of the\
    \ numbers in the list, ignoring any non-numeric elements.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the numbers in a\
    \ list.", "    if length(lst) == 0 \n        return (nothing, nothing) \n    else\
    \ \n        largest = minimum(lst) \n        smallest = maximum(lst) \n      \
    \  return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of numbers and returns the sum of the numbers.\
    \ If the list is empty, return 0.", "    if length(lst) == 0\n        return (nothing,\
    \ nothing)\n    end\n    largest = nothing\n    smallest = nothing\n    for i\
    \ in lst\n        if i < 0\n            if largest == nothing\n              \
    \  largest = i\n            else\n                largest = nothing\n        \
    \    end\n        elseif i == 0\n            if smallest == nothing\n        \
    \        smallest = i\n            else\n                smallest = nothing\n\
    \            end\n        else\n            if largest == nothing\n          \
    \      largest = i\n            else\n                largest = nothing\n    \
    \        end\n            if smallest == nothing\n                smallest = i\n\
    \            else\n                smallest = nothing\n            end\n     \
    \   end\n    end\n    return (largest, smallest)\nend\n</cell>\n<code language=julia-1.5>",
  "    if all(isnothing(el) for el in lst)\n        return nothing, nothing\n    largest\
    \ = minimum(el for el in lst if el < 0)\n    smallest = maximum(el for el in lst\
    \ if el > 0)\n    return largest, smallest\nend", "    if length(lst) == 0 \n\
    \        return nothing, nothing \n    else \n        largest = minimum(lst) \n\
    \        smallest = maximum(lst) \n        return largest, smallest \nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \nend ", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise\nWrite a function\
    \ that takes a vector of integers and returns the sum of the integers in the vector.",
  "    if length(lst) == 0\n        return (nothing, nothing)\n    elseif length(lst)\
    \ == 1\n        return (lst[0], nothing)\n    elseif length(lst) == 2\n      \
    \  return (lst[1], lst[0])\n    else\n        largest = nothing\n        smallest\
    \ = nothing\n        for elt in lst\n            if elt > largest\n          \
    \      largest = elt\n            elseif elt < smallest\n                smallest\
    \ = elt\n            end\n        end\n        return (largest, smallest)\n  \
    \  end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a list as\
    \ input and returns a new list with all the even numbers in that list.", "   \
    \ if length(lst) == 0 \n        return nothing, nothing\n    \n    largest = minimum(lst)\n\
    \    smallest = maximum(lst)\n    return largest, smallest\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the largest and smallest numbers\
    \ in a list.\nIf there are no numbers, return (nothing, nothing).\nIf there are\
    \ multiple numbers, return (nothing, nothing).", "    if length(lst) == 0 \n \
    \       return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector of integers and returns\
    \ the sum of the integers. If the vector is empty, return 0.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing\n    \n    largest = minimum(lst)\n \
    \   smallest = maximum(lst)\n    if largest < smallest \n        return largest,\
    \ smallest\n    else \n        return largest, nothing\nend\n</cell>\n<text>\n\
    Exercise 3: Write a function that returns the sum of the integers in a list.\n\
    The function should take in a list of integers and return the sum of the integers.\
    \ If the list is empty, return 0.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst) \n        smallest\
    \ = maximum(lst) \n        return largest, smallest \nend ", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector and returns\
    \ the sum of the absolute values of the elements in the vector.", "    if length(lst)\
    \ == 0 \n        return (nothing, nothing) \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return (largest, smallest) \nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns a tuple (a, b), where\
    \ 'a' is the sum of the positive integers in a list, and 'b' is the sum of the\
    \ negative integers in a list.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n  \
    \  return largest, smallest\nend\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the number of positive integers in a list.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing\n    \n    largest = minimum(lst)\n \
    \   smallest = maximum(lst)\n    if largest < smallest \n        return largest,\
    \ smallest\n    else \n        return largest, nothing\nend\n</cell>\n<text>\n\
    Exercise: Write a function that returns the largest and smallest numbers in a\
    \ list.\nThe function should take a list of numbers as an argument, and return\
    \ a tuple of the largest and smallest numbers.", "    if length(lst) == 0 \n \
    \       return (nothing, nothing) \n    end\n    \n    largest = nothing\n   \
    \ smallest = nothing\n    \n    for x in lst\n        if x < 0 \n            if\
    \ largest == nothing \n                largest = x\n            elseif largest\
    \ < x \n                largest = x\n            end\n        elseif x > 0 \n\
    \            if smallest == nothing \n                smallest = x \n        \
    \    elseif smallest > x \n                smallest = x \n            end\n  \
    \      end\n    end\n    return (largest, smallest)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector and returns the sum of the absolute\
    \ values of the elements in the vector.", "    if all(isnothing(el) for el in\
    \ lst)\n        return nothing, nothing\n    elseif all(isnothing(el) for el in\
    \ lst)\n        return nothing, nothing\n    elseif all(el < 0 for el in lst)\n\
    \        return nothing, nothing\n    elseif all(el > 0 for el in lst)\n     \
    \   return nothing, nothing\n    else\n        largest = maximum(lst, default=nothing)\n\
    \        smallest = minimum(lst, default=nothing)\n        return largest, smallest\n\
    \    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector\
    \ and returns the sum of the absolute values of the elements of the vector.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of positive integers in a list.", "    if length(lst) == 0 \n       \
    \ return nothing, nothing \n    else \n        largest = minimum(lst)\n      \
    \  smallest = maximum(lst)\n        return largest, smallest \n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of elements\
    \ in a list that are\nless than a given value.", "    if length(lst) == 0 \n \
    \       return nothing, nothing \n    else \n        largest = minimum(lst) \n\
    \        smallest = maximum(lst) \n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of positive integers\
    \ in a list.", "    if length(lst) == 0 \n        return (nothing, nothing) \n\
    \    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the integers in a list.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector and returns the sum of\
    \ the absolute values of the elements in the vector.", "    if length(lst) ==\
    \ 0 \n        return (nothing, nothing) \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return (largest, smallest) \nend\n\
    </cell>\n<text>\nExercise: Write a function that returns a tuple (a, b), where\
    \ 'a' is the largest of positive integers, and 'b' is the smallest of negative\
    \ integers in a list.\nIf there is no negative or positive integers, return them\
    \ as None.", "    if length(lst) == 0 \n        return nothing, nothing \n   \
    \ else \n        largest = minimum(lst) \n        smallest = maximum(lst) \n \
    \       return largest, smallest \nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector and returns a vector where each element is the sum of the\
    \ squares of the elements in the original vector. For example, if the input vector\
    \ is [1,2,3], the output vector should be [1,2,3].", "    if lst == []\n     \
    \   return (nothing, nothing)\n    end\n    largest = nothing\n    smallest =\
    \ nothing\n    for i in lst\n        if i < 0\n            if largest == nothing\n\
    \                largest = i\n            else\n                smallest = i\n\
    \            end\n        else\n            if smallest == nothing\n         \
    \       smallest = i\n            else\n                if largest < smallest\n\
    \                    largest = i\n                else\n                    smallest\
    \ = i\n                end\n            end\n        end\n    end\n    return\
    \ (largest, smallest)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the largest and smallest numbers in a list.", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the integers\
    \ in a list.", "    if length(lst) == 0 \n        return nothing, nothing \n \
    \   else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n \
    \       return largest, smallest \nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns the sum of the integers in a list.", "    if lst.is_empty\n   \
    \     return (nothing, nothing)\n    elseif lst.is_one\n        return (lst.last,\
    \ lst.first)\n    elseif lst.is_two\n        return (lst.last, lst.first)\n  \
    \  elseif lst.is_three\n        return (lst.last, lst.first)\n    elseif lst.is_four\n\
    \        return (lst.last, lst.first)\n    elseif lst.is_five\n        return\
    \ (lst.last, lst.first)\n    elseif lst.is_six\n        return (lst.last, lst.first)\n\
    \    elseif lst.is_seven\n        return (lst.last, lst.first)\n    elseif lst.is_eight\n\
    \        return (lst.last, lst.first)\n    elseif lst.is_nine\n        return\
    \ (lst.last, lst.first)\n    elseif lst.is_ten\n        return (lst.last, lst.first)\n\
    \    elseif lst.is_eleven\n        return (lst.last, lst.first)\n    elseif lst.is_twelve\n\
    \        return (lst.last, lst.first)\n    elseif lst.is_thirteen\n        return\
    \ (lst.last, lst.first)\n    elseif lst.is_fourteen\n        return (lst.last,\
    \ lst.first)\n    elseif lst.is_fifteen\n        return (lst.last, lst.first)\n\
    \    elseif lst.is_sixteen\n        return (lst.last, lst.first)\n    elseif lst.is_seventeen\n\
    \        return (lst.last, lst.first)\n    elseif lst.is_eighteen\n        return\
    \ (lst.last, lst.first)\n    elseif lst.is_nineteen\n        return (lst.last,\
    \ lst.first)\n    elseif lst.is_twenty\n        return (lst.last, lst.first)\n\
    \    elseif lst.is_twenty_one\n        return (lst.last, lst.first)\n    elseif\
    \ lst.is_twenty_two\n        return (lst.last, lst.first)\n    elseif lst.is_twenty_three\n\
    \        return (lst.last, lst.first)\n    elseif lst.is_twenty_four\n       \
    \ return (lst.last, lst.first)\n    elseif lst.is_twenty_five\n        return\
    \ (lst.last, lst.first)\n    elseif lst.is_twenty_six\n        return (lst.last,\
    \ lst.first)\n    elseif lst.is_twenty_seven\n        return (lst.last, lst.first)\n\
    \    elseif lst.is_twenty_eight\n        return (lst.last, lst.first)\n    elseif\
    \ lst.is_tw", "    if length(lst) == 0 \n        return nothing, nothing \n  \
    \  \n    largest = minimum(lst)\n    smallest = maximum(lst)\n    return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise: Write a function that takes a vector\
    \ of integers and returns the sum of the integers. If the vector is empty, return\
    \ 0.", "    if length(lst) == 0 \n        return nothing, nothing \n    else \n\
    \        largest = minimum(lst)\n        smallest = maximum(lst)\n        return\
    \ largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of integers in a list that are\nless than a given integer.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of integers and returns the sum of the integers in the vector. \nIf the vector\
    \ is empty, return 0.", "    if length(lst) == 0 \n        return (nothing, nothing)\n\
    \    elseif length(lst) == 1 \n        return (lst[1], nothing)\n    elseif length(lst)\
    \ == 2 \n        return (lst[1], lst[1])\n    elseif length(lst) > 2 \n      \
    \  largest = nothing\n        smallest = nothing\n        for elt in lst \n  \
    \          if elt > largest \n                largest = elt\n            elseif\
    \ elt < smallest \n                smallest = elt\n            end\n        end\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0\n        return (nothing, nothing)\n    end\n    largest\
    \ = nothing\n    smallest = nothing\n    for x in lst\n        if x < 0\n    \
    \        if largest == nothing\n                largest = x\n            else\n\
    \                largest = nothing\n            end\n        elseif x > largest\n\
    \            if smallest == nothing\n                smallest = x\n          \
    \  else\n                smallest = nothing\n            end\n        else\n \
    \           if largest == nothing\n                largest = x\n            elseif\
    \ smallest == nothing\n                smallest = x\n            else\n      \
    \          if x > smallest\n                    smallest = x\n               \
    \ else\n                    largest = x\n                end\n            end\n\
    \        end\n    end\n    return (largest, smallest)\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of elements in a list that are\npositive.", "    if length(lst) == 0\
    \ \n        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes a vector of integers and returns\
    \ the sum of the integers in the vector.", "    if length(lst) == 0 \n       \
    \ return (nothing, nothing) \n    else \n        largest = minimum(lst)\n    \
    \    smallest = maximum(lst)\n        return (largest, smallest)\n    end\nend\n\
    </cell>\n<text>\nExercise: Write a function that takes a vector of integers and\
    \ returns the sum of the integers in the vector. Test it on some test cases.",
  "    if length(lst) == 0 \n        return (nothing, nothing) \n    else \n     \
    \   largest = minimum(lst) \n        smallest = maximum(lst) \n        return\
    \ (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of elements in a list that are\nless than a given number.\
    \ For example, if the list is [5, 7, 2, 6, 3, 8], the", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of positive integers\
    \ in a list.", "    if length(lst) == 0 \n        return nothing, nothing \n \
    \   else \n        largest = minimum(lst) \n        smallest = maximum(lst) \n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of integers and returns the sum of the squares\
    \ of the integers. \nIf there are no integers, return 0.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of positive\
    \ integers in a list.", "    if lst.empty\n        return (nothing, nothing)\n\
    \    elseif lst.head < 0\n        return (lst.last, nothing)\n    else\n     \
    \   return (lst.last, lst.head)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a vector of integers and returns the sum of the integers\
    \ in the vector. \nIf there are no integers in the vector, return 0.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst) \n        smallest = maximum(lst) \n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns the number\
    \ of integers in a list that are\nless than a given number. For example, if the\
    \ list is [4, 6, 3, 7, 10], the", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n  \
    \  if largest < smallest \n        return largest, smallest \n    else \n    \
    \    return largest, nothing \nend\n</cell>\n<text>\nExercise: Write a function\
    \ that takes a list of integers and returns the sum of the integers in the list.\
    \ Test it on a list of integers containing only positive integers and on a list\
    \ of integers containing only negative integers.", "    if length(lst) == 0 \n\
    \        return nothing, nothing \n    else \n        largest = minimum(lst) \n\
    \        smallest = maximum(lst) \n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector and returns the sum of\
    \ the absolute values of the elements in the vector.", "    if length(lst) ==\
    \ 0 \n        return (nothing, nothing) \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return (largest, smallest)\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3, 5,\
    \ 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ integers in a list.", "    if length(lst) == 0 \n        return nothing, nothing\n\
    \    largest = minimum(lst)\n    smallest = maximum(lst)\n    return largest,\
    \ smallest\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ sum of the integers in a list.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([])\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([0])\n\
    </cell>\n<text>\nExercise: Write a function that returns the largest and smallest\
    \ numbers in a vector, ignoring any NaN values.", "    if lst.is_empty\n     \
    \   return nothing, nothing\n    largest = minimum(lst)\n    smallest = maximum(lst)\n\
    \    return largest, smallest\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns a list of all numbers from 1 to $n$ that are divisible by $k$.\
    \ For example, divisible_numbers(3, 2) should return [3, 6, 9, 12, 15].", "  \
    \  if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of positive integers in a list.", "    if length(lst) == 0 \n       \
    \ return nothing, nothing \n    else \n        largest = minimum(lst) \n     \
    \   smallest = maximum(lst) \n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector and returns the sum of\
    \ the absolute values of the elements of the vector.", "    if length(lst) ==\
    \ 0\n        return (nothing, nothing)\n    end\n    largest = minimum(lst)\n\
    \    smallest = maximum(lst)\n    return (largest, smallest)\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a vector of integers and returns the sum of the integers\
    \ in the vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend ", "    if length(lst) == 0 \n    \
    \    return (nothing, nothing)\n    \n    largest = minimum(lst)\n    smallest\
    \ = maximum(lst)\n    if largest < smallest \n        return (largest, smallest)\n\
    \    else\n        return (nothing, nothing)\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of integers and returns the sum\
    \ of the integers in the vector. \nIf there are no integers in the vector, return\
    \ 0.", "    if length(lst) == 0 \n        return (nothing, nothing) \n    else\
    \ \n        largest = minimum(lst) \n        smallest = maximum(lst) \n      \
    \  return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3: Write\
    \ a function that returns the largest and smallest numbers in a list.\nThe function\
    \ should take a list of numbers as an argument, and return two numbers: the largest\
    \ and smallest numbers in the list.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst) \n        smallest\
    \ = maximum(lst) \n        return largest, smallest \nend \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of integers and returns the sum\
    \ of the integers in the vector.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the sum of the numbers in a list.", "    if lst.is_empty\n\
    \        return (nothing, nothing)\n    elseif lst.head < 0\n        return (lst.last,\
    \ nothing)\n    else\n        return (lst.last, lst.head)\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of times a given\
    \ value appears in a list.", "    if length(lst) == 0 \n        return (nothing,\
    \ nothing) \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns a list of all integers up to a number n.", "   \
    \ if length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst) \n        smallest = maximum(lst) \n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns a tuple (a,\
    \ b), where 'a' is the sum of the positive integers in a list, and 'b' is the\
    \ sum of the negative integers in a list.\nIf there are no positive integers or\
    \ negative integers, return them as None.", "    if length(lst) == 0 \n      \
    \  return nothing, nothing \n    else \n        largest = minimum(lst)\n     \
    \   smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(lst) == 0 \n        return (nothing,\
    \ nothing) \n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n \
    \   if largest < smallest \n        return (largest, smallest)\n    else \n  \
    \      return (nothing, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector and returns a vector where each element is\
    \ the sum of the squares of the elements in the vector.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    \n    largest = minimum(lst)\n\
    \    smallest = maximum(lst)\n    if largest < smallest \n        return largest,\
    \ smallest \n    else \n        return largest, nothing \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector and returns the sum of the elements\
    \ in the vector. \nIf the vector is empty, return 0.", "    if length(lst) ==\
    \ 0 \n        return (nothing, nothing) \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return (largest, smallest)\n    end\n\
    end\n</cell>\n<text>\nExercise: Write a function that takes a vector and returns\
    \ the sum of the absolute values of the elements in the vector. Test it on some\
    \ vectors.", "    if length(lst) == 0\n        return nothing, nothing\n    largest\
    \ = minimum(lst)\n    smallest = maximum(lst)\n    return largest, smallest\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the sum of the squares of the integers. If the vector is empty,\
    \ return 0.", "    if length(lst) == 0 \n        return (nothing, nothing) \n\
    \    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a list\
    \ of numbers and returns the sum of the numbers. If the list is empty, return\
    \ 0."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

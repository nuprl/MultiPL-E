name: HumanEval_43_pairs_sum_to_zero
language: jl
prompt: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n   \
  \ it returns True if there are two distinct elements in the list that\n    sum to\
  \ zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n    false\n\
  \    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
  \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
  \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
  \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
  \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
  \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
  \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
  \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
completions: ["    \n    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.", "    \n    sum = 0\n  \
    \  for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers as an input, and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,5])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,5,7,9,11,13])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23,25])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23,25,27])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23,25,27,29])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,", "  \
    \  \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers as an input.\nIt returns True\
    \ if there are two distinct elements in the list that\nsum to zero, and False\
    \ otherwise.\nThe function should work for lists of any length.\nFor example,\
    \ pairs_sum_to_zero([1,3,-2,1,-5,0,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0 \n            return\
    \ true\n    return false\nend", "    l = sort(l)\n    pairs = zip(l[1...end-1],\
    \ l[2:end])\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x ->\
    \ x[1] != 0, pairs)\n    pairs = filter(x -> x[1] == x[2], pairs)\n    pairs =\
    \ filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n", " \
    \   l = sort(l)\n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == x[2], pairs)\n    return length(pairs) == 0\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers and returns a list of all\
    \ integers in the list that sum to zero.", "    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    sum = 0\n    for i in l\n        sum += i\n       \
    \ if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,", "    pairs = zip(l,\
    \ l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1]\
    \ > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > ", "    \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the number of pairs that sum to zero.",
  "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\n  \
    \  return length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == x[2], pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    return\
    \ length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of integers as an input, and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

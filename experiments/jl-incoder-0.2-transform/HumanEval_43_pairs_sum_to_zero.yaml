name: HumanEval_43_pairs_sum_to_zero
language: jl
prompt: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n   \
  \ it returns True if there are two distinct elements in the list that\n    sum to\
  \ zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n    false\n\
  \    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
  \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
  \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
  \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
  \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
  \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
  \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
  \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
completions: ["    \n    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.", "    \n    sum = 0\n  \
    \  for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers as an input, and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,5])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,5,7,9,11,13])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23,25])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23,25,27])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23,25,27,29])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,", "  \
    \  \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers as an input.\nIt returns True\
    \ if there are two distinct elements in the list that\nsum to zero, and False\
    \ otherwise.\nThe function should work for lists of any length.\nFor example,\
    \ pairs_sum_to_zero([1,3,-2,1,-5,0,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0 \n            return\
    \ true\n    return false\nend", "    l = sort(l)\n    pairs = zip(l[1...end-1],\
    \ l[2:end])\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x ->\
    \ x[1] != 0, pairs)\n    pairs = filter(x -> x[1] == x[2], pairs)\n    pairs =\
    \ filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n", " \
    \   l = sort(l)\n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == x[2], pairs)\n    return length(pairs) == 0\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers and returns a list of all\
    \ integers in the list that sum to zero.", "    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    sum = 0\n    for i in l\n        sum += i\n       \
    \ if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,", "    pairs = zip(l,\
    \ l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1]\
    \ > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > ", "    \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the number of pairs that sum to zero.",
  "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\n  \
    \  return length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == x[2], pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    return\
    \ length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of integers as an input, and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    l = sort(l)\n    l = l[1..end]\n  \
    \  l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[", " \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n         \
    \   return true\n    return false\nend", "    \n    sum = 0\n    for i in l\n\
    \        sum += i\n    end\n    \n    if sum == 0\n        return false\n    end\n\
    \    \n    sum = 0\n    for i in l\n        sum += i\n    end\n    \n    if sum\
    \ == 0\n        return false\n    end\n    \n    return true\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>", " \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n         \
    \   return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.", "    \n    sum = 0\n  \
    \  for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers as an input, and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for x in l\n        sum += x\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of pairs\
    \ in the list that sum to zero.", "    \n    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    \n    pairs = zip(l, l[1:end-1]) \n    \n    for pair in pairs\
    \ \n        if pair[1] == 0 \n            return true\n        else \n       \
    \     return false\n    end\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function called pairs_sum_to_one_or_zero(l::Vector{Int64})::Bool\
    \ that takes a list of integers as an input.\nit returns True if there are two\
    \ distinct elements in the list that\nsum to one or zero, and False otherwise.\n\
    >>> pairs_sum_to_one_or_zero([1, 3, 5, 0])\nfalse\n>>> pairs_sum_to_one_or_zero([1,\
    \ 3, -2, 1])\nfalse\n>>> pairs_sum_to_one_or_zero([1, 2, 3, 7])\nfalse\n>>> pairs_sum_to_one_or_zero([2,\
    \ 4, -5, 3, 5, 7])\ntrue\n>>> pairs_sum_to_one_or_zero([1])\nfalse\n\"\"\"", " \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n        \
    \    return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5",
  "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs) \n  \
    \  return length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ pairs_sum_to_zero([1, 3, 5, 0]) == false\n@assert pairs_sum_to_zero([1, 3, -2,\
    \ 1]) == false\n@assert pairs_sum_to_zero([1, 2, 3, 7]) == false\n@assert pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7]) == true\n@assert pairs_sum_to_zero([1]) == false\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers as an input\
    \ and returns a list of all positive integers that are less than the largest element\
    \ in the list. For example, if the input list is [3, -2, -7, 5], then the output\
    \ should be [3, -2, -5].", "    sum = 0\n    for i in l\n        sum += i\n  \
    \      if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>", "    sum = 0\n    for i in l\n        sum += i\n \
    \       if sum == 0 \n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5", "    sum = 0\n    for i in l\n        sum += i\n      \
    \  if sum == 0\n            return true\n    return false\nend", "    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0 \n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes a list of integers as an input and returns a\
    \ list of all integers in the list that sum to zero.", "    sum = 0\n    for i\
    \ in l\n        sum += i\n        if sum == 0\n            return true\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    \n    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n        end\n    end\n \
    \   return false\nend", "    \n    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n         \
    \   return true\n    return false\nend", "    sum = 0\n    for i in l\n      \
    \  sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.0>", "    sum = 0\n    for i in l\n        sum += i\n \
    \       if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>", "    sum = 0\n    for i in l\n        sum += i\n     \
    \   if sum == 0\n            return true\n    return false\nend", "    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers and returns True if there are two distinct elements in the\
    \ list that sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0 \n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for x in l\n     \
    \   sum += x\n        if sum == 0 \n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a list of integers as an input,\
    \ and returns True if there are two distinct elements in the list that sum to\
    \ zero, and False otherwise.", "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, ",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n         \
    \   return true\n    return false\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that takes a list of integers as an input, and returns True if there are two\
    \ distinct elements in the list that sum to zero, and False otherwise.", "   \
    \ sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n           \
    \ return true\n    return false\nend", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n        end\n    end\n \
    \   return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input.\nIt returns True if there are two distinct elements in the list that\n\
    sum to zero, and False otherwise.\nFor example, if the list is [1, 1, 2, 3] the\
    \ function should return true.\nIf the list is [1, 1, 2, 3] the function should\
    \ return false.\nIf the list is [1, 1, 2, 3] the function should return false.\n\
    If the list is [1, 1, 2, 3] the function should return false.\nIf the list is\
    \ [1, 1, 2, 3] the function should return false.\nIf the list is [1, 1, 2, 3]\
    \ the function should return false.\nIf the list is [1, 1, 2, 3] the function\
    \ should return false.\nIf the list is [1, 1, 2, 3] the function should return\
    \ false.\nIf the list is [1, 1, 2, 3] the function should return false.\nIf the\
    \ list is [1, 1, 2, 3] the function should return false.\nIf the list is [1, 1,\
    \ 2, 3] the function should return false.\nIf the list is [1, 1, 2, 3] the function\
    \ should return false.\nIf the list is [1, 1, 2, 3] the function should return\
    \ false.\nIf the list is [1, 1, 2, 3] the function should return false.\nIf the\
    \ list is [1, 1, 2, 3] the function should return false.\nIf the list is [1, 1,\
    \ 2, 3] the function should return false.\nIf the list is [1, 1, 2, 3] the function\
    \ should return false.\nIf the list is [1, 1, 2, 3] the function should return\
    \ false.\nIf the list is [1, 1, 2, 3] the function should return false.\nIf the\
    \ list is [1, 1, 2, 3] the function should return false.\nIf the list is [1, 1,\
    \ 2, 3] the function should return false.\nIf the list is [1, 1, 2, 3] the function\
    \ should return false.\nIf the list is [1, 1, 2, 3] the function should return\
    \ false.\nIf the list is [1, 1, 2, 3] the function should return false.\nIf the\
    \ list is [1, 1, 2, 3] the function should return false.\nIf the list is [1, 1,\
    \ 2, 3] the function should return false.\nIf the list is [1, 1, 2, 3] the function\
    \ should return false.\nIf the list is [1, 1, 2, 3] the function should return\
    \ false.\nIf the list is [1, 1, 2, 3] the function should return false.", "  \
    \  sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a list of integers as an input, and returns True if there are two\
    \ distinct elements in the list that sum to zero, and False otherwise.", "   \
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers as an input.\nIt returns True\
    \ if there are two distinct elements in the list that\nsum to zero, and False\
    \ otherwise.\nThe function should work for lists of any length.\nThe function\
    \ should work for lists of any type.\nThe function should work for lists of integers,\
    \ floats, and complex numbers.\nThe function should work for lists of any combination\
    \ of integers, floats, and complex numbers.\nThe function should work for lists\
    \ of any combination of integers, floats, and complex numbers.\nThe function should\
    \ work for lists of any combination of integers, floats, and complex numbers.\n\
    The function should work for lists of any combination of integers, floats, and\
    \ complex numbers.\nThe function should work for lists of any combination of integers,\
    \ floats, and complex numbers.\nThe function should work for lists of any combination\
    \ of integers, floats, and complex numbers.\nThe function should work for lists\
    \ of any combination of integers, floats, and complex numbers.\nThe function should\
    \ work for lists of any combination of integers, floats, and complex numbers.\n\
    The function should work for lists of any combination of integers, floats, and\
    \ complex numbers.\nThe function should work for lists of any combination of integers,\
    \ floats, and complex numbers.\nThe function should work for lists of any combination\
    \ of integers, floats, and complex numbers.\nThe function should work for lists\
    \ of any combination of integers, floats, and complex numbers.\nThe function should\
    \ work for lists of any combination of integers, floats, and complex numbers.\n\
    The function should work for lists of any combination of integers, floats, and\
    \ complex numbers.\nThe function should work for lists of any combination of integers,\
    \ floats, and complex numbers.\nThe function should work for lists of any combination\
    \ of integers, floats, and complex numbers.\nThe function should work for lists\
    \ of any combination of integers, floats, and complex numbers.\nThe function should\
    \ work for lists of any combination of integers, floats, and complex numbers.\n\
    The function should work for lists of any combination of integers, floats, and\
    \ complex numbers.\nThe function should work for lists of any combination of integers,\
    \ floats, and complex numbers.\nThe function should work for lists of any combination\
    \ of integers, floats, and complex numbers.\nThe function should work for lists\
    \ of any combination of integers, floats, and complex numbers.\nThe function should\
    \ work for lists of any combination of integers, floats, and complex numbers.\n\
    The function should work for lists of any combination of integers, floats, and\
    \ complex numbers.\nThe function should work for lists of any combination of integers,\
    \ floats, and complex numbers.\nThe function should work for lists of any combination\
    \ of integers, floats, and complex numbers.\nThe function should work for lists\
    \ of any combin", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n        end\n    end\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>", "    \n    pairs = zip(l, l[1:end-1]) \n\
    \    \n    for pair in pairs \n        if pair[1] == 0 \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input.\nIt returns True if there are two distinct elements in the list that\n\
    sum to zero, and False otherwise.\nFor example, given [1,2,3,4,5], it should return\
    \ True.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5], it should\
    \ return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.", "    \n\
    \    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n        \
    \    return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=juli",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers and returns the number\
    \ of pairs of integers in the list that sum to zero.", "    \n    sum = 0\n  \
    \  for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a list of integers as an input, and returns the number\
    \ of pairs in the list that sum to zero.", "    \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>", "    sum = 0\n    for i in l\n      \
    \  sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n      \
    \  if sum == 0\n            return true\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n         \
    \   return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a list of integers as an input, and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.", "    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of integers as an input, and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers and returns the number of pairs in the list that sum to zero.",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \ return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for x in l\n        sum\
    \ += x\n        if sum == 0 \n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a list of integers and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.", "    pairs = zip(l, l[1:end-1])\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] !=\
    \ 0, pairs) \n    pairs = filter(x -> x[1] != x[0], pairs) \n    return length(pairs)\
    \ == 0\nend\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function called pairs_sum_to_one_or_zero(l::Vector{Int64})\
    \ that takes a list of integers as an input.\nit returns True if there are two\
    \ distinct elements in the list that sum to one or zero, and False otherwise.\n\
    >>> pairs_sum_to_one_or_zero([1, 3, 5, 0])\nfalse\n>>> pairs_sum_to_one_or_zero([1,\
    \ 3, -2, 1])\nfalse\n>>> pairs_sum_to_one_or_zero([1, 2, 3, 7])\nfalse\n>>> pairs_sum_to_one_or_zero([2,\
    \ 4, -5, 3, 5, 7])\ntrue\n>>> pairs_sum_to_one_or_zero([1])\nfalse\n>>> pairs_sum_to_one_or_zero([-1,\
    \ -5, -7, -9, -13, -17, -21])\ntrue\n>>> pairs_sum_to_one_or_zero([-1, 1, -5,\
    \ -7, -9, -13, -17, -21])\ntrue\n>>> pairs_sum_to_one_or_zero([-1, 1, -5, -7,\
    \ -9, -13, -17, -21, -25])\ntrue\n>>> pairs_sum_to_one_or_zero([-1, 1, -5, -7,\
    \ -9, -13, -17, -21, -25, -29])\ntrue\n>>> pairs_sum_to_one_or_zero([-1, 1, -5,\
    \ -7, -9, -13, -17, -21, -25, -29, -33])\ntrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ 1, -5, -7, -9, -13, -17, -21, -25, -29, -33, -51])\ntrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ 1, -5, -7, -9, -13, -17, -21, -25, -29, -33, -51, -55])\ntrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ 1, -5, -7, -9, -13, -17, -21, -25, -29, -33, ", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0 \n            return true\n    return false\n\
    end", "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n  \
    \          return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of integers and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.", "    \n    sum = 0\n  \
    \  for x in l\n        sum += x\n        if sum == 0 \n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector as an input, and returns true if the vector has all elements\
    \ equal to zero, and false otherwise.\nFor example, \n>>> all_zeros([1,3,-2,1])\n\
    true\n>>> all_zeros([1,3,-2,0,1])\nfalse\n>>> all_zeros([1,3,-2,1,1])\nfalse\n\
    >>> all_zeros([1,3,-2,1,0])\nfalse\n>>> all_zeros([1,3,-2,1,2])\nfalse\n>>> all_zeros([1,3,-2,1,3])\n\
    false\n>>> all_zeros([1,3,-2,1,4])\nfalse\n>>> all_zeros([1,3,-2,1,5])\nfalse\n\
    >>> all_zeros([1,3,-2,1,6])\nfalse\n>>> all_zeros([1,3,-2,1,7])\nfalse\n>>> all_zeros([1,3,-2,1,8])\n\
    false\n>>> all_zeros([1,3,-2,1,9])\nfalse\n>>> all_zeros([1,3,-2,1,10])\nfalse\n\
    >>> all_zeros([1,3,-2,1,11])\nfalse\n>>> all_zeros([1,3,-2,1,12])\nfalse\n>>>\
    \ all_zeros([1,3,-2,1,13])\nfalse\n>>> all_zeros([1,3,-2,1,14])\nfalse\n>>> all_zeros([1,3,-2,1,15])\n\
    false\n>>> all_zeros([1,3,-2,1,16])\nfalse\n>>> all_zeros([1,3,-2,1,17])\nfalse\n\
    >>> all_zeros([1,3,-2,1,18])\nfalse\n>>> all_zeros([1,3,-2,1,19])\nfalse\n>>>\
    \ all_zeros([1,3,-2,1,20])\nfalse\n>>> all_zeros([1,3,-2,1,21])\nfalse\n>>> all_zeros([1,3,-2,1,22])\n\
    false\n>>> all_zeros([1,3,-2,1,23])\nfalse\n>>> all_zeros([1,3,-2,1,24])\nfalse\n\
    >>> all_zeros([1,3,-2,1,25])\nfalse\n>>> all_zeros([1,3,-2,1,26])\nfalse\n>>>\
    \ all_zeros([1,3,-2,1,27])\nfalse\n>>> all_zeros([1,3,-2,1,28])\nfalse\n>>> all_zeros([1,3,-2,1,29])\n\
    false\n>>> all_zeros([1,3,-2,1,30])\nfalse\n>>> all_zeros([1,3,-2,1,31])\nfalse\n\
    >>> all_zeros([1,3,-2,1,32])\nfalse\n>>> all_zeros([1,3,-2,1,33])\nfalse\n>>>\
    \ all_zeros([1,3,-2,1,", "    \n    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n        end\n    end\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    pairs = zip(l, l[1:end-1]) \n    pairs\
    \ = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    return length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers and\
    \ returns True if there are two distinct elements in the list that sum to zero,\
    \ and False otherwise.", "    sum = 0\n    for i in l\n        sum += i\n    \
    \    if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function called pairs_sum_to_zero that takes a list of integers as\
    \ an input.\nIt returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.\nThe function should return false if the list\
    \ has only one element.\nThe function should return false if the list has two\
    \ or more elements.\nThe function should return false if the list contains negative\
    \ numbers.\nThe function should return false if the list contains any duplicate\
    \ elements.\nThe function should return false if the list contains any negative\
    \ numbers.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false if the list contains any non-integer\
    \ elements.\nThe function should return false ", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n  \
    \          return true\n    return false\nend\n</cell>\n<text>\nExercise 3: Write\
    \ a function that checks if a list contains all unique elements.\nThe function\
    \ should take a list of integers as an input.\nIt should return True if all the\
    \ elements in the list are unique, and False otherwise.\n>>> all_unique_elements([1,\
    \ 2, 3])\ntrue\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([",
  "    l = sort(l)\n    \n    sum = 0\n    for x in l\n        sum += x\n        if\
    \ sum == 0 \n            return true\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n    \
    \    if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>", "    sum = 0\n    for i in l\n        sum += i\n     \
    \   if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>", "    sum = 0\n    for x in l\n        sum += x\n     \
    \   if sum == 0 \n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n", "    sum = 0\n    for i in l\n        sum += i\n        if sum ==\
    \ 0 \n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n         \
    \   return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns true if there are two distinct elements in\
    \ the list that sum to zero.", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend", "    \n\
    \    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n        \
    \    return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell", " \
    \   l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n        end\n    end\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n",
  "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs) \n  \
    \  pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == x[2],\
    \ pairs) \n    pairs = filter(x -> x[1] != 0, pairs) \n    pairs = filter(x ->\
    \ x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs\
    \ = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[2], ", "    sum = 0\n    for i in l\n  \
    \      sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>", "    \n    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    return length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</", "    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1]\
    \ == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, ", "    \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n  \
    \          return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers and returns the number of integers\
    \ in the list that sum to zero.", "    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0 \n            return true\n        end\n    end\n   \
    \ return false\nend\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers and\
    \ an integer $k$ as input, and returns True if there are $k$ distinct elements\
    \ in the list that sum to zero, and False otherwise.", "    pairs = zip(l, l[1:end-1])\
    \ \n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] ==\
    \ 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x ->\
    \ x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, ", "    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>", "    \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n \
    \           return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-3,1])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ checks if a list contains all unique elements.\nThe function should take a list\
    \ of integers as an input.\nIt should return True if all the elements in the list\
    \ are unique, and False otherwise.\nThe function should work for lists of any\
    \ length.\nFor example, a list [1, 1, 2] contains all unique elements.\nA list\
    \ [1, 1, 2, 3] contains all unique elements.\nA list [1, 1, 2, 3, 3] contains\
    \ no unique elements.\nA list [1, 1, 2, 3, 3, 3] contains no unique elements.\n\
    A list [1, 1, 2, 3, 3, 3, 3] contains no unique elements.\nA list [1, 1, 2, 3,\
    \ 3, 3, 3, 3] contains no unique elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3]\
    \ contains no unique elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3] contains\
    \ no unique elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique\
    \ elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique elements.\n\
    A list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique elements.\n\
    A list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique elements.\n\
    A list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique elements.\n\
    A list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique\
    \ elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]\
    \ contains no unique elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique elements.\nA list [1, 1, 2, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no\
    \ unique elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum ==\
    \ 0\n            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a list of integers as an input.\nIt returns True if\
    \ there are two distinct elements in the list that\nsum to zero, and False otherwise.\n\
    For example, if the input is [1, 3, -2, 1], the function should return true.\n\
    If the input is [1, 2, 3, 7], the function should return false.", "    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    \n    sum = 0\n    for x in l\n        sum\
    \ += x\n        if sum == 0\n            return true\n    return false\nend",
  "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs) \n  \
    \  pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0,\
    \ pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x ->\
    \ x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs =\
    \ filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n \
    \   pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] <\
    \ 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x\
    \ -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs =\
    \ filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n \
    \   pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] >\
    \ 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs =\
    \ filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n \
    \   pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] <\
    \ 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x\
    \ -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs =\
    \ filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n \
    \   pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] >\
    \ 0, pairs) \n    pairs = filter(x -> x[1] < 0, ", "    sum = 0\n    for i in\
    \ l\n        sum += i\n        if sum == 0\n            return true\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    \n  \
    \  sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0 \n            return true\n    return false\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n         \
    \   return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers and\
    \ an integer as input, and returns True if there are two distinct elements in\
    \ the list that sum to that integer. For example, given [1,2,3,4,5] and 5, you\
    \ should return true.", "    sum = 0\n    for x in l\n        sum += x\n     \
    \   if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a list of integers as an input, and returns True if there are two\
    \ distinct elements in the list that sum to zero, and False otherwise.", "   \
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers as an input.\nIt returns True\
    \ if there are two distinct elements in the list that\nsum to zero, and False\
    \ otherwise.\nThe function should work for lists of any length.\nFor example,\
    \ \npairs_sum_to_zero([1,3,-2,1,-5,3,-7,2,-6,1,-4,3,-3,-5,2,-7,1,-3,-4,-6,-5,-4,-3,-7,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>", "    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    sum = 0\n    for i in l\n        sum += i\n       \
    \ if sum == 0\n            return true\n    return false\nend", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \    return false\nend", "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == x[2], pairs)\n    return\
    \ length(pairs) == 0\nend\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=juli",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    pairs = zip(l, l[1:end-1]) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    return length(pairs) == 0\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers as an input.\n\
    It returns True if there are two distinct elements in the list that sum to zero,\
    \ and False otherwise.\nThe function should use pairs_sum_to_zero.", "    \n \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n         \
    \   return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a list of integers as an input, and returns True if\
    \ there are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of pairs in the list that\
    \ sum to zero.", "    \n    pairs = zip(l, l[1:end-1]) \n    \n    for pair in\
    \ pairs \n        if pair[1] == 0 \n            return true \n        else \n\
    \            return false \n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero", "    \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n  \
    \          return true\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of pairs\
    \ in the list that sum to zero.", "    \n    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0\n            return true\n    return false\nend",
  "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs) \n \
    \   pairs = filter(x -> x[1] == 0, pairs) \n    return length(pairs) == 0\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend", "    sum\
    \ = 0\n    for x in l\n        sum += x\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>", "    sum = 0\n    for i in l\n        sum += i\n     \
    \   if sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<code language=julia-1.5>", "    \n    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    l = sort(l)\n \
    \   \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n   \
    \         return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n         \
    \   return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    \n    sum = 0\n    for i in l\n   \
    \     sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0 \n            return true\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == x[2], pairs)\n    return\
    \ length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell", "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.", "    l = sort(l)\n    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \ return false\nend\n</cell>\n<code language=julia-1.5>", "    pairs = zip(l,\
    \ l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs) \n    return length(pairs)\
    \ == 0\nend\n</cell>\n<code language=julia-1.5>\n@assert pairs_sum_to_zero([1,3,-2,1])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-2,1]) == false\n@assert pairs_sum_to_zero([1,2,3,7])\
    \ == false\n@assert pairs_sum_to_zero([2,4,-5,3,5,7]) == true\n@assert pairs_sum_to_zero([1])\
    \ == false\n</cell>\n<text>\nExercise 3\nWrite a function that checks if a list\
    \ contains all unique elements. For example:", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0 \n            return true\n    return false\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers\
    \ as an input, and returns True if there are two distinct elements in the list\
    \ that sum to zero, and False otherwise.", "    pairs = zip(l, l[1:end-1]) \n\
    \    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] != 0,\
    \ pairs) \n    pairs = filter(x -> x[0] == 0, pairs) \n    pairs = filter(x ->\
    \ x[1] != x[0], pairs) \n    pairs = filter(x -> x[1] != x[1], pairs) \n    pairs\
    \ = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[3], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[4], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[5], pairs) \n    pairs = filter(x -> x[1] != x[6], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[7], pairs) \n    pairs = filter(x -> x[1] != x[8], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[9], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[10], pairs) \n    pairs = filter(x -> x[1] != x[11], pairs) \n    pairs\
    \ = filter(x -> x[1] != x[12], pairs) \n    pairs = filter(x -> x[1] != x[13],\
    \ pairs) \n    pairs = filter(x -> x[1] != x[14], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[15], pairs) \n    pairs = filter(x -> x[1] != x[16], pairs) \n\
    \    pairs = filter(x -> x[1] != x[17], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[18], pairs) \n    pairs = filter(x -> x[1] != x[19], pairs) \n    pairs\
    \ = filter(x -> x[1] != x[20], pairs) \n    pairs = filter(x -> x[1] != x[21],\
    \ pairs) \n    pairs = filter(x -> x[1] != x[22], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[23], pairs) \n    pairs = filter(x -> x[1] != x[24], pairs) \n\
    \    pairs = filter(x -> x[1] != x[25], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[26], pairs) \n    pairs = filter(x -> x[1] != x[27], pairs) \n    pairs\
    \ = filter(x -> x[1] != x[28], pairs) \n    pairs = filter(x -> x[1] != x[29],\
    \ pairs) \n    pairs = filter(x -> x[1] != x[30], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[31], pairs) \n    pairs = filter(x -> x[1] != x[32], pairs) \n\
    \    pairs = filter(x -> x[1]", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0 \n            return true\n    return false\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes a list of integers and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    \n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0 \n            return true\n    return false\nend", "    sum = 0\n \
    \   for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers and returns a list of all positive integers less than or\
    \ equal to the input list's maximum value.", "    sum = 0\n    for i in l\n  \
    \      sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes a list of integers\
    \ and returns True if there are two distinct elements in the list that sum to\
    \ zero, and False otherwise.", "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == x[2], pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] >\
    \ 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs =\
    \ filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n \
    \   pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] >\
    \ 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs =\
    \ filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n \
    \   pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] >\
    \ 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs =\
    \ filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n \
    \   pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] >\
    \ 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs =\
    \ filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n \
    \   pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > ",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n   \
    \         return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of pairs in the list that sum to zero.", "    sum = 0\n    for i\
    \ in l\n        sum += i\n        if sum == 0\n            return true\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    \n  \
    \  sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n    return false\nend", "    sum = 0\n    for x in l\n \
    \       sum += x\n        if sum == 0 \n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the number of pairs that sum to zero.", "    sum = 0\n    for i\
    \ in l\n        sum += i\n        if sum == 0\n            return true\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0 \n            return true\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend", "    sum = 0\n    for\
    \ x in l\n        sum += x\n        if sum == 0 \n            return true\n  \
    \  return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function called pairs_sum_to_n!\nthat takes\
    \ a list of integers as an input.\nit returns True if there are two distinct elements\
    \ in the list that\nsum to n, and False otherwise.\n>>> pairs_sum_to_n!([1, 3,\
    \ 5, 0])\nfalse\n>>> pairs_sum_to_n!([1, 3, -2, 1])\nfalse\n>>> pairs_sum_to_n!([1,\
    \ 2, 3, 7])\nfalse\n>>> pairs_sum_to_n!([2, 4, -5, 3, 5, 7])\ntrue\n>>> pairs_sum_to_n!([1])\n\
    false\n>>> pairs_sum_to_n!([1,3,5,0])\ntrue\n>>> pairs_sum_to_n!([1,3,-2,1])\n\
    true\n>>> pairs_sum_to_n!([1,2,3,7])\ntrue\n>>> pairs_sum_to_n!([2,4,-5,3,5,7])\n\
    true\n>>> pairs_sum_to_n!([1])\ntrue\n>>> pairs_sum_to_n!([1,3,5,0])\ntrue\n>>>\
    \ pairs_sum_to_n!([1,3,-2,1])\ntrue\n>>> pairs_sum_to_n!([1,2,3,7])\ntrue\n>>>\
    \ pairs_sum_to_n!([2,4,-5,3,5,7])\ntrue\n>>> pairs_sum_to_n!([1])\ntrue\n>>> pairs_sum_to_n!([1,3,5,0])\n\
    true\n>>> pairs_sum_to_n!([1,3,-2,1])\ntrue\n>>> pairs_sum_to_n!([1,2,3,7])\n\
    true\n>>> pairs_sum_to_n!([2,4,-5,3,5,7])\ntrue\n>>> pairs_sum_to_n!([1])\ntrue\n\
    >>> pairs_sum_to_n!([1,3,5,0])\ntrue\n>>> pairs_sum_to_n!([1,3,-2,1])\ntrue\n\
    >>> pairs_sum_to_n!([1,2,3,7])\ntrue\n>>> pairs_sum_to_n!([2,4,-5,3,5,7])\ntrue\n\
    >>> pairs_sum_to_n!([1])\ntrue\n>>> pairs_sum_to_n!([1,3,", "    \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0 \n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of integers and returns true if the\
    \ vector contains any negative integers, and false otherwise.\nThe function should\
    \ work for vectors of any length.\nFor example, \n[1,2,-3,-4,5] should return\
    \ true.\n[1,2,3,4,5] should return false.\n[1,2,-3,-4,-5,-6,7] should return true.\n\
    [1,2,-3,-4,-5,-6,7] should return false.\n[1,2,-3,-4,-5,-6,7,8,9] should return\
    \ true.\n[1,2,-3,-4,-5,-6,7,8,9] should return false.\n[1,2,-3,-4,-5,-6,7,8,9,10]\
    \ should return true.\n[1,2,-3,-4,-5,-6,7,8,9,10] should return false.\n[1,2,-3,-4,-5,-6,7,8,9,10,11]\
    \ should return true.\n[1,2,-3,-4,-5,-6,7,8,9,10,11] should return false.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12]\
    \ should return true.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12] should return false.\n\
    [1,2,-3,-4,-5,-6,7,8,9,10,11,12,13] should return true.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13]\
    \ should return false.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14] should return true.\n\
    [1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14] should return false.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14,15]\
    \ should return true.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14,15] should return\
    \ false.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14,15,16] should return true.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14,15,16]\
    \ should return false.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14,15,16,", "    pairs\
    \ = zip(l, l[1:end-1]) \n    pairs_sum_to_zero = all((pairs[1, 1] == 0) & (pairs[2,\
    \ 1] == 0))\n    return pairs_sum_to_zero\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend", "    \n\
    \    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n        \
    \    return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input and returns the number of pairs in the list that sum to zero.", " \
    \   \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n  \
    \          return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell", " \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n         \
    \   return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for x in l\n        sum\
    \ += x\n        if sum == 0 \n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-", "    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>", "    sum = 0\n    for x in l\n        sum += x\n     \
    \   if sum == 0 \n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a list of integers as an input, and returns True if\
    \ there are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that takes a list of integers as an input, and returns a list of all integers\
    \ in the list that sum to zero.", "    \n    pairs = zip(l[1:end-1], l[2:end])\n\
    \    \n    sum = 0\n    for pair in pairs\n        sum += pair[1]\n        if\
    \ sum == 0\n            return false\n    end\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 4\n\
    Write a function that checks if a number is even.", "    sum = 0\n    for i in\
    \ l\n        sum += i\n        if sum == 0\n            return true\n    return\
    \ false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a list\
    \ of integers and returns True if there are two distinct elements in the list\
    \ that sum to zero, and False otherwise.", "    \n    sum = 0\n    for x in l\n\
    \        sum += x\n        if sum == 0\n            return true\n    return false\n\
    end", "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n  \
    \          return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>", "    \n    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise\nWrite a function that takes a list of integers as an\
    \ input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

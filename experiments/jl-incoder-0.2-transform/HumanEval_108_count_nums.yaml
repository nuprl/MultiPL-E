name: HumanEval_108_count_nums
language: jl
prompt: "\"\"\"\n    Write a function count_nums which takes an array of integers\
  \ and returns\n    the number of elements which has a sum of digits > 0.\n    If\
  \ a number is negative, then its first signed digit will be negative:\n    e.g.\
  \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
  \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
  \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3,\
  \ 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
  \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\
  \t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
completions: ["    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-1,11,-11])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for n in arr\n\
    \        if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-1, 1, -2, 2, -3, 3, -4,\
    \ 4, -5, 5])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1, -1, 1, 2, -3,\
    \ 4])\n2\n>>> count_nums([-1, -1, 1, 2, -3, 4, 5])\n3\n>>> count_nums([-1, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6,\
    \ -7, -8, -9])\n5\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10])\n\
    6\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11])\n7\n>>>\
    \ count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12])\n8\n>>>\
    \ count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13])\n\
    9\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13,\
    \ -14])\n10\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, -14, -15])\n11\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12, -13, -14, -15, -16])\n12\n>>> count_nums([-1, -1, 1, 2, -3,\
    \ 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17])\n13\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17,\
    \ -18])\n14\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, ", "    count = 0\n    for x in arr\n        if x > 0 \n         \
    \   count += 1\n        else\n            count += count_nums(x::Vector{Int64})\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits > 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n</text>\n<code\
    \ language=julia-1.5>", "    count = 0\n    for x in arr\n        if x > 0 \n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, 6])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += count_nums(digits(x))\n        else\n            count += count_nums(digits(-x))\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(digits(-123))\n\
    </cell>\n<code language=julia-1.5>\ncount_nums(digits(-1234))\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14,\
    \ -16, -18, -20, -22, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44, -46])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -24,\
    \ -26, -28, -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1,\
    \ 2])\n3\n>>> count_nums([-1, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26,\
    \ -28, -32, -34, -36, -38, -40, -42, -44, -46])\n2\n>>> count_nums([-1, -4, -6,\
    \ -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44,\
    \ -46])\n2\n>>> count_nums([-1, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26,\
    \ -28, -32, -34, -36, -38, -40, -42, -44, -46])\n2\n>>> count_nums([-1, -4, -6,\
    \ -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44,\
    \ -46])\n2\n>>> count_nums([-1, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26,\
    \ -28, -32, -34, -36, -38, -40, -42, -44, -46])\n2\n>>> count_nums([-1, -4, -6,\
    \ -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44,\
    \ -46])\n2\n>>> count_nums([-1, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26,\
    \ -28, -32, -34, -36, -38, -40, -42, -44, -46])\n2\n>>> count_nums([-1, -4, -6,\
    \ -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -", "    count =\
    \ 0\n    for x in arr\n        if x > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        else\n            count\
    \ += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        else\n            count +=\
    \ count_nums(x::Vector{Int64})\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14, -16, -18, -21])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-1, 11, -11])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2, -1, 0, 1, 2])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\n\
    Exercise: Write a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits < 0.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 2\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -2, 3, -3, 4, -4, 5, -5, 6, -6,\
    \ 7, -7, 8, -8, 9])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1])\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1,\
    \ -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1,\
    \ -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2,\
    \ -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, ", "    count = 0\n    for x in arr\n        if x >\
    \ 0 \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -10, -20, -30])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits < 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n>>> count_nums([-1, -1, 1, 2, -10, -20, -30])\n2\n\"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8, -9, 10])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 1,\
    \ -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits > 0.\nIf no number has a sum of digits\
    \ > 0, then return 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7,\
    \ 8, -8, 9, -9] has 1 element with a sum of digits > 0.\ne.g. [-1, 1, -2, 2, 3,\
    \ -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has no elements with a sum of\
    \ digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9,\
    \ -9] has 0 elements with a sum of digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4,\
    \ -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has 0 elements with a sum of digits >\
    \ 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has\
    \ 0 elements with a sum of digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5,\
    \ 6, -6, 7, -7, 8, -8, 9, -9] has 0 elements with a sum of digits > 0.\ne.g. [-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has 0 elements with\
    \ a sum of digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7,\
    \ 8, -8, 9, -9] has 0 elements with a sum of digits > 0.\ne.g. [-1, 1, -2, 2,\
    \ 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has 0 elements with a sum of\
    \ digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9,\
    \ -9] has 0 elements with a sum of digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4,\
    \ -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has 0 elements with a sum of digits >\
    \ 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has\
    \ 0 elements with a sum of digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5,\
    \ 6, -6, 7, -", "    count = 0\n    for x in arr\n        if x > 0 \n        \
    \    count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -22, -24])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>>\
    \ count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count_nums(arr, 0)\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits > 0.\nIf no such elements exist, return 0.\nIf no\
    \ such elements exist, return 1.\nIf no such elements exist, return 2.\nIf no\
    \ such elements exist, return 3.\nIf no such elements exist, return 4.\nIf no\
    \ such elements exist, return 5.\nIf no such elements exist, return 6.\nIf no\
    \ such elements exist, return 7.\nIf no such elements exist, return 8.\nIf no\
    \ such elements exist, return 9.\nIf no such elements exist, return 10.\nIf no\
    \ such elements exist, return 11.\nIf no such elements exist, return 12.\nIf no\
    \ such elements exist, return 13.\nIf no such elements exist, return 14.\nIf no\
    \ such elements exist, return 15.\nIf no such elements exist, return 16.\nIf no\
    \ such elements exist, return 17.\nIf no such elements exist, return 18.\nIf no\
    \ such elements exist, return 19.\nIf no such elements exist, return 20.\nIf no\
    \ such elements exist, return 21.\nIf no such elements exist, return 22.\nIf no\
    \ such elements exist, return 23.\nIf no such elements exist, return 24.\nIf no\
    \ such elements exist, return 25.\nIf no such elements exist, return 26.\nIf no\
    \ such elements exist, return 27.\nIf no such elements exist, return 28.\nIf no\
    \ such elements exist, return 29.\nIf no such elements exist, return 30.\nIf no\
    \ such elements exist, return 31.\nIf no such elements exist, return 32.\nIf no\
    \ such elements exist, return 33.\nIf no such elements exist, return 34.\nIf no\
    \ such elements exist, return 35.\nIf no such elements exist, return 36.\nIf no\
    \ such elements exist, return 37.\nIf no such elements exist, return 38.\nIf no\
    \ such elements exist, return 39.\nIf no such elements exist, return 40.\nIf no\
    \ such elements exist, return 41.\nIf no such elements exist, return 42.\nIf no\
    \ such elements exist, return 43.\nIf no such elements exist, return 44.\nIf no\
    \ such elements exist, return 45.\nIf no such elements exist, return 46.\nIf no\
    \ such elements exist, return 47.\nIf no such elements exist, return 48.\nIf no\
    \ such elements exist, return 49.\nIf no ", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8, -9])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count_nums(arr,\
    \ 0)\nend\n</code>\n<|/ a tags=julia,arrays |>\n<| a tags=julia,arrays |>\n<code>",
  "    count = 0\n    for x in arr\n        if x < 0\n            count += 1\n   \
    \     elseif x == 0\n            count += 1\n        else\n            count +=\
    \ count_nums(digits(x))\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 1, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4,\
    \ -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x < 0\n            count += count_nums(-x)\n        else\n \
    \           count += 1\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits > 0.\nIf any number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n>>> count_nums([-1, -1, 1, -1, 1, -1])\n2\n>>> count_nums([-1, -1,\
    \ 1, -1, 1, -1, -1, 1, -1])\n4\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1])\n8\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1])\n16\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1])\n32\n>>> count_nums([-1, -1, 1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -4, -6, -8])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        else\n\
    \            count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for n in arr\n\
    \        if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-2, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-1, 11, -11])\n</cell>\n<code language=julia-1.4>\ncount_nums([1,\
    \ 1, 2])\n</cell>\n<text>\nExercise\nWrite a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits > 0.\nIf any number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n\
    1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1, 2, -4, -5, -6, -7, -8])\n\
    2\n>>> count_nums([1, 2, -4, -5, -6, -7, -8, 9])\n3\n>>> count_nums([1, 2, -4,\
    \ -5, -6, -7, -8, 9, 10])\n4\n>>> count_nums([1, 2, -4, -5, -6, -7, -8, 9, 10,\
    \ 11])\n5\n>>> count_nums([1, 2, -4, -5, -6, -7, -8, 9, 10, 11, 12])\n6\n>>> count_nums([1,\
    \ 2, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13])\n7\n>>> count_nums([1, 2, -4, -5,\
    \ -6, -7, -8, 9, 10, 11, 12, 13, 14])\n8\n>>> count_nums([1, 2, -4, -5, -6, -7,\
    \ -8, 9, 10, 11, 12, 13, 14, 15])\n9\n>>> count_nums([1, 2, -4, -5, -6, -7, -8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16])\n10\n>>> count_nums([1, 2, -4, -5, -6, -7, -8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17])\n11\n>>> count_nums([1, 2, -4, -5, -6, -7,\
    \ -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n12\n>>> count_nums([1, 2, -4, -5,\
    \ -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n13\n>>> count_nums([1,\
    \ 2, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n14\n\
    >>> count_nums([1, 2, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21])\n15\n>>> count_", "    count = 0\n    for x in arr\n        if\
    \ x < 0\n            count += count_nums(abs(x))\n        else\n            count\
    \ += 1\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3,\
    \ 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\n       \
    \     count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for n in arr\n        if n > 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += count_nums(x::Vector{Int64})\n\
    \        else\n            count += count_nums(x::Vector{Int64}) + 1\n       \
    \ end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2, -1, 0, 2, -4,\
    \ -6, -7, -8, -9])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1, -2, -4, -6,\
    \ -7, -8, -9])\n2\n\"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x < 0\n           \
    \ count += count_nums(x::Vector{Int64})\n        else\n            count += 1\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf no number is negative, then the function should return 0.\n\
    e.g. [1, 2, 3] has signed digits 1, 2, and 3.\n>>> count_nums([1, 2, 3])\n3\n\
    >>> count_nums([-1, 1, -2, 2, 3, -3, 4, -4, 5])\n0\n>>> count_nums([])\n0\n</text>\n\
    <code language=julia-1.5>", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += count_nums(digits(x))\n        else\n            count\
    \ += count_nums(digits(-x)) + 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-1, 1, -2, 2, -3, 3, -4, 4, -5,\
    \ 5])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an\
    \ array of integers and returns\n    the number of elements which has a sum of\
    \ digits > 0.\n    If a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -10, -100, -1000, -1000000000])\n</cell>\n<text>\nExercise: Write a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        else\n\
    \            count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1,\
    \ 2])\n3\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9])\n4\n\"\"\"",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4,\
    \ -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        else\n            count += x\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, -10, -100,\
    \ -1000, -1000000000000])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-2, -4, -6, -10, -12, -14,\
    \ -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -44, -48, -54, -58, -62, -64,\
    \ -66, -68, -72, -74, -76, -78, -84, -88, -92, -96])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1,11,-11])\n\
    </cell>\n<code language=julia-1.0>\ncount_nums([1,1,2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -5, -7, -9,\
    \ -10, -12, -14, -15, -16, -17, -18, -19, -20, -21])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -10,\
    \ -12, -14, -16, -18])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\ncount_nums([-2, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8, -9, 10])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits > 0.\nIf any number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n\
    1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1, -1, 1, -1, 1, -1])\n4\n>>>\
    \ count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1])\n5\n>>> count_nums([-1,\
    \ -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1])\n6\n>>> count_nums([-1, -1,\
    \ 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n7\n>>> count_nums([-1,\
    \ -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n8\n>>>\
    \ count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1,\
    \ 1, -1, -1, 1, -1])\n9\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n10\n>>> count_nums([-1,\
    \ -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1])\n11\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1])\n12\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1,\
    \ 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1,\
    \ 1, -1, -1, 1, -1, -1, 1, -1])\n13\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1,\
    \ 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, ", "    count = 0\n    for x in arr\n        if x > 0 \n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits > 0.\nIf no number is positive, then the\
    \ function should return 0.\ne.g. [1, 1, 2] has positive sums 1, 2, and 3.\n>>>\
    \ count_nums([1, 1, 2])\n3\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n\
    1\n>>> count_nums([-1, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22,\
    \ -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38,\
    \ -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54,\
    \ -55, -56])\n1\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12,\
    \ -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28,\
    \ -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44,\
    \ -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56])\n1\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19,\
    \ -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35,\
    \ -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51,\
    \ -52, -53, -54, -55, -56])\n1\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9,\
    \ -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25,\
    \ -26, -27, -28, -29, -30, -31, -32, -33", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for n in arr\n        if n > 0\n           \
    \ count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -7, -9, -10, -12, -15, -17, -21])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1, 11, -11])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 1, 2])\n</cell>\n<text>\nExercise\nWrite a function count_nums which takes an\
    \ array of integers and returns\n    the number of elements which has a sum of\
    \ digits > 0.\n    If a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 3, -4, 4])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits < 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8])\n4\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9])\n5\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7,\
    \ -8, 9, 10])\n6\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11])\n\
    7\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12])\n8\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13])\n9\n>>> count_nums([-1, 2, -3,\
    \ 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14])\n10\n>>> count_nums([-1, 2, -3, 4,\
    \ -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15])\n11\n>>> count_nums([-1, 2, -3,\
    \ 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16])\n12\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17])\n13\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n14\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n15\n\
    >>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20])\n16\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21])\n17\n>>> count_nums([-1, 2, -3, 4, -5,\
    \ -6, -7, -8, ", "    count = 0\n    for x in arr\n        if x > 0 \n       \
    \     count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2, -1,\
    \ 0, 2, -4, 0, 3])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1, -1, 1, -2, 2,\
    \ -3, 3, -4, 4])\n4\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7,\
    \ -8, -9])\n8\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9,\
    \ -10])\n10\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9,\
    \ -10, -11])\n12\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12])\n14\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -11, -12, -13])\n16\n>>> count_nums([-1, -1, 1, -2, 2, -3,\
    \ 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14])\n18\n>>> count_nums([-1,\
    \ -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15])\n\
    20\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, -14, -15, -16])\n22\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4,\
    \ -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17])\n24\n>>> count_nums([-1,\
    \ -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16,\
    \ -17, -18])\n26\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12, ", "    count = 0\n    for x in arr\n        if x > 0 \n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits > 0.\nIf no number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n>>> count_nums([1, 2, 3])\n0\n>>> count_nums([1, 2, -3, 4])\n1\n\
    >>> count_nums([1, 2, -3, 4, 5])\n2\n>>> count_nums([1, 2, -3, 4, -5, 6])\n3\n\
    >>> count_nums([1, 2, -3, 4, -5, 6, -7, 8])\n4\n>>> count_nums([1, 2, -3, 4, -5,\
    \ 6, -7, 8, -9])\n5\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10])\n6\n\
    >>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11])\n7\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12])\n8\n>>> count_nums([1, 2, -3, 4, -5,\
    \ 6, -7, 8, -9, 10, -11, 12, -13])\n9\n>>> count_nums([1, 2, -3, 4, -5, 6, -7,\
    \ 8, -9, 10, -11, 12, -13, 14])\n10\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8,\
    \ -9, 10, -11, 12, -13, 14, -15])\n11\n>>> count_nums([1, 2, -3, 4, -5, 6, -7,\
    \ 8, -9, 10, -11, 12, -13, 14, -15, 16])\n12\n>>> count_nums([1, 2, -3, 4, -5,\
    \ 6, -7, 8, -9, 10, -11, 12, -13, 14, -15, 16, -17])\n13\n>>> count_nums([1, 2,\
    \ -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, -13, 14, -15, 16, -17, -18])\n14\n>>>\
    \ count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, -13, 14, -15, 16, -17,\
    \ -18, -19])\n15\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12,\
    \ -13, 14, -15, 16, -17, -18, -19, -20])\n16\n>>> count_nums([1, 2, -3, 4, ",
  "    count = 0\n    for n in arr\n        if n > 0\n            count += 1\n   \
    \     end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += count_nums(digits(x))\n        else\n            count += count_nums(digits(-x))\
    \ + 1 \n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -22, -24, -23, -25, -26, -27,\
    \ -28, -29, -32, -33, -34, -35, -36, -37, -38, -39, -44, -45, -47, -48, -49, -50,\
    \ -51, -52, -53, -54, -55, -57, -58, -59, -62, -63, -64, -66, -67, -68, -69, -71,\
    \ -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -86, -87, -88,\
    \ -89, -91, -92, -93, -94, -95, -96, -99])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4,\
    \ -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits < 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n\
    1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"", "    count = 0\n    for x in arr\n \
    \       if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\nIf any number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n4\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, 1])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4,\
    \ -5, -6, -7, -8, -1, 1])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7,\
    \ -8, -1, -1, 1, 2])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8,\
    \ -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1,\
    \ 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2,\
    \ -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3,\
    \ 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4,\
    \ -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6,\
    \ -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7,\
    \ -8, -1, -1, 1, 2, -", "    count = 0\n    for x in arr\n        if x > 0 \n\
    \            count += count_nums(digits(x))\n        else\n            count +=\
    \ count_nums(digits(-x)) + 1\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums(digits(-1234))\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-1, 11, -11])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([1, 1, 2])\n</cell>\n<text>\nExercise: Write a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        else\n            count += x\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of integers and returns the number\
    \ of elements which has a sum of digits < 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n\"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n  \
    \          count += 1\n        else\n            count += abs(x)\n    end\n  \
    \  return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-1, 11,\
    \ -11])\n</cell>\n<text>\nExercise: Write a function count_nums which takes an\
    \ array of integers and returns\n    the number of elements which has a sum of\
    \ digits > 0.\n    If a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x < 0\n            count += count_nums(-x)\n     \
    \   else\n            count += 1\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.3>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.0>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x < 0\n           \
    \ count += count_nums(x::Vector{Int64})\n        else\n            count += 1\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-1,\
    \ 11, -11])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-1, 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7,\
    \ 7, -8, 8, -9, 9, -10, 10])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\n           \
    \ count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x < 0\n            count += count_nums(-x)\n     \
    \   else\n            count += 1\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-1, 1, -2, 2, 3, -3, 4, -4, 5])\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 1, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0 \n            count += 1\n        elseif x <\
    \ 0\n            count += abs(x)\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\ncount_nums([-1, 11, -11])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-1, 1, -2, 3, -4, -5, -6,\
    \ -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        else\n            count += count_nums(x::Vector{Int64})\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1, 11, -11])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-2, -1, -1, 1, 2, -3, 3,\
    \ -4, -5, -6, -7, -8, -9, -10])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += count_nums(digits(x))\n       \
    \ else\n            count += count_nums(digits(-x)) + 1\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 1, -2, 3, -4, -5, -6,\
    \ -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1, 2, 3, -4, -5,\
    \ -6, -7, -8])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -1])\n4\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -1, 0])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7,\
    \ -8, -1, 0, 1])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -1, 0, 1, 2])\n\
    4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -1, 0, 1, 2, 3])\n4\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -1, 0, 1, 2, 3, -4])\n4\n>>> count_nums([1, 2, 3,\
    \ -4, -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5])\n4\n>>> count_nums([1, 2, 3, -4,\
    \ -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5, -6])\n4\n>>> count_nums([1, 2, 3, -4,\
    \ -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5, -6, -7])\n4\n>>> count_nums([1, 2, 3,\
    \ -4, -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5, -6, -7, -8])\n4\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5, -6, -7, -8, -1])\n4\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5, -6, -7, -8, -1, 0])\n4\n>>>\
    \ count_nums([1, 2, 3, -4, -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5, -6, -7, -8, ",
  "    count_nums = sum(x -> x > 0, arr)\n    return count_nums\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-1,11,-11])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x < 0\n            count += count_nums(x::Vector{Int64})\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([-1, 1, -2, 2, 3, -3, 4, 5])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits < 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n>>> count_nums([1, 2, -3, 4, 5])\n4\n>>> count_nums([1, 2, -3, 4,\
    \ -5, 6])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, 7])\n4\n>>> count_nums([1,\
    \ 2, -3, 4, -5, -6, -7, 8])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8])\n\
    4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, 9])\n4\n>>> count_nums([1, 2,\
    \ -3, 4, -5, -6, -7, -8, -9, 10])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7,\
    \ -8, -9, -10, 11])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10,\
    \ -10, 12])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -10, -10,\
    \ 13])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -10, -10, -10,\
    \ 14])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -10, -10, -10,\
    \ -10, 15])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -10, -10,\
    \ -10, -10, -10, 16])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10,\
    \ -10, -10, -10, -10, -10, 17])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8,\
    \ -9, -10, -10, -10, -10, -10, -10, 18])\n4\n>>> count_nums([1, 2, -3, 4, -5,\
    \ -6, -7, -8, -9, -10, -10, -10, -10, ", "    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        elseif x < 0\n            count += abs(x)\n       \
    \ end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x < 0\n            count += count_nums(-x)\n        else\n \
    \           count += 1\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, 3, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14,\
    \ -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,\
    \ -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1, 11, -11])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 1, 2])\n</cell>\n<text>\nExercise\nWrite a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits > 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\ne.g. [1, 1, 2] has signed digits 1, 2, and 3.\ne.g. [-2,\
    \ -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed\
    \ digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\n\
    e.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2]\
    \ has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1,\
    \ 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2,\
    \ -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed\
    \ digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\n\
    e.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2]\
    \ has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1,\
    \ 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2,\
    \ -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed\
    \ digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\n\
    e.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2]\
    \ has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1,\
    \ 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2,\
    \ -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed\
    \ digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\n\
    e.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2]\
    \ has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, ",
  "    count = 0\n    for x in arr\n        if x > 0\n            count += 1\n   \
    \     end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        else\n            count\
    \ += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 11, -11])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22,\
    \ -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits < 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n\"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n  \
    \          count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, 6])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of elements in a\
    \ vector that have a sum greater than 0.", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits > 0.\nIf any number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n\
    1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1, -1, 1, -1, 1, -1])\n2\n>>>\
    \ count_nums([-1, -1, 1, -1, 1, -1, 1])\n4\n>>> count_nums([-1, -1, 1, -1, 1,\
    \ -1, 2, 1])\n5\n>>> count_nums([-1, -1, 1, -1, 1, -1, 2, 1, 2, 1])\n6\n>>> count_nums([-1,\
    \ -1, 1, -1, 1, -1, 2, 1, 2, 1, 2, 1])\n7\n>>> count_nums([-1, -1, 1, -1, 1, -1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1])\n8\n>>> count_nums([-1, -1, 1, -1, 1, -1, 2, 1, 2,\
    \ 1, 2, 1, 2, 1, 2, 1])\n9\n>>> count_nums([-1, -1, 1, -1, 1, -1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1])\n10\n>>> count_nums([-1, -1, 1, -1, 1, -1, 2, 1, 2,\
    \ 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1])\n11\n>>> count_nums([-1, -1, 1, -1, 1, -1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1])\n12\n>>> count_nums([-1,\
    \ -1, 1, -1, 1, -1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1])\n13\n>>> count_nums([-1, -1, 1, -1, 1, -1, 2, 1, 2, 1, 2, 1, 2, 1, 2,\
    \ 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1])\n14\n>>> count_nums([-1,\
    \ -1, 1, -1, 1, -1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, ", "    count = 0\n    for x in arr\n        if x\
    \ > 0 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,1,2])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,3])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>", "    count = 0\n    for x in arr\n        if\
    \ x > 0 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-1,11,-11])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        else\n\
    \            count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 1,\
    \ -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for n in arr\n\
    \        if n >= 0\n            count += n\n        else\n            count +=\
    \ n%10\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1,11,-11])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        else\n            count +=\
    \ x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000,\
    \ -10000, -100000])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, -10,\
    \ -100, -1000, -1000000000, -10000, -100000, -100001])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000,\
    \ -10000, -100000, -100001])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000, -10000,\
    \ -100000, -100001])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000,\
    \ -10000, -100000, -100001])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000, -10000,\
    \ -100000, -100001])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -100000000",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count_nums = 0\n    for x in arr\n        if x > 0 \n\
    \            count_nums += 1\n        else\n            count_nums -= 1\n    end\n\
    \    return count_nums\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        else\n            count += x\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -4, -6, -10, -12, -14,\
    \ -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -4, -6, -10,\
    \ -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -4,\
    \ -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2, -1, 0, 2, -4,\
    \ -6, -7, -8, 9])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1, 2, -3, 4])\n\
    2\n>>> count_nums([1, 2, -3, 4, 5])\n4\n>>> count_nums([1, 2, -3, 4, 5, 6])\n\
    5\n>>> count_nums([1, 2, -3, 4, 5, 6, 7])\n6\n>>> count_nums([1, 2, -3, 4, 5,\
    \ 6, 7, 8])\n7\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9])\n8\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10])\n9\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11])\n10\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12])\n11\n\
    >>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])\n12\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])\n13\n>>> count_nums([1, 2, -3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])\n14\n>>> count_nums([1, 2, -3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])\n15\n>>> count_nums([1, 2, -3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])\n16\n>>> count_nums([1, 2, -3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n17\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n18\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n19\n\
    >>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21])\n20\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22])\n21\n>>> count_nums([1, 2, -3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23])\n22\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, ",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-1, 1, -2, 2, 3, -3, 3, -4, 4, -5, 5])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1,\
    \ 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2,\
    \ 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1,\
    \ -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1,\
    \ 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2,\
    \ -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0,\
    \ 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1,\
    \ 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2,\
    \ 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1,\
    \ -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1,\
    \ 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2,\
    \ -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0,\
    \ 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1,\
    \ 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2,\
    \ 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1,\
    \ -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1,\
    \ 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2,\
    \ -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0,\
    \ 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1,\
    \ 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2,\
    \ 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        else\n            count\
    \ += abs(x)\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 0, 2, -5, -10, -15, -20, -25, -27, -29, -30, -32, -33])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for n in arr\n        if n > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -5, -7, -9, -10, -12, -15, -17, -21])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -15, -17, -21])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        else\n            count += x\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1, 2, -3, 4, -5,\
    \ -6, -7, -8])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n4\n\
    >>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, 9])\n4\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, 9, 10])\n4\n>>> count_nums([-1, -1, 1, 2, -3,\
    \ 4, -5, -6, -7, -8, 9, 10, 11])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8, 9, 10, 11, 12])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6,\
    \ -7, -8, 9, 10, 11, 12, 13])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6,\
    \ -7, -8, 9, 10, 11, 12, 13, 14])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8, 9, 10, 11, 12, 13, 14, 15])\n4\n>>> count_nums([-1, -1, 1, 2, -3,\
    \ 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16])\n4\n>>> count_nums([-1, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17])\n4\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n4\n\
    >>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, -1, 1, 2, -3, 3,\
    \ -4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, -9])\n4\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7,\
    \ -8, -9, -10])\n5\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11])\n\
    6\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12])\n7\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13])\n8\n>>> count_nums([-1, 2,\
    \ -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14])\n9\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15])\n10\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16])\n11\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17])\n12\n\
    >>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15,\
    \ -16, -17, -18])\n13\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12, -13, -14, -15, -16, -17, -18, -19])\n14\n>>> count_nums([-1, 2, -3,\
    \ 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20])\n\
    15\n>>> count_", "    count = 0\n    for x in arr\n        if x < 0\n        \
    \    count += abs(x)\n        else\n            count += 1\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4,\
    \ -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.0>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        else\n\
    \            count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, ", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        else\n            count += x\n    end\n  \
    \  return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -5,\
    \ -7, -9, -10, -12, -14, -16, -17, -19, -20, -22, -24, -26, -27, -29, -32, -34,\
    \ -36, -39, -42, -44, -47, -49, -54, -56, -58, -61, -64, -66, -69, -72, -74, -77,\
    \ -79, -82, -84, -87, -89, -92, -94])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x < 0\n            count += abs(x)\n        else\n         \
    \   count += 1\n    end\n    return count\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits > 0.\nIf no number is positive, then the function\
    \ should return 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, 3])\n0\n>>> count_nums([-1, 2, -3])\n0\n>>> count_nums([-1, 2, -3, 4])\n\
    0\n>>> count_nums([-1, 2, -3, 4, 5])\n0\n>>> count_nums([-1, 2, -3, 4, 5, 6])\n\
    0\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7])\n0\n>>> count_nums([-1, 2, -3, 4, 5,\
    \ 6, 7, 8])\n0\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9])\n0\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10])\n0\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11])\n1\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12])\n\
    1\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])\n1\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])\n1\n>>> count_nums([-1, 2, -3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])\n1\n>>> count_nums([-1, 2, -3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])\n1\n>>> count_nums([-1, 2, -3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])\n1\n>>> count_nums([-1, 2, -3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n1\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n1\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n1\n>>>\
    \ count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21])\n1\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22])\n1\n>>> count_nums([-1, 2, -3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, ", "    count =\
    \ 0\n    for x in arr\n        if x > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf all elements in the array are negative, then the function\
    \ should return 0.\ne.g. [-2, -1, 1, 2, -3, 4, -5, 6] has signed digits -1, 2,\
    \ and 3.\n>>> count_nums([-1, 11, -11])\n0\n>>> count_nums([1, 1, 2])\n3\n>>>\
    \ count_nums([-2, -1, 1, 2, -3, 4, -5, 6])\n3\n\"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>>\
    \ count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -10, -15, -20, -25])\n</cell>\n<text>\nExercise\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        else\n            if\
    \ x < 0\n                count += abs(x)\n            else\n                count\
    \ += x\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of positive integers less than or equal to a given number.",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1,\
    \ 2])\n3\n\"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n     \
    \       count += count_nums(digits(x))\n        else\n            count += count_nums(digits(-x))\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count_nums = zeros(Int64, length(arr))\n\
    \    for num in arr\n        if num < 0\n            count_nums[num < 0 ? -num\
    \ : num] += 1\n        else\n            count_nums[num] += 1\n        end\n \
    \   end\n    return count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ -1, 1, 1])\n2\n>>> count_nums([-1, -1, 1, -1, 1])\n2\n>>> count_nums([-1, -1,\
    \ 1, -1, -1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, 1])\n2\n>>> count_nums([-1,\
    \ -1, 1, -1, -2, -1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2, 1])\n2\n>>> count_nums([-1,\
    \ -1, 1, -1, -2, -2, -1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -2, 1])\n\
    2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -2, -1])\n2\n>>> count_nums([-1, -1,\
    \ 1, -1, -2, -2, -2, -2, 1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -2, -2,\
    \ -1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -2, -2, -2, 1])\n2\n>>> count_nums([-1,\
    \ -1, 1, -1, -2, -2, -2, -2, -2, -1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2,\
    \ -2, -2, -2, -2, 1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -2, -2, -2, -2,\
    \ -1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -2, -2, -2, -2, -2, 1])\n2\n\
    >>> count_nums([-1, -1, 1, -1, -2, -2, -2, -2, -2, -2, -2, -1])\n2\n>>> count_nums([-1,\
    \ -1, 1, -1, -2, -2, -2, -2, -2, -2, -2, -2, 1])\n2\n>>> count_nums([-1, -1, 1,\
    \ -1, -2, -2, -2, -2, -2, -2, -2, -2, -1])\n2\n>>> count_nums([-1, -1, 1, -1,\
    \ -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1])\n2\n>>> count_nums([-1, -1, 1, -1,\
    \ -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1])\n2\n>>> count_num", "    count\
    \ = 0\n    for x in arr\n        if x > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -8])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        else\n            count += x\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4, -5, -6,\
    \ -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23,\
    \ -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39,\
    \ -40, -41, -42, -43, -44, -45])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\
    \ 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40, 41, 42, 43, 44, 45])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, ", "    count =\
    \ 0\n    for x in arr\n        if x > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1,\
    \ 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3,\
    \ 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1,\
    \ 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3,\
    \ 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1,\
    \ 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3,\
    \ 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<code language=", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, -2])\n2\n>>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21])\n\
    4\n>>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21, -23])\n5\n\
    >>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21, -23, -24])\n6\n\
    >>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21, -23, -24, -26])\n\
    7\n>>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21, -23, -24, -26,\
    \ -28])\n8\n>>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21, -23,\
    \ -24, -26, -28, -30])\n9\n>>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16,\
    \ -18, -21, -23, -24, -26, -28, -30, -32])\n10\n>>> count_nums([1, 2, -2, -4,\
    \ -6, -10, -12, -14, -16, -18, -21, -23, -24, -26, -28, -30, -32, -34])\n11\n\
    >>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21, -23, -24, -26,\
    \ -28, -30, -32, -34, -36])\n12\n>>> count_nums([1, 2, -2, -4, -6, -10, -12, -14,\
    \ -16, -18, -21, -23, -24, -26, -28, -30, -32, -34, -36, -38])\n13\n>>> count_nums([1,\
    \ 2, -2, -4, -6, -10, -12, -14, -16, ", "    count = 0\n    for x in arr\n   \
    \     if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n</text>\n<code language=julia-1.5>",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-1, 1, -2, 3, -4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4,\
    \ -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1, 2, -3, 4, -5,\
    \ -6, -7, -8])\n2\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9])\n2\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10])\n2\n>>> count_nums([-1, 2, -3, 4, -5, -6,\
    \ -7, -8, 9, 10, 11])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10,\
    \ 11, 12])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13])\n\
    3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14])\n3\n\
    >>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15])\n3\n\
    >>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16])\n\
    3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7,\
    \ -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n3\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21])\n\
    3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, ", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 1, -2, 2, 3, -3, 4, -4,\
    \ 5])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an\
    \ array of integers and returns\n    the number of elements which has a sum of\
    \ digits > 0.\n    If a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        else\n\
    \            count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x < 0\n           \
    \ count += count_nums(x::Vector{Int64})\n        else\n            count += 1\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for n in\
    \ arr\n        if n > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        elseif x < 0\n            count += abs(x)\n    \
    \    else\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1, 11, -11])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        else\n\
    \            count += count_nums(x::Vector{Int64})\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        else\n\
    \            count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0 \n            count += 1\n        else\n   \
    \         count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-2, -1, 1, 2, -3, 1, 3, -4, 1])\n</cell>\n<text>\nExercise: Write\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2, -1,\
    \ 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-2, -4, -6, -8])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4,\
    \ 5])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6, -7, 8])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6, -7, 8, -9,\
    \ 10])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6, -7,\
    \ 8, -9, 10, -11])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4,\
    \ -5, 6, -7, 8, -9, 10, -11, -12])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, 6, -7, 8, -9, 10, -11, -12, -13])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, 6, -7, 8, -9, 10, -11, -12, -13, -14])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6, -7, 8, -9, 10, -11,\
    \ -12, -13, -14, -15])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2,\
    \ 3, -4, -5, 6, -7, 8, -9, 10, -11, -12, -13, -14, -15, -16])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6, -7, 8, -9, 10, -11, -12,\
    \ -13, -14, -15, -16, -17])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, 6, -7, 8, -9, 10, -11, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6, -7, 8, -9, 10, -11,\
    \ -12, -13, -14, -15, -16, -17, -18, -19])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, 6, -7, 8, -9, 10, -11, -12, -13, -14, -15, -16, -17,\
    \ -18, -19, -20", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27,\
    \ -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43,\
    \ -44, -45])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += count_nums(digits(x))\n        else\n            count += count_nums(digits(-x))\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(digits(-123))\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of elements\
    \ in a vector which has \na sum of digits > 0.\nIf an element in the vector is\
    \ negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\n>>> count_nums([-2, -1, 0, 1, 2])\n1\n>>> count_nums([-1,\
    \ 11, -11])\n2\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1, 2, 3])\n3\n>>>\
    \ count_nums([1, 2, -3, 4])\n2\n>>> count_nums([1, 2, -3, 4, 5])\n3\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6])\n2\n>>> count_nums([1, 2, -3, 4, -5, 6, 7])\n3\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, 9])\n\
    3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10])\n3\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, 11])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6,\
    \ -7, 8, -9, 10, 11, 12])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10,\
    \ 11, 12, 13])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12,\
    \ 13, 14])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12, 13,\
    \ 14, 15])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12, 13,\
    \ 14, 15, 16])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7,\
    \ 8, -9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n3\n>>> count_nums([1, 2, -3,\
    \ 4, -5, 6, -7, 8, -9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n3\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12, ", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-2, -1, 1, 2, -3, 4, -5,\
    \ 6])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an\
    \ array of integers and returns\n    the number of elements which has a sum of\
    \ digits > 0.\n    If a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        else\n            if x < 0\n                count\
    \ += abs(x)\n            else\n                count += x\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4,\
    \ -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -32, -34, -36, -38, -40,\
    \ -42, -44, -46])\n</cell>\n<text>\nExercise\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If no number is negative, then its first signed digit will be negative:\ne.g.\
    \ -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1, 2, 3])\n3\n>>>\
    \ count_nums([-1, -2, -3])\n3\n>>> count_nums([1, 2, -3, 4])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, 5])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10])\n\
    2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21])\n\
    2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, ", "    count = 0\n    for n in\
    \ arr\n        if n > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3,\
    \ 1, 3, -4, 1])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-2, -1, 1, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 3, -4, 4])\n2\n\"\"\"", "    count = 0\n    for x in arr\n   \
    \     if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_nums([-1, 11, -11])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -4, -6, -7, -8])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -7, -8, -9, -10, -11])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -7, -8, -9, -10, -11, -12, -13])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -7, -8, -9, -10, -11, -12, -13, -14])\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-2, -4, -6, -7, -8, -9, -10, -11, -12, -13,\
    \ -14, -15])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -4, -6, -7,\
    \ -8, -9, -10, -11, -12, -13, -14, -15, -16])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17])\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-2, -4, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -4, -6, -7, -8, -9, -10, -11, -12,\
    \ -13, -14, -15, -16, -17, -18, -19, -20])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18,\
    \ -19, -20, -21])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -4, -6,\
    \ -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22])",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"", " \
    \   count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n \
    \       end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14,\
    \ -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\""]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

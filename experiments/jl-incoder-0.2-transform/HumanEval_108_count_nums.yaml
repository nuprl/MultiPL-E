name: HumanEval_108_count_nums
language: jl
prompt: "\"\"\"\n    Write a function count_nums which takes an array of integers\
  \ and returns\n    the number of elements which has a sum of digits > 0.\n    If\
  \ a number is negative, then its first signed digit will be negative:\n    e.g.\
  \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
  \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
  \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3,\
  \ 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
  \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\
  \t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
completions: ["    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-1,11,-11])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for n in arr\n\
    \        if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-1, 1, -2, 2, -3, 3, -4,\
    \ 4, -5, 5])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1, -1, 1, 2, -3,\
    \ 4])\n2\n>>> count_nums([-1, -1, 1, 2, -3, 4, 5])\n3\n>>> count_nums([-1, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6,\
    \ -7, -8, -9])\n5\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10])\n\
    6\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11])\n7\n>>>\
    \ count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12])\n8\n>>>\
    \ count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13])\n\
    9\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13,\
    \ -14])\n10\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, -14, -15])\n11\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12, -13, -14, -15, -16])\n12\n>>> count_nums([-1, -1, 1, 2, -3,\
    \ 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17])\n13\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17,\
    \ -18])\n14\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, ", "    count = 0\n    for x in arr\n        if x > 0 \n         \
    \   count += 1\n        else\n            count += count_nums(x::Vector{Int64})\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits > 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n</text>\n<code\
    \ language=julia-1.5>", "    count = 0\n    for x in arr\n        if x > 0 \n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, 6])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += count_nums(digits(x))\n        else\n            count += count_nums(digits(-x))\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(digits(-123))\n\
    </cell>\n<code language=julia-1.5>\ncount_nums(digits(-1234))\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14,\
    \ -16, -18, -20, -22, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44, -46])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -24,\
    \ -26, -28, -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1,\
    \ 2])\n3\n>>> count_nums([-1, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26,\
    \ -28, -32, -34, -36, -38, -40, -42, -44, -46])\n2\n>>> count_nums([-1, -4, -6,\
    \ -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44,\
    \ -46])\n2\n>>> count_nums([-1, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26,\
    \ -28, -32, -34, -36, -38, -40, -42, -44, -46])\n2\n>>> count_nums([-1, -4, -6,\
    \ -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44,\
    \ -46])\n2\n>>> count_nums([-1, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26,\
    \ -28, -32, -34, -36, -38, -40, -42, -44, -46])\n2\n>>> count_nums([-1, -4, -6,\
    \ -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44,\
    \ -46])\n2\n>>> count_nums([-1, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26,\
    \ -28, -32, -34, -36, -38, -40, -42, -44, -46])\n2\n>>> count_nums([-1, -4, -6,\
    \ -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -", "    count =\
    \ 0\n    for x in arr\n        if x > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        else\n            count\
    \ += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        else\n            count +=\
    \ count_nums(x::Vector{Int64})\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14, -16, -18, -21])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-1, 11, -11])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n  \
    \  for x in arr\n        if x > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2, -1, 0, 1, 2])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\n\
    Exercise: Write a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits < 0.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 2\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -2, 3, -3, 4, -4, 5, -5, 6, -6,\
    \ 7, -7, 8, -8, 9])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1])\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\""]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

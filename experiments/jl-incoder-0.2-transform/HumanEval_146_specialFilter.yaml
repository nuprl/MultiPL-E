name: HumanEval_146_specialFilter
language: jl
prompt: "\"\"\"Write a function that takes an array of numbers as input and returns\
  \ \n    the number of elements in the array that are greater than 10 and both \n\
  \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
  \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
  \ -3, 45, 21, 109])\n    2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
  \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
  \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
  \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
  \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
completions: ["    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ isOdd(n) && isOdd(floor(n/10))\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    @time println(specialFilter([15, -73, 14, -15]))\n@time println(specialFilter([33,\
    \ -2, -3, 45, 21, 109]))\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n         \
    \   count += 1\n            if n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n      \
    \          count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.0>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.0>\n@time\
    \ specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise: Write a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10\n            if isOdd(n) &&\
    \ isOdd(n-1)\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0 && n % 1 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n         \
    \   if n % 2 == 1\n                count += 1\n            end\n            if\
    \ n % 2 == 0\n                count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\n# Run this cell to test your function\
    \ with the above example\n@test specialFilter([15, -73, 14, -15]) == 1;\n@test\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2;\n</cell>\n<text>\nQuestion 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n@time\
    \ specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \"Test failed\"\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2 \"Test failed\"\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  0\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            count += 1\n            if num % 2 == 1 && num % 2 == 0\n       \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.3>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10 && num % 2 == 1 && num % 2 == 1 && num % 2 != 0\n       \
    \     count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\n# Run this cell to test your function above\n@test specialFilter([15,\
    \ -73, 14, -15]) == 1 # should be 1\n@test specialFilter([33, -2, -3, 45, 21,\
    \ 109]) == 2 # should be 2\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10\n            if isOdd(n) &&\
    \ isOdd(n-1)\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.4>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14,\
    \ -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\
    \"\"", "    count = 0\n    for num in nums\n        if num > 10\n            if\
    \ num % 2 == 1\n                if num % 10 == 1\n                    count +=\
    \ 1\n                end\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\n# Run this cell to check your answer\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nQuestion 4\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (2, 4, 6, 8, 10).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-0.6>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14,\
    \ -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 0 && n % 1 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 && num\
    \ % 2 == 0 && num > floor(num/10)\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14,\
    \ -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\
    \"\"", "    count = 0\n    for num in nums\n        if num > 10 && num % 2 ==\
    \ 1 && num % 2 == 1 && num % 2 != 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 1 && num % 2 == 0\n                count += 1\n   \
    \         end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function with the above example\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\
    \ \n</cell>\n<text>\nPart 2: Finding Primes\nThe previous two parts explored the\
    \ use of the modulo operator to find \nprime numbers. In this section you will\
    \ learn to find prime numbers, \nwhich can be done using the Sieve of Eratosthenes.\
    \ \nThe Sieve of Eratosthenes works by using a prime array \nto store multiples\
    \ of the primes we wish to test. \nWhen we find a number in the array that is\
    \ a multiple of \na known prime, we remove it from the array. \nThis process continues\
    \ until only primes remain in the array. \nOnce we have the array of primes, we\
    \ simply count the number of \nprimes that we find in it.", "    count = 0\n \
    \   for n in nums\n        if n > 10\n            if n % 2 == 1\n            \
    \    count += 1\n            end\n            if n % 2 == 0\n                count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.4>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10\n            if mod(n, 2) == 1\n                count += 1\n\
    \            end\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                count += 1\n  \
    \          end\n            if n % 2 == 0\n                count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n@time\
    \ specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.3>\n@time\
    \ specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this\
    \ cell to test your function with the above example\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\
    \ \n</cell>\n<text>\nPart 3: Finding Primes (3 Points)\nNow that you have seen\
    \ how to use Julia's built-in functions, we will expand on it by writing our own\
    \ functions. One of the most important parts of Julia's syntax is its ability\
    \ to define functions. In Julia, functions are defined using the function keyword.\
    \ Let's see how we can define our own functions.", "    count = 0\n    for n in\
    \ nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0 && n % 10 == 1 && n % 10\
    \ == 9 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise: Write a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            if num % 2 == 1\n\
    \                if num % 10 == 1\n                    count += 1\n          \
    \      end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (2, 4, 6, 8, 10).\n    For example:\n \
    \   >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10\n            if isOdd(n) && isOdd(n-1)\n                count\
    \ += 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 1 && num\
    \ % 3 == 1 && num % 5 == 1\n                count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.4>\n# Test your function\
    \ with the above examples:\nprintln(specialFilter([15, -73, 14, -15]))\nprintln(specialFilter([33,\
    \ -2, -3, 45, 21, 109]))\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are divisible by 7 and are \n    not divisible by either 7 or 15.\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    0\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    # Run this cell to load the tests.\ninclude(\"./Tests.jl\")\n</cell>\n<code language=julia-1.4>\n\
    @test specialFilter([15, -73, 14, -15]) == 1 \n@test specialFilter([33, -2, -3,\
    \ 45, 21, 109]) == 2 \n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n         \
    \   count += 1\n            if n % 2 == 1\n                count += 1\n      \
    \          if n % 4 == 1\n                    count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.0>\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\
    \ \n</cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.3>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.3>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise: Write a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            count += 1\n    \
    \        if num % 2 == 1 && num % 3 == 1 && num % 5 == 1\n                count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    @assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        count += 1\n            if n % 2 == 1\n                count += 1\n \
    \               if n % 4 == 1\n                    count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.4>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.4>\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                end\n            end\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        count += 1\n            if n % 2 == 1\n                count += 1\n \
    \               if n % 4 == 1\n                    count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise: Write a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 1\n                if num % 10\
    \ == 1\n                    count += 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>",
  "    count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10\n            count += 1\n \
    \           if n % 2 == 1\n                count += 1\n                if n %\
    \ 4 == 1\n                    count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.0>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nWrite a function that takes an array of numbers as input and returns \n\
    \    the number of elements in the array that are greater than 10 and both \n\
    \    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        count += 1\n            if n % 2 == 1 && n % 3 == 1\n               \
    \ count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.4>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10\n            count += 1\n            if n % 2 == 1\n       \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    # Run this cell to test your function with the above example\n@test specialFilter([15,\
    \ -73, 14, -15]) == 1 # should return 1\n@test specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2 # should return 2\n</cell>\n<text>\nQuestion 2.\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (2, 4, 6, 8, 10).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  1\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        if n % 2 == 1\n                if n % 4 == 1\n                    count\
    \ += 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\n@time specialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<code language=julia-1.3>\n@time specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3: Write a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function with\
    \ the above example\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 1 && num\
    \ % 3 == 1 && num % 5 == 1\n                count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n     \
    \           count += 1\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.3>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n\
    \                    count += 1\n                end\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1 \"First element should be 1\"\n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \"Second element should be 2\"\
    \n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            count += 1\n    \
    \        if num % 2 == 1 && num % 3 == 1 && num % 5 == 1\n                count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 2 == 1\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        if n % 2 == 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this\
    \ cell to test your function\n@assert specialFilter([15, -73, 14, -15]) == 1 \n\
    @assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # TEST Write a function that takes an array of numbers as input and returns \n\
    # the number of elements in the array that are greater than 10 and both \n# first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\n# >>>\
    \ specialFilter([15, -73, 14, -15])\n# 1\n# >>> specialFilter([33, -2, -3, 45,\
    \ 21, 109])\n# 2\n</cell>\n<code language=julia-1.5>\n# Write a function that\
    \ takes an array of numbers as input and returns \n# the number of elements in\
    \ the array that are greater than 10 and both \n# first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n# For example:\n# >>> specialFilter([15, -73, 14,\
    \ -15])\n# 1\n# >>> specialFilter([33, -2, -3, 45, 21, 109])\n# 2\n</cell>\n<code\
    \ language=julia-1.5>\n# TEST Write a function that takes an array of numbers\
    \ as input and returns \n# the number of elements in the array that are greater\
    \ than 10 and both \n# first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n# For example:\n# >>> specialFilter([15, -73, 14, -15])\n# 1\n# >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n# 2\n</cell>\n<code language=julia-1.5>\n# Write a function\
    \ that takes an array of numbers as input and returns \n# the number of elements\
    \ in the array that are greater than 10 and both \n# first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n# For example:\n# >>> specialFilter([15,\
    \ -73, 14, -15])\n# 1\n# >>> specialFilter([33, -2, -3, 45, 21, 109])\n# 2\n</cell>\n\
    <code language=julia-1.5>\n# TEST Write a function that takes an array of numbers\
    \ as input and returns \n# the number of elements in the array that are greater\
    \ than 10 and both \n# first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n# For example:\n# >>> specialFilter([15, -73, 14, -15])\n# 1\n# >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n# 2\n</cell>\n<code language=julia-1.5>\n# Write a function\
    \ that takes an array of numbers as input and returns \n# the number of elements\
    \ in the array that are greater than 10 and both \n# first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n# For example:\n# ", "    count = 0\n   \
    \ for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    4.2 Exercise: Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15]) == 1 \n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2 \n    \"\"\"", "    count = 0\n    for n in nums\n  \
    \      if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        count += 1\n            if n % 2 == 1\n                count += 1\n \
    \       end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        count += 1\n            if n % 2 == 1\n                count += 1\n \
    \               if n % 4 == 1\n                    count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n\
    \                    count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.3>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.3>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>",
  "    count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1\n                if num % 10 == 1\n                    count += 1\n   \
    \             end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            count += 1\n    \
    \        if num % 2 == 1 && num % 3 == 1 && num % 5 == 1\n                count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    # Run this cell to test your solution\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (2, 4, 6, 8, 10).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            count += 1\n            if num % 2 == 0 && num % 2 != 1\n       \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-0.6>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-0.6>\nspecialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-0.6>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-0.6>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.4>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 && n\
    \ % 9 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function with the above example\n@test specialFilter([15,\
    \ -73, 14, -15]) == 1 # should be 1\n@test specialFilter([33, -2, -3, 45, 21,\
    \ 109]) == 2 # should be 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  0\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 1 && num % 3 == 1 && num % 5 == 1\n               \
    \ count += 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 1\n                if num % 3\
    \ == 1\n                    if num % 5 == 1\n                        count +=\
    \ 1\n                    end\n                end\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14,\
    \ -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.0>\n@time\
    \ specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        count += 1\n            if n % 2 == 1 && n % 3 == 1\n               \
    \ count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n\
    \                    count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1\n                if num % 10 == 1\n                    count += 1\n   \
    \             end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-0.6>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-0.6>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-0.6>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-0.6>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 0 && num % 3 != 0\n          \
    \      count += 1\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 1\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-0.6>\n@time filterSpecial([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-0.6>\n@time filterSpecial([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    # Test your function with the example inputs (it should return 2)\n@test specialFilter([15,\
    \ -73, 14, -15]) == 2\n@test specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n\
    <text>\nProblem 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are divisible by 7 and\
    \ \n    the first and last digits are both even numbers.\n    For example:\n \
    \   >>> specialFilter([15, 14, -7, -5, -9, 11])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            if num % 2 == 0 &&\
    \ num % 3 == 0 && num % 5 == 0\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.0>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise: Write\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 1\n                if num % 10 == 1\n             \
    \       count += 1\n                end\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.0>", "    count = 0\n\
    \    for num in nums\n        if num > 10 && num % 2 == 1 && num % 2 == 1 && num\
    \ % 2 != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n# Run this cell to test your function with\
    \ the above example\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nPart 4: Finding\
    \ Primes\nThe previous two functions should have been self-explanatory, but just\
    \ in case...", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            count += 1\n    \
    \        if num % 2 == 1 && num % 3 == 1 && num % 5 == 1\n                count\
    \ += 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-0.6>\nspecialFilter([15, -73, 14, -15])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter([15, -73, 14, -15]) == 1;\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2;\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  0\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        count += 1\n            if n % 2 == 1\n                count += 1\n \
    \               if n % 4 == 1\n                    count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise: Write a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n     \
    \       if num % 2 == 0\n                if num % 10 == 1 && num % 100 != 11\n\
    \                    count += 1\n                end\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 4\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14,\
    \ -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10\n            if n\
    \ % 2 == 1\n                if n % 4 == 1\n                    count += 1\n  \
    \              end\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @time filterSpecial([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n\
    @time filterSpecial([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 1 && num\
    \ % 3 == 1 && num % 5 == 1\n                count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n         \
    \   if n % 2 == 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n# Run this\
    \ cell to check your answer\n@assert specialFilter([15, -73, 14, -15]) == 1 \n\
    @assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nPart\
    \ 3: Finding Primes\nThe previous two parts required us to find all the prime\
    \ numbers less than a certain number. Here we will extend the previous example\
    \ to find all the prime numbers less than 1,000,000. Below, we implement a sieve\
    \ of Eratosthenes to find all the prime numbers less than 1,000,000.", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            if num % 2 == 1\n\
    \                if num % 10 == 1\n                    count += 1\n          \
    \      end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        if n % 2 == 1\n                count += 1\n            else\n       \
    \         if n % 3 == 1\n                    count += 1\n                else\n\
    \                    if n % 5 == 1\n                        count += 1\n     \
    \               else\n                        if n % 7 == 1\n                \
    \            count += 1\n                        else\n                      \
    \      if n % 9 == 1\n                                count += 1\n           \
    \                 else\n                                if n % 11 == 1\n     \
    \                               count += 1\n                                else\n\
    \                                    if n % 13 == 1\n                        \
    \                count += 1\n                                    else\n      \
    \                                  if n % 15 == 1\n                          \
    \                  count += 1\n                                        else\n\
    \                                            if n % 17 == 1\n                \
    \                                count += 1\n                                \
    \            else\n                                                if n % 19 ==\
    \ 1\n                                                    count += 1\n        \
    \                                        else\n                              \
    \                      if n % 21 == 1\n                                      \
    \                  count += 1\n                                              \
    \      else\n                                                        if n % 23\
    \ == 1\n                                                            count += 1\n\
    \                                                        else\n              \
    \                                              if n % 25 == 1\n              \
    \                                                  count += 1\n              \
    \                                              else\n                        \
    \                                        if n % 27 == 1\n                    \
    \                                                count += 1\n                \
    \                                                else\n                      \
    \                                              if n % 29 == 1\n              \
    \                                                          count += 1\n      \
    \                                                              else\n        \
    \                                                if n % 31 == 1\n            \
    \                                                count += 1\n                \
    \                                        else\n                              \
    \                              if n % 33 == 1\n                              \
    \                                  count += 1\n                              \
    \                              else\n                                        \
    \                        if n % 35 == 1\n                                    \
    \                                count += 1\n                                \
    \                                else\n                                      \
    \                              if n % 37 == 1\n                              \
    \                                          count += 1\n                      \
    \                                              else\n                        \
    \                                if n % 39 == 1\n                            \
    \                                count += 1\n                                \
    \                        else\n                                              \
    \              if n % 41 == 1\n                                              \
    \                  count += 1\n                                              \
    \              else\n                                                        \
    \        if n % 43 == 1\n                                                    \
    \                count += 1\n                                                \
    \                else\n                                                      \
    \              if n % 45 == 1\n                                              \
    \                          count += 1\n                                      \
    \                              else\n                                        \
    \                if n % 47 == 1\n                                            \
    \                count += 1\n                                                \
    \        else\n                                                            if\
    \ n % 49 == 1\n                                                              \
    \  count += 1\n                                                            else\n\
    \                                                                if n % 51 ==\
    \ 1\n                                                                    count\
    \ += 1\n                                                                else\n\
    \                                                                    if n % 53\
    \ == 1\n                                                                     \
    \   count += 1\n                                                             \
    \       else\n                                                        if n % 55\
    \ == 1\n                                                            count += 1\n\
    \                                                        else\n              \
    \                                              if n % 57 == 1\n              \
    \                                                  count += 1\n              \
    \                                              else\n                        \
    \                                        if n % 59 == 1\n                    \
    \                                                count += 1\n                \
    \                                                else\n                      \
    \                                              if n % 61 == 1\n              \
    \                                                          count += 1\n      \
    \                                                              else\n        \
    \                                                if n % 63 == 1\n            \
    \                                                count += 1\n                \
    \                                        else\n                              \
    \                              if n % 65 == 1\n                              \
    \                                  count += 1\n                              \
    \                              else\n                                        \
    \                        if n % 67 == 1\n                                    \
    \                                count += 1\n                                \
    \                                else\n                                      \
    \                              if n % 69 == 1\n                              \
    \                                          count += 1\n                      \
    \                                              else\n                        \
    \                                if n % 71 == 1\n                            \
    \                                count += 1\n                                \
    \                        else\n                                              \
    \              if n % 73 == 1\n                                              \
    \                  count += 1\n                                              \
    \              else\n                                                        \
    \        if n % 75 == 1\n                                                    \
    \                count += 1\n                                                \
    \                else\n                                                      \
    \              if n % 77 == 1\n                                              \
    \                          count += 1\n                                      \
    \                              else\n                                        \
    \                if n % 79 == 1\n                                            \
    \                ", "    count = 0\n    for n in nums\n        if n > 10 && n\
    \ % 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1 \"Your function should return 1\"\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \"Your function should return 2\"\n</cell>\n<text>\n\
    Problem 4\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are divisible by 7 and \n   \
    \ both first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    0\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.4>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10\n            if n % 2 == 1\n                count += 1\n   \
    \         end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function with the above example\n@test specialFilter([15,\
    \ -73, 14, -15]) == 1 \n@test specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n\
    </cell>\n<text>\nQuestion 2.\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    0\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.0>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            count += 1\n            if num % 2 == 0 && num % 2 != 1\n       \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.3>\n# Run this cell to load the tests.\ninclude(\"./Tests.jl\"\
    )\n</cell>\n<code language=julia-1.3>\n@test specialFilter([15, -73, 14, -15])\
    \ == 1;\n@test specialFilter([33, -2, -3, 45, 21, 109]) == 2;\n</cell>\n<text>\n\
    Problem 4\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 0 && num % 3 == 0 && num % 5 == 0\n               \
    \ count += 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n# Run this cell to test your function above\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3,\
    \ 45, 21, 109]) == 2 \n</cell>\n<text>\n (b) Write a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    0\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10\n            count += 1\n \
    \           if n % 2 == 1\n                count += 1\n                if n %\
    \ 4 == 1\n                    count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function with the above example\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\
    \ \n</cell>\n<text>\nQuestion 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (2, 4, 6,\
    \ 8, 10, 12).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n \
    \   1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", " \
    \   count = 0\n    for n in nums\n        if n > 10\n            count += 1\n\
    \            if n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9\
    \ == 1\n                count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    1\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.0>\nspecialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 1\n                if num % 10 == 1\n             \
    \       count += 1\n                end\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.0>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<code language=julia-1.0>\n@time specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n         \
    \   count += 1\n            if n % 2 == 1\n                count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14,\
    \ -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10\n            count\
    \ += 1\n            if n % 2 == 1\n                count += 1\n              \
    \  if n % 4 == 1\n                    count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.4>\n@time specialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # TEST Write a function that takes an array of numbers as input and returns \n\
    # the number of elements in the array that are greater than 10 and both \n# first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\n# >>>\
    \ specialFilter([15, -73, 14, -15])\n# 1\n# >>> specialFilter([33, -2, -3, 45,\
    \ 21, 109])\n# 2\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ array of numbers as input and returns \nthe sum of the numbers in the array\
    \ that are greater than 10 and both \nfirst and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\nFor example:\n>>> specialSum([15, -73, 14, -15])\n-23\n>>>\
    \ specialSum([33, -2, -3, 45, 21, 109])\n-45\n</text>\n<code language=julia-1.5>",
  "    count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            else\n                if n % 3 == 1\n\
    \                    count += 1\n                else\n                    if\
    \ n % 5 == 1\n                        count += 1\n                    else\n \
    \                       if n % 7 == 1\n                            count += 1\n\
    \                        else\n                            if n % 9 == 1\n   \
    \                             count += 1\n                        end\n      \
    \              end\n                end\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            count += 1\n        \
    \    if n % 2 == 1\n                count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10\n            count += 1\n \
    \           if n % 2 == 1\n                count += 1\n                if n %\
    \ 4 == 1\n                    count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n                count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n# Run this cell to test your\
    \ function\n@test specialFilter([15, -73, 14, -15]) == 1 # Answer is 1\n@test\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 # Answer is 2\n</cell>\n<text>\n\
    Problem 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    0\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    # Run this cell to test your function above\n@assert specialFilter([15, -73, 14,\
    \ -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\n# TEST Write a function that\
    \ takes an array of numbers as input and returns \n# the number of elements in\
    \ the array that are greater than 10 and both \n# first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n# For example:\n# >>> specialFilter([15, -73, 14,\
    \ -15])\n# 1\n# >>> specialFilter([33, -2, -3, 45, 21, 109])\n# 2\n</cell>\n<code\
    \ language=julia-1.3>\n# TEST Write a function that takes an array of numbers\
    \ as input and returns \n# the number of elements in the array that are greater\
    \ than 10 and both \n# first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n# For example:\n# >>> specialFilter([15, -73, 14, -15])\n# 1\n# >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n# 2\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of numbers as input and returns \nthe sum of the elements in\
    \ the array that are greater than 10 and both \nfirst and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\nFor example:\n>>> specialSum([15, -73, 14, -15])\n\
    -25\n>>> specialSum([33, -2, -3, 45, 21, 109])\n-45\n</text>\n<code language=julia-1.3>\n\
    # TEST Write a function that takes an array of numbers as input and returns \n\
    # the sum of the elements in the array that are greater than 10 and both \n# first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\n# >>>\
    \ specialSum([15, -73, 14, -15])\n# -25\n# >>> specialSum([33, -2, -3, 45, 21,\
    \ 109])\n# -45\n</cell>\n<code language=julia-1.3>\n# TEST Write a function that\
    \ takes an array of numbers as input and returns \n# the sum of the elements in\
    \ the array that are greater than 10 and both \n# first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n# For example:\n# >>> specialSum([15, -73, 14, -15])\n\
    # -25\n# >>> specialSum([33, -2, -3, 45, 21, 109])\n# -45\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes an array of numbers as input and returns \nthe\
    \ sum of the elements in the array that are greater than 10 and both \nfirst and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\nFor example:\n>>> specialSum([",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.4>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 1\n                if num % 10 == 1\n             \
    \       count += 1\n                end\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to\
    \ test your function\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (2, 4, 6, 8, 10).\n    For example:\n \
    \   >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 1\n                if num % 10\
    \ == 1\n                    count += 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function with the above example\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\
    \ \n</cell>\n<text>\nPart 2: Finding Primes\nThe previous two parts have created\
    \ an algorithm to determine if a number is prime.\nA naive algorithm would be\
    \ to simply check all numbers up to the square root of the number.\nBut this would\
    \ result in very slow runtimes and is not very efficient.\nA better algorithm\
    \ is to implement a Sieve of Eratosthenes algorithm, which \nwill find all prime\
    \ numbers in a much more efficient manner.", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10\n            count += 1\n \
    \           if n % 2 == 1\n                count += 1\n                if n %\
    \ 4 == 1\n                    count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\n# Run this cell to load the tests.\n\
    include(\"./TestUtils.jl\")", "    count = 0\n    for n in nums\n        if n\
    \ > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\n# Run this cell to test your function\
    \ with the above example\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n# Run this\
    \ cell to test your function\n@assert specialFilter([15, -73, 14, -15]) == 1 \n\
    @assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (2, 4, 6, 8, 10).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-0.6>\nspecialFilter([15, -73, 14, -15])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    # Run this cell to test your solution\n@test specialFilter([15, -73, 14, -15])\
    \ == 1 # Passed\n@test specialFilter([33, -2, -3, 45, 21, 109]) == 2 # Passed\n\
    </cell>\n<text>\nQuestion 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    0\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15]) == 1;\n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2;\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        if n % 2 == 1\n                count += 1\n            end\n        \
    \    if n % 2 == 0\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14,\
    \ -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10\n            count\
    \ += 1\n            if n % 2 == 1\n                count += 1\n              \
    \  if n % 4 == 1\n                    count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n# Test your function with the\
    \ above example\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even \n    (3, 5, 7, 9, 11, 13, 15).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15]) == 1\n    >>> specialFilter([33, -2, -3, 45, 21, 109]) == 2\n\
    \    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n     \
    \       if num % 2 == 1\n                if num % 10 == 1\n                  \
    \  count += 1\n                end\n            end\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.0>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14,\
    \ -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1 \"First example\"\n@assert specialFilter([33, -2, -3, 45, 21,\
    \ 109]) == 2 \"Second example\"\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    # Run this cell to test your function with the above example\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\
    \ \n</cell>\n<text>\nProblem 4\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are divisible\
    \ by 7 and \n    the first and last digits are even (1, 3, 5, 7, 9).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if isOdd(n) && isOdd(floor(n/10))\n          \
    \      count += 1\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function with\
    \ the above example\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (2, 4, 6, 8, 10).\n    For example:\n \
    \   >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10\n            count += 1\n            if n % 2 == 1\n       \
    \         count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        if mod(n, 2) == 1\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<code language=julia-1.0>\n@time specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n</cell>\n<text>\nExercise: Write a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14,\
    \ -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10\n            count\
    \ += 1\n            if n % 2 == 1\n                count += 1\n              \
    \  if n % 4 == 1\n                    count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.4>\n# TEST specialFilter (5 points)\n\
    @test specialFilter([15, -73, 14, -15]) == 1 \n@test specialFilter([33, -2, -3,\
    \ 45, 21, 109]) == 2 \n</cell>\n<text>\nProblem 4\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            count += 1\n        \
    \    if n % 2 == 1\n                count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n# Run this cell to test your\
    \ solution\n@test specialFilter([15, -73, 14, -15]) == 1 # Passed\n@test specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 # Passed\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        if n % 2 == 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.0>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise: Write a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\n# Run this cell to check your answer\n\
    @assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nPart 2: Finding Primes and Fibonacci\
    \ Numbers\nNow let's get started with the first task of the Euler challenge. You'll\
    \ need to find all the prime numbers less than 1,000,000. Luckily, the Sieve of\
    \ Eratosthenes is exactly what you need! It works by starting at any number and\
    \ removing any multiples of that number that haven't been marked yet. You'll find\
    \ all primes less than 1,000,000 by running the cell below:", "    count = 0\n\
    \    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 ==\
    \ 1\n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.3>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n\
    \                    count += 1\n                end\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1\n                if num % 10 == 1\n                    count += 1\n   \
    \             end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n# Run this cell to test your function with\
    \ the above example\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        count += 1\n            if n % 2 == 1\n                count += 1\n \
    \       end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    @assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n\
    <text>\nPart III: Filtering Arrays\nNow that we have seen how to write our own\
    \ functions, let's see how we can use them to filter and select elements from\
    \ an array. Let's start by writing a function that filters out the odd numbers\
    \ from an array:", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0 && n % 1 == 0\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14,\
    \ -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\
    \"\""]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

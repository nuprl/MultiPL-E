language: jl
name: HumanEval_98_count_upper
results:
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.4>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.4>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise\nWrite\
    \ a function that counts the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4e0xkczy.jl:19\nin expression starting at\
    \ /tmp/tmp4e0xkczy.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count_upper\
    \ = 0\n    \n    for i in 0 .. s.length-1\n        if s[i] == 'A'\n          \
    \  count_upper += 1\n        else if s[i] == 'a'\n            count_upper += 1\n\
    \        else if s[i] == 'B'\n            count_upper += 1\n        else if s[i]\
    \ == 'b'\n            count_upper += 1\n        else if s[i] == 'C'\n        \
    \    count_upper += 1\n        else if s[i] == 'c'\n            count_upper +=\
    \ 1\n        else if s[i] == 'D'\n            count_upper += 1\n        else if\
    \ s[i] == 'd'\n            count_upper += 1\n        else if s[i] == 'E'\n   \
    \         count_upper += 1\n        else if s[i] == 'e'\n            count_upper\
    \ += 1\n        else if s[i] == 'F'\n            count_upper += 1\n        else\
    \ if s[i] == 'f'\n            count_upper += 1\n        else if s[i] == 'G'\n\
    \            count_upper += 1\n        else if s[i] == 'g'\n            count_upper\
    \ += 1\n        else if s[i] == 'H'\n            count_upper += 1\n        else\
    \ if s[i] == 'h'\n            count_upper += 1\n        else if s[i] == 'I'\n\
    \            count_upper += 1\n        else if s[i] == 'i'\n            count_upper\
    \ += 1\n        else if s[i] == 'J'\n            count_upper += 1\n        else\
    \ if s[i] == 'j'\n            count_upper += 1\n        else if s[i] == 'K'\n\
    \            count_upper += 1\n        else if s[i] == 'k'\n            count_upper\
    \ += 1\n        else if s[i] == 'L'\n            count_upper += 1\n        else\
    \ if s[i] == 'l'\n            count_upper += 1\n        else if s[i] == 'M'\n\
    \            count_upper += 1\n        else if s[i] == 'm'\n            count_upper\
    \ += 1\n        else if s[i] == 'N'\n            count_upper += 1\n        else\
    \ if s[i] == 'n'\n            count_upper += 1\n        else if s[i] == 'O'\n\
    \            count_upper += 1\n        else if s[i] == 'o'\n            count_upper\
    \ += 1\n        else if s[i] == 'P'\n            count_upper += 1\n        else\
    \ if s[i] == 'p'\n            count_upper += 1\n        else if s[i] == 'Q'\n\
    \            count_upper += 1\n        else if s[i] == 'q'\n            count_upper\
    \ += 1\n        else if s[i] == 'R'\n            count_upper += 1\n        else\
    \ if s[i] == 'r'\n            count_upper += 1\n        else if s[i] == 'S'\n\
    \            count_upper += 1\n        else if s[i] == 's'\n            count_upper\
    \ += 1\n        else if s[i] == 'T'\n            count_upper += 1\n        else\
    \ if s[i] == 't'\n            count_upper += 1\n        else if s[i] == 'U'\n\
    \            count_upper += 1\n        else if s[i] == 'u'\n            count_upper\
    \ += 1\n        else if s[i] == 'V'\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv0vf0idb.jl:19\nin expression starting at\
    \ /tmp/tmpv0vf0idb.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    if length(s)\
    \ <= 0\n        0\n    else\n        count_upper(tail(s))\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\"\
    ) == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") ==\
    \ 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp4vrmdc8z.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp4vrmdc8z.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: tail not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmp4vrmdc8z.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4vrmdc8z.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4vrmdc8z.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4vrmdc8z.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: tail not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp4vrmdc8z.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4vrmdc8z.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4vrmdc8z.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4vrmdc8z.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: tail not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp4vrmdc8z.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4vrmdc8z.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4vrmdc8z.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4vrmdc8z.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: tail not defined\n  Stacktrace:\n  \
    \ [1] count_upper(s::String)\n     @ Main /tmp/tmp4vrmdc8z.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_upper(\"aBCdEf\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that counts the number of uppercase vowels in a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpze4gqhud.jl:19\nin expression starting at\
    \ /tmp/tmpze4gqhud.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    \"\"\"\n\
    \    Count the number of uppercase vowels in even indices.\n    \n    For example:\n\
    \    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"abcdefg\")\n  \
    \  0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvpjqfze6.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvpjqfze6.jl:1\n\
    in expression starting at /tmp/tmpvpjqfze6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<cell>\ncount_upper(\"aBCdEf\")\n</cell>\n<cell>\n\
    count_upper(\"abcdefg\")\n</cell>\n<cell>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise\nWrite a function that counts the number of uppercase vowels in a string.\
    \ \nGiven a string, count the number of uppercase vowels in even indices. \nGiven\
    \ a string, count the number of uppercase vowels in odd indices. \nGiven a string,\
    \ count the number of uppercase vowels in all indices. \nGiven a string, count\
    \ the number of uppercase vowels in all indices and all indices. \nGiven a string,\
    \ count the number of uppercase vowels in all indices and all indices and all\
    \ indices. \nGiven a string, count the number of uppercase vowels in all indices\
    \ and all indices and all indices and all indices. \nGiven a string, count the\
    \ number of uppercase vowels in all indices and all indices and all indices and\
    \ all indices and all indices. \nGiven a string, count the number of uppercase\
    \ vowels in all indices and all indices and all indices and all indices and all\
    \ indices and all indices. \nGiven a string, count the number of uppercase vowels\
    \ in all indices and all indices and all indices and all indices and all indices\
    \ and all indices and all indices and all indices. \nGiven a string, count the\
    \ number of uppercase vowels in all indices and all indices and all indices and\
    \ all indices and all indices and all indices and all indices and all indices\
    \ and all indices and all indices. \nGiven a string, count the number of uppercase\
    \ vowels in all indices and all indices and all indices and all indices and all\
    \ indices and all indices and all indices and all indices and all indices and\
    \ all indices and all indices and all indices. \nGiven a string, count the number\
    \ of uppercase vowels in all indices and all indices and all indices and all indices\
    \ and all indices and all indices and all indices and all indices and all indices\
    \ and all indices and all indices and all indices and all indices and all indices\
    \ and all indices. \nGiven a string, count the number of uppercase vowels in all\
    \ indices and all indices and all indices and all indices and all indices and\
    \ all indices and all indices and all indices and all indices and all indices\
    \ and all indices and all indices and all indices and all indices and all indices\
    \ and all indices. \nGiven a string, count the number of uppercase vowels in all\
    \ indices and all indices and all indices and all indices and all indices and\
    \ all indices and all indices and all indices and all indices and all \nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\"\
    ) == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") ==\
    \ 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpacdkosiz.jl:20\nin expression starting at\
    \ /tmp/tmpacdkosiz.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    if length(s)==0\
    \ \n        0\n    else\n        sum(take(s,2)==\"AEIOU\".map(_.toUpper))\nend\n\
    </cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise\nWrite a function that takes a string and returns\
    \ the number of uppercase vowels in each of the string's characters. For example:\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7b7c7r6o.jl:19\nin expression starting at\
    \ /tmp/tmp7b7c7r6o.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s == \"\"\
    \ then 0 else count_upper(s[1..end-1]) + count_upper(s[end..end-1]) \nend\n</cell>\n\
    <code language=julia-1.0>\n\"\"\"\n    Given a string s, count the number of uppercase\
    \ vowels in odd indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\"\
    )\n    0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz3jr9bvz.jl:13\nin expression starting at /tmp/tmpz3jr9bvz.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt7vy8slb.jl:20\nin expression starting at\
    \ /tmp/tmpt7vy8slb.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t\
    @test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"\
    dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphpxfvczi.jl:1\nin expression starting at /tmp/tmphpxfvczi.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a string and returns the number of uppercase vowels in\
    \ each of the string's characters. For example:\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2yoi8diq.jl:19\nin expression starting at\
    \ /tmp/tmp2yoi8diq.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that counts the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0oqsnh5s.jl:19\nin expression starting at\
    \ /tmp/tmp0oqsnh5s.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count_upper\
    \ = 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n \
    \           \n    return count_upper\nend\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns the number of vowels\
    \ found in it.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi_rw00k4.jl:21\nin expression starting at\
    \ /tmp/tmpi_rw00k4.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s.length ==\
    \ 0 \n        0\n    else if length(s) mod 2 == 0 \n        count_upper(s[1..end-1])\
    \ + count_upper(s[end..end-1]) \n    else \n        count_upper(s[1..end-1]) +\
    \ count_upper(s[end-1..end])\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    Given a string s, count the number of uppercase vowels in odd indices.\n\
    \    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"\
    abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyrv82rdt.jl:15\nin expression starting at\
    \ /tmp/tmpyrv82rdt.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise\nWrite\
    \ a function that returns the number of uppercase vowels in a string. \nGiven\
    \ a string s, count the number of uppercase vowels in even indices.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp91l1zt8b.jl:19\nin expression starting at\
    \ /tmp/tmp91l1zt8b.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s.length ==\
    \ 0 \n        0\n    else \n        if length(s) mod 2 != 0 \n            0\n\
    \        else \n            if s[end-1] == 'A' || s[end-1] == 'a' \n         \
    \       1\n            else \n                0\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\"\
    )\n    0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"2\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp39dvp3qc.jl:16\nin expression starting at /tmp/tmp39dvp3qc.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that counts the number of uppercase vowels in a string. Test it on\
    \ some strings. What happens when you run it on strings with no uppercase vowels?\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjmy_yze9.jl:19\nin expression starting at\
    \ /tmp/tmpjmy_yze9.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_upper(\"aBCdEf\")\n</cell>\n<code\
    \ language=julia-1.0>\ncount_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.0>\n\
    count_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite a function that counts\
    \ the number of uppercase vowels in a string.\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1qeze5w.jl:19\nin expression starting at\
    \ /tmp/tmpk1qeze5w.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.4>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.4>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of uppercase letters in a string.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\"\
    ) == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") ==\
    \ 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpow0w4phc.jl:19\nin expression starting at\
    \ /tmp/tmpow0w4phc.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s == \"\"\
    \ then 0 else count_upper(tail(s))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptci70fy3.jl:13\nin expression starting at /tmp/tmptci70fy3.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_9fn_4b8.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_9fn_4b8.jl:1\n\
    in expression starting at /tmp/tmp_9fn_4b8.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<text>\nExercise\nWrite a function that takes a string\
    \ and returns the number of uppercase vowels in it.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyykh5wdk.jl:19\nin expression starting at\
    \ /tmp/tmpyykh5wdk.jl:19\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the number of uppercase letters in each word in a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4hdb2bbv.jl:20\nin expression starting at\
    \ /tmp/tmp4hdb2bbv.jl:20\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if substring(s,0,1)==\"a\" then 1 else 0 end\nend\n</cell>\n<code\
    \ language=julia-1.4>\n\"\"\"\n    Given a string s, count the number of uppercase\
    \ vowels in odd indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    2\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\"\
    )\n    1\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp68qp8050.jl:13\nin expression starting at /tmp/tmp68qp8050.jl:13\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    \"\"\"\n\
    \    Count the number of uppercase vowels in even indices.\n    \n    For example:\n\
    \    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"abcdefg\")\n  \
    \  0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2raedw1u.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2raedw1u.jl:1\n\
    in expression starting at /tmp/tmp2raedw1u.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_9fn_4b8.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_9fn_4b8.jl:1\n\
    in expression starting at /tmp/tmp_9fn_4b8.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string and returns the number of vowels \nin the string.\
    \ \nThe vowels are \"a\", \"e\", \"i\", \"o\", and \"u\".\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkfg2ob19.jl:19\nin expression starting at\
    \ /tmp/tmpkfg2ob19.jl:19\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_9fn_4b8.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_9fn_4b8.jl:1\n\
    in expression starting at /tmp/tmp_9fn_4b8.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         if count_upper % 2 == 0\n                count_upper -= 1\n    return\
    \ count_upper\nend\n</cell>\n<code language=julia-1.0>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.0>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.0>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that counts the number of uppercase vowels in a string.\nWrite a\
    \ test that checks the function works.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpurfol3yi.jl:21\nin expression starting at\
    \ /tmp/tmpurfol3yi.jl:21\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ \n        0\n    elseif length(s)==1 \n        if isupper(s[0]) \n         \
    \   1\n        else\n            0\n    else\n        if isupper(s[0]) \n    \
    \        count_upper(substring(s,1,end-1))\n        else\n            count_upper(substring(s,1,end-1))\n\
    \            count_upper(substring(s,end,length(s)))\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string s, count the number of uppercase vowels in odd indices.\n\
    \    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"\
    abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmp7_xk0a0o.jl:16 expected \"\
    end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7_xk0a0o.jl:20\n\
    in expression starting at /tmp/tmp7_xk0a0o.jl:20\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns the number of vowels contained in\
    \ the string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpscdkirsz.jl:19\nin expression starting at\
    \ /tmp/tmpscdkirsz.jl:19\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpx5e90i08.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx5e90i08.jl:1\n\
    in expression starting at /tmp/tmpx5e90i08.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         if count_upper % 2 == 0\n                count_upper -= 1\n    return\
    \ count_upper\nend\n</cell>\n<code language=julia-1.4>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.4>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a string and returns the number of uppercase vowels in\
    \ each of the string's words.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc1kt_gxb.jl:21\nin expression starting at\
    \ /tmp/tmpc1kt_gxb.jl:21\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s.length <\
    \ 2 \n        0\n    else if s.head == s.tail\n        1\n    else if s.head ==\
    \ s.tail.head \n        count_upper(s.tail.tail)\n    else\n        count_upper(s.tail)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that counts the number of uppercase\
    \ vowels in a string. \nIt should return 0 if the string does not contain any\
    \ uppercase vowels.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1qyju75j.jl:15\nin expression starting at\
    \ /tmp/tmp1qyju75j.jl:15\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper(s,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpp8_afu6v.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpp8_afu6v.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  MethodError: no method matching count_upper(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_upper(::String) at /tmp/tmpp8_afu6v.jl:12\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpp8_afu6v.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp8_afu6v.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp8_afu6v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpp8_afu6v.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  MethodError: no method matching count_upper(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_upper(::String) at /tmp/tmpp8_afu6v.jl:12\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpp8_afu6v.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp8_afu6v.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp8_afu6v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpp8_afu6v.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  MethodError: no method matching count_upper(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_upper(::String) at /tmp/tmpp8_afu6v.jl:12\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpp8_afu6v.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp8_afu6v.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp8_afu6v.jl:19\ntest set:\
    \ Error During Test at /tmp/"
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n \
    \   Given a string s, count the number of uppercase vowels in odd indices.\n \
    \   \n    For example:\n    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"\
    abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoogslmf8.jl:21\nin expression starting at\
    \ /tmp/tmpoogslmf8.jl:21\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.3>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.3>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.3>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise\nWrite\
    \ a function that returns the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgn7yb2lo.jl:19\nin expression starting at\
    \ /tmp/tmpgn7yb2lo.jl:19\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if substring(s,0,1)==\"a\" then 1 else 0 end\nend\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\n    Given a string s, count the number of uppercase\
    \ vowels in odd indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\"\
    )\n    0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptdwxk092.jl:13\nin expression starting at /tmp/tmptdwxk092.jl:13\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         if count_upper % 2 == 0\n                count_upper -= 1\n    return\
    \ count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeeby2xz6.jl:1\nin expression starting at /tmp/tmpeeby2xz6.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   if count % 2 == 0\n                count += 1\n    return count\n</cell>\n\
    <code language=julia-1.5>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise\nWrite a function that counts the number of uppercase\
    \ vowels in a string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp05r9_9_t.jl:21\nin expression starting at\
    \ /tmp/tmp05r9_9_t.jl:21\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if substring(s,0,1)==\"a\" then 1 else 0 end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    Given a string s, count the number of uppercase\
    \ vowels in odd indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1\n    >>> count_upper(\"abcdefg\")\n    1\n    >>> count_upper(\"dBBE\"\
    )\n    1\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc2idi5ks.jl:13\nin expression starting at /tmp/tmpc2idi5ks.jl:13\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \     else\n            count_upper = 0\n    end\n    return count_upper\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpos3sadr6.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpos3sadr6.jl:1\n\
    in expression starting at /tmp/tmpos3sadr6.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns the number of vowels \nin each word\
    \ in the string. \nFor example, \ncount_vowels(\"aBcDeF\") should return (1, 0,\
    \ 1).\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8lwr1j9k.jl:19\nin expression starting at\
    \ /tmp/tmp8lwr1j9k.jl:19\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_9fn_4b8.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_9fn_4b8.jl:1\n\
    in expression starting at /tmp/tmp_9fn_4b8.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfk3urvaa.jl:19\nin expression starting at\
    \ /tmp/tmpfk3urvaa.jl:19\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\n</cell>\n<code language=julia-1.1>\ncount_upper(\"aBCdEf\")\n</cell>\n<code\
    \ language=julia-1.1>\ncount_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.1>\n\
    count_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write a function that counts\
    \ the number of uppercase vowels in a string.\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpywksu0dg.jl:19\nin expression starting at\
    \ /tmp/tmpywksu0dg.jl:19\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise: Write a function that returns the number of uppercase vowels in a string.\
    \ \nFor example, count_upper(\"aBCdEf\") should return 1.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl6mgt1_k.jl:20\nin expression starting at\
    \ /tmp/tmpl6mgt1_k.jl:20\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.4>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise\nWrite\
    \ a function that counts the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwgliuc66.jl:20\nin expression starting at\
    \ /tmp/tmpwgliuc66.jl:20\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<cell>\ncount_upper(\"aBCdEf\")\n</cell>\n<cell>\n\
    count_upper(\"abcdefg\")\n</cell>\n<cell>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise: Write a function that counts the number of uppercase vowels in a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplpmuixgj.jl:19\nin expression starting at\
    \ /tmp/tmplpmuixgj.jl:19\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count_upper\
    \ = 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n \
    \           \n    return count_upper\nend\n</cell>\n<code language=julia-1.0>\n\
    count_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.0>\ncount_upper(\"abcdefg\"\
    )\n</cell>\n<code language=julia-1.0>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise: Write a function that counts the number of uppercase vowels in a string.\n\
    Write a test that passes when the function returns the correct answer.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\"\
    ) == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") ==\
    \ 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7cq4cb1b.jl:21\nin expression starting at\
    \ /tmp/tmp7cq4cb1b.jl:21\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the number of uppercase letters in a string. Test it\
    \ on \"aBCdEf\" and \"abcdefg\".\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2lmh71bw.jl:19\nin expression starting at\
    \ /tmp/tmp2lmh71bw.jl:19\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_upper(\"\
    aBCdEf\")\n</cell>\n<code language=julia-1.4>\ncount_upper(\"abcdefg\")\n</cell>\n\
    <code language=julia-1.4>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string and returns the number of vowels contained\
    \ in the string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t\
    @test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"\
    dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy5cw5_c8.jl:21\nin expression starting at\
    \ /tmp/tmpy5cw5_c8.jl:21\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns the number of uppercase vowels in\
    \ each word in the string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplye_k8c3.jl:20\nin expression starting at\
    \ /tmp/tmplye_k8c3.jl:20\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if substring(s,1,1)==\"a\" then 1 else 0\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqg7qtucg.jl:13\nin expression starting at /tmp/tmpqg7qtucg.jl:13\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpx5e90i08.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx5e90i08.jl:1\n\
    in expression starting at /tmp/tmpx5e90i08.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    \"\"\"\n\
    \    Count the number of uppercase vowels in even indices.\n    \n    For example:\n\
    \    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"abcdefg\")\n  \
    \  0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\n    \n    \n    \n   \
    \ \"\"\"\n    Count the number of uppercase vowels in odd indices.\n    \n   \
    \ For example:\n    >>> count_upper(\"aBCdEf\")\n    0\n    >>> count_upper(\"\
    abcdefg\")\n    1\n    >>> count_upper(\"dBBE\")\n    1\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsyz5hvxw.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsyz5hvxw.jl:1\n\
    in expression starting at /tmp/tmpsyz5hvxw.jl:1\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s == \"\"\n\
    \        0\n    else\n        sum((i in EvenIdxs(i)) for i in s)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgqrqj2vr.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgqrqj2vr.jl:1\n\
    in expression starting at /tmp/tmpgqrqj2vr.jl:1\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the number of vowels\
    \ found in it.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnizvbupa.jl:20\nin expression starting at\
    \ /tmp/tmpnizvbupa.jl:20\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n        else\n\
    \            count = 0\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise: Write a function that returns the number of uppercase vowels in a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl6_uefko.jl:23\nin expression starting at\
    \ /tmp/tmpl6_uefko.jl:23\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if c == 'A' || c == 'a' || c == 'E' || c == 'e' || c ==\
    \ 'I' || c == 'i'\n            count += 1\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.3>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.3>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.3>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of uppercase vowels in each word in the string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfcwgn60p.jl:19\nin expression starting at\
    \ /tmp/tmpfcwgn60p.jl:19\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if substring(s,0,1)==\"a\" then 1 else 0 end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the number of lowercase\
    \ vowels in it.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t\
    @test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"\
    dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplovpzdvq.jl:13\nin expression starting at /tmp/tmplovpzdvq.jl:13\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_upper(\"\
    aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n\
    <code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise\n\
    Write a function that counts the number of uppercase vowels in each word of a\
    \ string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnn2bvwdi.jl:22\nin expression starting at\
    \ /tmp/tmpnn2bvwdi.jl:22\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \     end\n    end\n    return count_upper\nend\n</cell>\n<code language=julia-1.3>\n\
    count_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.3>\ncount_upper(\"abcdefg\"\
    )\n</cell>\n<code language=julia-1.3>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that counts the number of uppercase vowels in each\
    \ word of a string.\nFor example, count_upper(\"aBCdEf\") should return [1, 0,\
    \ 1].\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuzqfs849.jl:21\nin expression starting at\
    \ /tmp/tmpuzqfs849.jl:21\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"dBBE\")\n</cell>\n<text>\nExercise\nWrite a function that returns\
    \ the number of uppercase vowels in a string.\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps7r0t8jk.jl:19\nin expression starting at\
    \ /tmp/tmps7r0t8jk.jl:19\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count_upper\
    \ = 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n \
    \           if count_upper % 2 == 0\n                count_upper -= 1\n    return\
    \ count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe541whpa.jl:1\nin expression starting at /tmp/tmpe541whpa.jl:1\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if c == 'A' || c == 'E' || c == 'I' || c == 'O' || c ==\
    \ 'U'\n            count += 1\n    return count\n</cell>\n<cell>\n@test count_upper(\"\
    aBCdEf\") == 1\n@test count_upper(\"abcdefg\") == 0\n@test count_upper(\"dBBE\"\
    ) == 0\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and\
    \ returns the number of uppercase letters in the string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1e0iw0mg.jl:18\nin expression starting at\
    \ /tmp/tmp1e0iw0mg.jl:18\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that counts the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp66imyzpk.jl:19\nin expression starting at\
    \ /tmp/tmp66imyzpk.jl:19\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         if count_upper % 2 == 0\n                count_upper -= 1\n    return\
    \ count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeeby2xz6.jl:1\nin expression starting at /tmp/tmpeeby2xz6.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<cell>\n@test count_upper(\"aBCdEf\") == 1\n@test\
    \ count_upper(\"abcdefg\") == 0 \n@test count_upper(\"dBBE\") == 0 \n</cell>\n\
    <text>\nExercise: Write a function that counts the number of uppercase vowels\
    \ in a string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn8k5qo09.jl:19\nin expression starting at\
    \ /tmp/tmpn8k5qo09.jl:19\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise\nWrite a function that takes a string and returns the number of vowels\
    \ found in it.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7tirx6k2.jl:20\nin expression starting at\
    \ /tmp/tmp7tirx6k2.jl:20\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise\nWrite\
    \ a function that returns the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf4jm8f90.jl:19\nin expression starting at\
    \ /tmp/tmpf4jm8f90.jl:19\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of uppercase letters in a string.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\"\
    ) == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") ==\
    \ 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4lbssfgj.jl:19\nin expression starting at\
    \ /tmp/tmp4lbssfgj.jl:19\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)\
    \ <= 0 \n        0\n    else \n        if length(s) mod 2 != 0 \n            0\n\
    \        else \n            count_upper(substring(s, 2, length(s))) \n       \
    \ end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a string\
    \ s, count the number of uppercase vowels in odd indices.\n    \n    For example:\n\
    \    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"abcdefg\")\n  \
    \  0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"2\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvpt7qweh.jl:16\nin expression starting at /tmp/tmpvpt7qweh.jl:16\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_9fn_4b8.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_9fn_4b8.jl:1\n\
    in expression starting at /tmp/tmp_9fn_4b8.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            if\
    \ count % 2 == 0\n                count += 1\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise: Write a function that returns the number of uppercase\
    \ vowels in a string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmlmk7n8u.jl:21\nin expression starting at\
    \ /tmp/tmpmlmk7n8u.jl:21\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that counts the number of uppercase\
    \ vowels in each word of a string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj2jdsha0.jl:19\nin expression starting at\
    \ /tmp/tmpj2jdsha0.jl:19\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    if length(s)==0\
    \ then return 0\n    \n    let mut count=0\n    let mut i=0;\n    while i<length(s)\
    \ do\n        if s[i]>='A' && s[i]<='Z' then count+=1\n        i+=1\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns the number of uppercase vowels in\
    \ it.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpay7zmron.jl:14\nin expression starting at /tmp/tmpay7zmron.jl:14\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper(s,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpp8_afu6v.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpp8_afu6v.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  MethodError: no method matching count_upper(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_upper(::String) at /tmp/tmpp8_afu6v.jl:12\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpp8_afu6v.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp8_afu6v.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp8_afu6v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpp8_afu6v.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  MethodError: no method matching count_upper(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_upper(::String) at /tmp/tmpp8_afu6v.jl:12\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpp8_afu6v.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp8_afu6v.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp8_afu6v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpp8_afu6v.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  MethodError: no method matching count_upper(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_upper(::String) at /tmp/tmpp8_afu6v.jl:12\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpp8_afu6v.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp8_afu6v.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp8_afu6v.jl:19\ntest set:\
    \ Error During Test at /tmp/"
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper(s,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpp8_afu6v.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpp8_afu6v.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  MethodError: no method matching count_upper(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_upper(::String) at /tmp/tmpp8_afu6v.jl:12\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpp8_afu6v.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp8_afu6v.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp8_afu6v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpp8_afu6v.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  MethodError: no method matching count_upper(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_upper(::String) at /tmp/tmpp8_afu6v.jl:12\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpp8_afu6v.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp8_afu6v.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp8_afu6v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpp8_afu6v.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  MethodError: no method matching count_upper(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_upper(::String) at /tmp/tmpp8_afu6v.jl:12\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpp8_afu6v.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp8_afu6v.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp8_afu6v.jl:19\ntest set:\
    \ Error During Test at /tmp/"
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    if length(s)\
    \ <= 0\n        0\n    else\n        count_upper(tail(s))\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given a string s, count the number of uppercase\
    \ vowels in odd indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1\n    >>> count_upper(\"abcdefg\")\n    1\n    >>> count_upper(\"dBBE\"\
    )\n    1\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2yod224m.jl:20\nin expression starting at\
    \ /tmp/tmp2yod224m.jl:20\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\nend\n</cell>\n<code language=julia-1.5>\n@assert count_upper(\"\
    aBCdEf\") == 1\n@assert count_upper(\"abcdefg\") == 0\n@assert count_upper(\"\
    dBBE\") == 0 \n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ and returns the number of characters in the string that are uppercase letters.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoxutvgvt.jl:21\nin expression starting at\
    \ /tmp/tmpoxutvgvt.jl:21\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<cell>\ncount_upper(\"aBCdEf\")\n</cell>\n<cell>\n\
    count_upper(\"abcdefg\")\n</cell>\n<cell>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise\nWrite a function that takes a string and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb5gyzn9w.jl:19\nin expression starting at\
    \ /tmp/tmpb5gyzn9w.jl:19\n"
  stdout: ''
  timestamp: 1659822519
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s == \"\"\
    \ then 0 else count_upper(tail(s))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptci70fy3.jl:13\nin expression starting at /tmp/tmptci70fy3.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.0>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.0>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.0>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns the number of vowels (a, e, i, o,\
    \ u) in the string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpumaosa79.jl:19\nin expression starting at\
    \ /tmp/tmpumaosa79.jl:19\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_upper(\"\
    aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n\
    <code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string and returns the number of uppercase vowels\
    \ in each of the string's words.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfps7x1fs.jl:22\nin expression starting at\
    \ /tmp/tmpfps7x1fs.jl:22\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count_upper\
    \ = 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n \
    \           \n    return count_upper\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphcp_4s3v.jl:21\nin expression starting at\
    \ /tmp/tmphcp_4s3v.jl:21\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<cell>\ncount_upper(\"aBCdEf\")\n</cell>\n<cell>\n\
    count_upper(\"abcdefg\")\n</cell>\n<cell>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise\nWrite a function that counts the number of uppercase vowels in a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvw72zc1t.jl:20\nin expression starting at\
    \ /tmp/tmpvw72zc1t.jl:20\n"
  stdout: ''
  timestamp: 1659822519
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_upper(\"\
    aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n\
    <code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of uppercase vowels in a string.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\"\
    ) == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") ==\
    \ 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4es26470.jl:22\nin expression starting at\
    \ /tmp/tmp4es26470.jl:22\n"
  stdout: ''
  timestamp: 1659822519
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if c == 'A' || c == 'a' \n            count += 1\n   \
    \     else if c == 'B' || c == 'b' \n            count += 1\n        else if c\
    \ == 'C' || c == 'c' \n            count += 1\n        else if c == 'D' || c ==\
    \ 'd' \n            count += 1\n        else if c == 'E' || c == 'e' \n      \
    \      count += 1\n        else if c == 'F' || c == 'f' \n            count +=\
    \ 1\n        else if c == 'G' || c == 'g' \n            count += 1\n        else\
    \ if c == 'H' || c == 'h' \n            count += 1\n        else if c == 'I' ||\
    \ c == 'i' \n            count += 1\n        else if c == 'J' || c == 'j' \n \
    \           count += 1\n        else if c == 'K' || c == 'k' \n            count\
    \ += 1\n        else if c == 'L' || c == 'l' \n            count += 1\n      \
    \  else if c == 'M' || c == 'm' \n            count += 1\n        else if c ==\
    \ 'N' || c == 'n' \n            count += 1\n        else if c == 'O' || c == 'o'\
    \ \n            count += 1\n        else if c == 'P' || c == 'p' \n          \
    \  count += 1\n        else if c == 'Q' || c == 'q' \n            count += 1\n\
    \        else if c == 'R' || c == 'r' \n            count += 1\n        else if\
    \ c == 'S' || c == 's' \n            count += 1\n        else if c == 'T' || c\
    \ == 't' \n            count += 1\n        else if c == 'U' || c == 'u' \n   \
    \         count += 1\n        else if c == 'V' || c == 'v' \n            count\
    \ += 1\n        else if c == 'W' || c == 'w' \n            count += 1\n      \
    \  else if c == 'X' || c == 'x' \n            count += 1\n        else if c ==\
    \ 'Y' || c == 'y' \n            count += 1\n        else if c == 'Z' || c == 'z'\
    \ \n            count += 1\n        else if c == 'a' || c == 'A' \n          \
    \  count += 1\n        else if c == 'b' || c == 'B' \n            count += 1\n\
    \        else if c == 'c' || c == 'C' \n            count += 1\n        else if\
    \ c == 'd' || c == 'D' \n            count += 1\n        else if c == 'e' || c\
    \ == 'E' \n            count += 1\n        else if c == 'f' || c == 'F' \n   \
    \         count += 1\n        else if c == 'g' || c == 'G' \n            count\
    \ += 1\n        else if c == 'h' || c == 'H' \n            count += 1\n      \
    \  else if c == 'i' || c == 'I' \n            count += 1\n        else if c ==\
    \ 'j' || c == 'J' \n            count += 1\n        else if c\nusing Test\n\n\
    @testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\
    \t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"\
    B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t\
    @test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdrkj634_.jl:17\nin expression starting at\
    \ /tmp/tmpdrkj634_.jl:17\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    </cell>\n<cell>\n@test count_upper(\"aBCdEf\") == 1\n@test count_upper(\"abcdefg\"\
    ) == 0 \n@test count_upper(\"dBBE\") == 0 \n</cell>\n<text>\nExercise: Write a\
    \ function that counts the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4q91jao6.jl:18\nin expression starting at\
    \ /tmp/tmp4q91jao6.jl:18\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s.length ==\
    \ 0 then 0 else if length(s) mod 2 == 0 then 1 else 0 end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    Given a string s, count the number of uppercase\
    \ vowels in odd indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\"\
    )\n    0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe27vixua.jl:13\nin expression starting at /tmp/tmpe27vixua.jl:13\n"
  stdout: ''
  timestamp: 1659822519
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string and returns the number of vowels found in that\
    \ string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg8ilkaom.jl:20\nin expression starting at\
    \ /tmp/tmpg8ilkaom.jl:20\n"
  stdout: ''
  timestamp: 1659822519
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that counts the number of uppercase vowels in a string. \nThe function\
    \ should ignore non-alphabetic characters and count only uppercase vowels.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\"\
    ) == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") ==\
    \ 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj1rdvc0h.jl:20\nin expression starting at\
    \ /tmp/tmpj1rdvc0h.jl:20\n"
  stdout: ''
  timestamp: 1659822518
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpx5e90i08.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx5e90i08.jl:1\n\
    in expression starting at /tmp/tmpx5e90i08.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t\
    @test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"\
    dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphpxfvczi.jl:1\nin expression starting at /tmp/tmphpxfvczi.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_9fn_4b8.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_9fn_4b8.jl:1\n\
    in expression starting at /tmp/tmp_9fn_4b8.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise\nWrite\
    \ a function that counts the number of uppercase vowels in each word of a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5y2uzwpl.jl:19\nin expression starting at\
    \ /tmp/tmp5y2uzwpl.jl:19\n"
  stdout: ''
  timestamp: 1659822519
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if c == 'A' or c == 'a' then count += 1\n        if c\
    \ == 'B' or c == 'b' then count += 1\n        if c == 'C' or c == 'c' then count\
    \ += 1\n        if c == 'D' or c == 'd' then count += 1\n        if c == 'E' or\
    \ c == 'e' then count += 1\n        if c == 'F' or c == 'f' then count += 1\n\
    \        if c == 'G' or c == 'g' then count += 1\n    return count\n</cell>\n\
    <code language=julia-1.0>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.0>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.0>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of uppercase vowels in each word in the string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"c\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptl4britm.jl:15\nin expression starting at /tmp/tmptl4britm.jl:15\n"
  stdout: ''
  timestamp: 1659822519
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n@assert count_upper(\"\
    aBCdEf\") == 1\n@assert count_upper(\"abcdefg\") == 0\n@assert count_upper(\"\
    dBBE\") == 0\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number\
    \ of uppercase vowels in a string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjpno6x0f.jl:20\nin expression starting at\
    \ /tmp/tmpjpno6x0f.jl:20\n"
  stdout: ''
  timestamp: 1659822519
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_9fn_4b8.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_9fn_4b8.jl:1\n\
    in expression starting at /tmp/tmp_9fn_4b8.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string and returns the number of vowels found in it.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwrvr_c0f.jl:19\nin expression starting at\
    \ /tmp/tmpwrvr_c0f.jl:19\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write a function that counts\
    \ the number of uppercase vowels in a string.\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm8zptbgw.jl:19\nin expression starting at\
    \ /tmp/tmpm8zptbgw.jl:19\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<code language=julia-1.4>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.4>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns the number of vowels found in it.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp1x44xi0.jl:20\nin expression starting at\
    \ /tmp/tmpp1x44xi0.jl:20\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo4yg7sve.jl:19\nin expression starting at\
    \ /tmp/tmpo4yg7sve.jl:19\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_upper(\"\
    aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n\
    <code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string and returns the number of uppercase vowels\
    \ in each word in the string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe0eoal2h.jl:21\nin expression starting at\
    \ /tmp/tmpe0eoal2h.jl:21\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<cell>\ncount_upper(\"aBCdEf\")\n</cell>\n<cell>\n\
    count_upper(\"abcdefg\")\n</cell>\n<cell>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise: Write a function that counts the number of uppercase vowels in a string.\n\
    Hint: You may want to use count_upper from above.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp05qoue3n.jl:19\nin expression starting at\
    \ /tmp/tmp05qoue3n.jl:19\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if c == 'A' || c == 'a' || c == 'E' || c == 'e' || c ==\
    \ 'I' || c == 'i' || c == 'O' || c == 'o' || c == 'U' || c == 'u'\n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the number of characters\
    \ in the string that are vowels. \nFor example, count_vowels(\"aBCdEf\") should\
    \ return 3.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpabphshbp.jl:21\nin expression starting at\
    \ /tmp/tmpabphshbp.jl:21\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s == \"\"\
    \ then 0 else count_upper(tail(s))\nend\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that counts the number of uppercase vowels in a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8qcx3hsi.jl:13\nin expression starting at /tmp/tmp8qcx3hsi.jl:13\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<cell>\ncount_upper(\"aBCdEf\")\n</cell>\n<cell>\n\
    count_upper(\"abcdefg\")\n</cell>\n<cell>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise: Write a function that counts the number of uppercase vowels in a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplpmuixgj.jl:19\nin expression starting at\
    \ /tmp/tmplpmuixgj.jl:19\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that counts the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8a699ild.jl:19\nin expression starting at\
    \ /tmp/tmp8a699ild.jl:19\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.4>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns the number of uppercase letters in\
    \ the string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpom_mhj6k.jl:20\nin expression starting at\
    \ /tmp/tmpom_mhj6k.jl:20\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         if count_upper % 2 == 0\n                count_upper -= 1\n    return\
    \ count_upper\nend\n</cell>\n<code language=julia-1.3>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.3>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.3>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbq4j18n7.jl:21\nin expression starting at\
    \ /tmp/tmpbq4j18n7.jl:21\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_upper(\"\
    aBCdEf\")\n</cell>\n<code language=julia-1.3>\ncount_upper(\"abcdefg\")\n</cell>\n\
    <code language=julia-1.3>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string and returns the number of vowels found in\
    \ that string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj9bheoim.jl:22\nin expression starting at\
    \ /tmp/tmpj9bheoim.jl:22\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.0>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.0>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.0>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise\nWrite\
    \ a function that counts the number of uppercase vowels in a string. \nWrite a\
    \ function that counts the number of uppercase vowels in a string and returns\
    \ the number of vowels.\nWrite a function that counts the number of uppercase\
    \ vowels in a string and returns the number of vowels in an array.\nWrite a function\
    \ that counts the number of uppercase vowels in a string and returns the number\
    \ of vowels in an array.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyzqu53ee.jl:19\nin expression starting at\
    \ /tmp/tmpyzqu53ee.jl:19\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if substring(s,0,1)==\"a\" then 1 else 0 end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    Given a string s, count the number of uppercase\
    \ vowels in odd indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\"\
    )\n    0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxwxj0uk9.jl:13\nin expression starting at /tmp/tmpxwxj0uk9.jl:13\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if length(s)==1 then 1 else count_upper(substring(s,0,2)) + count_upper(substring(s,2,length(s)-1))\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of vowels contained in the string.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp35n42gp3.jl:13\nin expression starting at /tmp/tmp35n42gp3.jl:13\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count_upper\
    \ = 0\n    for i in 0..length(s):\n        if isupper(s[i])\n            count_upper\
    \ += 1\n        else if isupper(s[i+1])\n            count_upper += 1\n      \
    \  else\n            count_upper = 0\n    end\n    return count_upper\nend\n</cell>\n\
    <code language=julia-1.4>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.4>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.4>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of uppercase vowels in each word in the string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: newline not allowed after \":\" used for quoting\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp0fp056ls.jl:16\nin expression\
    \ starting at /tmp/tmp0fp056ls.jl:16\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp91a1rhii.jl:19\nin expression starting at\
    \ /tmp/tmp91a1rhii.jl:19\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\ncount_upper(\"aBCdEf\")\n</cell>\n<code\
    \ language=julia-1.3>\ncount_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.3>\n\
    count_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of uppercase vowels in a string.\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpik3_ts04.jl:19\nin expression starting at\
    \ /tmp/tmpik3_ts04.jl:19\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_upper(\"\
    aBCdEf\")\n</cell>\n<code language=julia-1.4>\ncount_upper(\"abcdefg\")\n</cell>\n\
    <code language=julia-1.4>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise\n\
    Write a function that takes a string and returns the number of uppercase vowels\
    \ in each word in the string. For example:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwtmo8cqh.jl:21\nin expression starting at\
    \ /tmp/tmpwtmo8cqh.jl:21\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.3>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.3>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.3>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that counts the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb05mrjob.jl:19\nin expression starting at\
    \ /tmp/tmpb05mrjob.jl:19\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_upper(\"\
    aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n\
    <code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string and returns the number of vowels present\
    \ in the string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t\
    @test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"\
    dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd5zpymkb.jl:22\nin expression starting at\
    \ /tmp/tmpd5zpymkb.jl:22\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         if count_upper % 2 == 0\n                count_upper -= 1\n    return\
    \ count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeeby2xz6.jl:1\nin expression starting at /tmp/tmpeeby2xz6.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if substring(s,0,1)==\"a\" then 1 else 0 end\nend\n</cell>\n<text>\n\
    Exercise: Write a function that counts the number of uppercase vowels in each\
    \ word of a string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfhcrk92g.jl:13\nin expression starting at /tmp/tmpfhcrk92g.jl:13\n"
  stdout: ''
  timestamp: 1659822521
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.4>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that counts the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjq4u3zbf.jl:20\nin expression starting at\
    \ /tmp/tmpjq4u3zbf.jl:20\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_9fn_4b8.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_9fn_4b8.jl:1\n\
    in expression starting at /tmp/tmp_9fn_4b8.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_upper(\"\
    aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n\
    <code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string and returns the number of uppercase vowels\
    \ in each word in the string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6h1ym3f7.jl:22\nin expression starting at\
    \ /tmp/tmp6h1ym3f7.jl:22\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<cell>\ncount_upper(\"aBCdEf\")\n</cell>\n<cell>\n\
    count_upper(\"abcdefg\")\n</cell>\n<cell>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns the number of uppercase\
    \ letters in each word in the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5gkqro7l.jl:20\nin expression starting at\
    \ /tmp/tmp5gkqro7l.jl:20\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count_upper\
    \ = 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n \
    \           \n    return count_upper\nend\n</cell>\n<code language=julia-1.4>\n\
    count_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.4>\ncount_upper(\"abcdefg\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the number of uppercase vowels in a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeisrgvu2.jl:21\nin expression starting at\
    \ /tmp/tmpeisrgvu2.jl:21\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\n</cell>\n<code language=julia-1.0>\n\
    count_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.0>\ncount_upper(\"abcdefg\"\
    )\n</cell>\n<code language=julia-1.0>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise\nWrite a function that counts the number of uppercase vowels in each\
    \ word of a string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaxtagkp9.jl:20\nin expression starting at\
    \ /tmp/tmpaxtagkp9.jl:20\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t\
    @test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"\
    dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphpxfvczi.jl:1\nin expression starting at /tmp/tmphpxfvczi.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_9fn_4b8.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_9fn_4b8.jl:1\n\
    in expression starting at /tmp/tmp_9fn_4b8.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \     else\n            count_upper = 0\n    end\n    return count_upper\nend\n\
    </cell>\n<code language=julia-1.4>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.4>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.4>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of uppercase vowels in each word in the string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxbzcf3l4.jl:22\nin expression starting at\
    \ /tmp/tmpxbzcf3l4.jl:22\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the number of uppercase vowels in a string. Test it\
    \ on some strings. What happens if you pass a string that has two or more uppercase\
    \ vowels?\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9iokrgs6.jl:20\nin expression starting at\
    \ /tmp/tmp9iokrgs6.jl:20\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \     else\n            count_upper = 0\n    end\n    return count_upper\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpos3sadr6.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpos3sadr6.jl:1\n\
    in expression starting at /tmp/tmpos3sadr6.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t\
    @test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"\
    dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphpxfvczi.jl:1\nin expression starting at /tmp/tmphpxfvczi.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for i in 0..(length(s)-2) do \n        if s[i] == 'A' and s[i+1] == 'B'\
    \ and s[i+2] == 'C' \n            then count_upper += 1 \n        else if s[i]\
    \ == 'D' and s[i+1] == 'B' and s[i+2] == 'E' \n            then count_upper +=\
    \ 1 \n        else if s[i] == 'F' and s[i+1] == 'B' and s[i+2] == 'E' \n     \
    \       then count_upper += 1 \n        else if s[i] == 'G' and s[i+1] == 'B'\
    \ and s[i+2] == 'E' \n            then count_upper += 1 \n        else if s[i]\
    \ == 'A' and s[i+1] == 'B' and s[i+2] == 'D' \n            then count_upper +=\
    \ 1 \n        else if s[i] == 'B' and s[i+1] == 'C' and s[i+2] == 'E' \n     \
    \       then count_upper += 1 \n        else if s[i] == 'C' and s[i+1] == 'D'\
    \ and s[i+2] == 'E' \n            then count_upper += 1 \n        else if s[i]\
    \ == 'D' and s[i+1] == 'E' and s[i+2] == 'F' \n            then count_upper +=\
    \ 1 \n        else if s[i] == 'E' and s[i+1] == 'F' and s[i+2] == 'G' \n     \
    \       then count_upper += 1 \n        else if s[i] == 'F' and s[i+1] == 'G'\
    \ and s[i+2] == 'H' \n            then count_upper += 1 \n        else if s[i]\
    \ == 'G' and s[i+1] == 'H' and s[i+2] == 'I' \n            then count_upper +=\
    \ 1 \n        else if s[i] == 'H' and s[i+1] == 'I' and s[i+2] == 'J' \n     \
    \       then count_upper += 1 \n        else if s[i] == 'I' and s[i+1] == 'J'\
    \ and s[i+2] == 'K' \n            then count_upper += 1 \n        else if s[i]\
    \ == 'J' and s[i+1] == 'K' and s[i+2] == 'L' \n            then count_upper +=\
    \ 1 \n        else if s[i] == 'K' and s[i+1] == 'L' and s[i+2] == 'M' \n     \
    \       then count_upper += 1 \n        else if s[i] == 'L' and s[i+1] == 'M'\
    \ and s[i+2] == 'N' \n            then count_upper += 1 \n        else if s[i]\
    \ == 'M' and s[i+1] == 'N' and s[i+2] == 'O' \n            then count_upper +=\
    \ 1 \n        else if s[i] == 'N' and s[i+1] == 'O' and s[i+2] == 'P' \n     \
    \       then count_upper += 1 \n        else if s[i] == 'O' and s[i+1] == 'P'\
    \ and s[i+2] == 'Q' \n            then count_upper += 1 \n        else if s[i]\
    \ == 'P' and s[i+1] == 'Q' and s[i+2] == 'R' \n            then count_upper +=\
    \ \nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnqlbbjwf.jl:14\nin expression starting at /tmp/tmpnqlbbjwf.jl:14\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if substring(s,0,1)==\"a\" then 1 else 0 end\nend\n</cell>\n<text>\n\
    Exercise: Write a function that takes a string and returns the number of uppercase\
    \ vowels in each word in the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgcie77yf.jl:13\nin expression starting at /tmp/tmpgcie77yf.jl:13\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    \"\"\"\n\
    \    Count the number of uppercase vowels in even indices.\n    \n    For example:\n\
    \    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"abcdefg\")\n  \
    \  0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvpjqfze6.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvpjqfze6.jl:1\n\
    in expression starting at /tmp/tmpvpjqfze6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s.length ==\
    \ 0 then 0\n    else if length(s) mod 2 != 0 then 0\n    else if substring(s,\
    \ 0, 2) == \"AEIOU\" then 1\n    else 0\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string s, count the number of uppercase vowels in odd indices.\n\
    \    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"\
    abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl0gp61b3.jl:13\nin expression starting at /tmp/tmpl0gp61b3.jl:13\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         if count_upper % 2 == 0\n                count_upper -= 1\n    return\
    \ count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeeby2xz6.jl:1\nin expression starting at /tmp/tmpeeby2xz6.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise\nWrite\
    \ a function that takes a string and returns the number of uppercase vowels in\
    \ each of the string's characters. For example:\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmponhbiui0.jl:20\nin expression starting at\
    \ /tmp/tmponhbiui0.jl:20\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    \"\"\"\n\
    \    Count the number of uppercase vowels in even indices.\n    \n    For example:\n\
    \    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"abcdefg\")\n  \
    \  0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2raedw1u.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2raedw1u.jl:1\n\
    in expression starting at /tmp/tmp2raedw1u.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write a function that counts\
    \ the number of uppercase vowels in a string.\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm8zptbgw.jl:19\nin expression starting at\
    \ /tmp/tmpm8zptbgw.jl:19\n"
  stdout: ''
  timestamp: 1659822520
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_upper(\"\
    aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n\
    <code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a string and returns the number of uppercase vowels in\
    \ each word in the string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeqmm0gjp.jl:21\nin expression starting at\
    \ /tmp/tmpeqmm0gjp.jl:21\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    </cell>\n<code language=julia-1.0>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.0>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.0>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of uppercase vowels in each word in the string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4jmitq9j.jl:18\nin expression starting at\
    \ /tmp/tmp4jmitq9j.jl:18\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s == \"\"\n\
    \        0\n    else\n        sum(map(is_upper, s[..]))\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string s, count the number of uppercase vowels in odd indices.\n\
    \    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"\
    abcdefg\")\n    1\n    >>> count_upper(\"dBBE\")\n    1\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb7_8muy8.jl:18\nin expression starting at\
    \ /tmp/tmpb7_8muy8.jl:18\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise\nWrite\
    \ a function that takes a string and returns the number of uppercase vowels in\
    \ each of the string's characters. For example:\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzjxmh340.jl:19\nin expression starting at\
    \ /tmp/tmpzjxmh340.jl:19\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s.length ==\
    \ 0 \n        0\n    else if s.length == 1 \n        if s.head == s.tail \n  \
    \          0\n        else \n            1\n    else \n        if s.head == s.tail\
    \ \n            if s.head == 0 \n                0\n            else \n      \
    \          1\n        else \n            if s.head == 1 \n                if s.tail\
    \ == 0 \n                    0\n                else \n                    1\n\
    \            else \n                if s.head == 2 \n                    if s.tail\
    \ == 1 \n                        0\n                    else \n              \
    \          1\n                else \n                    if s.head == 3 \n   \
    \                     if s.tail == 2 \n                            0\n       \
    \                 else \n                            1\n                else \n\
    \                    if s.head == 4 \n                        if s.tail == 3 \n\
    \                            0\n                        else \n              \
    \              1\n                else \n                    if s.head == 5 \n\
    \                        if s.tail == 4 \n                            0\n    \
    \                    else \n                            1\n                else\
    \ \n                    if s.head == 6 \n                        if s.tail ==\
    \ 5 \n                            0\n                        else \n         \
    \                   1\n                else \n                    if s.head ==\
    \ 7 \n                        if s.tail == 6 \n                            0\n\
    \                        else \n                            1\n              \
    \  else \n                    if s.head == 8 \n                        if s.tail\
    \ == 7 \n                            0\n                        else \n      \
    \                      1\n                else \n                    if s.head\
    \ == 9 \n                        if s.tail == 8 \n                           \
    \ 0\n                        else \n                            1\n          \
    \      else \n                    if s.head == 10 \n                        if\
    \ s.tail == 9 \n                            0\n                        else \n\
    \                            1\n                else \n                    if\
    \ s.head == 11 \n                        if s.tail == 10 \n                  \
    \          0\n                        else \n                            1\n \
    \               else \n                    if s.head == 12 \n                \
    \        if s.tail == 11 \n                            0\n                   \
    \     else \n                            1\n                else \n          \
    \          if s.head == 13 \n                        if s.tail == 12 \n      \
    \                      0\n                        else \n                    \
    \        1\n                else \n                    if s.head == 14 \n    \
    \                    if s.tail == 13 \n                            0\n       \
    \                 else \n                            1\n                else \n\
    \                    if s.head == 15 \n                        if s.tail == 14\
    \ \n                            0\n                        else \n           \
    \                 1\n                else \n                    if s.head == 16\
    \ \n                        if s.tail == 15 \n                            0\n\
    \                        else \n                            1\n              \
    \  else \n                    if s.head == 17 \n                        if s.tail\
    \ == 16 \n                            0\n                        else \n     \
    \                       1\n                else \n                    if s.head\
    \ == 18 \n                        if s.tail == 17 \n                         \
    \   0\n                        else \n                            1\n        \
    \        else \n                    if s.head == 19 \n                       \
    \ if s.tail == 18 \n                            0\n                        else\
    \ \n                            1\n                else \n                   \
    \ if s.head == 20 \n                        if s.tail == 19 \n               \
    \             0\n                        else \n                            1\n\
    \                else \n                    if s.head == 21 \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr09tj2yj.jl:15\nin expression starting at\
    \ /tmp/tmpr09tj2yj.jl:15\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@test count_upper(\"\
    aBCdEf\") == 1\n@test count_upper(\"abcdefg\") == 0\n@test count_upper(\"dBBE\"\
    ) == 0\n</cell>\n<text>\nExercise 3\nWrite a function that counts the number of\
    \ uppercase vowels in a string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsxssxpi7.jl:22\nin expression starting at\
    \ /tmp/tmpsxssxpi7.jl:22\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s == \"\"\
    \ then 0 else count_upper(tail(s))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptci70fy3.jl:13\nin expression starting at /tmp/tmptci70fy3.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<text>\nExercise\nWrite a function that takes\
    \ a string and returns the number of uppercase vowels in each word in the string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpge8t374d.jl:20\nin expression starting at\
    \ /tmp/tmpge8t374d.jl:20\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if c == 'A' || c == 'a' || c == 'E' || c == 'e' || c ==\
    \ 'I' || c == 'i'\n            || c == 'O' || c == 'o' || c == 'U' || c == 'u'\n\
    \            || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\n   \
    \         || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U'\n      \
    \      || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\n         \
    \   || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U'\n            ||\
    \ c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\n            || c ==\
    \ 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U'\n            || c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u'\n            || c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U'\n            || c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u'\n            || c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U'\n            || c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u'\n            || c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U'\n            || c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u'\n            || c == 'A' || c == 'E' || c == 'I' ||\
    \ c == 'O' || c == 'U'\n            || c == 'a' || c == 'e' || c == 'i' || c ==\
    \ 'o' || c == 'u'\n            || c == 'A' || c == 'E' || c == 'I' || c == 'O'\
    \ || c == 'U'\n            || c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u'\n            || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c ==\
    \ 'U'\n            || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\n\
    \            || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U'\n   \
    \         || c == 'a' || c == 'e' || c == '\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid identifier name \"||\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp77rkiqk5.jl:16\nin expression starting at\
    \ /tmp/tmp77rkiqk5.jl:16\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.4>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.4>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk8bxszzg.jl:19\nin expression starting at\
    \ /tmp/tmpk8bxszzg.jl:19\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<cell>\n@test count_upper(\"aBCdEf\") == 1\n@test\
    \ count_upper(\"abcdefg\") == 0 \n@test count_upper(\"dBBE\") == 0 \n</cell>\n\
    <text>\nExercise: Write a function that counts the number of uppercase vowels\
    \ in a string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn8k5qo09.jl:19\nin expression starting at\
    \ /tmp/tmpn8k5qo09.jl:19\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite a function that counts\
    \ the number of uppercase vowels in a string.\nFor example, count_upper(\"aBCdEf\"\
    ) should return 1.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnalazgai.jl:19\nin expression starting at\
    \ /tmp/tmpnalazgai.jl:19\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp2swhjx_x.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2swhjx_x.jl:1\n\
    in expression starting at /tmp/tmp2swhjx_x.jl:1\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise\nWrite\
    \ a function that counts the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0rjew_8a.jl:20\nin expression starting at\
    \ /tmp/tmp0rjew_8a.jl:20\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp2swhjx_x.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2swhjx_x.jl:1\n\
    in expression starting at /tmp/tmp2swhjx_x.jl:1\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a string and returns the number of uppercase vowels in\
    \ each of the string's characters. For example:\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2yoi8diq.jl:19\nin expression starting at\
    \ /tmp/tmp2yoi8diq.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count_upper\
    \ = 0\n    for c in s\n        if isupper(c)\n            if islower(c)\n    \
    \            count_upper += 1\n            else\n                count_upper +=\
    \ 0\n        else\n            count_upper += 0\n    end\n    return count_upper\n\
    end\n</cell>\n<code language=julia-1.3>\ncount_upper(\"aBCdEf\")\n</cell>\n<code\
    \ language=julia-1.3>\ncount_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.3>\n\
    count_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string and returns the number of vowels \nin the string. \nFor example count_vowels(\"\
    aBCdEf\") should return 3.\nWrite a function that takes a string and returns the\
    \ number of consonants \nin the string. \nFor example count_consonants(\"aBCdEf\"\
    ) should return 3.\nWrite a function that takes a string and returns the number\
    \ of \nvowels and consonants in the string. \nFor example count_vowels_consonants(\"\
    aBCdEf\") should return 3.\nWrite a function that takes a string and returns the\
    \ number of \nvowels and consonants in the string. \nFor example count_vowels_consonants(\"\
    aBCdEf\") should return 3.\nWrite a function that takes a string and returns the\
    \ number of \nvowels and consonants in the string. \nFor example count_vowels_consonants(\"\
    aBCdEf\") should return 3.\nWrite a function that takes a string and returns the\
    \ number of \nvowels and consonants in the string. \nFor example count_vowels_consonants(\"\
    aBCdEf\") should return 3.\nWrite a function that takes a string and returns the\
    \ number of \nvowels and consonants in the string. \nFor example count_vowels_consonants(\"\
    aBCdEf\") should return 3.\nWrite a function that takes a string and returns the\
    \ number of \nvowels and consonants in the string. \nFor example count_vowels_consonants(\"\
    aBCdEf\") should return 3.\nWrite a function that takes a string and returns the\
    \ number of \nvowels and consonants in the string. \nFor example count_vowels_consonants(\"\
    aBCdEf\") should return 3.\nWrite a function that takes a string and returns the\
    \ number of \nvowels and consonants in the string. \nFor example count_vowels_consonants(\"\
    aBCdEf\") should return 3.\nWrite a function that takes a string and returns the\
    \ number of \nvowels and consonants in the string. \nFor example count_vowels_consonants(\"\
    aBCdEf\") should return 3.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpk0hqi6ee.jl:17 expected \"\
    end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk0hqi6ee.jl:21\n\
    in expression starting at /tmp/tmpk0hqi6ee.jl:21\n"
  stdout: ''
  timestamp: 1659822523
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if substring(s,0,1)==\"a\" then 1 else 0 end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    Given a string s, count the number of uppercase\
    \ vowels in odd indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    2\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\"\
    )\n    1\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkuvbp6kn.jl:13\nin expression starting at /tmp/tmpkuvbp6kn.jl:13\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s == \"\"\
    \ then 0 else count_upper(tail(s))\nend\n</cell>\n<code language=julia-1.3>\n\"\
    \"\"\n    Given a string s, count the number of uppercase vowels in odd indices.\n\
    \    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"\
    abcdefg\")\n    1\n    >>> count_upper(\"dBBE\")\n    1\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpev8zvxbz.jl:13\nin expression starting at /tmp/tmpev8zvxbz.jl:13\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that counts the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpymueex9m.jl:20\nin expression starting at\
    \ /tmp/tmpymueex9m.jl:20\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a string and returns the number of uppercase vowels in\
    \ each of the string's words.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpff9pinug.jl:19\nin expression starting at\
    \ /tmp/tmpff9pinug.jl:19\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t\
    @test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"\
    dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphpxfvczi.jl:1\nin expression starting at /tmp/tmphpxfvczi.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    \"\"\"\n\
    \    Count the number of uppercase vowels in even indices.\n    \n    For example:\n\
    \    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"abcdefg\")\n  \
    \  0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\n    \n    vowels = \"\
    aeiouAEIOU\"\n    \n    even_indices = filter( (x->x%2==0), map(ord,s))\n    \n\
    \    uppercase_vowels = filter( (x->x in vowels), even_indices)\n    \n    return\
    \ length(uppercase_vowels)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n\
    \    count_vowels(s)\n    \n    Count the number of vowels in s.\n    \n    For\
    \ example:\n    >>> count_vowels(\"aBCdEf\")\n    1\n    >>> count_vowels(\"abcdefg\"\
    )\n    0\n    >>> count_vowels(\"dBBE\")\n    0\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpojw0xh4r.jl:34\nin expression starting at\
    \ /tmp/tmpojw0xh4r.jl:34\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<code language=julia-1.0>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.0>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.0>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of uppercase letters in a string.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\"\
    ) == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") ==\
    \ 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm9fl1phq.jl:20\nin expression starting at\
    \ /tmp/tmpm9fl1phq.jl:20\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_9fn_4b8.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_9fn_4b8.jl:1\n\
    in expression starting at /tmp/tmp_9fn_4b8.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t\
    @test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"\
    dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphpxfvczi.jl:1\nin expression starting at /tmp/tmphpxfvczi.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            if\
    \ count % 2 == 0\n                count += 1\n    return count\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of vowels found in it.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5wkmy9xt.jl:20\nin expression starting at\
    \ /tmp/tmp5wkmy9xt.jl:20\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s.length ==\
    \ 0 \n        0\n    else if length(s) mod 2 == 0 \n        count_upper(s[1..end-1])\
    \ + count_upper(s[end..end-1]) \n    else \n        count_upper(s[1..end-1]) +\
    \ count_upper(s[end..end-1]) + count_upper(s[end+1..end])\nend\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\n    Given a string s, count the number of uppercase\
    \ vowels in odd indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\"\
    )\n    0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6zv6j3jm.jl:15\nin expression starting at\
    \ /tmp/tmp6zv6j3jm.jl:15\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    </cell>\n<code language=julia-1.3>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.3>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.3>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of vowels \nin the string. \nThe vowels are \"a\", \"e\", \"i\",\
    \ \"o\", and \"u\". \nThe function should ignore all other characters.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\"\
    ) == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") ==\
    \ 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprcbdv8p6.jl:18\nin expression starting at\
    \ /tmp/tmprcbdv8p6.jl:18\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<cell>\ncount_upper(\"aBCdEf\")\n</cell>\n<cell>\n\
    count_upper(\"abcdefg\")\n</cell>\n<cell>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise: Write a function that counts the number of uppercase vowels in a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplpmuixgj.jl:19\nin expression starting at\
    \ /tmp/tmplpmuixgj.jl:19\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count_upper\
    \ = 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n \
    \           if count_upper % 2 == 0\n                count_upper -= 1\n    return\
    \ count_upper\nend\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that counts the number of uppercase vowels in a string.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw3bpqin_.jl:22\nin expression starting at\
    \ /tmp/tmpw3bpqin_.jl:22\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if substring(s,0,1)==\"a\" then 1 else 0 end\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of uppercase vowels in it.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaf1k7f_e.jl:13\nin expression starting at /tmp/tmpaf1k7f_e.jl:13\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         \n    return count_upper\nend\n</cell>\n<code language=julia-1.3>\n\
    count_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.3>\ncount_upper(\"abcdefg\"\
    )\n</cell>\n<code language=julia-1.3>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise: Write a function that counts the number of uppercase vowels in a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxlk598i5.jl:20\nin expression starting at\
    \ /tmp/tmpxlk598i5.jl:20\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise: Write\
    \ a function that counts the number of uppercase vowels in each word of a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1tnijqv9.jl:20\nin expression starting at\
    \ /tmp/tmp1tnijqv9.jl:20\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns the number of vowels \nin the string.\
    \ \nThe vowels are \"a\", \"e\", \"i\", \"o\", and \"u\". \nThe function should\
    \ ignore all case. \nThe function should ignore all non-alphabetic characters.\
    \ \nThe function should ignore all non-alphanumeric characters. \nThe function\
    \ should ignore all non-ASCII characters. \nThe function should ignore all non-printable\
    \ characters. \nThe function should ignore all characters that are not in the\
    \ English alphabet.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpddspua2e.jl:20\nin expression starting at\
    \ /tmp/tmpddspua2e.jl:20\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvkd_pbnq.jl:1\nin expression starting at /tmp/tmpvkd_pbnq.jl:1\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.5>\n\
    count_upper(\"dBBE\")\n</cell>\n<text>\nExercise\nWrite a function that takes\
    \ a string and returns the number of uppercase vowels in each of the string's\
    \ words.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp76mda9tc.jl:19\nin expression starting at\
    \ /tmp/tmp76mda9tc.jl:19\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         if count_upper % 2 == 0\n                count_upper -= 1\n    return\
    \ count_upper\nend\n</cell>\n<code language=julia-1.0>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.0>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.0>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns the number of vowels \nin the string.\
    \ \nThe vowels are \"a\", \"e\", \"i\", \"o\", and \"u\". \nThe function should\
    \ ignore all case. \nThe function should ignore non-alphabetic characters. \n\
    The function should ignore punctuation and numbers.\nThe function should ignore\
    \ all non-alphabetic characters. \nThe function should ignore all non-alphabetic\
    \ characters. \nThe function should ignore all non-alphabetic characters. \nThe\
    \ function should ignore all non-alphabetic characters. \nThe function should\
    \ ignore all non-alphabetic characters. \nThe function should ignore all non-alphabetic\
    \ characters. \nThe function should ignore all non-alphabetic characters. \nThe\
    \ function should ignore all non-alphabetic characters. \nThe function should\
    \ ignore all non-alphabetic characters. \nThe function should ignore all non-alphabetic\
    \ characters. \nThe function should ignore all non-alphabetic characters. \nThe\
    \ function should ignore all non-alphabetic characters. \nThe function should\
    \ ignore all non-alphabetic characters. \nThe function should ignore all non-alphabetic\
    \ characters. \nThe function should ignore all non-alphabetic characters. \nThe\
    \ function should ignore all non-alphabetic characters. \nThe function should\
    \ ignore all non-alphabetic characters. \nThe function should ignore all non-alphabetic\
    \ characters. \nThe function should ignore all non-alphabetic characters. \nThe\
    \ function should ignore all non-alphabetic characters. \nThe function should\
    \ ignore all non-alphabetic characters. \nThe function should ignore all non-alphabetic\
    \ characters. \nThe function should ignore all non-alphabetic characters. \nThe\
    \ function should ignore all non-alphabetic characters. \nThe function should\
    \ ignore all non-alphabetic characters. \nThe function should ignore all non-alphabetic\
    \ characters. \nThe function should ignore all non-alphabetic characters. \nThe\
    \ function should ignore all non-alphabetic characters. \nThe function should\
    \ ignore all non-alphabetic characters. \nThe function should ignore all \nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\"\
    ) == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") ==\
    \ 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmwunv1qa.jl:21\nin expression starting at\
    \ /tmp/tmpmwunv1qa.jl:21\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<cell>\n@test count_upper(\"aBCdEf\") == 1\n\
    @test count_upper(\"abcdefg\") == 0 \n@test count_upper(\"dBBE\") == 0 \n</cell>\n\
    <text>\nExercise: Write a function that takes a string and returns the number\
    \ of uppercase vowels in each word in the string.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjsw8sl8a.jl:20\nin expression starting at\
    \ /tmp/tmpjsw8sl8a.jl:20\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \     else\n            count_upper = 0\n    return count_upper\nend\n</cell>\n\
    <code language=julia-1.4>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.4>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.4>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of uppercase vowels in each word in the string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_t6r55i7.jl:21\nin expression starting at\
    \ /tmp/tmp_t6r55i7.jl:21\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    \"\"\"\n\
    \    Count the number of uppercase vowels in even indices.\n    \n    For example:\n\
    \    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"abcdefg\")\n  \
    \  0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2raedw1u.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2raedw1u.jl:1\n\
    in expression starting at /tmp/tmp2raedw1u.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if substring(s,0,1)==\"a\" then 1 else 0 end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppfni3tip.jl:13\nin expression starting at /tmp/tmppfni3tip.jl:13\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    </cell>\n<code language=julia-1.4>\ncount_upper(\"aBCdEf\")\n</cell>\n<code language=julia-1.4>\n\
    count_upper(\"abcdefg\")\n</cell>\n<code language=julia-1.4>\ncount_upper(\"dBBE\"\
    )\n</cell>\n<text>\nExercise: Write a function that counts the number of uppercase\
    \ vowels in a string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6_j9hi7s.jl:18\nin expression starting at\
    \ /tmp/tmp6_j9hi7s.jl:18\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    if length(s)==0\
    \ then return 0\n    \n    let mut count = 0\n    for i in 0..length(s)\n    \
    \    if s[i]=='a' || s[i]=='A' then count+=1\n        if s[i]=='b' || s[i]=='B'\
    \ then count+=1\n        if s[i]=='c' || s[i]=='C' then count+=1\n        if s[i]=='d'\
    \ || s[i]=='D' then count+=1\n        if s[i]=='e' || s[i]=='E' then count+=1\n\
    \        if s[i]=='f' || s[i]=='F' then count+=1\n        if s[i]=='g' || s[i]=='G'\
    \ then count+=1\n        if s[i]=='h' || s[i]=='H' then count+=1\n        if s[i]=='i'\
    \ || s[i]=='I' then count+=1\n        if s[i]=='j' || s[i]=='J' then count+=1\n\
    \        if s[i]=='k' || s[i]=='K' then count+=1\n        if s[i]=='l' || s[i]=='L'\
    \ then count+=1\n        if s[i]=='m' || s[i]=='M' then count+=1\n        if s[i]=='n'\
    \ || s[i]=='N' then count+=1\n        if s[i]=='o' || s[i]=='O' then count+=1\n\
    \        if s[i]=='p' || s[i]=='P' then count+=1\n        if s[i]=='q' || s[i]=='Q'\
    \ then count+=1\n        if s[i]=='r' || s[i]=='R' then count+=1\n        if s[i]=='s'\
    \ || s[i]=='S' then count+=1\n        if s[i]=='t' || s[i]=='T' then count+=1\n\
    \        if s[i]=='u' || s[i]=='U' then count+=1\n        if s[i]=='v' || s[i]=='V'\
    \ then count+=1\n        if s[i]=='w' || s[i]=='W' then count+=1\n        if s[i]=='x'\
    \ || s[i]=='X' then count+=1\n        if s[i]=='y' || s[i]=='Y' then count+=1\n\
    \        if s[i]=='z' || s[i]=='Z' then count+=1\n        if s[i]=='A' || s[i]=='a'\
    \ then count+=1\n        if s[i]=='B' || s[i]=='b' then count+=1\n        if s[i]=='C'\
    \ || s[i]=='c' then count+=1\n        if s[i]=='D' || s[i]=='d' then count+=1\n\
    \        if s[i]=='E' || s[i]=='e' then count+=1\n        if s[i]=='F' || s[i]=='f'\
    \ then count+=1\n        if s[i]=='G' || s[i]=='g' then count+=1\n        if s[i]=='H'\
    \ || s[i]=='h' then count+=1\n        if s[i]=='I' || s[i]=='i' then count+=1\n\
    \        if s[i]=='J' || s[i]=='j' then count+=1\n        if s[i]=='K' || s[i]=='k'\
    \ then count+=1\n        if s[i]=='L' || s[i]=='l\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5qpx0ulz.jl:14\nin expression starting at /tmp/tmp5qpx0ulz.jl:14\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count_upper\
    \ = 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n \
    \           if count_upper % 2 == 0\n                count_upper -= 1\n    return\
    \ count_upper\nend\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe541whpa.jl:1\nin expression starting at /tmp/tmpe541whpa.jl:1\n"
  stdout: ''
  timestamp: 1659822517
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)==0\
    \ then 0 else if length(s)==1 then 1 else count_upper(substring(s,0,2)) + count_upper(substring(s,2,length(s)-1))\n\
    end\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given a string s, count the\
    \ number of uppercase vowels in odd indices.\n    \n    For example:\n    >>>\
    \ count_upper(\"aBCdEf\")\n    2\n    >>> count_upper(\"abcdefg\")\n    0\n  \
    \  >>> count_upper(\"dBBE\")\n    1\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6u2y4bwu.jl:13\nin expression starting at /tmp/tmp6u2y4bwu.jl:13\n"
  stdout: ''
  timestamp: 1659822524
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    \n    count =\
    \ 0\n    for c in s\n        if isupper(c)\n            count += 1\n         \
    \   \n    return count\n</cell>\n<cell>\ncount_upper(\"aBCdEf\")\n</cell>\n<cell>\n\
    count_upper(\"abcdefg\")\n</cell>\n<cell>\ncount_upper(\"dBBE\")\n</cell>\n<text>\n\
    Exercise\nWrite a function that takes a string and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9u405r9x.jl:20\nin expression starting at\
    \ /tmp/tmp9u405r9x.jl:20\n"
  stdout: ''
  timestamp: 1659822525
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if length(s)\
    \ <= 0 \n        0\n    else if length(s) <= 1\n        1\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AEIOU\"\n        count_upper(substring(s, 3))\n    else if substring(s,\
    \ 1, 2) == \"AE\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t\
    @test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"\
    dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeomh5mxd.jl:15\nin expression starting at\
    \ /tmp/tmpeomh5mxd.jl:15\n"
  stdout: ''
  timestamp: 1659822525
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.4>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.4>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that counts the number of uppercase vowels in each word of a string.\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxziow53q.jl:19\nin expression starting at\
    \ /tmp/tmpxziow53q.jl:19\n"
  stdout: ''
  timestamp: 1659822525
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s.length ==\
    \ 0 \n        0\n    else if length(s) mod 2 == 0 \n        count_upper(s[1..end-1])\
    \ + count_upper(s[end..end-1]) \n    else \n        count_upper(s[1..end-1]) +\
    \ count_upper(s[end-1..end])\nend\n</cell>\n<code language=julia-1.5>\ncount_upper(\"\
    aBCdEf\")\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n\
    <code language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string and returns the number of uppercase vowels\
    \ in it.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3tat4c71.jl:15\nin expression starting at\
    \ /tmp/tmp3tat4c71.jl:15\n"
  stdout: ''
  timestamp: 1659822525
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp2swhjx_x.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2swhjx_x.jl:1\n\
    in expression starting at /tmp/tmp2swhjx_x.jl:1\n"
  stdout: ''
  timestamp: 1659822522
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count_upper =\
    \ 0\n    for c in s\n        if isupper(c)\n            count_upper += 1\n   \
    \         if count_upper % 2 == 0\n                return count_upper\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaeyxulbs.jl:1\nin expression starting at /tmp/tmpaeyxulbs.jl:1\n"
  stdout: ''
  timestamp: 1659822525
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    if s.length ==\
    \ 0 \n        0\n    else if length(s) mod 2 == 0 \n        count_upper(s[1..end-1])\
    \ + count_upper(s[end..end-1]) \n    else \n        count_upper(s[1..end-1]) +\
    \ count_upper(s[end-1..end])\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    Given a string s, count the number of uppercase vowels in odd indices.\n\
    \    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"\
    abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyrv82rdt.jl:15\nin expression starting at\
    \ /tmp/tmpyrv82rdt.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n            \n\
    \    return count\n</cell>\n<code language=julia-1.5>\ncount_upper(\"aBCdEf\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_upper(\"abcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_upper(\"dBBE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string and returns the number of uppercase vowels in\
    \ each word in the string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\
    \t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t\
    @test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"\
    U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"EEEE\") == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwqalpd3z.jl:19\nin expression starting at\
    \ /tmp/tmpwqalpd3z.jl:19\n"
  stdout: ''
  timestamp: 1659822525
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if isupper(c)\n            count += 1\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpx5e90i08.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx5e90i08.jl:1\n\
    in expression starting at /tmp/tmpx5e90i08.jl:1\n"
  stdout: ''
  timestamp: 1659822515
- exit_code: 1
  program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n   \
    \ 1\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n\
    \    0\n    \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n \
    \   for c in s\n        if c == 'A' || c == 'a' || c == 'E' || c == 'e' || c ==\
    \ 'I' || c == 'i' || c == 'O' || c == 'o' || c == 'U' || c == 'u'\n          \
    \  count += 1\n    return count\n</cell>\n<cell>\ncount_upper(\"aBCdEf\")\n</cell>\n\
    <cell>\ncount_upper(\"abcdefg\")\n</cell>\n<cell>\ncount_upper(\"dBBE\")\n</cell>\n\
    <text>\nExercise\nWrite a function that counts the number of uppercase vowels\
    \ in a string.\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkclx98lg.jl:18\nin expression starting at\
    \ /tmp/tmpkclx98lg.jl:18\n"
  stdout: ''
  timestamp: 1659822525

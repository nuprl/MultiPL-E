name: HumanEval_51_remove_vowels
language: jl
prompt: "\"\"\"\n    remove_vowels is a function that takes string and returns string\
  \ without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"\
  abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"\
  aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \"\"\"\n\
  function remove_vowels(text::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = remove_vowels;\n\t@test(candidate(\"\
  \") == \"\")\n\t@test(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\")\n\t@test(candidate(\"\
  fedcba\") == \"fdcb\")\n\t@test(candidate(\"eeeee\") == \"\")\n\t@test(candidate(\"\
  acBAA\") == \"cB\")\n\t@test(candidate(\"EcBOO\") == \"cB\")\n\t@test(candidate(\"\
  ybcd\") == \"ybcd\")\nend\n"
completions: ["    vowels = \"aeiouAEIOU\"\n    \n    for char in text:\n        if\
    \ char in vowels:\n            text = text.replace(char, \"\")\n    return text\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `remove_vowels(\"\
    abba\")`.\n<|/ c |>\n<| c |>\nYes, you are right. My bad. Thanks for pointing\
    \ it out.\n<|/ c |>\n<| a dscore=0 |>\n<code>\ndef remove_vowels(text):\n    vowels\
    \ = \"aeiouAEIOU\"\n    \n    for char in text:\n        if char in vowels:\n\
    \            text = text.replace(char, \"\")\n    return text\n</code>\n<|/ a\
    \ tags=string,python,python-3.x |>\n<| c |>\nThis doesn't work. Try it with `remove_vowels(\"\
    abba\")`.\n<|/ c |>\n<| c |>\nYes, you are right. My bad. Thanks for pointing\
    \ it out.\n<|/ c |>\n<| a dscore=0 |>\n<code>\ndef remove_vowels(text):\n    vowels\
    \ = \"aeiouAEIOU\"\n    \n    for char in text:\n        if char in vowels:\n\
    \            text = text.replace(char, \"\")\n    return text\n</code>\n<|/ a\
    \ tags=string,python,python-3.x |>\n<| c |>\nThis doesn't work. Try it with `remove_vowels(\"\
    abba\")`.\n<|/ c |>\n<| a |>\n<code>\ndef remove_vowels(text):\n    vowels = \"\
    aeiouAEIOU\"\n    \n    for char in text:\n        if char in vowels:\n      \
    \      text = text.replace(char, \"\")\n    return text\n</code>\n<|/ a tags=string,python,python-3.x\
    \ dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `remove_vowels(\"abba\"\
    )`.\n<|/ c |>\n<| a |>\n<code>\ndef remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\
    \n    \n    for char in text:\n        if char in vowels:\n            text =\
    \ text.replace(char, \"\")\n    return text\n</code>\n<|/ a tags=string,python,python-3.x\
    \ dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `remove_vowels(\"abba\"\
    )`.\n<|/ c |>\n<| a tags=string,python,python-3.x |>\n<code>\ndef remove_vowels(text):\n\
    \    vowels = \"aeiouAEIOU\"\n    \n    for char in text:\n        if char in\
    \ vowels:\n            text = text.replace(char, \"\")\n    return text\n</code>\n\
    <|/ a dscore=0 |>", "    \"\"\"\n    Remove all vowels from text\n    \"\"\"\n\
    \    vowels = \"aeiouAEIOU\"\n    return \"\".join(c for c in text if c not in\
    \ vowels)\n</code>\n<|/ a tags=string,python,function,list |>\n<| a tags=string,python,function,list\
    \ |>\n<code>\ndef remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\n    return\
    \ \"\".join(c for c in text if c not in vowels)\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=string,python,function,list |>\n<code>\ndef remove_vowels(text):\n \
    \   vowels = \"aeiouAEIOU\"\n    return \"\".join(c for c in text if c not in\
    \ vowels)\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,python,function,list |>\n\
    <code>\ndef remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\n    return \"\"\
    .join(c for c in text if c not in vowels)\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Please add some explanation to your answer such that others can learn from it\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\ndef remove_vowels(text):\n    vowels = \"\
    aeiouAEIOU\"\n    return \"\".join(c for c in text if c not in vowels)\n</code>\n\
    <|/ a tags=string,python,function,list |>\n<| a tags=string,python,function,list\
    \ |>\n<code>\ndef remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\n    return\
    \ \"\".join(c for c in text if c not in vowels)\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nPlease add some explanation to your answer such that others can learn\
    \ from it\n<|/ c |>\n<| a tags=string,python,function,list |>\n<code>\ndef remove_vowels(text):\n\
    \    vowels = \"aeiouAEIOU\"\n    return \"\".join(c for c in text if c not in\
    \ vowels)\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\ndef remove_vowels(text):\n\
    \    vowels = \"aeiouAEIOU\"\n    return \"\".join(c for c in text if c not in\
    \ vowels)\n</code>\n<|/ a tags=string,python,function,list |>\n<| c |>\nPlease\
    \ add some explanation to your answer such that others can learn from it\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\ndef remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\
    \n    return \"\".join(c for c in text if c not in vowels)\n", "    vowels = \"\
    aeiouAEIOU\"\n    vowels_regex = Regex(\"[\" + vowels + \"]\")\n    return vowels_regex.replace(text)\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    remove_consonants is a function\
    \ that takes string and returns string without consonants.\n    >>> remove_consonants(\"\
    \")\n    \"\"\n    >>> remove_consonants(\"abcdef\")\n    \"abcdf\"\n    >>> remove_consonants(\"\
    aaaaa\")\n    \"aaaa\"\n    >>> remove_consonants(\"aaBAA\")\n    \"aaB\"\n  \
    \  >>> remove_consonants(\"zbcd\")\n    \"zbcd\"\n    \"\"\"", "    if text ==\
    \ \"\"\n        return \"\"\n    vowels = \"aeiouAEIOU\"\n    text_without_vowels\
    \ = \"\"\n    for char in text\n        if char in vowels\n            text_without_vowels\
    \ += char\n        else\n            text_without_vowels += \"_\"\n    return\
    \ text_without_vowels\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,haskell |>\n\
    <code>\nimport Data.List", "    vowels = \"aeiouAEIOU\"\n    vowels_regex = Regex(\"\
    [\" + vowels + \"]\")\n    no_vowels = text\n    no_vowels = no_vowels.gsub(vowels_regex,\
    \ \"\")\n    return no_vowels\nend", "    \"\"\"\n    remove_vowels is a function\
    \ that takes string and returns string without vowels.\n    >>> remove_vowels(\"\
    \")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"\
    aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \"\"\"\n    return text.replace(\"a\", \"\").replace(\"\
    e\", \"\").replace(\"i\", \"\").replace(\"o\", \"\").replace(\"u\", \"\")", " \
    \   if text == \"\"\n        return \"\"\n    \n    vowels = \"aeiouAEIOU\"\n\
    \    \n    text_without_vowels = \"\"\n    for letter in text\n        if letter\
    \ not in vowels\n            text_without_vowels = text_without_vowels + letter\n\
    \    return text_without_vowels\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"\n    count_vowels is a function that takes string and returns number of vowels\
    \ in it.\n    >>> count_vowels(\"\")\n    0\n    >>> count_vowels(\"abcdef\")\n\
    \    3\n    >>> count_vowels(\"aaaaa\")\n    0\n    >>> count_vowels(\"aaBAA\"\
    )\n    1\n    >>> count_vowels(\"zbcd\")\n    3\n    \"\"\"", "    vowels = \"\
    aeiouAEIOU\"\n    vowels_regex = Regex(\"[\" + vowels + \"]\")\n    return vowels_regex.sub(\"\
    \", text)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ and returns it with the first letter capitalized.\n>>> capitalize(\"hello world\"\
    )\n\"Hello World\"\n>>> capitalize(\"hello world!\")\n\"Hello World!\"\n>>> capitalize(\"\
    hello world!!\")\n\"Hello World!!\"\n>>> capitalize(\"hello world!!!\")\n\"Hello\
    \ World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"\
    hello world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"\
    Hello World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n>>>\
    \ capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"hello world!!!\"\
    )\n\"Hello World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n\
    >>> capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"hello\
    \ world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"Hello\
    \ World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"\
    hello world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"\
    Hello World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n>>>\
    \ capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"hello world!!!\"\
    )\n\"Hello World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n\
    >>> capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"hello\
    \ world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"Hello\
    \ World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"\
    hello world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"\
    Hello World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n>>>\
    \ capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"hello world!!!\"\
    )\n\"Hello World!!!\"\n>>> capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n\
    >>> capitalize(\"hello world!!!\")\n\"Hello World!!!\"\n>>> capitalize(\"hello\
    \ world!!!\")\n\"Hello World", "    vowels = \"aeiouAEIOU\"\n    text_without_vowels\
    \ = \"\"\n    for char in text\n        if char in vowels\n            then continue\n\
    \        else text_without_vowels = text_without_vowels + char\n    return text_without_vowels\n\
    </code>\n<|/ a tags=string,haskell,filter |>\n<| c |>\n`if char in vowels` can\
    \ be written `if char not in vowels`.\n<|/ c |>\n<| c |>\n`if char not in vowels`\
    \ can be written `if char not in \"aeiouAEIOU\"`\n<|/ c |>\n<| c |>\n`if char\
    \ not in \"aeiouAEIOU\"` can be written `if char not in \"aeiouAEIOU\"`\n<|/ c\
    \ |>\n<| c |>\n`if char not in \"aeiouAEIOU\"` can be written `if char not in\
    \ \"aeiouAEIOU\"`\n<|/ c |>\n<| c |>\n`if char not in \"aeiouAEIOU\"` can be written\
    \ `if char not in \"aeiouAEIOU\"`\n<|/ c |>\n<| a dscore=3 |>\n<code>\nimport\
    \ Data.Char", "    if text == \"\"\n        \"\"\n    else\n        text =\n \
    \           text |> String.filter (fun c -> c <> \"a\" && c <> \"e\" && c <> \"\
    i\" && c <> \"o\" && c <> \"u\")\n            |> String.map remove_vowels\n  \
    \          |> String.join\n            |> String.concat \"\"\n            |> String.concat\
    \ \"\"\n            |> String.concat \"\"\n            |> String.concat \"\"\n\
    \            |> String.concat \"\"\n            |> String.concat \"\"\n      \
    \      |> String.concat \"\"\n            |> String.concat \"\"\n            |>\
    \ String.concat \"\"\n            |> String.concat \"\"\n            |> String.concat\
    \ \"\"\n            |> String.concat \"\"\n            |> String.concat \"\"\n\
    \            |> String.concat \"\"\n            |> String.concat \"\"\n      \
    \      |> String.concat \"\"\n            |> String.concat \"\"\n            |>\
    \ String.concat \"\"\n            |> String.concat \"\"\n            |> String.concat\
    \ \"\"\n            |> String.concat \"\"\n            |> String.concat \"\"\n\
    \            |> String.concat \"\"\n            |> String.concat \"\"\n      \
    \      |> String.concat \"\"\n            |> String.concat \"\"\n            |>\
    \ String.concat \"\"\n            |> String.concat \"\"\n            |> String.concat\
    \ \"\"\n            |> String.concat \"\"\n            |> String.concat \"\"\n\
    \            |> String.concat \"\"\n            |> String.concat \"\"\n      \
    \      |> String.concat \"\"\n            |> String.concat \"\"\n            |>\
    \ String.concat \"\"\n            |> String.concat \"\"\n            |> String.concat\
    \ \"\"\n            |> String.concat \"\"\n            |> String.concat \"\"\n\
    \            |> String.concat \"\"\n            |> String.concat \"\"\n      \
    \      |> String.concat \"\"\n            |> String.concat \"\"\n            |>\
    \ String.concat \"\"\n            |> String.concat \"\"\n            |> String.concat\
    \ \"\"\n            |> String.concat \"\"\n            |> String.concat \"\"\n\
    \            |> String.concat \"\"\n            |> String.concat \"\"\n      \
    \      |> String.concat \"\"\n            |> String.concat \"\"\n            |>\
    \ String.concat \"\"\n            |> String.concat \"\"\n            |>", "  \
    \  vowels = \"aeiouAEIOU\"\n    return text.gsub(vowels, \"\")\nend\n</cell>\n\
    <code language=julia-1.5>", "    vowels = \"aeiouAEIOU\"\n    return text.gsub(vowels,\
    \ \"\")\nend\n</cell>\n<code language=julia-1.5>", "    vowels = \"aeiouAEIOU\"\
    \n    \n    for i in text:\n        if i in vowels:\n            text = text.replace(i,\
    \ \"\")\n    return text\n</code>\n<|/ a tags=string,python,function,replace |>\n\
    <| c |>\nThis doesn't work if there are multiple vowels in a row. For example,\
    \ `remove_vowels(\"aaBAA\")` returns `\"B\"` instead of `\"BAA\"`.\n<|/ c |>\n\
    <| c |>\nI fixed the problem you mentioned\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    def remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\n    \n    for i in text:\n\
    \        if i in vowels:\n            text = text.replace(i, \"\")\n    return\
    \ text\n</code>\n<|/ a tags=string,python,function,replace |>\n<| a tags=string,python,function,replace\
    \ |>\n<code>\ndef remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\n    \n  \
    \  for i in text:\n        if i in vowels:\n            text = text.replace(i,\
    \ \"\")\n    return text\n</code>\n<|/ a dscore=2 |>\n<| a tags=string,python,function,replace\
    \ |>\n<code>\ndef remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\n    \n  \
    \  for i in text:\n        if i in vowels:\n            text = text.replace(i,\
    \ \"\")\n    return text\n</code>\n<|/ a dscore=2 |>\n<| c |>\nPlease don't post\
    \ only code as an answer, but also provide an explanation of what your code does\
    \ and how it solves the problem of the question. Answers with an explanation are\
    \ usually more helpful and of better quality, and are more likely to attract upvotes.\n\
    <|/ c |>\n<| a tags=string,python,function,replace |>\n<code>\ndef remove_vowels(text):\n\
    \    vowels = \"aeiouAEIOU\"\n    \n    for i in text:\n        if i in vowels:\n\
    \            text = text.replace(i, \"\")\n    return text\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\ndef remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\
    \n    \n    for i in text:\n        if i in vowels:\n            text = text.replace(i,\
    \ \"\")\n    return text\n</code>\n<|/ a tags=string,python,function,replace |>\n\
    <| a tags=string,python,function,replace |>\n<code>\ndef remove_vowels(text):\n\
    \    vowels = \"aeiouAEIOU\"\n    \n    for i in text:\n        if i in vowels:\n\
    \            text = text.replace(i, \"\")\n    return text\n</code>\n<|/ a ",
  "    vowels = \"aeiouAEIOU\"\n    return text.gsub(vowels, \"\")\nend\n</cell>\n\
    <code language=julia-1.0>", "    vowels = \"aeiouAEIOU\"\n    \n    vowels_regex\
    \ = Regex(\"[\" + vowels + \"]\")\n    \n    return vowels_regex.replace(text)\n\
    end\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    remove_consonants is a function\
    \ that takes string and returns string without consonants.\n    >>> remove_consonants(\"\
    \")\n    \"\"\n    >>> remove_consonants(\"abcdef\")\n    \"abcdf\"\n    >>> remove_consonants(\"\
    aaaaa\")\n    \"\"\n    >>> remove_consonants(\"aaBAA\")\n    \"BAA\"\n    >>>\
    \ remove_consonants(\"zbcd\")\n    \"zbc\"\n    \"\"\"", "    vowels = \"aeiouAEIOU\"\
    \n    vowels_regex = Regex(\"[\" + vowels + \"]\")\n    return vowels_regex.replace(text)\n\
    end\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    remove_consonants is a function\
    \ that takes string and returns string without consonants.\n    >>> remove_consonants(\"\
    \")\n    \"\"\n    >>> remove_consonants(\"abcdef\")\n    \"abcde\"\n    >>> remove_consonants(\"\
    aaaaa\")\n    \"aaaaa\"\n    >>> remove_consonants(\"aaBAA\")\n    \"aaB\"\n \
    \   >>> remove_consonants(\"zbcd\")\n    \"zbcd\"\n    \"\"\"", "    \"\"\"\n\
    \    remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\"\
    )\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"\
    aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \"\"\"\
    \n    return text.replace(\"a\", \"\").replace(\"e\", \"\").replace(\"i\", \"\"\
    ).replace(\"o\", \"\").replace(\"u\", \"\")\nend\n</cell>\n<code language=julia-1.5>",
  "    vowels = \"aeiouAEIOU\"\n    return text.gsub(vowels, \"\")\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    remove_consonants is a function that takes\
    \ string and returns string without consonants.\n    >>> remove_consonants(\"\"\
    )\n    \"\"\n    >>> remove_consonants(\"abcdef\")\n    \"abcde\"\n    >>> remove_consonants(\"\
    aaaaa\")\n    \"\"\n    >>> remove_consonants(\"aaBAA\")\n    \"A\"\n    >>> remove_consonants(\"\
    zbcd\")\n    \"zcd\"\n    \"\"\"", "    \"\"\"\n    Remove all vowels from text\n\
    \    \"\"\"\n    vowels = \"aeiouAEIOU\"\n    vowels_regex = Regex(\"[\" + vowels\
    \ + \"]\")\n    return vowels_regex.replace(text)\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\ndef remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\
    \n    vowels_regex = Regex(\"[\" + vowels + \"]\")\n    return vowels_regex.replace(text)\n\
    </code>\n<|/ a tags=string,regex,python |>\n<| c |>\nPlease add some explanation\
    \ to your answer.\n<|/ c |>\n<| a tags=string,regex,python |>\n<code>\ndef remove_vowels(text):\n\
    \    vowels = \"aeiouAEIOU\"\n    vowels_regex = Regex(\"[\" + vowels + \"]\"\
    )\n    return vowels_regex.replace(text)\n</code>\n<|/ a dscore=1 |>\n<| a tags=string,regex,python\
    \ |>\n<code>\ndef remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\n    vowels_regex\
    \ = Regex(\"[\" + vowels + \"]\")\n    return vowels_regex.replace(text)\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=string,regex,python |>\n<code>\ndef remove_vowels(text):\n\
    \    vowels = \"aeiouAEIOU\"\n    vowels_regex = Regex(\"[\" + vowels + \"]\"\
    )\n    return vowels_regex.replace(text)\n</code>\n<|/ a dscore=1 |>\n<| a |>\n\
    <code>\ndef remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\n    vowels_regex\
    \ = Regex(\"[\" + vowels + \"]\")\n    return vowels_regex.replace(text)\n</code>\n\
    <|/ a tags=string,regex,python dscore=1 |>\n<| a dscore=1 |>\n<code>\ndef remove_vowels(text):\n\
    \    vowels = \"aeiouAEIOU\"\n    vowels_regex = Regex(\"[\" + vowels + \"]\"\
    )\n    return vowels_regex.replace(text)\n</code>\n<|/ a tags=string,regex,python\
    \ |>\n<| a tags=string,regex,python |>\n<code>\ndef remove_vowels(text):\n   \
    \ vowels = \"aeiouAEIOU\"\n    vowels_regex = Regex(\"[\" + vowels + \"]\")\n\
    \    return vowels_regex.replace(text)\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\ndef remove_vowels(text):\n    vowels = \"aeiouAEIOU\"\n    vowels_",
  "    vowels = \"aeiouAEIOU\"\n    no_vowels = \"\"\n    for letter in text\n   \
    \     if letter not in vowels\n            no_vowels = no_vowels + letter\n  \
    \  return no_vowels\n</code>\n<|/ a tags=string,julia |>\n<| a dscore=2 |>\n<code>"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_57_monotonic
language: jl
prompt: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
  \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
  \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
  \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
  \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
  \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
  \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
completions: ["    l = sort(l)\n    l = l[end-l.<0]\n    l = l[end-l.>0]\n    l =\
    \ l[end-l.==0]\n    l = l[end-l.>0]\n    l = l[end-l.<0]\n    return length(l)\
    \ == 0 || all(l[end-l.==0] == 0)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"Return True is list elements are monotonically increasing or decreasing.\n \
    \   >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"", "    if\
    \ length(l) < 2 \n        return true\n    \n    l = sort(l)\n    \n    if l[1]\
    \ < l[2] \n        return true\n    \n    return false\nend", "    if length(l)\
    \ == 0 \n        return true\n    \n    if l[1] < l[2] \n        return true\n\
    \    \n    if l[2] < l[1] \n        return false\n    \n    if l[1] > l[2] \n\
    \        return false\n    \n    if l[1] > l[2] \n        return true\n    \n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>", "    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    if l[1] < l[2] \n        return\
    \ true\n    end\n    \n    if l[1] > l[2] \n        return false\n    end\n  \
    \  \n    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2]\
    \ \n        return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[2] < l[3] \n        return true\n    end\n    \n    if l[3] < l[4] \n    \
    \    return true\n    end\n    \n    if l[4] < l[1] \n        return true\n  \
    \  end\n    \n    return false\nend", "    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i] > l[i-1]\n            return false\n        end\n\
    \        i += 1\n    return true\nend", "    l = sort(l)\n    l = l[1..end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]",
  "    l = sort(l)\n    l = l[1::-1]\n    l = l[1::-1]\n    return all(l[1:end-1]\
    \ < l[2:end])\nend", "    l = sort(l)\n    i = 2\n    while i < length(l)\n  \
    \      if l[i-1] > l[i]\n            return false\n        end\n        i += 1\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>", "    if length(l)\
    \ == 0 \n        return true\n    \n    if l[1] < l[2] \n        return true\n\
    \    \n    if l[1] > l[2] \n        return false\n    \n    return monotonic(l[2:end-1])\
    \ \nend", "    if length(l) < 2 \n        return true\n    \n    l = sort(l)\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    return monotonic(l[2:end-1]) \nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(l) == 0 \n        return true\n   \
    \ end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[3] \n        return true\n    end\n    \n    if l[1] < l[3] \n \
    \       return false\n    end\n    \n    if l[1] < l[4] \n        return true\n\
    \    end\n    \n    if l[1] > l[4] \n        return false\n    end\n    \n   \
    \ if l[1] > l[5] \n        return true\n    end\n    \n    if l[1] < l[5] \n \
    \       return false\n    end\n    \n    if l[1] < l[6] \n        return true\n\
    \    end\n    \n    if l[1] > l[6] \n        return false\n    end\n    \n   \
    \ if l[1] > l[7] \n        return true\n    end\n    \n    if l[1] < l[7] \n \
    \       return false\n    end\n    \n    if l[1] < l[8] \n        return true\n\
    \    end\n    \n    if l[1] > l[8] \n        return false\n    end\n    \n   \
    \ if l[1] > l[9] \n        return true\n    end\n    \n    if l[1] < l[9] \n \
    \       return false\n    end\n    \n    if l[1] < l[10] \n        return true\n\
    \    end\n    \n    if l[1] > l[10] \n        return false\n    end\n    \n  \
    \  if l[1] > l[11] \n        return true\n    end\n    \n    if l[1] < l[11] \n\
    \        return false\n    end\n    \n    if l[1] < l[12] \n        return true\n\
    \    end\n    \n    if l[1] > l[12] \n        return false\n    end\n    \n  \
    \  if l[1] > l[13] \n        return true\n    end\n    \n    if l[1] < l[13] \n\
    \        return false\n    end\n    \n    if l[1] < l[14] \n        return true\n\
    \    end\n    \n    if l[1] > l[14] \n        return false\n    end\n    \n  \
    \  if l[1] > l[15] \n        return true\n    end\n    \n    if l[1] < l[15] \n\
    \        return false\n    end\n    \n    if l[1] < l[16] \n        return true\n\
    \    end\n    \n    if l[1] > l[16] \n        return false\n    end\n    \n  \
    \  if l[1] > l[17] \n        return true\n    end\n    \n    if l[1] < l[17] \n\
    \        return false\n    end\n    \n    if l[1] < ", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   if length(l) == 0 \n        return true\n    end\n    \n    if l[1] < l[2]\
    \ \n        return false\n    end\n    \n    if l[1] > l[2] \n        return true\n\
    \    end\n    \n    if l[1] < l[3] \n        return false\n    end\n    \n   \
    \ if l[1] > l[3] \n        return true\n    end\n    \n    if l[2] < l[3] \n \
    \       return false\n    end\n    \n    if l[2] > l[3] \n        return true\n\
    \    end\n    \n    if l[3] < l[4] \n        return false\n    end\n    \n   \
    \ if l[3] > l[4] \n        return true\n    end\n    \n    if l[4] < l[5] \n \
    \       return false\n    end\n    \n    if l[4] > l[5] \n        return true\n\
    \    end\n    \n    if l[5] < l[6] \n        return false\n    end\n    \n   \
    \ if l[5] > l[6] \n        return true\n    end\n    \n    if l[6] < l[7] \n \
    \       return false\n    end\n    \n    if l[6] > l[7] \n        return true\n\
    \    end\n    \n    if l[7] < l[8] \n        return false\n    end\n    \n   \
    \ if l[7] > l[8] \n        return true\n    end\n    \n    if l[8] < l[9] \n \
    \       return false\n    end\n    \n    if l[8] > l[9] \n        return true\n\
    \    end\n    \n    if l[9] < l[10] \n        return false\n    end\n    \n  \
    \  if l[9] > l[10] \n        return true\n    end\n    \n    if l[10] < l[11]\
    \ \n        return false\n    end\n    \n    if l[10] > l[11] \n        return\
    \ true\n    end\n    \n    if l[11] < l[12] \n        return false\n    end\n\
    \    \n    if l[11] > l[12] \n        return true\n    end\n    \n    if l[12]\
    \ < l[13] \n        return false\n    end\n    \n    if l[12] > l[13] \n     \
    \   return true\n    end\n    \n    if l[13] < l[14] \n        return false\n\
    \    end\n    \n    if l[13] > l[14] \n        return true\n    end\n    \n  \
    \  if l[14] < l[15] \n        return false\n    end\n    \n    if l[14] > l[15]\
    \ \n        return true\n    end\n    \n    if l[15] < l[16] \n        return\
    \ false\n    end\n    \n    if l[15] > l[16] \n        return true\n    end\n\
    \    \n    if l[16] < l[", "    if length(l) == 0 \n        return true\n    \n\
    \    if l[1] < l[0] \n        return false\n    \n    if l[1] > l[-1] \n     \
    \   return false\n    \n    return monotonic(tail(l))\nend", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end-l.>0]\n    l = l[end-l.<0]\n    l = l[end-l.==0]\n\
    \    l = l[end-l.==1]\n    return length(l) == 0 || all(l[1:end-1].>l[2:end])\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Return True is list elements are\
    \ monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n\
    \    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4,\
    \ 1, 0, -10])\n    true\n    \"\"\"", "    l = sort(l)\n    if l[1] < l[2]\n \
    \       true\n    elseif l[2] < l[1]\n        false\n    else\n        monotonic(l[2:end-1])\
    \ || monotonic(l[1:end-1])\n    end\nend\n</code>\n<|/ a tags=julia |>\n<| a tags=julia\
    \ |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a tags=julia |>\n<| a\
    \ tags=julia |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a dscore=2 |>\n<| a tags=julia\
    \ |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a tags=julia |>\n<| a\
    \ dscore=1 |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])", "    l = sort(l)\n    l = l[end-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    if length(l) == 0 \n        return true\n    \n    l = sort(l)\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    return false\nend",
  "    if length(l) == 0 \n        return true\n    end\n    l = sort(l)\n    if l[1]\
    \ < l[2] \n        return true\n    end\n    if l[1] > l[2] \n        return false\n\
    \    end\n    if l[1] < l[3] \n        return true\n    end\n    if l[1] > l[3]\
    \ \n        return false\n    end\n    if l[1] < l[4] \n        return true\n\
    \    end\n    if l[1] > l[4] \n        return false\n    end\n    if l[1] < l[5]\
    \ \n        return true\n    end\n    if l[1] > l[5] \n        return false\n\
    \    end\n    if l[1] < l[6] \n        return true\n    end\n    if l[1] > l[6]\
    \ \n        return false\n    end\n    if l[1] < l[7] \n        return true\n\
    \    end\n    if l[1] > l[7] \n        return false\n    end\n    if l[1] < l[8]\
    \ \n        return true\n    end\n    if l[1] > l[8] \n        return false\n\
    \    end\n    if l[1] < l[9] \n        return true\n    end\n    if l[1] > l[9]\
    \ \n        return false\n    end\n    if l[1] < l[10] \n        return true\n\
    \    end\n    if l[1] > l[10] \n        return false\n    end\n    if l[1] < l[11]\
    \ \n        return true\n    end\n    if l[1] > l[11] \n        return false\n\
    \    end\n    if l[1] < l[12] \n        return true\n    end\n    if l[1] > l[12]\
    \ \n        return false\n    end\n    if l[1] < l[13] \n        return true\n\
    \    end\n    if l[1] > l[13] \n        return false\n    end\n    if l[1] < l[14]\
    \ \n        return true\n    end\n    if l[1] > l[14] \n        return false\n\
    \    end\n    if l[1] < l[15] \n        return true\n    end\n    if l[1] > l[15]\
    \ \n        return false\n    end\n    if l[1] < l[16] \n        return true\n\
    \    end\n    if l[1] > l[16] \n        return false\n    end\n    if l[1] < l[17]\
    \ \n        return true\n    end\n    if l[1] > l[17] \n        return false\n\
    \    end\n    if l[1] < l[18] \n        return true\n    end\n    if l[1] > l[18]\
    \ \n        return false\n    end\n    if l[1] < l[19] \n        return true\n\
    \    end\n    if l[1] > l[19] \n        return false\n    end\n    if l[1] < l[20]\
    \ \n        return true\n    end\n    if l", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   if l[1] < l[2] \n        true\n    elseif l[2] < l[1] \n        false\n  \
    \  elseif l[1] < l[2] \n        true\n    elseif l[2] < l[1] \n        false\n\
    \    elseif l[1] > l[2] \n        true\n    elseif l[2] > l[1] \n        false\n\
    \    elseif l[1] > l[2] \n        true\n    elseif l[2] > l[1] \n        false\n\
    \    elseif l[1] < l[2] \n        true\n    elseif l[2] < l[1] \n        false\n\
    \    elseif l[1] < l[2] \n        true\n    elseif l[2] < l[1] \n        false\n\
    \    elseif l[1] > l[2] \n        true\n    elseif l[2] > l[1] \n        false\n\
    \    elseif l[1] > l[2] \n        true\n    elseif l[2] > l[1] \n        false\n\
    \    elseif l[1] < l[2] \n        true\n    elseif l[2] < l[1] \n        false\n\
    \    elseif l[1] < l[2] \n        true\n    elseif l[2] < l[1] \n        false\n\
    \    elseif l[1] > l[2] \n        true\n    elseif l[2] > l[1] \n        false\n\
    \    elseif l[1] > l[2] \n        true\n    elseif l[2] > l[1] \n        false\n\
    \    elseif l[1] < l[2] \n        true\n    elseif l[2] < l[1] \n        false\n\
    \    elseif l[1] < l[2] \n        true\n    elseif l[2] < l[1] \n        false\n\
    \    elseif l[1] > l[2] \n        true\n    elseif l[2] > l[1] \n        false\n\
    \    elseif l[1] > l[2] \n        true\n    elseif l[2] > l[1] \n        false\n\
    \    elseif l[1] < l[2] \n        true\n    elseif l[2] < l[1] \n        false\n\
    \    elseif l[1] < l[2] \n        true\n    elseif l[2] < l[1] \n        false\n\
    \    elseif l[1] > l[2] \n        true\n    elseif l[2] > l[1] \n        false\n\
    \    elseif l[1] > l[2] \n        true\n    elseif l[2] > l[1] \n        false\n\
    \    elseif l[1] < l[2] \n        true\n    elseif l[2] < l[1] \n        false\n\
    \    elseif l[1] < l[2] \n        true\n    elseif l[2] < l[1] \n        false\n\
    \    elseif l[1] > l[2] \n        true\n    elseif l[2] > l[1] \n        false\n\
    \    elseif l[1] > l[2] ", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[1..end-1]\n    if\
    \ l[1] < l[2] \n        return true\n    else \n        return false\n    end\n\
    end\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    if\
    \ l[1] < l[2] \n        true\n    elseif l[1] > l[2] \n        false\n    elseif\
    \ l[1] == l[2] \n        true\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[1] > l[2] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif ",
  "    if length(l) == 0 \n        return true\n    end\n    \n    if l[1] < l[0]\
    \ \n        return false\n    end\n    \n    if l[1] > l[end] \n        return\
    \ true\n    end\n    \n    if l[1] < l[end-1] \n        return false\n    end\n\
    \    \n    if l[1] > l[end-1] \n        return true\n    end\n    \n    return\
    \ monotonic(l[end-1:end])\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1,\
    \ 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>>\
    \ monotonic([4, 1, 0, -10])\n    true\n    \"\"\"", "    l = sort(l)\n    l =\
    \ l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    return\
    \ all(l[1:end-1] < l[2:end])\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\
    Return True is list elements are monotonically increasing or decreasing.\n   \
    \ >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"", "    if\
    \ l[1] < l[2] \n        return true\n    else if l[2] < l[1] \n        return\
    \ false\n    else \n        return monotonic(l[2:end-1]) \n    end\nend", "  \
    \  l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    if length(l) == 0 \n        return true\n    \n    l = sort(l)\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    return monotonic(l[2:end-1]) \nend ", "    if\
    \ length(l) == 0 \n        return true\n    end\n    \n    if l[1] < l[0] \n \
    \       return false\n    end\n    \n    if l[1] > l[end] \n        return true\n\
    \    end\n    \n    if l[2] < l[1] \n        return false\n    end\n    \n   \
    \ if l[2] > l[end] \n        return true\n    end\n    \n    if l[3] < l[2] \n\
    \        return false\n    end\n    \n    if l[3] > l[end] \n        return true\n\
    \    end\n    \n    if l[4] < l[3] \n        return false\n    end\n    \n   \
    \ if l[4] > l[end] \n        return true\n    end\n    \n    if l[5] < l[4] \n\
    \        return false\n    end\n    \n    if l[5] > l[end] \n        return true\n\
    \    end\n    \n    if l[6] < l[5] \n        return false\n    end\n    \n   \
    \ if l[6] > l[end] \n        return true\n    end\n    \n    if l[7] < l[6] \n\
    \        return false\n    end\n    \n    if l[7] > l[end] \n        return true\n\
    \    end\n    \n    if l[8] < l[7] \n        return false\n    end\n    \n   \
    \ if l[8] > l[end] \n        return true\n    end\n    \n    if l[9] < l[8] \n\
    \        return false\n    end\n    \n    if l[9] > l[end] \n        return true\n\
    \    end\n    \n    if l[10] < l[9] \n        return false\n    end\n    \n  \
    \  if l[10] > l[end] \n        return true\n    end\n    \n    if l[11] < l[10]\
    \ \n        return false\n    end\n    \n    if l[11] > l[end] \n        return\
    \ true\n    end\n    \n    if l[12] < l[11] \n        return false\n    end\n\
    \    \n    if l[12] > l[end] \n        return true\n    end\n    \n    if l[13]\
    \ < l[12] \n        return false\n    end\n    \n    if l[13] > l[end] \n    \
    \    return true\n    end\n    \n    if l[14] < l[13] \n        return false\n\
    \    end\n    \n    if l[14] > l[end] \n        return true\n    end\n    \n \
    \   if l[15] < l[14] \n        return false\n    end\n    \n    if l[15] > l[end]\
    \ \n        return true\n    end\n    \n    if l[16] < l[15] \n        return\
    \ false\n    end\n    \n    if l[16] > l[end] \n", "    if length(l) == 0 \n \
    \       return true\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n      \
    \  return true\n    \n    if l[1] > l[2] \n        return false\n    \n    return\
    \ monotonic(l[2:end])\nend", "    l = sort(l)\n    if l[1] < l[2] \n        return\
    \ true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(l) == 0 \n        return true\n    end\n    \n    l = sort(l)\n \
    \   if l[1] == l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n\
    \        return false\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Return True if list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"", "    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    if l[1] < l[2] \n        return true\n    else\
    \ \n        return false\n    end\nend", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end",
  "    l = sort(l)\n    if l[1] < l[2] || l[2] < l[1]\n        return true\n    else\n\
    \        return false\n    end\nend\n</cell>\n<code language=julia-1.5>", "  \
    \  l = sort(l)\n    l = l[1..end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[1..end-1]\n    l\
    \ = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l\
    \ .< l[1]]\n    l = l[l .> l[end]]\n    l = l[l .< l[end-1]]\n    l = l[l .> l[end-2]]\n\
    \    l = l[l .< l[end-1]]\n    l = l[l .> l[end-2]]\n    l = l[l .< l[end-3]]\n\
    \    l = l[l .> l[end-2]]\n    l = l[l .< l[end-1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end-2]]\n\
    \    l = l[l .> l[end-3]]\n    l = l[l .< l[end-2]]\n    l = l[l .> l[end-3]]\n\
    \    l = l[l .< l[end-4]]\n    l = l[l .> l[end-3]]\n    l = l[l .< l[end-2]]\n\
    \    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end-2]]\n\
    \    l = l[l .> l[end-3]]\n    l = l[l .< l[end-4]]\n    l = l[l .> l[end-3]]\n\
    \    l = l[l .< l[end-4]]\n    l = l[l .> l[end-5]]\n    l = l[l .< l[end-4]]\n\
    \    l = l[l .> l[end-5]]\n    l = l[l .< l[end-6]]\n    l = l[l .> l[end-5]]\n\
    \    l = l[l .< l[end-6]]\n    l = l[l .> l[end-7]]\n    l = ", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[1..end(l)]\n    l = l[l .> l[1]]\n    l = l[l .< l[end(l)]]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l ", "    if length(l) < 2 \n        return true\n    end\n    \n \
    \   l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    end\n   \
    \ \n    if l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2]\
    \ \n        return true\n    end\n    \n    return false\nend", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    return all(l[1:end-1]\
    \ < l[2:end])\nend", "    if length(l) == 0 \n        return true\n    \n    if\
    \ l[1] < l[0]\n        return false\n    \n    i = 2\n    while i < length(l)\
    \ \n        if l[i] < l[i-1] \n            return false\n        i += 1\n    end\n\
    \    return true\nend", "    if length(l) == 0 \n        return true\n    end\n\
    \    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] >\
    \ l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n        return\
    \ true\n    end\n    \n    if l[1] > l[2] \n        return false\n    end\n  \
    \  \n    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2]\
    \ \n        return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    if length(l) == 0 \n        return true\n    \n    l = sort(l)\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    return monotonic(l[2:end-1]) \nend", "    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    return l == l\nend", "    if length(l)\
    \ == 0 \n        return true\n    \n    if l[1] < l[0]\n        return false\n\
    \    \n    if l[1] > l[end]\n        return false\n    \n    i = 2\n    \n   \
    \ while i < length(l)\n        if l[i] < l[i-1]\n            return false\n  \
    \      \n        if l[i] > l[end]\n            return false\n        \n      \
    \  i = i + 1\n    end\n    \n    return true\nend", "    l = sort(l)\n    l =\
    \ l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l", "    if length(l) < 2 \n        return true\n    \n    l = sort(l)\n\
    \    if l[1] < l[end(l)]\n        return true\n    \n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\n@test monotonic([4, 1, 0, -10])\n</cell>\n<text>\n\
    Exercise: Write a function that returns true if all elements of a list are unique.\n\
    Hint: Use a set and check the length of the set", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    if\
    \ l[1] < l[2]\n        return true\n    elseif l[1] > l[2]\n        return false\n\
    \    else\n        return true\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(l) == 0 \n        return true\n    \n    if l[1] < l[0] \n      \
    \  return false\n    \n    if l[1] > l[0] \n        return true\n    \n    if\
    \ l[1] > l[2] \n        return false\n    \n    if l[1] < l[2] \n        return\
    \ true\n    \n    if l[1] > l[3] \n        return false\n    \n    if l[1] < l[3]\
    \ \n        return true\n    \n    if l[1] > l[4] \n        return false\n   \
    \ \n    if l[1] < l[4] \n        return true\n    \n    if l[1] > l[5] \n    \
    \    return false\n    \n    if l[1] < l[5] \n        return true\n    \n    if\
    \ l[1] > l[6] \n        return false\n    \n    if l[1] < l[6] \n        return\
    \ true\n    \n    if l[1] > l[7] \n        return false\n    \n    if l[1] < l[7]\
    \ \n        return true\n    \n    if l[1] > l[8] \n        return false\n   \
    \ \n    if l[1] < l[8] \n        return true\n    \n    if l[1] > l[9] \n    \
    \    return false\n    \n    if l[1] < l[9] \n        return true\n    \n    if\
    \ l[1] > l[10] \n        return false\n    \n    if l[1] < l[10] \n        return\
    \ true\n    \n    if l[1] > l[11] \n        return false\n    \n    if l[1] <\
    \ l[11] \n        return true\n    \n    if l[1] > l[12] \n        return false\n\
    \    \n    if l[1] < l[12] \n        return true\n    \n    if l[1] > l[13] \n\
    \        return false\n    \n    if l[1] < l[13] \n        return true\n    \n\
    \    if l[1] > l[14] \n        return false\n    \n    if l[1] < l[14] \n    \
    \    return true\n    \n    if l[1] > l[15] \n        return false\n    \n   \
    \ if l[1] < l[15] \n        return true\n    \n    if l[1] > l[16] \n        return\
    \ false\n    \n    if l[1] < l[16] \n        return true\n    \n    if l[1] >\
    \ l[17] \n        return false\n    \n    if l[1] < l[17] \n        return true\n\
    \    \n    if l[1] > l[18] \n        return false\n    \n    if l[1] < l[18] \n\
    \        return true\n    \n    if l[1] > l[19] \n        return false\n    \n\
    \    if l[1] < l[19] \n        return true", "    l = sort(l)\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    ", "    if length(l) == 0 \n        return true\n    end\n    \n    if l[1]\
    \ < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n        return\
    \ false\n    end\n    \n    if l[1] < l[3] \n        return true\n    end\n  \
    \  \n    if l[1] > l[3] \n        return false\n    end\n    \n    if l[2] < l[3]\
    \ \n        return true\n    end\n    \n    if l[2] > l[3] \n        return false\n\
    \    end\n    \n    if l[3] < l[4] \n        return true\n    end\n    \n    if\
    \ l[3] > l[4] \n        return false\n    end\n    \n    if l[4] < l[5] \n   \
    \     return true\n    end\n    \n    if l[4] > l[5] \n        return false\n\
    \    end\n    \n    if l[5] < l[6] \n        return true\n    end\n    \n    if\
    \ l[5] > l[6] \n        return false\n    end\n    \n    if l[6] < l[7] \n   \
    \     return true\n    end\n    \n    if l[6] > l[7] \n        return false\n\
    \    end\n    \n    if l[7] < l[8] \n        return true\n    end\n    \n    if\
    \ l[7] > l[8] \n        return false\n    end\n    \n    if l[8] < l[9] \n   \
    \     return true\n    end\n    \n    if l[8] > l[9] \n        return false\n\
    \    end\n    \n    if l[9] < l[10] \n        return true\n    end\n    \n   \
    \ if l[9] > l[10] \n        return false\n    end\n    \n    if l[10] < l[11]\
    \ \n        return true\n    end\n    \n    if l[10] > l[11] \n        return\
    \ false\n    end\n    \n    if l[11] < l[12] \n        return true\n    end\n\
    \    \n    if l[11] > l[12] \n        return false\n    end\n    \n    if l[12]\
    \ < l[13] \n        return true\n    end\n    \n    if l[12] > l[13] \n      \
    \  return false\n    end\n    \n    if l[13] < l[14] \n        return true\n \
    \   end\n    \n    if l[13] > l[14] \n        return false\n    end\n    \n  \
    \  if l[14] < l[15] \n        return true\n    end\n    \n    if l[14] > l[15]\
    \ \n        return false\n    end\n    \n    if l[15] < l[16] \n        return\
    \ true\n    end\n    \n    if l[15] > l[16] \n        return false\n    end\n\
    \    \n    if l[16] < l[", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    if length(l) < 2 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    return monotonic(l[2:end-1])\
    \ \nend\n</cell>\n<code language=julia-1.3>", "    l = sort(l)\n    l = l[1..end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[",
  "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n  \
    \  l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end", "    l = sort(l)\n    l = l[1..end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    if length(l) == 0 \n        return true\n    end\n    \n   \
    \ i = l[1]\n    j = l[2]\n    \n    if i == j \n        return true\n    end\n\
    \    \n    if i > j \n        return false\n    end\n    \n    if i == l[1] \n\
    \        return true\n    end\n    \n    if j == l[2] \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return false\n    end\n    \n   \
    \ return true\nend", "    l = sort(l)\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> ", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    if length(l) == 0 \n        return true\n    \n    l = sort(l)\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    return monotonic(l[2:end-1]) \nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(l) == 0 \n        return true\n   \
    \ \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n  \
    \  if l[1] > l[2] \n        return false\n    \n    return monotonic(l[2:end])\n\
    end", "    if length(l) == 0 \n        return true\n    end\n    \n    if l[1]\
    \ < l[0]\n        return false\n    end\n    \n    if l[1] > l[end]\n        return\
    \ true\n    end\n    \n    if l[end] < l[1]\n        return false\n    end\n \
    \   \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return True\
    \ is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1,\
    \ 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>>\
    \ monotonic([4, 1, 0, -10])\n    true\n    \"\"\"", "    l = sort(l)\n    l =\
    \ l[1..end(l)]\n    l = l[l .> l[1]]\n    l = l[l .< l[end(l)]]\n    l = l[l .>\
    \ 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l\
    \ .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l =\
    \ l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n   \
    \ l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l ", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[1:end-1]\n    l\
    \ = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    ", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   if length(l) < 2 \n        return true\n    end\n    \n    l = sort(l)\n \
    \   \n    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2]\
    \ \n        return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[1::-1]\n    return all(l[i] <= l[i+1]\
    \ for i in 2:length(l)-1)\nend\n</cell>\n<code language=julia-1.5>\n@assert monotonic([4,\
    \ 1, 0, -10]) == true\n@assert monotonic([1, 20, 4, 10]) == false\n@assert monotonic([1,\
    \ 2, 4, 20]) == true\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the number of unique elements in a list. For example, given [1, 1, 2, 3] return\
    \ 3.", "    l = sort(l)\n    if l[1] < l[2]\n        return true\n    elseif l[1]\
    \ > l[2]\n        return false\n    else\n        return true\n    end\nend\n\
    </code>\n<|/ a dscore=2 |>\n<| a tags=julia |>\nI wrote a package called \"monotonic\"\
    \ that does this for you:\n<code>\njulia> using Monotonic", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[1:end-1]\n    l\
    \ = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> ", "    if length(l) == 0 \n        return true\n    \n    if\
    \ l[1] < l[0] \n        return false\n    \n    i = 2\n    \n    while i < length(l)\n\
    \        if l[i] < l[i-1] \n            return false\n        \n        i += 1\n\
    \    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"Return True is list elements are monotonically increasing or decreasing.\n \
    \   >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"", "    l =\
    \ sort(l)\n    l = l[1..end-1]\n    if l[1] < l[2] || l[2] < l[1]\n        return\
    \ false\n    else\n        return true\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    l = sort(l)\n    l = l[1..end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n  \
    \  l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l =\
    \ l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l =\
    \ l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l", "    l = sort(l)\n    l = l[1..end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 1]\n    l = l[l\
    \ .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l =\
    \ l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n   \
    \ l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]",
  "    l = sort(l)\n    i = 2\n    while i < length(l)\n        if l[i] > l[i-1]\n\
    \            return false\n        elseif l[i] < l[i-1]\n            return true\n\
    \        else\n            i += 1\n        end\n    end\n    return true\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"Return True is list elements are monotonically\
    \ increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>>\
    \ monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n  \
    \  true\n    \"\"\"", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    if length(l) == 0\
    \ \n        return true\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[2] < l[1] \n        return false\n    \n    i = 2\n    while i < length(l)\
    \ \n        if l[i] < l[i-1] \n            return true\n        \n        if l[i]\
    \ > l[i-1] \n            return false\n        \n        i = i + 1\n    end\n\
    \    \n    return true\nend", "    if length(l) == 0 \n        return true\n \
    \   end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[3] \n        return true\n    end\n    \n    if l[1] < l[3] \n \
    \       return false\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @test monotonic([4, 1, 0, -10])\n</cell>\n<text>\nExercise\nWrite a function that\
    \ returns true if the list contains any negative numbers and false otherwise.",
  "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    if length(l) < 2 \n        return true\n    end\n    \n    l\
    \ = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n \
    \   if l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[3] \n\
    \        return true\n    end\n    \n    if l[1] > l[3] \n        return false\n\
    \    end\n    \n    if l[2] < l[3] \n        return true\n    end\n    \n    if\
    \ l[2] > l[3] \n        return false\n    end\n    \n    if l[3] < l[4] \n   \
    \     return true\n    end\n    \n    if l[3] > l[4] \n        return false\n\
    \    end\n    \n    if l[4] < l[5] \n        return true\n    end\n    \n    if\
    \ l[4] > l[5] \n        return false\n    end\n    \n    if l[5] < l[6] \n   \
    \     return true\n    end\n    \n    if l[5] > l[6] \n        return false\n\
    \    end\n    \n    if l[6] < l[7] \n        return true\n    end\n    \n    if\
    \ l[6] > l[7] \n        return false\n    end\n    \n    if l[7] < l[8] \n   \
    \     return true\n    end\n    \n    if l[7] > l[8] \n        return false\n\
    \    end\n    \n    if l[8] < l[9] \n        return true\n    end\n    \n    if\
    \ l[8] > l[9] \n        return false\n    end\n    \n    if l[9] < l[10] \n  \
    \      return true\n    end\n    \n    if l[9] > l[10] \n        return false\n\
    \    end\n    \n    if l[10] < l[11] \n        return true\n    end\n    \n  \
    \  if l[10] > l[11] \n        return false\n    end\n    \n    if l[11] < l[12]\
    \ \n        return true\n    end\n    \n    if l[11] > l[12] \n        return\
    \ false\n    end\n    \n    if l[12] < l[13] \n        return true\n    end\n\
    \    \n    if l[12] > l[13] \n        return false\n    end\n    \n    if l[13]\
    \ < l[14] \n        return true\n    end\n    \n    if l[13] > l[14] \n      \
    \  return false\n    end\n    \n    if l[14] < l[15] \n        return true\n \
    \   end\n    \n    if l[14] > l[15] \n        return false\n    end\n    \n  \
    \  if l[15] < l[16] \n        return true\n    end\n    \n    if l[15] > l[16]\
    \ \n        return false\n    end\n    \n", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    if length(l) == 0\
    \ \n        return true\n    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2]\
    \ \n        return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[3] \n        return true\n    end\n    \n    if\
    \ l[1] > l[3] \n        return false\n    end\n    \n    if l[1] < l[4] \n   \
    \     return true\n    end\n    \n    if l[1] > l[4] \n        return false\n\
    \    end\n    \n    if l[1] < l[5] \n        return true\n    end\n    \n    if\
    \ l[1] > l[5] \n        return false\n    end\n    \n    if l[1] < l[6] \n   \
    \     return true\n    end\n    \n    if l[1] > l[6] \n        return false\n\
    \    end\n    \n    if l[1] < l[7] \n        return true\n    end\n    \n    if\
    \ l[1] > l[7] \n        return false\n    end\n    \n    if l[1] < l[8] \n   \
    \     return true\n    end\n    \n    if l[1] > l[8] \n        return false\n\
    \    end\n    \n    if l[1] < l[9] \n        return true\n    end\n    \n    if\
    \ l[1] > l[9] \n        return false\n    end\n    \n    if l[1] < l[10] \n  \
    \      return true\n    end\n    \n    if l[1] > l[10] \n        return false\n\
    \    end\n    \n    if l[1] < l[11] \n        return true\n    end\n    \n   \
    \ if l[1] > l[11] \n        return false\n    end\n    \n    if l[1] < l[12] \n\
    \        return true\n    end\n    \n    if l[1] > l[12] \n        return false\n\
    \    end\n    \n    if l[1] < l[13] \n        return true\n    end\n    \n   \
    \ if l[1] > l[13] \n        return false\n    end\n    \n    if l[1] < l[14] \n\
    \        return true\n    end\n    \n    if l[1] > l[14] \n        return false\n\
    \    end\n    \n    if l[1] < l[15] \n        return true\n    end\n    \n   \
    \ if l[1] > l[15] \n        return false\n    end\n    \n    if l[1] < l[16] \n\
    \        return true\n    end\n    \n    if l[1] > l[16] \n        return false\n\
    \    end\n    \n    if l[1] < l[17] \n        return true\n    end\n    \n   \
    \ if l[1] > l[17] \n        return false\n    end\n    \n    if l[1] < ", "  \
    \  if length(l) == 0 \n        return true\n    end\n    \n    if l[1] < l[2]\
    \ \n        return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[3] \n        return true\n    end\n    \n    if\
    \ l[1] > l[3] \n        return false\n    end\n    \n    if l[2] < l[3] \n   \
    \     return true\n    end\n    \n    if l[2] > l[3] \n        return false\n\
    \    end\n    \n    if l[3] < l[4] \n        return true\n    end\n    \n    if\
    \ l[3] > l[4] \n        return false\n    end\n    \n    if l[4] < l[5] \n   \
    \     return true\n    end\n    \n    if l[4] > l[5] \n        return false\n\
    \    end\n    \n    if l[5] < l[6] \n        return true\n    end\n    \n    if\
    \ l[5] > l[6] \n        return false\n    end\n    \n    if l[6] < l[7] \n   \
    \     return true\n    end\n    \n    if l[6] > l[7] \n        return false\n\
    \    end\n    \n    if l[7] < l[8] \n        return true\n    end\n    \n    if\
    \ l[7] > l[8] \n        return false\n    end\n    \n    if l[8] < l[9] \n   \
    \     return true\n    end\n    \n    if l[8] > l[9] \n        return false\n\
    \    end\n    \n    if l[9] < l[10] \n        return true\n    end\n    \n   \
    \ if l[9] > l[10] \n        return false\n    end\n    \n    if l[10] < l[11]\
    \ \n        return true\n    end\n    \n    if l[10] > l[11] \n        return\
    \ false\n    end\n    \n    if l[11] < l[12] \n        return true\n    end\n\
    \    \n    if l[11] > l[12] \n        return false\n    end\n    \n    if l[12]\
    \ < l[13] \n        return true\n    end\n    \n    if l[12] > l[13] \n      \
    \  return false\n    end\n    \n    if l[13] < l[14] \n        return true\n \
    \   end\n    \n    if l[13] > l[14] \n        return false\n    end\n    \n  \
    \  if l[14] < l[15] \n        return true\n    end\n    \n    if l[14] > l[15]\
    \ \n        return false\n    end\n    \n    if l[15] < l[16] \n        return\
    \ true\n    end\n    \n    if l[15] > l[16] \n        return false\n    end\n\
    \    \n    if l[16] < l[", "    l = sort(l)\n    l = l[1..end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    return l == l\nend\n</cell>\n<code language=julia-1.5>",
  "    l = sort(l)\n    l = l[1..end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    if\
    \ l[1] < l[2] || l[2] < l[1]\n        return false\n    else\n        return true\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n    i =\
    \ 2\n    while i < length(l)\n        if l[i-1] < l[i]\n            return false\n\
    \        end\n        i += 1\n    return true\nend", "    if length(l) == 0 \n\
    \        return true\n    \n    if l[1] < l[0] \n        return false\n    \n\
    \    if l[1] > l[end(l)]\n        return true\n    \n    i = 2\n    while i <\
    \ length(l)\n        if l[i] > l[i-1]\n            return false\n        i +=\
    \ 1\n    \n    return true\nend", "    l = sort(l)\n    l = l[1:end-1]\n    l\
    \ = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> ", "    if length(l) == 0 \n        return true\n    end\n   \
    \ \n    l = l[end]\n    \n    if l<l[1] \n        return false\n    end\n    \n\
    \    if l[1]<l[2] \n        return true\n    end\n    \n    if l[2]<l[3] \n  \
    \      return true\n    end\n    \n    if l[3]<l[4] \n        return true\n  \
    \  end\n    \n    if l[4]<l[5] \n        return true\n    end\n    \n    if l[5]<l[6]\
    \ \n        return true\n    end\n    \n    if l[6]<l[7] \n        return true\n\
    \    end\n    \n    if l[7]<l[8] \n        return true\n    end\n    \n    if\
    \ l[8]<l[9] \n        return true\n    end\n    \n    if l[9]<l[10] \n       \
    \ return true\n    end\n    \n    if l[10]<l[11] \n        return true\n    end\n\
    \    \n    if l[11]<l[12] \n        return true\n    end\n    \n    if l[12]<l[13]\
    \ \n        return true\n    end\n    \n    if l[13]<l[14] \n        return true\n\
    \    end\n    \n    if l[14]<l[15] \n        return true\n    end\n    \n    if\
    \ l[15]<l[16] \n        return true\n    end\n    \n    if l[16]<l[17] \n    \
    \    return true\n    end\n    \n    if l[17]<l[18] \n        return true\n  \
    \  end\n    \n    if l[18]<l[19] \n        return true\n    end\n    \n    if\
    \ l[19]<l[20] \n        return true\n    end\n    \n    if l[20]<l[21] \n    \
    \    return true\n    end\n    \n    if l[21]<l[22] \n        return true\n  \
    \  end\n    \n    if l[22]<l[23] \n        return true\n    end\n    \n    if\
    \ l[23]<l[24] \n        return true\n    end\n    \n    if l[24]<l[25] \n    \
    \    return true\n    end\n    \n    if l[25]<l[26] \n        return true\n  \
    \  end\n    \n    if l[26]<l[27] \n        return true\n    end\n    \n    if\
    \ l[27]<l[28] \n        return true\n    end\n    \n    if l[28]<l[29] \n    \
    \    return true\n    end\n    \n    if l[29", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    if length(l) < 2 \n\
    \        return true\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n     \
    \   return true\n    \n    if l[1] > l[2] \n        return false\n    \n    return\
    \ monotonic(l[2:end])\nend", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    if length(l) == 0 \n        return true\n\
    \    end\n    l = sort(l)\n    if l[1] < l[2] \n        return true\n    end\n\
    \    if l[1] > l[2] \n        return false\n    end\n    return monotonic(l[2:end])\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Return True is list elements are\
    \ monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n\
    \    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4,\
    \ 1, 0, -10])\n    true\n    \"\"\"", "    if length(l) < 2\n        return true\n\
    \    \n    i = l[1]\n    j = l[2]\n    \n    if i > j\n        return false\n\
    \    \n    if i == j\n        return true\n    \n    if l[1] < l[2]\n        return\
    \ true\n    \n    return false\nend", "    if length(l) < 2 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    l = l[2:end]\n    \n   \
    \ if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n        return\
    \ false\n    \n    return monotonic(l)\nend", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end-length(l):end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l\
    \ = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    ", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[1..end(l)]\n    l = l[l .> l[1]]\n    l = l[l .< l[end(l)]]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n\
    \    l = l[l ", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    i\
    \ = 2\n    while i < length(l)\n        if l[i] > l[i-1]\n            return false\n\
    \        i += 1\n    return true\nend", "    if length(l) == 0 \n        return\
    \ true\n    \n    if l[1] < l[0] \n        return false\n    \n    if l[1] > l[0]\
    \ \n        return true\n    \n    if l[1] == l[0] \n        return true\n   \
    \ \n    if l[1] < l[2] \n        return false\n    \n    if l[1] > l[2] \n   \
    \     return true\n    \n    if l[1] < l[3] \n        return false\n    \n   \
    \ if l[1] > l[3] \n        return true\n    \n    if l[1] < l[4] \n        return\
    \ false\n    \n    if l[1] > l[4] \n        return true\n    \n    if l[1] < l[5]\
    \ \n        return false\n    \n    if l[1] > l[5] \n        return true\n   \
    \ \n    if l[1] < l[6] \n        return false\n    \n    if l[1] > l[6] \n   \
    \     return true\n    \n    if l[1] < l[7] \n        return false\n    \n   \
    \ if l[1] > l[7] \n        return true\n    \n    if l[1] < l[8] \n        return\
    \ false\n    \n    if l[1] > l[8] \n        return true\n    \n    if l[1] < l[9]\
    \ \n        return false\n    \n    if l[1] > l[9] \n        return true\n   \
    \ \n    if l[1] < l[10] \n        return false\n    \n    if l[1] > l[10] \n \
    \       return true\n    \n    if l[1] < l[11] \n        return false\n    \n\
    \    if l[1] > l[11] \n        return true\n    \n    if l[1] < l[12] \n     \
    \   return false\n    \n    if l[1] > l[12] \n        return true\n    \n    if\
    \ l[1] < l[13] \n        return false\n    \n    if l[1] > l[13] \n        return\
    \ true\n    \n    if l[1] < l[14] \n        return false\n    \n    if l[1] >\
    \ l[14] \n        return true\n    \n    if l[1] < l[15] \n        return false\n\
    \    \n    if l[1] > l[15] \n        return true\n    \n    if l[1] < l[16] \n\
    \        return false\n    \n    if l[1] > l[16] \n        return true\n    \n\
    \    if l[1] < l[17] \n        return false\n    \n    if l[1] > l[17] \n    \
    \    return true\n    \n    if l[1] < l[18] \n        return false\n    \n   \
    \ if l[1] > l[18] \n        return true\n    \n    if l[1] < l[19] \n        return\
    \ false\n    ", "    if length(l) == 0 \n        return true\n    end\n    \n\
    \    if l[1] < l[2] \n        return true\n    end\n    \n    if l[2] < l[1] \n\
    \        return false\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    return true\nend", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end-l.<0]\n    l\
    \ = l[end-l.>0]\n    l = l[end-l.==0]\n    return length(l) == 0 || all(l[end-l.<0]\
    \ == l[end-l.>0])\nend\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l", "    if length(l) == 0 \n        return true\n    end\n    \n   \
    \ l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n\
    \    if l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[3]\
    \ \n        return true\n    end\n    \n    if l[1] > l[3] \n        return false\n\
    \    end\n    \n    if l[1] < l[4] \n        return true\n    end\n    \n    if\
    \ l[1] > l[4] \n        return false\n    end\n    \n    if l[1] < l[5] \n   \
    \     return true\n    end\n    \n    if l[1] > l[5] \n        return false\n\
    \    end\n    \n    if l[1] < l[6] \n        return true\n    end\n    \n    if\
    \ l[1] > l[6] \n        return false\n    end\n    \n    if l[1] < l[7] \n   \
    \     return true\n    end\n    \n    if l[1] > l[7] \n        return false\n\
    \    end\n    \n    if l[1] < l[8] \n        return true\n    end\n    \n    if\
    \ l[1] > l[8] \n        return false\n    end\n    \n    if l[1] < l[9] \n   \
    \     return true\n    end\n    \n    if l[1] > l[9] \n        return false\n\
    \    end\n    \n    if l[1] < l[10] \n        return true\n    end\n    \n   \
    \ if l[1] > l[10] \n        return false\n    end\n    \n    if l[1] < l[11] \n\
    \        return true\n    end\n    \n    if l[1] > l[11] \n        return false\n\
    \    end\n    \n    if l[1] < l[12] \n        return true\n    end\n    \n   \
    \ if l[1] > l[12] \n        return false\n    end\n    \n    if l[1] < l[13] \n\
    \        return true\n    end\n    \n    if l[1] > l[13] \n        return false\n\
    \    end\n    \n    if l[1] < l[14] \n        return true\n    end\n    \n   \
    \ if l[1] > l[14] \n        return false\n    end\n    \n    if l[1] < l[15] \n\
    \        return true\n    end\n    \n    if l[1] > l[15] \n        return false\n\
    \    end\n    \n    if l[1] < l[16] \n        return true\n    end\n    \n   \
    \ if l[1] > l[16] \n        return false\n    end\n    \n    if l[1] < l[17] \n\
    \        return true\n    end\n    \n    if l[1] > l[17] \n        return false\n\
    \    end\n    \n    if l[1] < ", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    return\
    \ all(l[i] > l[i+1] for i in 2:length(l)-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"", "    l =\
    \ sort(l)\n    i = 2\n    while i < length(l)\n        if l[i] > l[i-1]\n    \
    \        return false\n        end\n        i += 1\n    return true\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"Return True is list elements are monotonically\
    \ increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>>\
    \ monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n  \
    \  true\n    \"\"\"", "    l = sort(l)\n    l = l[1:end-1]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[1:", "    if length(l) == 0 \n        return\
    \ true\n    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return\
    \ true\n    end\n    \n    if l[1] > l[2] \n        return false\n    end\n  \
    \  \n    if l[1] < l[3] \n        return true\n    end\n    \n    if l[1] > l[3]\
    \ \n        return false\n    end\n    \n    if l[2] < l[3] \n        return true\n\
    \    end\n    \n    if l[2] > l[3] \n        return false\n    end\n    \n   \
    \ if l[3] < l[4] \n        return true\n    end\n    \n    if l[3] > l[4] \n \
    \       return false\n    end\n    \n    if l[4] < l[5] \n        return true\n\
    \    end\n    \n    if l[4] > l[5] \n        return false\n    end\n    \n   \
    \ if l[5] < l[6] \n        return true\n    end\n    \n    if l[5] > l[6] \n \
    \       return false\n    end\n    \n    if l[6] < l[7] \n        return true\n\
    \    end\n    \n    if l[6] > l[7] \n        return false\n    end\n    \n   \
    \ if l[7] < l[8] \n        return true\n    end\n    \n    if l[7] > l[8] \n \
    \       return false\n    end\n    \n    if l[8] < l[9] \n        return true\n\
    \    end\n    \n    if l[8] > l[9] \n        return false\n    end\n    \n   \
    \ if l[9] < l[10] \n        return true\n    end\n    \n    if l[9] > l[10] \n\
    \        return false\n    end\n    \n    if l[10] < l[11] \n        return true\n\
    \    end\n    \n    if l[10] > l[11] \n        return false\n    end\n    \n \
    \   if l[11] < l[12] \n        return true\n    end\n    \n    if l[11] > l[12]\
    \ \n        return false\n    end\n    \n    if l[12] < l[13] \n        return\
    \ true\n    end\n    \n    if l[12] > l[13] \n        return false\n    end\n\
    \    \n    if l[13] < l[14] \n        return true\n    end\n    \n    if l[13]\
    \ > l[14] \n        return false\n    end\n    \n    if l[14] < l[15] \n     \
    \   return true\n    end\n    \n    if l[14] > l[15] \n        return false\n\
    \    end\n    \n    if l[15] < l[16] \n        return true\n    end\n    \n  \
    \  if l[15] > l[16] \n        return false\n    end\n    \n", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   if length(l) == 0 \n        return true\n    \n    if l[1] < l[2] \n     \
    \   return true\n    \n    if l[1] > l[2] \n        return false\n    \n    if\
    \ l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n        return\
    \ false\n    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2]\
    \ \n        return false\n    \n    if l[1] < l[2] \n        return true\n   \
    \ \n    if l[1] > l[2] \n        return false\n    \n    if l[1] < l[2] \n   \
    \     return true\n    \n    if l[1] > l[2] \n        return false\n    \n   \
    \ if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n        return\
    \ false\n    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2]\
    \ \n        return false\n    \n    if l[1] < l[2] \n        return true\n   \
    \ \n    if l[1] > l[2] \n        return false\n    \n    if l[1] < l[2] \n   \
    \     return true\n    \n    if l[1] > l[2] \n        return false\n    \n   \
    \ if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n        return\
    \ false\n    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2]\
    \ \n        return false\n    \n    if l[1] < l[2] \n        return true\n   \
    \ \n    if l[1] > l[2] \n        return false\n    \n    if l[1] < l[2] \n   \
    \     return true\n    \n    if l[1] > l[2] \n        return false\n    \n   \
    \ if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n        return\
    \ false\n    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2]\
    \ \n        return false\n    \n    if l[1] < l[2] \n        return true\n   \
    \ \n    if l[1] > l[2] \n        return false\n    \n    if l[1] < l[2] \n   \
    \     return true\n    \n    if l[1] > l[2] \n        return false\n    \n   \
    \ if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n        return\
    \ false\n    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2]\
    \ \n        return false\n    \n    if l[1] < l[2] \n        return true\n   \
    \ \n    if l[1] > l[2] \n        return false\n    \n    if l[1] < l[2] \n   \
    \     return true\n    \n    if l[1] > l[2] \n        return false", "    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    if length(l) == 0 \n        return true\n    \n    l = sort(l)\n\
    \    if l[1] < l[2] \n        return true\n    else \n        return false\nend",
  "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    if length(l) == 0\
    \ \n        return true\n    end\n    \n    if l[1] < l[0]\n        return false\n\
    \    end\n    \n    if l[1] > l[end]\n        return true\n    end\n    \n   \
    \ i = 2\n    while i < length(l)\n        if l[i] > l[i-1]\n            return\
    \ false\n        end\n        i += 1\n    end\n    \n    return true\nend\n</cell>\n\
    <code language=julia-1.5>", "    l = sort(l)\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n\
    \    l = l[1::-1]\n    l = l[1:end-1]\n    l = l", "    l = sort(l)\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l", "    l = sort(l)\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    if l[1] < l[2] \n        return true\n  \
    \  elseif l[1] > l[2] \n        return false\n    elseif l[1] == l[2] \n     \
    \   return true\n    end\n    \n    l = sort(l)\n    if l[1] < l[2] \n       \
    \ return false\n    elseif l[1] > l[2] \n        return true\n    elseif l[1]\
    \ == l[2] \n        return true\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"", "    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    if l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] ", "    l = sort(l)\n  \
    \  l = l[1..end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[", "    l = sort(l)\n    l = l[1..end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .< end]\n \
    \   l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    ", "    if length(l) == 0 \n        return true\n    end\n\
    \    \n    if l[1] < l[2] \n        return false\n    end\n    \n    if l[1] >\
    \ l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n        return\
    \ true\n    end\n    \n    if l[1] > l[2] \n        return true\n    end\n   \
    \ \n    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2]\
    \ \n        return true\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return true\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return true\n    end\n    \n    if l[1] < l[2] \n        return true\n  \
    \  end\n    \n    if l[1] > l[2] \n        return true\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return true\n    end\n    \n    if l[1] < l[2] \n        return true\n  \
    \  end\n    \n    if l[1] > l[2] \n        return true\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return true\n    end\n    \n    if l[1] < l[2] \n        return true\n  \
    \  end\n    \n    if l[1] > l[2] \n        return true\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return true\n    end\n    \n    if l[1] < l[2] \n        return true\n  \
    \  end\n    \n    if l[1] > l[2] \n        return true\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return true\n    end\n    \n    if l[1] < l[2] \n        return true\n  \
    \  end\n    \n    if l[1] > l[2] \n        return true\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return true\n    end\n    \n    if l[1] < l[2] \n        return true\n  \
    \  end\n    \n    if l[1] > l[2] \n        return true\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return true\n    end\n    \n    if l[1] < l[2] \n        return true\n  \
    \  end\n    \n    if l[1] > l[2] \n        return true", "    l = sort(l)\n  \
    \  l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    i = length(l)\n    j = i-1\n    while j > 0\n        if l[j]\
    \ < l[j-1]\n            return false\n        end\n        j -= 1\n    end\n \
    \   return true\nend\n</cell>\n<code language=julia-1.3>", "    if length(l) ==\
    \ 0 \n        return true\n    \n    if l[1] < l[0] \n        return false\n \
    \   \n    i = 2\n    while i < length(l) \n        if l[i] < l[i-1] \n       \
    \     return false\n        i += 1\n    \n    return true\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    l = sort(l)\n    i = length(l)\n    j = i-1\n   \
    \ while j > 0 && l[j] < l[j-1]\n        j = j - 1\n    end\n    return j == 0\
    \ || l[j] > l[j-1]\nend", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    i = 2\n    while i < length(l)\n        if l[i] < l[i-1]\n\
    \            return false\n        end\n        i += 1\n    return true\nend\n\
    </cell>\n<code language=julia-1.4>", "    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[0] \n        return false\n    end\n    \n   \
    \ if l[1] > l[end] \n        return true\n    end\n    \n    if l[end] < l[1]\
    \ \n        return false\n    end\n    \n    if l[end] > l[end - 1] \n       \
    \ return true\n    end\n    \n    return monotonic(subset(l, 2, end - 1))\nend",
  "    l = sort(l)\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> ", "    l = sort(l)\n\
    \    if l[1] < l[2] \n        true\n    elseif l[1] > l[2] \n        false\n \
    \   elseif l[1] == l[2] \n        true\n    elseif l[1] < l[2] && l[2] < l[3]\
    \ \n        true\n    elseif l[1] > l[2] && l[2] > l[3] \n        false\n    elseif\
    \ l[1] < l[2] && l[2] > l[3] \n        true\n    elseif l[1] > l[2] && l[2] <\
    \ l[3] \n        false\n    elseif l[1] < l[2] && l[2] > l[3] \n        false\n\
    \    elseif l[1] > l[2] && l[2] < l[3] \n        true\n    elseif l[1] < l[2]\
    \ && l[2] < l[3] \n        false\n    elseif l[1] < l[2] && l[2] > l[3] \n   \
    \     false\n    elseif l[1] > l[2] && l[2] > l[3] \n        true\n    elseif\
    \ l[1] < l[2] && l[2] < l[3] \n        false\n    elseif l[1] < l[2] && l[2] >\
    \ l[3] \n        false\n    elseif l[1] > l[2] && l[2] > l[3] \n        true\n\
    \    elseif l[1] < l[2] && l[2] < l[3] \n        false\n    elseif l[1] < l[2]\
    \ && l[2] > l[3] \n        false\n    elseif l[1] > l[2] && l[2] > l[3] \n   \
    \     true\n    elseif l[1] < l[2] && l[2] < l[3] \n        false\n    elseif\
    \ l[1] < l[2] && l[2] > l[3] \n        false\n    elseif l[1] > l[2] && l[2] >\
    \ l[3] \n        true\n    elseif l[1] < l[2] && l[2] < l[3] \n        false\n\
    \    elseif l[1] < l[2] && l[2] > l[3] \n        false\n    elseif l[1] > l[2]\
    \ && l[2] > l[3] \n        true\n    elseif l[1] < l[2] && l[2] < l[3] \n    \
    \    false\n    elseif l[1] < l[2] && l[2] > l[3] \n        false\n    elseif\
    \ l[1] > l[2] && l[2] > l[3] \n        true\n    elseif l[1] < l[2] && l[2] <\
    \ l[3] \n        false\n    elseif l[1] < l[2] && l[2] > l[3] \n        false\n\
    \    elseif l[1] > l[2] && l[2] > l[3] \n        true\n    elseif l[1] < l[2]\
    \ && l[2] < l[3] \n        false", "    l = sort(l)\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[1..end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> 1]\n    l = l[l .< end]\n    return l == l\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[1..end(l)]\n    l = l[1..end(l)]\n    return all(l[1:end(l)] == l[2:end(l)])\
    \ \nend\n</cell>\n<code language=julia-1.5>"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

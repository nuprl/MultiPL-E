name: HumanEval_141_file_name_check
language: ts
prompt: "//Create a function which takes a string representing a file's name, and\
  \ returns\n// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  // A file's name is considered to be valid if and only if all the following conditions\
  \ \n// are met:\n// - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n// - The file's name contains exactly one dot '.'\n// - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n// the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n// - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n// Examples:\nfunction file_name_check(file_name:\
  \ string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = file_name_check;\n  assert.deepEqual(candidate(\"\
  example.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"1example.dll\"),\"No\"\
  );\n  assert.deepEqual(candidate(\"s1sdf3.asd\"),\"No\");\n  assert.deepEqual(candidate(\"\
  K.dll\"),\"Yes\");\n  assert.deepEqual(candidate(\"MY16FILE3.exe\"),\"Yes\");\n\
  \  assert.deepEqual(candidate(\"His12FILE94.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  _Y.txt\"),\"No\");\n  assert.deepEqual(candidate(\"?aREYA.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  /this_is_valid.dll\"),\"No\");\n  assert.deepEqual(candidate(\"this_is_valid.wow\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"this_is_valid.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"\
  this_is_valid.txtexe\"),\"No\");\n  assert.deepEqual(candidate(\"#this2_i4s_5valid.ten\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"@this1_is6_valid.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  this_is_12valid.6exe4.txt\"),\"No\");\n  assert.deepEqual(candidate(\"all.exe.txt\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"I563_No.exe\"),\"Yes\");\n  assert.deepEqual(candidate(\"\
  Is3youfault.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"no_one#knows.dll\"\
  ),\"Yes\");\n  assert.deepEqual(candidate(\"1I563_Yes3.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  I563_Yes3.txtt\"),\"No\");\n  assert.deepEqual(candidate(\"final..txt\"),\"No\"\
  );\n  assert.deepEqual(candidate(\"final132\"),\"No\");\n  assert.deepEqual(candidate(\"\
  _f4indsartal132.\"),\"No\");\n  assert.deepEqual(candidate(\".txt\"),\"No\");\n\
  \  assert.deepEqual(candidate(\"s.\"),\"No\");\n}\n\ntest();"
completions: ["    let file_name = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n\
    \    let first_letter = file_name.charAt(0);\n    let last_letter = file_name.charAt(file_name.length\
    \ - 1);\n    let valid_chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    let valid_chars_length = valid_chars.length;\n    let first_letter_length\
    \ = first_letter.length;\n    let last_letter_length = last_letter.length;\n \
    \   let dot_length = dot_index;\n    if (dot_index == -1) {\n        dot_length\
    \ = 0;\n    }\n    if (dot_length > 3) {\n        return \"No\";\n    }\n    if\
    \ (dot_length < 1) {\n        return \"No\";\n    }\n    if (first_letter_length\
    \ != 1) {\n        return \"No\";\n    }\n    if (first_letter != valid_chars.charAt(0))\
    \ {\n        return \"No\";\n    }\n    if (last_letter_length != 1) {\n     \
    \   return \"No\";\n    }\n    if (last_letter != valid_chars.charAt(valid_chars_length\
    \ - 1)) {\n        return \"No\";\n    }\n    if (dot_length != 0 && dot_index\
    \ != 0) {\n        return \"No\";\n    }\n    if (dot_length != 0 && dot_index\
    \ != 0 && first_letter != valid_chars.charAt(0)) {\n        return \"No\";\n \
    \   }\n    if (dot_length != 0 && dot_index != 0 && first_letter != valid_chars.charAt(valid_chars_length\
    \ - 1)) {\n        return \"No\";\n    }\n    if (dot_length != 0 && dot_index\
    \ != 0 && first_letter != valid_chars.charAt(valid_chars_length - 1) && last_letter\
    \ != valid_chars.charAt(valid_chars_length - 1)) {\n        return \"No\";\n \
    \   }\n    return \"Yes\";\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work. `file_name_check(\"a.b.c\")` returns `\"No\"` instead of `\"Yes\"`.\n\
    <|/ c |>\n<| c |>\nThanks for pointing that out. I've fixed the code now.\n<|/\
    \ c |>\n<| c |>\nThanks for your answer. I've tried your code, but I still get\
    \ \"No\" when I try to run it on \"a.b.c\".\n<|/ c |>\n<| c |>\nI've tested the\
    \ code and it works fine for me. I've added the code I used to test the code in\
    \ the answer. Can you please try it again?\n<|/ c |>\n<| c |>\nI tested it again\
    \ and it works fine for me. I've added the code I used to test the code in the\
    \ answer. Can you please try it again?\n<|/ c |>\n<| a dscore=0 |>\n<code>", " \
    \   let file_name = file_name.toLowerCase();\n    let dot_index = file_name.indexOf(\"\
    .\");\n    if (dot_index == -1) {\n        return \"No\";\n    }\n    let file_name\
    \ = file_name.substring(0, dot_index);\n    let first_letter = file_name.substring(0,\
    \ 1);\n    let letters = first_letter.split(\"\");\n    let is_valid_letter =\
    \ false;\n    for (let i = 0; i < letters.length; i++) {\n        if (letters[i]\
    \ == \"a\" || letters[i] == \"b\" || letters[i] == \"c\" || letters[i] == \"d\"\
    \ || letters[i] == \"e\" || letters[i] == \"f\" || letters[i] == \"g\" || letters[i]\
    \ == \"h\" || letters[i] == \"i\" || letters[i] == \"j\" || letters[i] == \"k\"\
    \ || letters[i] == \"l\" || letters[i] == \"m\" || letters[i] == \"n\" || letters[i]\
    \ == \"o\" || letters[i] == \"p\" || letters[i] == \"q\" || letters[i] == \"r\"\
    \ || letters[i] == \"s\" || letters[i] == \"t\" || letters[i] == \"u\" || letters[i]\
    \ == \"v\" || letters[i] == \"w\" || letters[i] == \"x\" || letters[i] == \"y\"\
    \ || letters[i] == \"z\") {\n            is_valid_letter = true;\n        }\n\
    \    }\n    if (is_valid_letter == false) {\n        return \"No\";\n    }\n \
    \   let extension = file_name.substring(dot_index + 1);\n    if (extension ==\
    \ \"txt\" || extension == \"exe\" || extension == \"dll\") {\n        return \"\
    Yes\";\n    }\n    return \"No\";\n}\n", "    let file_name = file_name.toLowerCase().replace(/[^a-z0-9\\\
    .]/g, '');\n    let dot_index = file_name.indexOf('.');\n    if (dot_index ==\
    \ -1) {\n        return 'No';\n    }\n    if (file_name.substring(0, dot_index).length\
    \ < 3) {\n        return 'No';\n    }\n    let dot_substr = file_name.substring(0,\
    \ dot_index);\n    let dot_substr_lower = dot_substr.toLowerCase();\n    if (dot_substr_lower.indexOf('a')\
    \ == -1 && dot_substr_lower.indexOf('z') == -1 && dot_substr_lower.indexOf('A')\
    \ == -1 && dot_substr_lower.indexOf('Z') == -1) {\n        return 'No';\n    }\n\
    \    let dot_substr_ext = dot_substr.substring(dot_index + 1);\n    if (dot_substr_ext\
    \ != '.txt' && dot_substr_ext != '.exe' && dot_substr_ext != '.dll') {\n     \
    \   return 'No';\n    }\n    return 'Yes';\n}\n</code>\n<|/ a tags=javascript,typescript\
    \ |>\n<| a dscore=0 |>\n<code>", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_position = file_name.indexOf('.');\n    if (dot_position == -1) {\n\
    \        return 'No';\n    }\n    let first_letter = file_name.substring(0, dot_position).toLowerCase();\n\
    \    if (first_letter != 'a' && first_letter != 'b' && first_letter != 'c' &&\
    \ first_letter != 'd' && first_letter != 'e' && first_letter != 'f' && first_letter\
    \ != 'g' && first_letter != 'h' && first_letter != 'i' && first_letter != 'j'\
    \ && first_letter != 'k' && first_letter != 'l' && first_letter != 'm' && first_letter\
    \ != 'n' && first_letter != 'o' && first_letter != 'p' && first_letter != 'q'\
    \ && first_letter != 'r' && first_letter != 's' && first_letter != 't' && first_letter\
    \ != 'u' && first_letter != 'v' && first_letter != 'w' && first_letter != 'x'\
    \ && first_letter != 'y' && first_letter != 'z') {\n        return 'No';\n   \
    \ }\n    let extension = file_name.substring(dot_position + 1).toLowerCase();\n\
    \    if (extension != 'txt' && extension != 'exe' && extension != 'dll') {\n \
    \       return 'No';\n    }\n    return 'Yes';\n}\n", "    let valid = false;\n\
    \    let dotIndex = file_name.indexOf(\".\");\n    if (dotIndex == -1) {\n   \
    \     valid = true;\n    } else {\n        let firstChar = file_name.substring(0,\
    \ dotIndex);\n        let firstCharLower = firstChar.toLowerCase();\n        if\
    \ (firstCharLower == firstChar) {\n            valid = true;\n        } else {\n\
    \            valid = false;\n        }\n    }\n    let firstCharIndex = file_name.indexOf(\"\
    .\", dotIndex + 1);\n    if (firstCharIndex == -1) {\n        valid = true;\n\
    \    } else {\n        let firstChar = file_name.substring(0, firstCharIndex);\n\
    \        let firstCharLower = firstChar.toLowerCase();\n        if (firstCharLower\
    \ == firstChar) {\n            valid = true;\n        } else {\n            valid\
    \ = false;\n        }\n    }\n    let firstCharIndex = file_name.indexOf(\".\"\
    , dotIndex + 1);\n    if (firstCharIndex == -1) {\n        valid = true;\n   \
    \ } else {\n        let firstChar = file_name.substring(0, firstCharIndex);\n\
    \        let firstCharLower = firstChar.toLowerCase();\n        if (firstCharLower\
    \ == firstChar) {\n            valid = true;\n        } else {\n            valid\
    \ = false;\n        }\n    }\n    return valid ? \"Yes\" : \"No\";\n}\n", "  \
    \  let valid_file_name = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n  \
    \  if (valid_file_name == null) {\n        return \"No\";\n    } else {\n    \
    \    return \"Yes\";\n    }\n}\n", "    var pattern = /^[0-9]{3}\\.txt$/i;\n \
    \   var pattern2 = /^[0-9]{3}\\.exe$/i;\n    var pattern3 = /^[0-9]{3}\\.dll$/i;\n\
    \    var pattern4 = /^[a-z]{2}\\.txt$/i;\n    var pattern5 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern6 = /^[a-z]{2}\\.dll$/i;\n    var pattern7 = /^[a-z]{3}\\.txt$/i;\n\
    \    var pattern8 = /^[a-z]{3}\\.exe$/i;\n    var pattern9 = /^[a-z]{3}\\.dll$/i;\n\
    \    var pattern10 = /^[A-Z]{2}\\.txt$/i;\n    var pattern11 = /^[A-Z]{2}\\.exe$/i;\n\
    \    var pattern12 = /^[A-Z]{2}\\.dll$/i;\n    var pattern13 = /^[A-Z]{3}\\.txt$/i;\n\
    \    var pattern14 = /^[A-Z]{3}\\.exe$/i;\n    var pattern15 = /^[A-Z]{3}\\.dll$/i;\n\
    \    var pattern16 = /^[0-9]{3}\\.txt$/i;\n    var pattern17 = /^[0-9]{3}\\.exe$/i;\n\
    \    var pattern18 = /^[0-9]{3}\\.dll$/i;\n    var pattern19 = /^[a-z]{2}\\.txt$/i;\n\
    \    var pattern20 = /^[a-z]{2}\\.exe$/i;\n    var pattern21 = /^[a-z]{2}\\.dll$/i;\n\
    \    var pattern22 = /^[a-z]{3}\\.txt$/i;\n    var pattern23 = /^[a-z]{3}\\.exe$/i;\n\
    \    var pattern24 = /^[a-z]{3}\\.dll$/i;\n    var pattern25 = /^[A-Z]{2}\\.txt$/i;\n\
    \    var pattern26 = /^[A-Z]{2}\\.exe$/i;\n    var pattern27 = /^[A-Z]{2}\\.dll$/i;\n\
    \    var pattern28 = /^[A-Z]{3}\\.txt$/i;\n    var pattern29 = /^[A-Z]{3}\\.exe$/i;\n\
    \    var pattern30 = /^[A-Z]{3}\\.dll$/i;\n    var pattern31 = /^[0-9]{3}\\.txt$/i;\n\
    \    var pattern32 = /^[0-9]{3}\\.exe$/i;\n    var pattern33 = /^[0-9]{3}\\.dll$/i;\n\
    \    var pattern34 = /^[a-z]{2}\\.txt$/i;\n    var pattern35 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern36 = /^[a-z]{2}\\.dll$/i;\n    var pattern37 = /^[a-z]{3}\\.txt$/i;\n\
    \    var pattern38 = /^[a-z]{3}\\.exe$/i;\n    var pattern39 = /^[a-z]{3}\\.dll$/i;\n\
    \    var pattern40 = /^[A-Z]{2}\\.txt$/i;\n    var pattern41 = /^[A-Z]{2}\\.exe$/i;\n\
    \    var pattern42 = /^[A-Z]{2}\\.dll$/i;\n    var pattern43 = /^", "    let file_name\
    \ = file_name.toLowerCase();\n    let file_name = file_name.replace(/\\./g, '');\n\
    \    let file_name = file_name.replace(/[^a-z0-9\\.]/g, '');\n    let file_name\
    \ = file_name.substr(0, 3);\n    let file_name = file_name.substr(0, 1);\n   \
    \ let file_name = file_name.substr(0, 2);\n    if (file_name === '0') {\n    \
    \    return 'No';\n    }\n    if (file_name === '1') {\n        return 'No';\n\
    \    }\n    if (file_name === '2') {\n        return 'No';\n    }\n    if (file_name\
    \ === '3') {\n        return 'No';\n    }\n    if (file_name === '4') {\n    \
    \    return 'No';\n    }\n    if (file_name === '5') {\n        return 'No';\n\
    \    }\n    if (file_name === '6') {\n        return 'No';\n    }\n    if (file_name\
    \ === '7') {\n        return 'No';\n    }\n    if (file_name === '8') {\n    \
    \    return 'No';\n    }\n    if (file_name === '9') {\n        return 'No';\n\
    \    }\n    if (file_name === 'a') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'b') {\n        return 'No';\n    }\n    if (file_name === 'c') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'd') {\n        return 'No';\n\
    \    }\n    if (file_name === 'e') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'f') {\n        return 'No';\n    }\n    if (file_name === 'g') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'h') {\n        return 'No';\n\
    \    }\n    if (file_name === 'i') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'j') {\n        return 'No';\n    }\n    if (file_name === 'k') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'l') {\n        return 'No';\n\
    \    }\n    if (file_name === 'm') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'n') {\n        return 'No';\n    }\n    if (file_name === 'o') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'p') {\n        return 'No';\n\
    \    }\n    if (file_name === 'q') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'r') {\n        return 'No';\n    }\n    if (file_name === 's') {\n    \
    \    return 'No';\n    }\n    if (file_name === 't') {\n        return 'No';\n\
    \    }\n    if (file_name === 'u') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'v') {\n        return 'No';\n    }\n    if (file_name === 'w') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'x') {\n        return 'No';\n\
    \    }\n    if (file_name === 'y') {\n        return 'No';\n    }\n    if (file_name ",
  "    let file_name = file_name.toLowerCase();\n    let file_extension = file_name.split('.').pop();\n\
    \    let file_length = file_name.length;\n    let file_starts_with_letter = file_name.startsWith(\"\
    a\") || file_name.startsWith(\"b\") || file_name.startsWith(\"c\") || file_name.startsWith(\"\
    d\") || file_name.startsWith(\"e\") || file_name.startsWith(\"f\") || file_name.startsWith(\"\
    g\") || file_name.startsWith(\"h\") || file_name.startsWith(\"i\") || file_name.startsWith(\"\
    j\") || file_name.startsWith(\"k\") || file_name.startsWith(\"l\") || file_name.startsWith(\"\
    m\") || file_name.startsWith(\"n\") || file_name.startsWith(\"o\") || file_name.startsWith(\"\
    p\") || file_name.startsWith(\"q\") || file_name.startsWith(\"r\") || file_name.startsWith(\"\
    s\") || file_name.startsWith(\"t\") || file_name.startsWith(\"u\") || file_name.startsWith(\"\
    v\") || file_name.startsWith(\"w\") || file_name.startsWith(\"x\") || file_name.startsWith(\"\
    y\") || file_name.startsWith(\"z\");\n    let file_contains_dot = file_name.includes(\"\
    .\");\n    let file_contains_non_empty_sub_string = file_name.substring(0,1).length\
    \ > 0 && file_name.substring(0,1) != \".\";\n    let file_contains_non_empty_sub_string_after_dot\
    \ = file_name.substring(file_name.lastIndexOf('.') + 1).length > 0 && file_name.substring(file_name.lastIndexOf('.')\
    \ + 1) != \".\";\n    let file_contains_non_empty_sub_string_before_dot = file_name.substring(0,file_name.lastIndexOf('.')\
    \ - 1).length > 0 && file_name.substring(0,file_name.lastIndexOf('.') - 1) !=\
    \ \".\";\n    let file_contains_non_empty_sub_string_after_dot_or_space = file_name.substring(file_name.lastIndexOf('.')\
    \ + 1).length > 0 && file_name.substring(file_name.lastIndexOf('.') + 1) != \"\
    .\" && file_name.substring(file_name.lastIndexOf('.') + 1).length > 0 && file_name.substring(file_name.lastIndexOf('.')\
    \ + 1).indexOf(\"  \") == -1;\n    let file_contains_non_empty_sub_string_before_dot_or_space\
    \ = file_name.substring(0,file_name.lastIndexOf('.') - 1).length > 0 && file_name.substring(0,file_name.lastIndexOf('.')\
    \ - 1) != \".\" && file_name.substring(0,file_name.lastIndexOf('.') - 1).length\
    \ > 0 && file_name.substring(0,file_name.lastIndexOf('.') - 1).indexOf(\"  \"\
    ) == -1;\n    let file_contains_non_empty_sub_string_after_dot_or_space_or_letter\
    \ = file_name.substring(file_name.lastIndexOf('.') + 1).length > 0 && file_name.substring(file_name",
  "    let file_name = file_name.toLowerCase();\n    let file_name = file_name.replace(/\\\
    ./g, '');\n    let file_name = file_name.replace(/[^0-9\\.]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/",
  "    let valid_file_name = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n  \
    \  if (valid_file_name == null) {\n        return \"No\";\n    }\n    let dot_index\
    \ = file_name.indexOf(\".\");\n    if (dot_index == -1) {\n        return \"No\"\
    ;\n    }\n    let first_letter = file_name.charAt(0);\n    let second_letter =\
    \ file_name.charAt(1);\n    let third_letter = file_name.charAt(2);\n    if (first_letter\
    \ < 'a' || first_letter > 'z') {\n        return \"No\";\n    }\n    if (second_letter\
    \ < 'a' || second_letter > 'z') {\n        return \"No\";\n    }\n    if (third_letter\
    \ < 'a' || third_letter > 'z') {\n        return \"No\";\n    }\n    if (first_letter\
    \ > 'z') {\n        return \"No\";\n    }\n    if (second_letter > 'z') {\n  \
    \      return \"No\";\n    }\n    if (third_letter > 'z') {\n        return \"\
    No\";\n    }\n    if (dot_index == file_name.length - 1) {\n        return \"\
    No\";\n    }\n    if (file_name.charAt(dot_index) != 'x') {\n        return \"\
    No\";\n    }\n    return \"Yes\";\n}\n", "    let result = file_name.match(/^[0-9]{3}\\\
    .[a-z]{3}$/);\n    if (result == null) {\n        return 'No';\n    } else {\n\
    \        let dot_index = file_name.indexOf('.');\n        if (dot_index == -1)\
    \ {\n            return 'No';\n        } else {\n            let first_letter\
    \ = file_name.charAt(0);\n            let second_letter = file_name.charAt(1);\n\
    \            if (first_letter < 'a' || first_letter > 'z') {\n               \
    \ return 'No';\n            } else if (second_letter < 'a' || second_letter >\
    \ 'z') {\n                return 'No';\n            } else if (first_letter <\
    \ 'A' || first_letter > 'Z') {\n                return 'No';\n            } else\
    \ if (second_letter < 'A' || second_letter > 'Z') {\n                return 'No';\n\
    \            } else {\n                return 'Yes';\n            }\n        }\n\
    \    }\n}\n", "    var re = /^[0-9]{3}\\.txt|exe|dll$/;\n    return re.test(file_name);\n\
    }\n", "    var re = /^[0-9]{3}\\.txt|[0-9]{3}\\.exe|[0-9]{3}\\.dll$/;\n    return\
    \ re.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    let pattern = /^[0-9]{3}\\\
    .txt|exe|dll$/;\n    let result = file_name.match(pattern);\n    if (result ===\
    \ null) {\n        return \"No\";\n    } else {\n        return \"Yes\";\n   \
    \ }\n}\n", "    if (file_name.length <= 3) {\n        return \"No\";\n    }\n\
    \    if (file_name.indexOf('.') === -1) {\n        return \"No\";\n    }\n   \
    \ if (file_name.substring(0, 1) !== 'a' && file_name.substring(0, 1) !== 'A' &&\
    \ file_name.substring(0, 1) !== 'b' && file_name.substring(0, 1) !== 'B' && file_name.substring(0,\
    \ 1) !== 'c' && file_name.substring(0, 1) !== 'C' && file_name.substring(0, 1)\
    \ !== 'd' && file_name.substring(0, 1) !== 'D' && file_name.substring(0, 1) !==\
    \ 'e' && file_name.substring(0, 1) !== 'E' && file_name.substring(0, 1) !== 'f'\
    \ && file_name.substring(0, 1) !== 'F' && file_name.substring(0, 1) !== 'g' &&\
    \ file_name.substring(0, 1) !== 'G' && file_name.substring(0, 1) !== 'h' && file_name.substring(0,\
    \ 1) !== 'H' && file_name.substring(0, 1) !== 'i' && file_name.substring(0, 1)\
    \ !== 'I' && file_name.substring(0, 1) !== 'j' && file_name.substring(0, 1) !==\
    \ 'J' && file_name.substring(0, 1) !== 'k' && file_name.substring(0, 1) !== 'K'\
    \ && file_name.substring(0, 1) !== 'l' && file_name.substring(0, 1) !== 'L' &&\
    \ file_name.substring(0, 1) !== 'm' && file_name.substring(0, 1) !== 'M' && file_name.substring(0,\
    \ 1) !== 'n' && file_name.substring(0, 1) !== 'N' && file_name.substring(0, 1)\
    \ !== 'o' && file_name.substring(0, 1) !== 'O' && file_name.substring(0, 1) !==\
    \ 'p' && file_name.substring(0, 1) !== 'P' && file_name.substring(0, 1) !== 'q'\
    \ && file_name.substring(0, 1) !== 'Q' && file_name.substring(0, 1) !== 'r' &&\
    \ file_name.substring(0, 1) !== 'R' && file_name.substring(0, 1) !== 's' && file_name.substring(0,\
    \ 1) !== 'S' && file_name.substring(0, 1) !== 't' && file_name.substring(0, 1)\
    \ !== 'T' && file_name.substring(0, 1) !== 'u' && file_name.substring(0, 1) !==\
    \ 'U' && file_name.substring(0, 1) !== 'v' && file_name.substring(0, 1) !== 'V'\
    \ && file_name.substring(0, 1) !== 'w' && file_name.substring(0, 1) !== 'W' &&\
    \ file_name.substring(0, 1) !== 'x' && file_name.substring(0, 1) !== 'X' && file_name.substring(0,\
    \ 1) !== 'y' && file_name.substring(0, 1) !== 'Y') {\n        return \"No\";\n\
    \    }\n    return \"Yes\";\n}\n", "    let valid_file_name = file_name.match(/^[0-9]{3}\\\
    .[a-z][a-z][a-z]$/);\n    if (valid_file_name == null) {\n        return \"No\"\
    ;\n    } else {\n        return \"Yes\";\n    }\n}\n", "    let valid_file_name\
    \ = file_name.match(/^[0-9]{3}\\.[a-z][a-z]$/);\n    let dot_position = file_name.indexOf('.');\n\
    \    let dot_substring_valid = dot_position > 0 && dot_position < file_name.length\
    \ - 1 && dot_position > 0 && dot_position < file_name.length - 1 && file_name.substring(dot_position).match(/^[a-z][a-z]$/);\n\
    \    let dot_substring_not_empty = dot_position > 0 && dot_position < file_name.length\
    \ - 1 && dot_position > 0 && dot_position < file_name.length - 1 && file_name.substring(dot_position).match(/^[a-z][a-z]$/);\n\
    \    let dot_substring_not_empty = dot_position > 0 && dot_position < file_name.length\
    \ - 1 && dot_position > 0 && dot_position < file_name.length - 1 && file_name.substring(dot_position).match(/^[a-z][a-z]$/);\n\
    \    let dot_substring_not_empty = dot_position > 0 && dot_position < file_name.length\
    \ - 1 && dot_position > 0 && dot_position < file_name.length - 1 && file_name.substring(dot_position).match(/^[a-z][a-z]$/);\n\
    \    let dot_substring_not_empty = dot_position > 0 && dot_position < file_name.length\
    \ - 1 && dot_position > 0 && dot_position < file_name.length - 1 && file_name.substring(dot_position).match(/^[a-z][a-z]$/);\n\
    \    let dot_substring_not_empty = dot_position > 0 && dot_position < file_name.length\
    \ - 1 && dot_position > 0 && dot_position < file_name.length - 1 && file_name.substring(dot_position).match(/^[a-z][a-z]$/);\n\
    \    let dot_substring_not_empty = dot_position > 0 && dot_position < file_name.length\
    \ - 1 && dot_position > 0 && dot_position < file_name.length - 1 && file_name.substring(dot_position).match(/^[a-z][a-z]$/);\n\
    \    let dot_substring_not_empty = dot_position > 0 && dot_position < file_name.length\
    \ - 1 && dot_position > 0 && dot_position < file_name.length - 1 && file_name.substring(dot_position).match(/^[a-z][a-z]$/);\n\
    \    let dot_substring_not_empty = dot_position > 0 && dot_position < file_name.length\
    \ - 1 && dot_position > 0 && dot_position < file_name.length - 1 && file_name.substring(dot_position).match(/^[a-z][a-z]$/);\n\
    \    let dot_substring_not_empty = dot_position > 0 && dot_position < file_name.length\
    \ - 1 && dot_position > 0 && dot_position < file_name.length - 1 && file_name.substring(dot_position).match(/^[a-z][a-z]$/);\n\
    \    let dot_substring_not_empty = dot_position > 0 && dot_position < file_name.length\
    \ - 1 && dot_position > 0 && dot_position < file_name.length - 1 && file_name.substring(dot_position).match(/^[a-z][a-z]$/);\n\
    \    let dot_substring_not_empty = dot_position > 0 && dot_position < file_name.length\
    \ - 1 && dot_position > 0 && dot_position < file_name.length - 1 && file_name.substring(dot_position).match(/^[a-z",
  "    let file_name = file_name.toLowerCase();\n    let dot_position = file_name.indexOf('.');\n\
    \    if (dot_position === -1) {\n        return 'No';\n    }\n    if (dot_position\
    \ > 3 || file_name.substring(0, 1) !== 'a' || file_name.substring(0, 1) !== 'b'\
    \ || file_name.substring(0, 1) !== 'c' || file_name.substring(0, 1) !== 'd' ||\
    \ file_name.substring(0, 1) !== 'e' || file_name.substring(0, 1) !== 'f' || file_name.substring(0,\
    \ 1) !== 'g' || file_name.substring(0, 1) !== 'h' || file_name.substring(0, 1)\
    \ !== 'i' || file_name.substring(0, 1) !== 'j' || file_name.substring(0, 1) !==\
    \ 'k' || file_name.substring(0, 1) !== 'l' || file_name.substring(0, 1) !== 'm'\
    \ || file_name.substring(0, 1) !== 'n' || file_name.substring(0, 1) !== 'o' ||\
    \ file_name.substring(0, 1) !== 'p' || file_name.substring(0, 1) !== 'q' || file_name.substring(0,\
    \ 1) !== 'r' || file_name.substring(0, 1) !== 's' || file_name.substring(0, 1)\
    \ !== 't' || file_name.substring(0, 1) !== 'u' || file_name.substring(0, 1) !==\
    \ 'v' || file_name.substring(0, 1) !== 'w' || file_name.substring(0, 1) !== 'x'\
    \ || file_name.substring(0, 1) !== 'y' || file_name.substring(0, 1) !== 'z') {\n\
    \        return 'No';\n    }\n    if (file_name.substring(dot_position + 1, dot_position\
    \ + 3) !== 'txt' && file_name.substring(dot_position + 1, dot_position + 3) !==\
    \ 'exe' && file_name.substring(dot_position + 1, dot_position + 3) !== 'dll')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n", "    let file_name\
    \ = file_name.toLowerCase();\n    let dot_position = file_name.indexOf('.');\n\
    \    let first_letter = file_name.charAt(0);\n    let last_letter = file_name.charAt(file_name.length\
    \ - 1);\n    let valid_chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    let valid_chars_length = valid_chars.length;\n    let first_letter_length\
    \ = first_letter.length;\n    let last_letter_length = last_letter.length;\n \
    \   let is_valid = false;\n    \n    if (dot_position == -1) {\n        is_valid\
    \ = true;\n    } else {\n        if (dot_position > 0) {\n            is_valid\
    \ = file_name.substring(0, dot_position).length == first_letter_length && \n \
    \               file_name.substring(dot_position).length == last_letter_length\
    \ && \n                file_name.substring(dot_position - 1, dot_position).match(valid_chars);\n\
    \        } else {\n            is_valid = file_name.substring(0, dot_position).length\
    \ == first_letter_length && \n                file_name.substring(dot_position).length\
    \ == last_letter_length && \n                file_name.substring(dot_position\
    \ + 1, dot_position + 1).match(valid_chars);\n        }\n    }\n    \n    if (is_valid)\
    \ {\n        return 'Yes';\n    } else {\n        return 'No';\n    }\n}\n", " \
    \   let file_name = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n\
    \    let first_letter = file_name.charAt(0);\n    let last_letter = file_name.charAt(file_name.length\
    \ - 1);\n    let has_digit = false;\n    let has_letter = false;\n    for (let\
    \ i = 0; i < file_name.length; i++) {\n        if (file_name.charAt(i) >= '0'\
    \ && file_name.charAt(i) <= '9') {\n            has_digit = true;\n        }\n\
    \        if (file_name.charAt(i) >= 'a' && file_name.charAt(i) <= 'z') {\n   \
    \         has_letter = true;\n        }\n    }\n    if (dot_index === -1 || dot_index\
    \ === file_name.length - 1 || first_letter === '_' || first_letter === '-' ||\
    \ first_letter === '/' || first_letter === '\\\\' || first_letter === '<' || first_letter\
    \ === '>' || first_letter === '?' || first_letter === '*' || first_letter ===\
    \ '|' || first_letter === '\"' || first_letter === \"'\" || first_letter === '('\
    \ || first_letter === ')' || first_letter === '{' || first_letter === '}' || first_letter\
    \ === '[' || first_letter === ']' || first_letter === '<' || first_letter ===\
    \ '>' || first_letter === '{' || first_letter === '}' || first_letter === '['\
    \ || first_letter === ']' || first_letter === '{' || first_letter === '}' || first_letter\
    \ === '[' || first_letter === ']' || first_letter === '{' || first_letter ===\
    \ '}' || first_letter === '[' || first_letter === ']' || first_letter === '{'\
    \ || first_letter === '}' || first_letter === '[' || first_letter === ']' || first_letter\
    \ === '{' || first_letter === '}' || first_letter === '[' || first_letter ===\
    \ ']' || first_letter === '{' || first_letter === '}' || first_letter === '['\
    \ || first_letter === ']' || first_letter === '{' || first_letter === '}' || first_letter\
    \ === '[' || first_letter === ']' || first_letter === '{' || first_letter ===\
    \ '}' || first_letter === '[' || first_letter === ']' || first_letter === '{'\
    \ || first_letter === '}' || first_letter === '[' || first_letter === ']' || first_letter\
    \ === '{' || first_letter === '}' || first_letter === '[' || first_letter ===\
    \ ']' || first_letter === '{' || first_letter === '}' || first_letter === '['\
    \ || first_letter === ']' || first_letter === '{' || first_letter === '}' || first_letter\
    \ === '[' || first_letter === ']' || first_letter === '{' || first_letter ===\
    \ '}' || first_letter === '[' || first_letter === ']' || first_letter === '{'\
    \ || first_letter === '}' || first_letter === '[' || first_letter === ']' || first_letter\
    \ === '{' || first_letter === '}' || first_letter === '[' || first_letter ===\
    \ ']' || first_letter ", "    let pattern = /^[0-9]{3}\\.txt$/;\n    let pattern2\
    \ = /^[0-9]{3}\\.exe$/;\n    let pattern3 = /^[0-9]{3}\\.dll$/;\n    let pattern4\
    \ = /^[a-z]{2}\\.txt$/;\n    let pattern5 = /^[a-z]{2}\\.exe$/;\n    let pattern6\
    \ = /^[a-z]{2}\\.dll$/;\n    let pattern7 = /^[a-z]{3}\\.txt$/;\n    let pattern8\
    \ = /^[a-z]{3}\\.exe$/;\n    let pattern9 = /^[a-z]{3}\\.dll$/;\n    let pattern10\
    \ = /^[A-Z]{2}\\.txt$/;\n    let pattern11 = /^[A-Z]{2}\\.exe$/;\n    let pattern12\
    \ = /^[A-Z]{2}\\.dll$/;\n    let pattern13 = /^[A-Z]{3}\\.txt$/;\n    let pattern14\
    \ = /^[A-Z]{3}\\.exe$/;\n    let pattern15 = /^[A-Z]{3}\\.dll$/;\n    let pattern16\
    \ = /^[A-Z]{4}\\.txt$/;\n    let pattern17 = /^[A-Z]{4}\\.exe$/;\n    let pattern18\
    \ = /^[A-Z]{4}\\.dll$/;\n    let pattern19 = /^[A-Z]{5}\\.txt$/;\n    let pattern20\
    \ = /^[A-Z]{5}\\.exe$/;\n    let pattern21 = /^[A-Z]{5}\\.dll$/;\n    let pattern22\
    \ = /^[A-Z]{6}\\.txt$/;\n    let pattern23 = /^[A-Z]{6}\\.exe$/;\n    let pattern24\
    \ = /^[A-Z]{6}\\.dll$/;\n    let pattern25 = /^[A-Z]{7}\\.txt$/;\n    let pattern26\
    \ = /^[A-Z]{7}\\.exe$/;\n    let pattern27 = /^[A-Z]{7}\\.dll$/;\n    let pattern28\
    \ = /^[A-Z]{8}\\.txt$/;\n    let pattern29 = /^[A-Z]{8}\\.exe$/;\n    let pattern30\
    \ = /^[A-Z]{8}\\.dll$/;\n    let pattern31 = /^[A-Z]{9}\\.txt$/;\n    let pattern32\
    \ = /^[A-Z]{9}\\.exe$/;\n    let pattern33 = /^[A-Z]{9}\\.dll$/;\n    let pattern34\
    \ = /^[A-Z]{10}\\.txt$/;\n    let pattern35 = /^[A-Z]{10}\\.exe$/;\n    let pattern36\
    \ = /^[A-Z]{10}\\.dll$/;\n    let pattern37 = /^[A-Z]{11}\\.txt$/;\n    let pattern38\
    \ = /^[A-Z]{11}\\.exe$/;\n    let pattern39 = /^[A-Z]{11}\\.dll$/;\n    let pattern40\
    \ = /^[A-Z]{12}\\.txt$/;\n    let pattern41 = /^[A-Z]{12}", "    var pattern =\
    \ /^[0-9]{3}\\.[a-z][a-z]$/;\n    var match = file_name.match(pattern);\n    if\
    \ (match != null && match.length == 2) {\n        var first_char = file_name.charAt(0);\n\
    \        var last_char = file_name.charAt(file_name.length - 1);\n        var\
    \ first_char_lower = first_char.toLowerCase();\n        var last_char_lower =\
    \ last_char.toLowerCase();\n        if (first_char_lower >= 'a' && first_char_lower\
    \ <= 'z' &&\n            last_char_lower >= 'a' && last_char_lower <= 'z') {\n\
    \            if (first_char_lower == last_char_lower) {\n                return\
    \ \"Yes\";\n            } else {\n                return \"No\";\n           \
    \ }\n        } else {\n            return \"No\";\n        }\n    } else {\n \
    \       return \"No\";\n    }\n}\n", "    var valid = false;\n    var dotIndex\
    \ = file_name.indexOf('.');\n    if (dotIndex == -1) {\n        valid = true;\n\
    \    } else {\n        var firstChar = file_name.substring(0, dotIndex);\n   \
    \     var lastChar = file_name.substring(dotIndex + 1);\n        var firstCharCharCode\
    \ = firstChar.charCodeAt(0);\n        var lastCharCharCode = lastChar.charCodeAt(0);\n\
    \        if (firstCharCharCode < 65 || firstCharCharCode > 122 || lastCharCharCode\
    \ < 65 || lastCharCharCode > 122) {\n            valid = true;\n        } else\
    \ {\n            var firstCharLowerCase = firstChar.toLowerCase();\n         \
    \   var lastCharLowerCase = lastChar.toLowerCase();\n            if (firstCharLowerCase.indexOf('\
    \ ') != -1 || lastCharLowerCase.indexOf(' ') != -1) {\n                valid =\
    \ true;\n            } else {\n                if (firstCharLowerCase.indexOf('0')\
    \ != -1 || lastCharLowerCase.indexOf('9') != -1) {\n                    valid\
    \ = true;\n                } else {\n                    if (firstCharLowerCase.indexOf('a')\
    \ != -1 || lastCharLowerCase.indexOf('z') != -1 || firstCharLowerCase.indexOf('A')\
    \ != -1 || lastCharLowerCase.indexOf('Z') != -1) {\n                        valid\
    \ = true;\n                    } else {\n                        valid = false;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   if (valid) {\n        return \"Yes\";\n    } else {\n        return \"No\"\
    ;\n    }\n}\n", "    let valid_file_name = file_name.match(/^[0-9]{3}\\.[a-z][a-z]$/);\n\
    \    if (valid_file_name == null) {\n        return \"No\";\n    }\n    let dot_index\
    \ = file_name.indexOf(\".\");\n    if (dot_index == -1) {\n        return \"No\"\
    ;\n    }\n    let first_letter = file_name.substring(0, 1);\n    if (first_letter\
    \ != first_letter.match(/[a-z]/)) {\n        return \"No\";\n    }\n    let last_letter\
    \ = file_name.substring(dot_index + 1, file_name.length);\n    if (last_letter\
    \ != last_letter.match(/[txt|exe|dll]/)) {\n        return \"No\";\n    }\n  \
    \  return \"Yes\";\n}\n", "    let file_name = file_name.toLowerCase();\n    let\
    \ file_name = file_name.replace(/\\./g, '');\n    let file_name = file_name.replace(/^[a-z]/,\
    \ '');\n    let file_name = file_name.replace(/[^a-z0-9\\.]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.", "    let result = file_name.split('.');\n\
    \    if (result.length != 3 || result[0].length == 0 || result[0][0] !== 'a' ||\
    \ result[0][0] !== 'A' || result[1].length != 1 || result[1][0] !== '0' || result[1][0]\
    \ !== '9' || result[2].length != 1 || result[2][0] !== '.' || result[2][0] !==\
    \ 'txt' || result[2][0] !== 'exe' || result[2][0] !== 'dll') {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\n", "    var pattern = /^[0-9]{3}\\.txt$/i;\n\
    \    var pattern2 = /^[0-9]{3}\\.exe$/i;\n    var pattern3 = /^[0-9]{3}\\.dll$/i;\n\
    \    var pattern4 = /^[a-z]{2}\\.txt$/i;\n    var pattern5 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern6 = /^[a-z]{2}\\.dll$/i;\n    var pattern7 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern8 = /^[a-z]{2}\\.dll$/i;\n    var pattern9 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern10 = /^[a-z]{2}\\.dll$/i;\n    var pattern11 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern12 = /^[a-z]{2}\\.dll$/i;\n    var pattern13 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern14 = /^[a-z]{2}\\.dll$/i;\n    var pattern15 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern16 = /^[a-z]{2}\\.dll$/i;\n    var pattern17 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern18 = /^[a-z]{2}\\.dll$/i;\n    var pattern19 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern20 = /^[a-z]{2}\\.dll$/i;\n    var pattern21 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern22 = /^[a-z]{2}\\.dll$/i;\n    var pattern23 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern24 = /^[a-z]{2}\\.dll$/i;\n    var pattern25 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern26 = /^[a-z]{2}\\.dll$/i;\n    var pattern27 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern28 = /^[a-z]{2}\\.dll$/i;\n    var pattern29 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern30 = /^[a-z]{2}\\.dll$/i;\n    var pattern31 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern32 = /^[a-z]{2}\\.dll$/i;\n    var pattern33 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern34 = /^[a-z]{2}\\.dll$/i;\n    var pattern35 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern36 = /^[a-z]{2}\\.dll$/i;\n    var pattern37 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern38 = /^[a-z]{2}\\.dll$/i;\n    var pattern39 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern40 = /^[a-z]{2}\\.dll$/i;\n    var pattern41 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern42 = /^[a-z]{2}\\.dll$/i;\n    var pattern43 = /^", "    var file_name\
    \ = file_name.toLowerCase();\n    var file_name = file_name.replace(/\\./g, '');\n\
    \    var file_name = file_name.substring(0, 3);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = file_name.substring(0,1);\n\
    \    var file_name = file_name.substring(0,1);\n    var file_name = ", "    var\
    \ pattern = /^[0-9]{3}\\.txt$/i;\n    var pattern2 = /^[0-9]{3}\\.exe$/i;\n  \
    \  var pattern3 = /^[0-9]{3}\\.dll$/i;\n    var pattern4 = /^[a-z]{2}\\.txt$/i;\n\
    \    var pattern5 = /^[a-z]{2}\\.exe$/i;\n    var pattern6 = /^[a-z]{2}\\.dll$/i;\n\
    \    var pattern7 = /^[a-z]{3}\\.txt$/i;\n    var pattern8 = /^[a-z]{3}\\.exe$/i;\n\
    \    var pattern9 = /^[a-z]{3}\\.dll$/i;\n    var pattern10 = /^[A-Z]{2}\\.txt$/i;\n\
    \    var pattern11 = /^[A-Z]{2}\\.exe$/i;\n    var pattern12 = /^[A-Z]{2}\\.dll$/i;\n\
    \    var pattern13 = /^[A-Z]{3}\\.txt$/i;\n    var pattern14 = /^[A-Z]{3}\\.exe$/i;\n\
    \    var pattern15 = /^[A-Z]{3}\\.dll$/i;\n    var pattern16 = /^[a-z]{2}\\.txt$/i;\n\
    \    var pattern17 = /^[a-z]{2}\\.exe$/i;\n    var pattern18 = /^[a-z]{2}\\.dll$/i;\n\
    \    var pattern19 = /^[a-z]{3}\\.txt$/i;\n    var pattern20 = /^[a-z]{3}\\.exe$/i;\n\
    \    var pattern21 = /^[a-z]{3}\\.dll$/i;\n    var pattern22 = /^[A-Z]{2}\\.txt$/i;\n\
    \    var pattern23 = /^[A-Z]{2}\\.exe$/i;\n    var pattern24 = /^[A-Z]{2}\\.dll$/i;\n\
    \    var pattern25 = /^[A-Z]{3}\\.txt$/i;\n    var pattern26 = /^[A-Z]{3}\\.exe$/i;\n\
    \    var pattern27 = /^[A-Z]{3}\\.dll$/i;\n    var pattern28 = /^[a-z]{2}\\.txt$/i;\n\
    \    var pattern29 = /^[a-z]{2}\\.exe$/i;\n    var pattern30 = /^[a-z]{2}\\.dll$/i;\n\
    \    var pattern31 = /^[a-z]{3}\\.txt$/i;\n    var pattern32 = /^[a-z]{3}\\.exe$/i;\n\
    \    var pattern33 = /^[a-z]{3}\\.dll$/i;\n    var pattern34 = /^[A-Z]{2}\\.txt$/i;\n\
    \    var pattern35 = /^[A-Z]{2}\\.exe$/i;\n    var pattern36 = /^[A-Z]{2}\\.dll$/i;\n\
    \    var pattern37 = /^[A-Z]{3}\\.txt$/i;\n    var pattern38 = /^[A-Z]{3}\\.exe$/i;\n\
    \    var pattern39 = /^[A-Z]{3}\\.dll$/i;\n    var pattern40 = /^[a-z]{2}\\.txt$/i;\n\
    \    var pattern41 = /^[a-z]{2}\\.exe$/i;\n    var pattern42 = /^[a-z]{2}\\.dll$/i;\n\
    \    var pattern43 = /^", "    let file_name = file_name.toLowerCase()\n    let\
    \ file_name = file_name.split('.')\n    let file_name = file_name[0]\n    let\
    \ file_name = file_name.trim()\n    let file_name = file_name.charAt(0)\n    let\
    \ file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n \
    \   let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name.charAt(0)\n\
    \    let file_name = file_name.charAt(0)\n    let file_name = file_name", "  \
    \  let valid_file_name = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n  \
    \  if (valid_file_name == null) {\n        return \"No\";\n    } else {\n    \
    \    return \"Yes\";\n    }\n}\n", "    var pattern = /^[0-9]{3}\\.txt$/i;\n \
    \   var pattern2 = /^[0-9]{3}\\.exe$/i;\n    var pattern3 = /^[0-9]{3}\\.dll$/i;\n\
    \    var pattern4 = /^[a-z]{2}\\.txt$/i;\n    var pattern5 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern6 = /^[a-z]{2}\\.dll$/i;\n    var pattern7 = /^[a-z]{3}\\.txt$/i;\n\
    \    var pattern8 = /^[a-z]{3}\\.exe$/i;\n    var pattern9 = /^[a-z]{3}\\.dll$/i;\n\
    \    var pattern10 = /^[A-Z]{2}\\.txt$/i;\n    var pattern11 = /^[A-Z]{2}\\.exe$/i;\n\
    \    var pattern12 = /^[A-Z]{2}\\.dll$/i;\n    var pattern13 = /^[A-Z]{3}\\.txt$/i;\n\
    \    var pattern14 = /^[A-Z]{3}\\.exe$/i;\n    var pattern15 = /^[A-Z]{3}\\.dll$/i;\n\
    \    var pattern16 = /^[a-z]{2}\\.txt$/i;\n    var pattern17 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern18 = /^[a-z]{2}\\.dll$/i;\n    var pattern19 = /^[a-z]{3}\\.txt$/i;\n\
    \    var pattern20 = /^[a-z]{3}\\.exe$/i;\n    var pattern21 = /^[a-z]{3}\\.dll$/i;\n\
    \    var pattern22 = /^[A-Z]{2}\\.txt$/i;\n    var pattern23 = /^[A-Z]{2}\\.exe$/i;\n\
    \    var pattern24 = /^[A-Z]{2}\\.dll$/i;\n    var pattern25 = /^[A-Z]{3}\\.txt$/i;\n\
    \    var pattern26 = /^[A-Z]{3}\\.exe$/i;\n    var pattern27 = /^[A-Z]{3}\\.dll$/i;\n\
    \    var pattern28 = /^[a-z]{2}\\.txt$/i;\n    var pattern29 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern30 = /^[a-z]{2}\\.dll$/i;\n    var pattern31 = /^[a-z]{3}\\.txt$/i;\n\
    \    var pattern32 = /^[a-z]{3}\\.exe$/i;\n    var pattern33 = /^[a-z]{3}\\.dll$/i;\n\
    \    var pattern34 = /^[A-Z]{2}\\.txt$/i;\n    var pattern35 = /^[A-Z]{2}\\.exe$/i;\n\
    \    var pattern36 = /^[A-Z]{2}\\.dll$/i;\n    var pattern37 = /^[A-Z]{3}\\.txt$/i;\n\
    \    var pattern38 = /^[A-Z]{3}\\.exe$/i;\n    var pattern39 = /^[A-Z]{3}\\.dll$/i;\n\
    \    var pattern40 = /^[a-z]{2}\\.txt$/i;\n    var pattern41 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern42 = /^[a-z]{2}\\.dll$/i;\n    var pattern43 = /^", "    var file_name\
    \ = file_name.toLowerCase();\n    var dot_index = file_name.indexOf('.');\n  \
    \  if (dot_index == -1) {\n        return 'No';\n    }\n    var first_letter =\
    \ file_name.substring(0, dot_index);\n    var second_letter = file_name.substring(dot_index\
    \ + 1);\n    if (first_letter.length < 2 || first_letter.length > 3 || \n    \
    \    first_letter < 'a' || first_letter > 'z' || \n        first_letter < 'A'\
    \ || first_letter > 'Z' || \n        second_letter != 'txt' && second_letter !=\
    \ 'exe' && second_letter != 'dll') {\n        return 'No';\n    }\n    return\
    \ 'Yes';\n}\n</code>\n<|/ a tags=javascript,typescript |>\n<| c |>\nThis doesn't\
    \ answer the question. OP wants to know if his file name is valid or not.\n<|/\
    \ c |>\n<| c |>\nThe question was \"How to check if a file's name is valid?\"\
    \ The answer is \"Use a regular expression to check if the file's name is valid.\"\
    \n<|/ c |>\n<| c |>\nThe question is \"How to check if a file's name is valid?\"\
    \ The answer is \"Use a regular expression to check if the file's name is valid.\"\
    \n<|/ c |>\n<| c |>\nThe question was \"How to check if a file's name is valid?\"\
    \ The answer is \"Use a regular expression to check if the file's name is valid.\"\
    \n<|/ c |>\n<| c |>\nThe question was \"How to check if a file's name is valid?\"\
    \ The answer is \"Use a regular expression to check if the file's name is valid.\"\
    \n<|/ c |>\n<| a dscore=0 |>\n<code>", "    var re = /^[0-9]{3}\\.txt|exe|dll$/;\n\
    \    return re.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    var pattern = /^[0-9]{3}\\\
    .txt$/i;\n    var pattern2 = /^[0-9]{3}\\.exe$/i;\n    var pattern3 = /^[0-9]{3}\\\
    .dll$/i;\n    var pattern4 = /^[a-z]{2}\\.txt$/i;\n    var pattern5 = /^[a-z]{2}\\\
    .exe$/i;\n    var pattern6 = /^[a-z]{2}\\.dll$/i;\n    var pattern7 = /^[a-z]{3}\\\
    .txt$/i;\n    var pattern8 = /^[a-z]{3}\\.exe$/i;\n    var pattern9 = /^[a-z]{3}\\\
    .dll$/i;\n    var pattern10 = /^[a-z]{4}\\.txt$/i;\n    var pattern11 = /^[a-z]{4}\\\
    .exe$/i;\n    var pattern12 = /^[a-z]{4}\\.dll$/i;\n    var pattern13 = /^[a-z]{5}\\\
    .txt$/i;\n    var pattern14 = /^[a-z]{5}\\.exe$/i;\n    var pattern15 = /^[a-z]{5}\\\
    .dll$/i;\n    var pattern16 = /^[a-z]{6}\\.txt$/i;\n    var pattern17 = /^[a-z]{6}\\\
    .exe$/i;\n    var pattern18 = /^[a-z]{6}\\.dll$/i;\n    var pattern19 = /^[a-z]{7}\\\
    .txt$/i;\n    var pattern20 = /^[a-z]{7}\\.exe$/i;\n    var pattern21 = /^[a-z]{7}\\\
    .dll$/i;\n    var pattern22 = /^[a-z]{8}\\.txt$/i;\n    var pattern23 = /^[a-z]{8}\\\
    .exe$/i;\n    var pattern24 = /^[a-z]{8}\\.dll$/i;\n    var pattern25 = /^[a-z]{9}\\\
    .txt$/i;\n    var pattern26 = /^[a-z]{9}\\.exe$/i;\n    var pattern27 = /^[a-z]{9}\\\
    .dll$/i;\n    var pattern28 = /^[a-z]{10}\\.txt$/i;\n    var pattern29 = /^[a-z]{10}\\\
    .exe$/i;\n    var pattern30 = /^[a-z]{10}\\.dll$/i;\n    var pattern31 = /^[a-z]{11}\\\
    .txt$/i;\n    var pattern32 = /^[a-z]{11}\\.exe$/i;\n    var pattern33 = /^[a-z]{11}\\\
    .dll$/i;\n    var pattern34 = /^[a-z]{12}\\.txt$/i;\n    var pattern35 = /^[a-z]{12}\\\
    .exe$/i;\n    var pattern36 = /^[a-z]{12}\\.dll$/i;\n    var pattern37 = /^[a-z]{13}\\\
    .txt$/i;\n    var pattern38 = /^[a-z]{13}\\.exe$/i;\n    var pattern39 = /^[a-z]{13}\\\
    .dll$/i;\n    var pattern40 = /^[a-z]{14}\\.txt$/i;\n    var pattern4", "    let\
    \ file_name = file_name.toLowerCase();\n    let file_name = file_name.replace(/\\\
    ./g, '');\n    let file_name = file_name.substring(0, 3);\n    let file_name =\
    \ file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n \
    \   let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = ", "    let file_name_array = file_name.split('.');\n   \
    \ if (file_name_array.length != 3 || file_name_array[0].length != 1 || file_name_array[1].length\
    \ != 1 || file_name_array[2].length != 1 || file_name_array[0] != '0' || file_name_array[1]\
    \ != 'a' || file_name_array[2] != 'a' || file_name_array[0] != 'A' || file_name_array[1]\
    \ != 'a' || file_name_array[2] != 'a') {\n        return 'No';\n    }\n    return\
    \ 'Yes';\n}\n", "    let file_name = file_name.toLowerCase();\n    let file_name\
    \ = file_name.replace(/\\./g, '');\n    let file_name = file_name.replace(/^[a-z]/,\
    \ '');\n    let file_name = file_name.replace(/[a-z]/, '');\n    let file_name\
    \ = file_name.replace(/[^a-z0-9\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let\
    \ file_name = file_name.replace(/\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\./g,\
    \ '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\./g, '');\n  \
    \  let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\.\\.\\.\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\.\\.\\.\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\\
    .\\.\\.\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\\
    .\\.\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\./g, '');\n    let file_name = file_name.replace(/\\.", "    let file_name\
    \ = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n  \
    \  if (dot_index === -1) {\n        return 'No';\n    }\n    if (file_name.substring(dot_index\
    \ - 1, dot_index) === '..') {\n        return 'No';\n    }\n    let first_letter\
    \ = file_name.substring(0, dot_index).toLowerCase();\n    if (first_letter !==\
    \ 'a' && first_letter !== 'b' && first_letter !== 'c' && first_letter !== 'd'\
    \ && first_letter !== 'e' && first_letter !== 'f' && first_letter !== 'g' && first_letter\
    \ !== 'h' && first_letter !== 'i' && first_letter !== 'j' && first_letter !==\
    \ 'k' && first_letter !== 'l' && first_letter !== 'm' && first_letter !== 'n'\
    \ && first_letter !== 'o' && first_letter !== 'p' && first_letter !== 'q' && first_letter\
    \ !== 'r' && first_letter !== 's' && first_letter !== 't' && first_letter !==\
    \ 'u' && first_letter !== 'v' && first_letter !== 'w' && first_letter !== 'x'\
    \ && first_letter !== 'y' && first_letter !== 'z') {\n        return 'No';\n \
    \   }\n    let extension = file_name.substring(dot_index + 1);\n    if (extension.indexOf('txt')\
    \ === -1 && extension.indexOf('exe') === -1 && extension.indexOf('dll') === -1)\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n", "    let result = file_name.split('.');\n\
    \    if (result.length != 3 || result[0].length != 1 || result[1].length != 1\
    \ || \n        result[2].length != 1 || result[0].charAt(0) != 'a' || result[0].charAt(0)\
    \ != 'A' || \n        result[0].charAt(1) != 'z' || result[0].charAt(1) != 'Z'\
    \ || \n        result[1].charAt(0) != 'a' || result[1].charAt(0) != 'A' || \n\
    \        result[1].charAt(1) != 'z' || result[1].charAt(1) != 'Z' || \n      \
    \  result[2].charAt(0) != 'a' || result[2].charAt(0) != 'A' || \n        result[2].charAt(1)\
    \ != 'z' || result[2].charAt(1) != 'Z') {\n        return 'No';\n    } else {\n\
    \        return 'Yes';\n    }\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf(\".\");\n    if (dot_index == -1) {\n \
    \       return \"No\";\n    }\n    let first_letter = file_name.substring(0, dot_index);\n\
    \    let valid_first_letter = first_letter >= \"a\" && first_letter <= \"z\" ||\
    \ first_letter >= \"A\" && first_letter <= \"Z\";\n    if (!valid_first_letter)\
    \ {\n        return \"No\";\n    }\n    let valid_extensions = [\"txt\", \"exe\"\
    , \"dll\"];\n    let extension = file_name.substring(dot_index + 1);\n    let\
    \ valid_extension = extension in valid_extensions;\n    if (!valid_extension)\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let file_name\
    \ = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n  \
    \  if (dot_index == -1) {\n        return \"No\";\n    }\n    let first_letter\
    \ = file_name.substring(0, dot_index);\n    let second_letter = file_name.substring(dot_index\
    \ + 1);\n    if (first_letter.length < 2 || first_letter < 'a' || first_letter\
    \ > 'z' || second_letter != 'txt' && second_letter != 'exe' && second_letter !=\
    \ 'dll') {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThank you for your answer. Unfortunately, I cannot use\
    \ any external libraries. I only have access to javascript and typescript.\n<|/\
    \ c |>\n<| c |>\nI added a TypeScript solution to my answer.\n<|/ c |>\n<| c |>\n\
    Thank you for your answer. Unfortunately, I cannot use any external libraries.\
    \ I only have access to javascript and typescript.\n<|/ c |>\n<| c |>\nI added\
    \ a TypeScript solution to my answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>", " \
    \   let valid_file_name = file_name.match(/^[0-9]{3}\\.[a-z][a-z]$/);\n    if\
    \ (valid_file_name == null) {\n        return \"No\";\n    } else {\n        let\
    \ dot_index = file_name.indexOf(\".\");\n        if (dot_index == -1) {\n    \
    \        return \"No\";\n        } else {\n            let first_letter = file_name.substring(0,\
    \ dot_index);\n            if (first_letter != \"\" && first_letter != \" \" &&\
    \ first_letter != \"0\" && first_letter != \"1\" && first_letter != \"2\" && first_letter\
    \ != \"3\" && first_letter != \"4\" && first_letter != \"5\" && first_letter !=\
    \ \"6\" && first_letter != \"7\" && first_letter != \"8\" && first_letter != \"\
    9\") {\n                return \"No\";\n            } else {\n               \
    \ let file_type = file_name.substring(dot_index + 1);\n                if (file_type.indexOf(\"\
    txt\") != -1 || file_type.indexOf(\"exe\") != -1 || file_type.indexOf(\"dll\"\
    ) != -1) {\n                    return \"Yes\";\n                } else {\n  \
    \                  return \"No\";\n                }\n            }\n        }\n\
    \    }\n}\n", "    let file_name = file_name.toLowerCase();\n    let file_name\
    \ = file_name.replace(/\\./g, '');\n    let file_name = file_name.replace(/[^0-9\\\
    .]/g, '');\n    let file_name = file_name.substr(0, 1);\n    let file_name = file_name.substr(0,\
    \ 2);\n    if (file_name === '0') {\n        return 'No';\n    }\n    if (file_name\
    \ === '1') {\n        return 'No';\n    }\n    if (file_name === '2') {\n    \
    \    return 'No';\n    }\n    if (file_name === '3') {\n        return 'No';\n\
    \    }\n    if (file_name === '4') {\n        return 'No';\n    }\n    if (file_name\
    \ === '5') {\n        return 'No';\n    }\n    if (file_name === '6') {\n    \
    \    return 'No';\n    }\n    if (file_name === '7') {\n        return 'No';\n\
    \    }\n    if (file_name === '8') {\n        return 'No';\n    }\n    if (file_name\
    \ === '9') {\n        return 'No';\n    }\n    if (file_name === 'a') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'b') {\n        return 'No';\n\
    \    }\n    if (file_name === 'c') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'd') {\n        return 'No';\n    }\n    if (file_name === 'e') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'f') {\n        return 'No';\n\
    \    }\n    if (file_name === 'g') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'h') {\n        return 'No';\n    }\n    if (file_name === 'i') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'j') {\n        return 'No';\n\
    \    }\n    if (file_name === 'k') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'l') {\n        return 'No';\n    }\n    if (file_name === 'm') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'n') {\n        return 'No';\n\
    \    }\n    if (file_name === 'o') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'p') {\n        return 'No';\n    }\n    if (file_name === 'q') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'r') {\n        return 'No';\n\
    \    }\n    if (file_name === 's') {\n        return 'No';\n    }\n    if (file_name\
    \ === 't') {\n        return 'No';\n    }\n    if (file_name === 'u') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'v') {\n        return 'No';\n\
    \    }\n    if (file_name === 'w') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'x') {\n        return 'No';\n    }\n    if (file_name === 'y') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'z') {\n        return 'No';\n\
    \    }", "    var pattern = /^[0-9]{3}\\.txt$/i;\n    var pattern2 = /^[0-9]{3}\\\
    .exe$/i;\n    var pattern3 = /^[0-9]{3}\\.dll$/i;\n    var pattern4 = /^[a-z]{2}\\\
    .txt$/i;\n    var pattern5 = /^[a-z]{2}\\.exe$/i;\n    var pattern6 = /^[a-z]{2}\\\
    .dll$/i;\n    var pattern7 = /^[a-z]{3}\\.txt$/i;\n    var pattern8 = /^[a-z]{3}\\\
    .exe$/i;\n    var pattern9 = /^[a-z]{3}\\.dll$/i;\n    var pattern10 = /^[A-Z]{2}\\\
    .txt$/i;\n    var pattern11 = /^[A-Z]{2}\\.exe$/i;\n    var pattern12 = /^[A-Z]{2}\\\
    .dll$/i;\n    var pattern13 = /^[A-Z]{3}\\.txt$/i;\n    var pattern14 = /^[A-Z]{3}\\\
    .exe$/i;\n    var pattern15 = /^[A-Z]{3}\\.dll$/i;\n    var pattern16 = /^[a-z0-9]{2}\\\
    .txt$/i;\n    var pattern17 = /^[a-z0-9]{2}\\.exe$/i;\n    var pattern18 = /^[a-z0-9]{2}\\\
    .dll$/i;\n    var pattern19 = /^[a-z0-9]{3}\\.txt$/i;\n    var pattern20 = /^[a-z0-9]{3}\\\
    .exe$/i;\n    var pattern21 = /^[a-z0-9]{3}\\.dll$/i;\n    var pattern22 = /^[A-Za-z0-9]{2}\\\
    .txt$/i;\n    var pattern23 = /^[A-Za-z0-9]{2}\\.exe$/i;\n    var pattern24 =\
    \ /^[A-Za-z0-9]{2}\\.dll$/i;\n    var pattern25 = /^[A-Za-z0-9]{3}\\.txt$/i;\n\
    \    var pattern26 = /^[A-Za-z0-9]{3}\\.exe$/i;\n    var pattern27 = /^[A-Za-z0-9]{3}\\\
    .dll$/i;\n    var pattern28 = /^[a-z0-9]{2}\\.txt$/i;\n    var pattern29 = /^[a-z0-9]{2}\\\
    .exe$/i;\n    var pattern30 = /^[a-z0-9]{2}\\.dll$/i;\n    var pattern31 = /^[a-z0-9]{3}\\\
    .txt$/i;\n    var pattern32 = /^[a-z0-9]{3}\\.exe$/i;\n    var pattern33 = /^[a-z0-9]{3}\\\
    .dll$/i;\n    var pattern34 = /^[A-Za-z0-9]{2}\\.txt$/i;\n    var pattern35 =\
    \ /^[A-Za-z0-9]{2}\\.exe$/i;\n    var pattern36 = /^[A-Za-z0-9]{2}\\.dll$/i;\n\
    \    var pattern37 = /^[A-Za-z0-9]{3}\\.txt$/i;\n    var pattern38 = /^[A-Za-z0-9]{3}\\\
    .exe$/i;\n    var pattern39 = /^[A-Za-z0-9]{3}\\.dll$/i;\n    var pattern40 =\
    \ /^[a-z0-9]{2}\\.txt$/i;\n    var pattern41 = /^[a-z", "    var pattern = /^[0-9]{3}\\\
    .txt|exe|dll$/;\n    var result = file_name.match(pattern);\n    if (result &&\
    \ result.length > 0) {\n        var first_char = result[0].charAt(0);\n      \
    \  var first_char_lower = first_char.toLowerCase();\n        var first_char_upper\
    \ = first_char.toUpperCase();\n        if (first_char_lower >= 'A' && first_char_lower\
    \ <= 'Z') {\n            if (first_char_upper >= 'A' && first_char_upper <= 'Z')\
    \ {\n                return \"Yes\";\n            } else {\n                return\
    \ \"No\";\n            }\n        } else {\n            return \"No\";\n     \
    \   }\n    } else {\n        return \"No\";\n    }\n}\n", "    var valid_file_name\
    \ = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n    var valid_sub_string\
    \ = file_name.match(/^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/);\n    var valid_extension\
    \ = file_name.match(/\\.(txt|exe|dll)$/);\n    var valid_sub_string2 = file_name.match(/^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]$/);\n    \n    if (valid_file_name && valid_sub_string) {\n \
    \       return \"Yes\";\n    }\n    else if (valid_file_name && valid_sub_string2)\
    \ {\n        return \"Yes\";\n    }\n    else if (valid_extension) {\n       \
    \ return \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}\n", " \
    \   let file_name = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n\
    \    let letter_index = file_name.substring(0, dot_index).search(/[a-z]/);\n \
    \   let dot_length = dot_index - letter_index;\n    let dot_length = dot_length\
    \ >= 0 ? dot_length : 0;\n    let dot_length = dot_length >= 3 ? dot_length :\
    \ 0;\n    let dot_length = dot_length >= 1 ? dot_length : 0;\n    let dot_length\
    \ = dot_length >= 0 ? dot_length : 0;\n    let dot_length = dot_length >= 0 ?\
    \ dot_length : 0;\n    let dot_length = dot_length >= 0 ? dot_length : 0;\n  \
    \  let dot_length = dot_length >= 0 ? dot_length : 0;\n    let dot_length = dot_length\
    \ >= 0 ? dot_length : 0;\n    let dot_length = dot_length >= 0 ? dot_length :\
    \ 0;\n    let dot_length = dot_length >= 0 ? dot_length : 0;\n    let dot_length\
    \ = dot_length >= 0 ? dot_length : 0;\n    let dot_length = dot_length >= 0 ?\
    \ dot_length : 0;\n    let dot_length = dot_length >= 0 ? dot_length : 0;\n  \
    \  let dot_length = dot_length >= 0 ? dot_length : 0;\n    let dot_length = dot_length\
    \ >= 0 ? dot_length : 0;\n    let dot_length = dot_length >= 0 ? dot_length :\
    \ 0;\n    let dot_length = dot_length >= 0 ? dot_length : 0;\n    let dot_length\
    \ = dot_length >= 0 ? dot_length : 0;\n    let dot_length = dot_length >= 0 ?\
    \ dot_length : 0;\n    let dot_length = dot_length >= 0 ? dot_length : 0;\n  \
    \  let dot_length = dot_length >= 0 ? dot_length : 0;\n    let dot_length = dot_length\
    \ >= 0 ? dot_length : 0;\n    let dot_length = dot_length >= 0 ? dot_length :\
    \ 0;\n    let dot_length = dot_length >= 0 ? dot_length : 0;\n    let dot_length\
    \ = dot_length >= 0 ? dot_length : 0;\n    let dot_length = dot_length >= 0 ?\
    \ dot_length : 0;\n    let dot_length = dot_length >= 0 ? dot_length : 0;\n  \
    \  let dot_length = dot_length >= 0 ? dot_length : 0;\n    let dot_length = dot_length\
    \ >= 0 ? dot_length : 0;\n    let dot_length = dot_length >= 0 ? dot_length :\
    \ 0;\n    let dot_length = dot_length >= 0 ? dot_length : 0;\n    let dot_length\
    \ = dot_length >= 0 ? dot_length : 0;\n    let dot_length = dot_length >= 0 ?\
    \ dot_length : 0;\n    let dot_length = dot_length >= 0 ? dot_length : 0;\n  \
    \  let dot_length = dot_length >= 0 ? dot_length : 0;\n    let dot_length = dot_length\
    \ >= 0 ? dot_length : 0;\n    let dot_length = dot_length >= 0 ? dot_length :\
    \ 0;\n    let dot_length = dot_length >= 0 ? dot_length : 0;\n    let dot_length\
    \ = dot_length >= 0 ? dot_length : 0;\n    let dot_length = ", "    let pattern\
    \ = /^[0-9]{3}\\.txt|exe|dll$/;\n    let result = pattern.test(file_name);\n \
    \   return result;\n}\n</code>\n<|/ a tags=typescript,javascript,regex |>\n<|\
    \ c |>\nThis doesn't answer the question. OP wants to know if there is a way to\
    \ do it with regex. Your answer doesn't do that.\n<|/ c |>\n<| c |>\nI agree with\
    \ you. I just wanted to show how it can be done with regex. OP can use the same\
    \ regex to validate the file name.\n<|/ c |>\n<| c |>\nI agree with you. But the\
    \ OP wants to know if there is a way to do it with regex. Your answer doesn't\
    \ do that.\n<|/ c |>\n<| c |>\nI agree with you. But the OP wants to know if there\
    \ is a way to do it with regex. Your answer doesn't do that.\n<|/ c |>\n<| c |>\n\
    I agree with you. But the OP wants to know if there is a way to do it with regex.\
    \ Your answer doesn't do that.\n<|/ c |>\n<| a tags=typescript,javascript,regex\
    \ |>\n<code>", "    var pattern = /^[0-9]{3}\\.txt|exe|dll$/;\n    return pattern.test(file_name);\n\
    }\n", "    let file_name = file_name.toLowerCase();\n    let file_name = file_name.replace(/\\\
    ./g, '');\n    let file_name = file_name.replace(/^[^a-z]/, '');\n    let file_name\
    \ = file_name.replace(/[^a-z0-9]/, '');\n    if (file_name.length <= 3 || file_name.indexOf('.')\
    \ === -1 || file_name.substring(0, 1) !== 'a' || file_name.substring(file_name.length\
    \ - 1) !== 'txt' || file_name.substring(0, 2) !== 'exe' || file_name.substring(file_name.length\
    \ - 2) !== 'dll') {\n        return 'No';\n    } else {\n        return 'Yes';\n\
    \    }\n}\n", "    var valid = false;\n    var dotIndex = file_name.indexOf('.');\n\
    \    if (dotIndex == -1) {\n        valid = true;\n    } else {\n        var firstChar\
    \ = file_name.substr(0, 1);\n        var firstCharLower = firstChar.toLowerCase();\n\
    \        var firstCharUpper = firstChar.toUpperCase();\n        if (firstCharLower\
    \ >= 'a' && firstCharLower <= 'z') {\n            if (firstCharUpper >= 'a' &&\
    \ firstCharUpper <= 'z') {\n                valid = true;\n            } else\
    \ {\n                valid = false;\n            }\n        } else {\n       \
    \     valid = false;\n        }\n    }\n    if (valid) {\n        var lastChar\
    \ = file_name.substr(file_name.length - 1, 1);\n        var lastCharLower = lastChar.toLowerCase();\n\
    \        var lastCharUpper = lastChar.toUpperCase();\n        if (lastCharLower\
    \ >= 'a' && lastCharLower <= 'z') {\n            if (lastCharUpper >= 'a' && lastCharUpper\
    \ <= 'z') {\n                valid = true;\n            } else {\n           \
    \     valid = false;\n            }\n        } else {\n            valid = false;\n\
    \        }\n    }\n    if (valid) {\n        var firstCharIndex = file_name.indexOf('');\n\
    \        if (firstCharIndex != -1) {\n            valid = true;\n        } else\
    \ {\n            valid = false;\n        }\n    }\n    if (valid) {\n        var\
    \ lastCharIndex = file_name.lastIndexOf('');\n        if (lastCharIndex != -1)\
    \ {\n            valid = true;\n        } else {\n            valid = false;\n\
    \        }\n    }\n    if (valid) {\n        var firstCharIndex = file_name.indexOf('');\n\
    \        if (firstCharIndex != -1) {\n            valid = true;\n        } else\
    \ {\n            valid = false;\n        }\n    }\n    if (valid) {\n        var\
    \ lastCharIndex = file_name.lastIndexOf('');\n        if (lastCharIndex != -1)\
    \ {\n            valid = true;\n        } else {\n            valid = false;\n\
    \        }\n    }\n    if (valid) {\n        var firstCharIndex = file_name.indexOf('');\n\
    \        if (firstCharIndex != -1) {\n            valid = true;\n        } else\
    \ {\n            valid = false;\n        }\n    }\n    if (valid) {\n        var\
    \ lastCharIndex = file_name.lastIndexOf('');\n        if (lastCharIndex != -1)\
    \ {\n            valid = true;\n        } else {\n            valid = false;\n\
    \        }\n    }\n    if (valid) {\n        var firstCharIndex = file_name.indexOf('');\n\
    \        if (firstCharIndex != -1) {\n            valid = true;\n        } else\
    \ {\n            valid = false;\n        }\n    }\n    if (valid) {\n        var\
    \ lastCharIndex = file_name.lastIndexOf('');\n        if (lastCharIndex != -1)\
    \ {\n            valid = true;\n        } else {\n            valid = false;\n\
    \        }\n    }\n    if (valid) {\n        var firstCharIndex = file_name.indexOf('');\n\
    \        if (firstCharIndex != -1) {\n            valid = true;\n        } else\
    \ {\n            ", "    let valid_file_name = false;\n    let file_name_array\
    \ = file_name.split('.');\n    if (file_name_array.length == 1) {\n        valid_file_name\
    \ = true;\n    } else if (file_name_array.length == 2 && file_name_array[0].length\
    \ > 3 && file_name_array[0].charAt(0) >= 'a' && file_name_array[0].charAt(0) <=\
    \ 'z' && file_name_array[0].charAt(1) >= 'a' && file_name_array[0].charAt(1) <=\
    \ 'z') {\n        valid_file_name = true;\n    } else if (file_name_array.length\
    \ == 2 && file_name_array[0].length > 3 && file_name_array[0].charAt(0) >= 'A'\
    \ && file_name_array[0].charAt(0) <= 'Z' && file_name_array[0].charAt(1) >= 'A'\
    \ && file_name_array[0].charAt(1) <= 'Z') {\n        valid_file_name = true;\n\
    \    } else if (file_name_array.length == 2 && file_name_array[0].length > 3 &&\
    \ file_name_array[0].charAt(0) == '.' && file_name_array[0].charAt(1) in {'txt',\
    \ 'exe', 'dll'}) {\n        valid_file_name = true;\n    }\n    return valid_file_name\
    \ ? 'Yes' : 'No';\n}\n", "    var pattern = /^[0-9]{3}\\.txt$/i;\n    var pattern2\
    \ = /^[0-9]{3}\\.exe$/i;\n    var pattern3 = /^[0-9]{3}\\.dll$/i;\n    var pattern4\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern5 = /^[a-z]{2}\\.exe$/i;\n    var pattern6\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern7 = /^[a-z]{2}\\.txt$/i;\n    var pattern8\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern9 = /^[a-z]{2}\\.dll$/i;\n    var pattern10\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern11 = /^[a-z]{2}\\.exe$/i;\n    var pattern12\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern13 = /^[a-z]{2}\\.txt$/i;\n    var pattern14\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern15 = /^[a-z]{2}\\.dll$/i;\n    var pattern16\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern17 = /^[a-z]{2}\\.exe$/i;\n    var pattern18\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern19 = /^[a-z]{2}\\.txt$/i;\n    var pattern20\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern21 = /^[a-z]{2}\\.dll$/i;\n    var pattern22\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern23 = /^[a-z]{2}\\.exe$/i;\n    var pattern24\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern25 = /^[a-z]{2}\\.txt$/i;\n    var pattern26\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern27 = /^[a-z]{2}\\.dll$/i;\n    var pattern28\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern29 = /^[a-z]{2}\\.exe$/i;\n    var pattern30\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern31 = /^[a-z]{2}\\.txt$/i;\n    var pattern32\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern33 = /^[a-z]{2}\\.dll$/i;\n    var pattern34\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern35 = /^[a-z]{2}\\.exe$/i;\n    var pattern36\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern37 = /^[a-z]{2}\\.txt$/i;\n    var pattern38\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern39 = /^[a-z]{2}\\.dll$/i;\n    var pattern40\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern41 = /^[a-z]{2}\\.exe$/i;\n    var pattern42\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern43 = /^", "    let valid_file_name =\
    \ false;\n    let file_name_array = file_name.split('.');\n    if (file_name_array.length\
    \ != 3 || file_name_array[0].length != 1 || file_name_array[1].length != 1 ||\
    \ file_name_array[0][0] !== 'a' || file_name_array[0][0] !== 'A' || file_name_array[1][0]\
    \ !== 't' || file_name_array[1][0] !== 'T' || file_name_array[1][0] !== 'e' ||\
    \ file_name_array[1][0] !== 'E' || file_name_array[1][0] !== 'd' || file_name_array[1][0]\
    \ !== 'D') {\n        valid_file_name = false;\n    } else {\n        valid_file_name\
    \ = true;\n    }\n    return valid_file_name ? 'Yes' : 'No';\n}\n", "    let file_name\
    \ = file_name.toLowerCase();\n    let file_name = file_name.replace(/\\./g, '');\n\
    \    let file_name = file_name.replace(/^[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[a-z]/, '');\n    let file_name = file_name.replace(/\\.[a-z]/, '');\n    let\
    \ file", "    let file_name = file_name.toLowerCase();\n    let file_name = file_name.replace(/\\\
    ./g, '');\n    let file_name = file_name.replace(/[^0-9\\.]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/", "    let file_extension = file_name.split('.').pop();\n\
    \    if (file_name.length <= 3 || file_name.includes('.') === false || \n    \
    \    file_name.substring(0, 1) !== 'a' || file_name.substring(0, 1) !== 'b' ||\
    \ \n        file_name.substring(0, 1) !== 'c' || file_name.substring(0, 1) !==\
    \ 'd' || \n        file_name.substring(0, 1) !== 'e' || file_name.substring(0,\
    \ 1) !== 'f' || \n        file_name.substring(0, 1) !== 'g' || file_name.substring(0,\
    \ 1) !== 'h' || \n        file_name.substring(0, 1) !== 'i' || file_name.substring(0,\
    \ 1) !== 'j' || \n        file_name.substring(0, 1) !== 'k' || file_name.substring(0,\
    \ 1) !== 'l' || \n        file_name.substring(0, 1) !== 'm' || file_name.substring(0,\
    \ 1) !== 'n' || \n        file_name.substring(0, 1) !== 'o' || file_name.substring(0,\
    \ 1) !== 'p' || \n        file_name.substring(0, 1) !== 'q' || file_name.substring(0,\
    \ 1) !== 'r' || \n        file_name.substring(0, 1) !== 's' || file_name.substring(0,\
    \ 1) !== 't' || \n        file_name.substring(0, 1) !== 'u' || file_name.substring(0,\
    \ 1) !== 'v' || \n        file_name.substring(0, 1) !== 'w' || file_name.substring(0,\
    \ 1) !== 'x' || \n        file_name.substring(0, 1) !== 'y' || file_name.substring(0,\
    \ 1) !== 'z') {\n        return 'No';\n    }\n    if (file_extension === 'txt'\
    \ || file_extension === 'exe' || file_extension === 'dll') {\n        return 'Yes';\n\
    \    }\n    return 'No';\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let file_name = file_name.replace(/\\./g, '');\n    let file_name = file_name.replace(/[^0-9\\\
    .]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let\
    \ file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^\\.]/g, '');\n    let file_name = file_name.replace(/\\.[^\\.]/g, '');\n  \
    \  let file_name = file_name.replace(/", "    let file_extension = file_name.split('.').pop();\n\
    \    let file_extension_lower = file_extension.toLowerCase();\n    let file_extension_upper\
    \ = file_extension.toUpperCase();\n    let file_extension_lower = file_extension_lower.replace(/[^a-zA-Z]/g,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/[^a-zA-Z]/g,\
    \ '');\n    let file_extension_lower = file_extension_lower.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_lower = file_extension_lower.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_lower = file_extension_lower.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_lower = file_extension_lower.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_lower = file_extension_lower.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_lower = file_extension_lower.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_lower = file_extension_lower.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_lower = file_extension_lower.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_lower = file_extension_lower.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_lower = file_extension_lower.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_lower = file_extension_lower.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_lower = file_extension_lower.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_extension_upper = file_extension_upper.replace(/^[^a-zA-Z]/,\
    \ '');\n    let ", "    let pattern = /^[0-9]{3}\\.txt$/i;\n    let pattern2 =\
    \ /^[0-9]{3}\\.exe$/i;\n    let pattern3 = /^[0-9]{3}\\.dll$/i;\n    let pattern4\
    \ = /^[a-z]{2}\\.txt$/i;\n    let pattern5 = /^[a-z]{2}\\.exe$/i;\n    let pattern6\
    \ = /^[a-z]{2}\\.dll$/i;\n    let pattern7 = /^[a-z]{2}\\.txt$/i;\n    let pattern8\
    \ = /^[a-z]{2}\\.exe$/i;\n    let pattern9 = /^[a-z]{2}\\.dll$/i;\n    let pattern10\
    \ = /^[a-z]{2}\\.txt$/i;\n    let pattern11 = /^[a-z]{2}\\.exe$/i;\n    let pattern12\
    \ = /^[a-z]{2}\\.dll$/i;\n    let pattern13 = /^[a-z]{2}\\.txt$/i;\n    let pattern14\
    \ = /^[a-z]{2}\\.exe$/i;\n    let pattern15 = /^[a-z]{2}\\.dll$/i;\n    let pattern16\
    \ = /^[a-z]{2}\\.txt$/i;\n    let pattern17 = /^[a-z]{2}\\.exe$/i;\n    let pattern18\
    \ = /^[a-z]{2}\\.dll$/i;\n    let pattern19 = /^[a-z]{2}\\.txt$/i;\n    let pattern20\
    \ = /^[a-z]{2}\\.exe$/i;\n    let pattern21 = /^[a-z]{2}\\.dll$/i;\n    let pattern22\
    \ = /^[a-z]{2}\\.txt$/i;\n    let pattern23 = /^[a-z]{2}\\.exe$/i;\n    let pattern24\
    \ = /^[a-z]{2}\\.dll$/i;\n    let pattern25 = /^[a-z]{2}\\.txt$/i;\n    let pattern26\
    \ = /^[a-z]{2}\\.exe$/i;\n    let pattern27 = /^[a-z]{2}\\.dll$/i;\n    let pattern28\
    \ = /^[a-z]{2}\\.txt$/i;\n    let pattern29 = /^[a-z]{2}\\.exe$/i;\n    let pattern30\
    \ = /^[a-z]{2}\\.dll$/i;\n    let pattern31 = /^[a-z]{2}\\.txt$/i;\n    let pattern32\
    \ = /^[a-z]{2}\\.exe$/i;\n    let pattern33 = /^[a-z]{2}\\.dll$/i;\n    let pattern34\
    \ = /^[a-z]{2}\\.txt$/i;\n    let pattern35 = /^[a-z]{2}\\.exe$/i;\n    let pattern36\
    \ = /^[a-z]{2}\\.dll$/i;\n    let pattern37 = /^[a-z]{2}\\.txt$/i;\n    let pattern38\
    \ = /^[a-z]{2}\\.exe$/i;\n    let pattern39 = /^[a-z]{2}\\.dll$/i;\n    let pattern40\
    \ = /^[a-z]{2}\\.txt$/i;\n    let pattern41 = /^[a-z]{2}\\.exe$/i;\n    let pattern42\
    \ = /^[a-z]{2}\\.dll$/i;\n    let pattern43 = /^", "    let file_name = file_name.toLowerCase();\n\
    \    let file_name = file_name.replace(/[^0-9\\.]/g, '');\n    let file_name =\
    \ file_name.split('.');\n    let file_name = file_name[0];\n    let file_name\
    \ = file_name.charAt(0).toUpperCase() + file_name.slice(1);\n    let file_name\
    \ = file_name.replace(/[^a-z]/g, '');\n    return file_name;\n}\n", "    let file_name\
    \ = file_name.toLowerCase();\n    let file_name = file_name.replace(/\\./g, '');\n\
    \    let file_name = file_name.replace(/[^0-9\\.]/g, '');\n    let file_name =\
    \ file_name.replace(/^[^a-z]/g, '');\n    let file_name = file_name.replace(/[^a-z]$/,\
    \ '');\n    let file_name = file_name.replace(/\\.[^a-z]$/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name",
  "    let file_name = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n\
    \    if (dot_index == -1) {\n        return 'No';\n    }\n    let first_letter\
    \ = file_name.substring(0, dot_index);\n    let second_letter = file_name.substring(dot_index\
    \ + 1);\n    if (first_letter.length != 1 || first_letter != 'a' || first_letter\
    \ != 'b' || first_letter != 'c' || first_letter != 'd' || first_letter != 'e'\
    \ || first_letter != 'f' || first_letter != 'g' || first_letter != 'h' || first_letter\
    \ != 'i' || first_letter != 'j' || first_letter != 'k' || first_letter != 'l'\
    \ || first_letter != 'm' || first_letter != 'n' || first_letter != 'o' || first_letter\
    \ != 'p' || first_letter != 'q' || first_letter != 'r' || first_letter != 's'\
    \ || first_letter != 't' || first_letter != 'u' || first_letter != 'v' || first_letter\
    \ != 'w' || first_letter != 'x' || first_letter != 'y' || first_letter != 'z')\
    \ {\n        return 'No';\n    }\n    if (second_letter.length != 1 || second_letter\
    \ != 'txt' || second_letter != 'exe' || second_letter != 'dll') {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\n", "    let valid_file_name = file_name.split('.').length\
    \ === 3;\n    let first_letter = file_name.charAt(0);\n    let last_letter = file_name.charAt(file_name.length\
    \ - 1);\n    let contains_letter = first_letter >= 'a' && first_letter <= 'z'\
    \ || first_letter >= 'A' && first_letter <= 'Z';\n    let contains_dot = file_name.indexOf('.')\
    \ !== -1;\n    let contains_extension = last_letter === 'txt' || last_letter ===\
    \ 'exe' || last_letter === 'dll';\n    return valid_file_name && contains_letter\
    \ && contains_dot && contains_extension;\n}\n", "    let file_extension = file_name.split('.').pop();\n\
    \    let file_extension_lowercase = file_extension.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf('.');\n    let first_letter = file_name.charAt(0);\n\
    \    let last_letter = file_name.charAt(file_name.length - 1);\n    let is_valid\
    \ = true;\n    if (dot_index === -1) {\n        is_valid = false;\n    } else\
    \ if (dot_index > 0 && dot_index < file_name.length - 1) {\n        if (first_letter\
    \ !== 'a' && first_letter !== 'b' && first_letter !== 'c' && first_letter !==\
    \ 'd' && first_letter !== 'e' && first_letter !== 'f' && first_letter !== 'g'\
    \ && first_letter !== 'h' && first_letter !== 'i' && first_letter !== 'j' && first_letter\
    \ !== 'k' && first_letter !== 'l' && first_letter !== 'm' && first_letter !==\
    \ 'n' && first_letter !== 'o' && first_letter !== 'p' && first_letter !== 'q'\
    \ && first_letter !== 'r' && first_letter !== 's' && first_letter !== 't' && first_letter\
    \ !== 'u' && first_letter !== 'v' && first_letter !== 'w' && first_letter !==\
    \ 'x' && first_letter !== 'y' && first_letter !== 'z') {\n            is_valid\
    \ = false;\n        }\n    }\n    if (dot_index === file_name.length - 1) {\n\
    \        if (last_letter !== 'a' && last_letter !== 'b' && last_letter !== 'c'\
    \ && last_letter !== 'd' && last_letter !== 'e' && last_letter !== 'f' && last_letter\
    \ !== 'g' && last_letter !== 'h' && last_letter !== 'i' && last_letter !== 'j'\
    \ && last_letter !== 'k' && last_letter !== 'l' && last_letter !== 'm' && last_letter\
    \ !== 'n' && last_letter !== 'o' && last_letter !== 'p' && last_letter !== 'q'\
    \ && last_letter !== 'r' && last_letter !== 's' && last_letter !== 't' && last_letter\
    \ !== 'u' && last_letter !== 'v' && last_letter !== 'w' && last_letter !== 'x'\
    \ && last_letter !== 'y' && last_letter !== 'z') {\n            is_valid = false;\n\
    \        }\n    }\n    if (dot_index > 0 && dot_index < file_name.length - 1)\
    \ {\n        if (file_name.substring(dot_index - 1, dot_index) !== 'txt' && file_name.substring(dot_index\
    \ - 1, dot_index) !== 'exe' && file_name.substring(dot_index - 1, dot_index) !==\
    \ 'dll') {\n            is_valid = false;\n        }\n    }\n    if (dot_index\
    \ === file_name.length - 1) {\n        if (file_name.substring(dot_index - 1,\
    \ dot_index) !== 'txt' && file_name.substring(dot_index - 1, dot_index) !== 'exe'\
    \ && file_name.substring(dot_index - 1, dot_index) !== 'dll') {\n            is_valid\
    \ = false;\n        }\n    }\n    if (dot_index > 0 && dot_index < file_name.length\
    \ - 1) {\n        if (file_name.substring(dot_index - 1, dot_index) !== 'txt'\
    \ && file_name.substring(dot_index - 1, dot_index) !== 'exe' && file_name.substring(dot_index\
    \ - 1, dot_", "    let file_name = file_name.toLowerCase();\n    let dot_index\
    \ = file_name.indexOf(\".\");\n    let first_letter = file_name.charAt(0);\n \
    \   let last_letter = file_name.charAt(file_name.length - 1);\n    let has_digit\
    \ = false;\n    let has_letter = false;\n    let has_dots = false;\n    for (let\
    \ i = 0; i < file_name.length; i++) {\n        if (file_name.charAt(i) >= '0'\
    \ && file_name.charAt(i) <= '9') {\n            has_digit = true;\n        }\n\
    \        if (file_name.charAt(i) >= 'a' && file_name.charAt(i) <= 'z') {\n   \
    \         has_letter = true;\n        }\n        if (file_name.charAt(i) == '.')\
    \ {\n            has_dots = true;\n        }\n    }\n    if (has_digit && has_letter\
    \ && has_dots) {\n        if (dot_index == 0 || dot_index == file_name.length\
    \ - 1 || \n            (dot_index == file_name.length - 2 && first_letter != 'a'\
    \ || \n             first_letter != 'z')) {\n            return \"No\";\n    \
    \    } else {\n            return \"Yes\";\n        }\n    } else {\n        return\
    \ \"No\";\n    }\n}\n", "    var file_name = file_name.toLowerCase();\n    var\
    \ dotIndex = file_name.indexOf('.');\n    var letterIndex = file_name.charAt(0);\n\
    \    var valid = false;\n    if (dotIndex > 0) {\n        valid = file_name.substring(0,dotIndex).match(/^[a-z][a-z\\\
    .]*$/);\n    }\n    if (valid && dotIndex > 0) {\n        valid = file_name.substring(dotIndex).match(/^[a-z][a-z\\\
    .]*$/);\n    }\n    if (valid && letterIndex > 0) {\n        valid = file_name.substring(letterIndex).match(/^[a-z][a-z\\\
    .]*$/);\n    }\n    if (valid) {\n        if (file_name.substring(dotIndex).match(/\\\
    .(txt|exe|dll)$/)) {\n            return 'Yes';\n        } else {\n          \
    \  return 'No';\n        }\n    } else {\n        return 'No';\n    }\n}\n", " \
    \   let result = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n    if (result\
    \ == null) {\n        return \"No\";\n    }\n    else {\n        return \"Yes\"\
    ;\n    }\n}\n", "    let file_name = file_name.toLowerCase();\n    let dot_index\
    \ = file_name.indexOf('.');\n    if (dot_index == -1) {\n        return 'No';\n\
    \    }\n    let first_letter = file_name.substring(0, dot_index);\n    let second_letter\
    \ = file_name.substring(dot_index + 1);\n    let letters = first_letter.split('');\n\
    \    let letters_count = letters.length;\n    if (letters_count > 3 || letters_count\
    \ == 0) {\n        return 'No';\n    }\n    if (letters.indexOf('a') > -1 || letters.indexOf('A')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('A')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('z') > -1 || letters.indexOf('Z')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {\n        return 'No';\n    }\n    if (letters.indexOf('0') > -1 || letters.indexOf('9')\
    \ > -1) {", "    let file_name = file_name.toLowerCase();\n    let file_name =\
    \ file_name.replace(/\\./g, '');\n    let file_name = file_name.replace(/^[^a-zA-Z]/,\
    \ '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name\
    \ = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\\
    .]/, '');\n    let file_name = file_name.replace(/[^a-zA-Z\\.]/, '');\n    let\
    \ file_name = file_name.replace(/", "    let file_name = file_name.toLowerCase();\n\
    \    let file_name = file_name.replace(/\\./g, '');\n    let file_name = file_name.replace(/[^0-9\\\
    .]/g, '');\n    let file_name = file_name.replace(/^[^a-z]/g, '');\n    let file_name\
    \ = file_name.replace(/[^a-z]$/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]$/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]\\.[^a-z]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z]\\.[^a-z]\\.[^a-z]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]/g, '');\n\
    \    let file_name = file_name.replace(/\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\\
    .[^a-z]\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]\\.[^a-z]\\\
    .[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]/g, '');\n\
    \    let file_name = file_name.replace(/\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\\
    .[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]\\.[^a-z]\\.[^a-z]\\\
    .[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]/g, '');\n\
    \    let file_name = file_name.replace(/\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\\
    .[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]/g, '');\n\
    \    let file_name = file_name.replace(/\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\\
    .[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z]\\.[^a-z", "    let file_name_split = file_name.split('.');\n\
    \    let file_name_split_length = file_name_split.length;\n    let file_name_split_index\
    \ = file_name_split_length - 1;\n    let file_name_split_first_letter = file_name_split[file_name_split_index].charAt(0);\n\
    \    let file_name_split_second_letter = file_name_split[file_name_split_index].charAt(1);\n\
    \    let file_name_split_third_letter = file_name_split[file_name_split_index].charAt(2);\n\
    \    let file_name_split_first_letter_uppercase = file_name_split_first_letter.toUpperCase();\n\
    \    let file_name_split_second_letter_uppercase = file_name_split_second_letter.toUpperCase();\n\
    \    let file_name_split_third_letter_uppercase = file_name_split_third_letter.toUpperCase();\n\
    \    let file_name_split_first_letter_lowercase = file_name_split_first_letter.toLowerCase();\n\
    \    let file_name_split_second_letter_lowercase = file_name_split_second_letter.toLowerCase();\n\
    \    let file_name_split_third_letter_lowercase = file_name_split_third_letter.toLowerCase();\n\
    \    let file_name_split_first_letter_letter_case = file_name_split_first_letter_uppercase\
    \ + file_name_split_first_letter_lowercase;\n    let file_name_split_second_letter_letter_case\
    \ = file_name_split_second_letter_uppercase + file_name_split_second_letter_lowercase;\n\
    \    let file_name_split_third_letter_letter_case = file_name_split_third_letter_uppercase\
    \ + file_name_split_third_letter_lowercase;\n    let file_name_split_first_letter_letter_case_length\
    \ = file_name_split_first_letter_letter_case.length;\n    let file_name_split_second_letter_letter_case_length\
    \ = file_name_split_second_letter_letter_case.length;\n    let file_name_split_third_letter_letter_case_length\
    \ = file_name_split_third_letter_letter_case.length;\n    let file_name_split_first_letter_letter_case_length_check\
    \ = file_name_split_first_letter_letter_case_length == 1;\n    let file_name_split_second_letter_letter_case_length_check\
    \ = file_name_split_second_letter_letter_case_length == 1;\n    let file_name_split_third_letter_letter_case_length_check\
    \ = file_name_split_third_letter_letter_case_length == 1;\n    let file_name_split_first_letter_letter_case_length_check\
    \ = file_name_split_first_letter_letter_case_length == 1;\n    let file_name_split_second_letter_letter_case_length_check\
    \ = file_name_split_second_letter_letter_case_length == 1;\n    let file_name_split_third_letter_letter_case_length_check\
    \ = file_name_split_third_letter_letter_case_length == 1;\n    let file_name_split_first_letter_letter_case_length_check\
    \ = file_name_split_first_letter_letter_case_length == 1;\n    let file_name_split_second_letter_letter_case_length_check\
    \ = file_name_split_second_letter_letter_case_length == 1;\n    let file_name_split_third_letter_letter_case_length_check\
    \ = file_name_split_third_letter_letter_case_length == 1;\n    let file_name_split_first_letter_letter_case_length_check\
    \ = file_name_split_first_", "    let file_name = file_name.toLowerCase();\n \
    \   let file_name = file_name.replace(/\\./g, '');\n    let file_name = file_name.replace(/^[^a-z]/,\
    \ '');\n    let file_name = file_name.replace(/[^a-z0-9\\.]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z0-9\\.]/, '');\n    let file_name = file_name.replace(/[^a-z0-9\\.]/, '');\n\
    \    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name =\
    \ file_name.replace(/\\.[^a-z0-9\\.]/, '');\n    let file_name = file_name.replace(/[^a-z0-9\\\
    .]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z0-9\\.]/, '');\n    let file_name = file_name.replace(/[^a-z0-9\\\
    .]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z0-9\\.]/, '');\n    let file_name = file_name.replace(/[^a-z0-9\\\
    .]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z0-9\\.]/, '');\n    let file_name = file_name.replace(/[^a-z0-9\\\
    .]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z0-9\\.]/, '');\n    let file_name = file_name.replace(/[^a-z0-9\\\
    .]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z0-9\\.]/, '');\n    let file_name = file_name.replace(/[^a-z0-9\\\
    .]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z0-9\\.]/, '');\n    let file_name = file_name.replace(/[^a-z0-9\\\
    .]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z0-9\\.]/, '');\n    let file_name = file_name.replace(/[^a-z0-9\\\
    .]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z0-9\\.]/, '');\n    let file_name = file_name.replace(/[^a-z0-9\\\
    .]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z0-9\\.]/, '');\n    let file_name = file_name.replace(/[^a-z0-9\\\
    .]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z0-9\\.]/, '');\n    let file_name = file_name.replace(/[^a-z0-9\\\
    .]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z0-9\\.]/, '');\n    let file_name = file_name",
  "    let file_name = file_name.toLowerCase();\n    let dot_index = file_name.indexOf(\"\
    .\");\n    if (dot_index == -1) {\n        return \"No\";\n    }\n    let first_letter\
    \ = file_name.substring(0, dot_index);\n    let second_letter = file_name.substring(dot_index\
    \ + 1);\n    let first_letter_uppercase = first_letter.toUpperCase();\n    let\
    \ second_letter_lowercase = second_letter.toLowerCase();\n    if (first_letter_uppercase\
    \ != second_letter_lowercase) {\n        return \"No\";\n    }\n    if (first_letter_uppercase\
    \ != first_letter || second_letter_lowercase != \"txt\" && second_letter_lowercase\
    \ != \"exe\" && second_letter_lowercase != \"dll\") {\n        return \"No\";\n\
    \    }\n    return \"Yes\";\n}\n", "    var pattern = /^[0-9]{3}\\.txt$/i;\n \
    \   return pattern.test(file_name);\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let file_ext = file_name.split('.').pop();\n    let file_length = file_name.length;\n\
    \    let file_letter = file_name.substring(0,1);\n    let file_letter = file_letter.toLowerCase();\n\
    \    let file_letter = file_letter.charCodeAt(0);\n    let file_letter = String.fromCharCode(file_letter);\n\
    \    let file_letter = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let file_letter\
    \ = file_letter.toLowerCase();\n    let file_letter = file_letter.charCodeAt(0);\n\
    \    let file_letter = String.fromCharCode(file_letter);\n    let ", "    var\
    \ re = /^[0-9]{3}\\.txt|exe|dll$/;\n    if (re.test(file_name)) {\n        return\
    \ \"Yes\";\n    } else {\n        return \"No\";\n    }\n}\n", "    let valid_file_name\
    \ = file_name.match(/^[0-9]{3}\\.[a-z][a-z]$/);\n    if (valid_file_name == null)\
    \ {\n        return \"No\";\n    } else {\n        return \"Yes\";\n    }\n}\n",
  "    let file_name = file_name.toLowerCase();\n    let file_ext = file_name.split('.').pop();\n\
    \    let file_length = file_name.length;\n    let file_first_char = file_name.charAt(0);\n\
    \    let file_first_char_lower = file_first_char.toLowerCase();\n    let file_first_char_upper\
    \ = file_first_char.toUpperCase();\n    let file_first_char_lower = file_first_char_lower.toLowerCase();\n\
    \    let file_first_char_upper = file_first_char_upper.toUpperCase();\n    let\
    \ file_first_char_digit = file_first_char.charCodeAt(0) - 97;\n    let file_first_char_digit_lower\
    \ = file_first_char_digit.toLowerCase();\n    let file_first_char_digit_upper\
    \ = file_first_char_digit.toUpperCase();\n    let file_first_char_digit_lower\
    \ = file_first_char_digit_lower.toLowerCase();\n    let file_first_char_digit_upper\
    \ = file_first_char_digit_upper.toUpperCase();\n    let file_first_char_digit_digit\
    \ = file_first_char_digit.charCodeAt(0) - 97;\n    let file_first_char_digit_digit_lower\
    \ = file_first_char_digit_digit.toLowerCase();\n    let file_first_char_digit_digit_upper\
    \ = file_first_char_digit_digit.toUpperCase();\n    let file_first_char_digit_digit_lower\
    \ = file_first_char_digit_digit_lower.toLowerCase();\n    let file_first_char_digit_digit_upper\
    \ = file_first_char_digit_digit_upper.toUpperCase();\n    let file_first_char_digit_digit_digit\
    \ = file_first_char_digit_digit.charCodeAt(0) - 97;\n    let file_first_char_digit_digit_digit_lower\
    \ = file_first_char_digit_digit_digit.toLowerCase();\n    let file_first_char_digit_digit_digit_upper\
    \ = file_first_char_digit_digit_digit_upper.toUpperCase();\n    let file_first_char_digit_digit_digit_lower\
    \ = file_first_char_digit_digit_digit_lower.toLowerCase();\n    let file_first_char_digit_digit_digit_upper\
    \ = file_first_char_digit_digit_digit_upper.toUpperCase();\n    let file_first_char_digit_digit_digit_digit\
    \ = file_first_char_digit_digit_digit_digit.charCodeAt(0) - 97;\n    let file_first_char_digit_digit_digit_digit_lower\
    \ = file_first_char_digit_digit_digit_digit.toLowerCase();\n    let file_first_char_digit_digit_digit_digit_upper\
    \ = file_first_char_digit_digit_digit_digit_upper.toUpperCase();\n    let file_first_char_digit_digit_digit_digit_lower\
    \ = file_first_char_digit_digit_digit_digit_lower.toLowerCase();\n    let file_first_char_digit_digit_digit_digit_upper\
    \ = file_first_char_digit_digit_digit_digit_upper.toUpperCase();\n    let file_first_char_digit_digit_digit_digit_digit\
    \ = file_first_char_digit_digit_digit_digit_digit.charCodeAt(0) - 97;\n    let\
    \ file_first_char_digit_digit_digit_digit_digit_lower = file_first_char_digit_digit_digit_digit_digit.toLowerCase();\n\
    \    let file_first_char_digit_digit_digit_digit_digit_upper = file_first_char_digit_digit_digit_digit_digit_upper.toUpperCase();\n\
    \    let file_first_char_digit_digit_digit_digit_digit_", "    var re = /^[0-9]{1,3}\\\
    .txt$/i;\n    var re2 = /^[0-9]{1,3}\\.exe$/i;\n    var re3 = /^[0-9]{1,3}\\.dll$/i;\n\
    \    var re4 = /^[a-z]{1,2}\\.txt$/i;\n    var re5 = /^[a-z]{1,2}\\.exe$/i;\n\
    \    var re6 = /^[a-z]{1,2}\\.dll$/i;\n    var re7 = /^[a-z]{2}\\.txt$/i;\n  \
    \  var re8 = /^[a-z]{2}\\.exe$/i;\n    var re9 = /^[a-z]{2}\\.dll$/i;\n    var\
    \ re10 = /^[a-z]{3}\\.txt$/i;\n    var re11 = /^[a-z]{3}\\.exe$/i;\n    var re12\
    \ = /^[a-z]{3}\\.dll$/i;\n    var re13 = /^[a-z]{4}\\.txt$/i;\n    var re14 =\
    \ /^[a-z]{4}\\.exe$/i;\n    var re15 = /^[a-z]{4}\\.dll$/i;\n    var re16 = /^[a-z]{5}\\\
    .txt$/i;\n    var re17 = /^[a-z]{5}\\.exe$/i;\n    var re18 = /^[a-z]{5}\\.dll$/i;\n\
    \    var re19 = /^[a-z]{6}\\.txt$/i;\n    var re20 = /^[a-z]{6}\\.exe$/i;\n  \
    \  var re21 = /^[a-z]{6}\\.dll$/i;\n    var re22 = /^[a-z]{7}\\.txt$/i;\n    var\
    \ re23 = /^[a-z]{7}\\.exe$/i;\n    var re24 = /^[a-z]{7}\\.dll$/i;\n    var re25\
    \ = /^[a-z]{8}\\.txt$/i;\n    var re26 = /^[a-z]{8}\\.exe$/i;\n    var re27 =\
    \ /^[a-z]{8}\\.dll$/i;\n    var re28 = /^[a-z]{9}\\.txt$/i;\n    var re29 = /^[a-z]{9}\\\
    .exe$/i;\n    var re30 = /^[a-z]{9}\\.dll$/i;\n    var re31 = /^[a-z]{10}\\.txt$/i;\n\
    \    var re32 = /^[a-z]{10}\\.exe$/i;\n    var re33 = /^[a-z]{10}\\.dll$/i;\n\
    \    var re34 = /^[a-z]{11}\\.txt$/i;\n    var re35 = /^[a-z]{11}\\.exe$/i;\n\
    \    var re36 = /^[a-z]{11}\\.dll$/i;\n    var re37 = /^[a-z]{12}\\.txt$/i;\n\
    \    var re38 = /^[a-z]{12}\\.exe$/i;\n    var re39 = /^[a-z]{12}\\.dll$/i;\n\
    \    var re40 = /^[a-z]{13}\\.txt$/i;\n    var re41 = /^[a-z", "    var re = /^[0-9]{3}\\\
    .txt|exe|dll$/;\n    var result = re.test(file_name);\n    return result;\n}\n",
  "    if (file_name.match(/^[0-9]{3}\\.txt$/)) {\n        return 'Yes';\n    } else\
    \ if (file_name.match(/^[0-9]{3}\\.exe$/)) {\n        return 'Yes';\n    } else\
    \ if (file_name.match(/^[0-9]{3}\\.dll$/)) {\n        return 'Yes';\n    } else\
    \ {\n        return 'No';\n    }\n}\n", "    var pattern = /^[0-9]{3}\\.txt$/i;\n\
    \    var pattern2 = /^[0-9]{3}\\.exe$/i;\n    var pattern3 = /^[0-9]{3}\\.dll$/i;\n\
    \    var pattern4 = /^[a-z]{2}\\.txt$/i;\n    var pattern5 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern6 = /^[a-z]{2}\\.dll$/i;\n    var pattern7 = /^[a-z]{3}\\.txt$/i;\n\
    \    var pattern8 = /^[a-z]{3}\\.exe$/i;\n    var pattern9 = /^[a-z]{3}\\.dll$/i;\n\
    \    var pattern10 = /^[A-Z]{2}\\.txt$/i;\n    var pattern11 = /^[A-Z]{2}\\.exe$/i;\n\
    \    var pattern12 = /^[A-Z]{2}\\.dll$/i;\n    var pattern13 = /^[A-Z]{3}\\.txt$/i;\n\
    \    var pattern14 = /^[A-Z]{3}\\.exe$/i;\n    var pattern15 = /^[A-Z]{3}\\.dll$/i;\n\
    \    var pattern16 = /^[a-z]{2}\\.txt$/i;\n    var pattern17 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern18 = /^[a-z]{2}\\.dll$/i;\n    var pattern19 = /^[a-z]{3}\\.txt$/i;\n\
    \    var pattern20 = /^[a-z]{3}\\.exe$/i;\n    var pattern21 = /^[a-z]{3}\\.dll$/i;\n\
    \    var pattern22 = /^[A-Z]{2}\\.txt$/i;\n    var pattern23 = /^[A-Z]{2}\\.exe$/i;\n\
    \    var pattern24 = /^[A-Z]{2}\\.dll$/i;\n    var pattern25 = /^[A-Z]{3}\\.txt$/i;\n\
    \    var pattern26 = /^[A-Z]{3}\\.exe$/i;\n    var pattern27 = /^[A-Z]{3}\\.dll$/i;\n\
    \    var pattern28 = /^[a-z]{2}\\.txt$/i;\n    var pattern29 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern30 = /^[a-z]{2}\\.dll$/i;\n    var pattern31 = /^[a-z]{3}\\.txt$/i;\n\
    \    var pattern32 = /^[a-z]{3}\\.exe$/i;\n    var pattern33 = /^[a-z]{3}\\.dll$/i;\n\
    \    var pattern34 = /^[A-Z]{2}\\.txt$/i;\n    var pattern35 = /^[A-Z]{2}\\.exe$/i;\n\
    \    var pattern36 = /^[A-Z]{2}\\.dll$/i;\n    var pattern37 = /^[A-Z]{3}\\.txt$/i;\n\
    \    var pattern38 = /^[A-Z]{3}\\.exe$/i;\n    var pattern39 = /^[A-Z]{3}\\.dll$/i;\n\
    \    var pattern40 = /^[a-z]{2}\\.txt$/i;\n    var pattern41 = /^[a-z]{2}\\.exe$/i;\n\
    \    var pattern42 = /^[a-z]{2}\\.dll$/i;\n    var pattern43 = /^", "    let valid_file_name\
    \ = false;\n    let file_name_array = file_name.split('.');\n    if (file_name_array.length\
    \ > 2) {\n        valid_file_name = false;\n    } else {\n        valid_file_name\
    \ = file_name_array[0].length > 0 && file_name_array[0][0] <= 'z' && file_name_array[0][0]\
    \ <= 'Z';\n    }\n    if (file_name_array.length > 1) {\n        valid_file_name\
    \ &= file_name_array[1].length > 0 && file_name_array[1].length <= 3 && file_name_array[1].indexOf('..')\
    \ === -1;\n    }\n    return valid_file_name ? 'Yes' : 'No';\n}\n", "    var pattern\
    \ = /^[0-9]{3}\\.txt$/i;\n    var pattern2 = /^[0-9]{3}\\.exe$/i;\n    var pattern3\
    \ = /^[0-9]{3}\\.dll$/i;\n    var pattern4 = /^[a-z]{2}\\.txt$/i;\n    var pattern5\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern6 = /^[a-z]{2}\\.dll$/i;\n    var pattern7\
    \ = /^[a-z]{3}\\.txt$/i;\n    var pattern8 = /^[a-z]{3}\\.exe$/i;\n    var pattern9\
    \ = /^[a-z]{3}\\.dll$/i;\n    var pattern10 = /^[A-Z]{2}\\.txt$/i;\n    var pattern11\
    \ = /^[A-Z]{2}\\.exe$/i;\n    var pattern12 = /^[A-Z]{2}\\.dll$/i;\n    var pattern13\
    \ = /^[A-Z]{3}\\.txt$/i;\n    var pattern14 = /^[A-Z]{3}\\.exe$/i;\n    var pattern15\
    \ = /^[A-Z]{3}\\.dll$/i;\n    var pattern16 = /^[0-9]{3}\\.txt$/i;\n    var pattern17\
    \ = /^[0-9]{3}\\.exe$/i;\n    var pattern18 = /^[0-9]{3}\\.dll$/i;\n    var pattern19\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern20 = /^[a-z]{2}\\.exe$/i;\n    var pattern21\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern22 = /^[a-z]{3}\\.txt$/i;\n    var pattern23\
    \ = /^[a-z]{3}\\.exe$/i;\n    var pattern24 = /^[a-z]{3}\\.dll$/i;\n    var pattern25\
    \ = /^[A-Z]{2}\\.txt$/i;\n    var pattern26 = /^[A-Z]{2}\\.exe$/i;\n    var pattern27\
    \ = /^[A-Z]{2}\\.dll$/i;\n    var pattern28 = /^[A-Z]{3}\\.txt$/i;\n    var pattern29\
    \ = /^[A-Z]{3}\\.exe$/i;\n    var pattern30 = /^[A-Z]{3}\\.dll$/i;\n    var pattern31\
    \ = /^[0-9]{3}\\.txt$/i;\n    var pattern32 = /^[0-9]{3}\\.exe$/i;\n    var pattern33\
    \ = /^[0-9]{3}\\.dll$/i;\n    var pattern34 = /^[a-z]{2}\\.txt$/i;\n    var pattern35\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern36 = /^[a-z]{2}\\.dll$/i;\n    var pattern37\
    \ = /^[a-z]{3}\\.txt$/i;\n    var pattern38 = /^[a-z]{3}\\.exe$/i;\n    var pattern39\
    \ = /^[a-z]{3}\\.dll$/i;\n    var pattern40 = /^[A-Z]{2}\\.txt$/i;\n    var pattern41\
    \ = /^[A-Z]{2}\\.exe$/i;\n    var pattern42 = /^[A-Z]{2}\\.dll$/i;\n    var pattern43\
    \ = /^", "    let valid_file_name = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n\
    \    if (valid_file_name == null) {\n        return \"No\";\n    } else {\n  \
    \      return \"Yes\";\n    }\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf('.');\n    let first_letter = file_name.charAt(0);\n\
    \    let second_letter = file_name.charAt(1);\n    let third_letter = file_name.charAt(2);\n\
    \    let fourth_letter = file_name.charAt(3);\n    let fifth_letter = file_name.charAt(4);\n\
    \    let sixth_letter = file_name.charAt(5);\n    let seventh_letter = file_name.charAt(6);\n\
    \    let eighth_letter = file_name.charAt(7);\n    let ninth_letter = file_name.charAt(8);\n\
    \    let tenth_letter = file_name.charAt(9);\n    let first_letter_is_letter =\
    \ first_letter >= 'a' && first_letter <= 'z';\n    let second_letter_is_letter\
    \ = second_letter >= 'a' && second_letter <= 'z';\n    let third_letter_is_letter\
    \ = third_letter >= 'a' && third_letter <= 'z';\n    let fourth_letter_is_letter\
    \ = fourth_letter >= 'a' && fourth_letter <= 'z';\n    let fifth_letter_is_letter\
    \ = fifth_letter >= 'a' && fifth_letter <= 'z';\n    let sixth_letter_is_letter\
    \ = sixth_letter >= 'a' && sixth_letter <= 'z';\n    let seventh_letter_is_letter\
    \ = seventh_letter >= 'a' && seventh_letter <= 'z';\n    let eighth_letter_is_letter\
    \ = eighth_letter >= 'a' && eighth_letter <= 'z';\n    let ninth_letter_is_letter\
    \ = ninth_letter >= 'a' && ninth_letter <= 'z';\n    let first_letter_is_digit\
    \ = first_letter >= '0' && first_letter <= '9';\n    let second_letter_is_digit\
    \ = second_letter >= '0' && second_letter <= '9';\n    let third_letter_is_digit\
    \ = third_letter >= '0' && third_letter <= '9';\n    let fourth_letter_is_digit\
    \ = fourth_letter >= '0' && fourth_letter <= '9';\n    let fifth_letter_is_digit\
    \ = fifth_letter >= '0' && fifth_letter <= '9';\n    let sixth_letter_is_digit\
    \ = sixth_letter >= '0' && sixth_letter <= '9';\n    let seventh_letter_is_digit\
    \ = seventh_letter >= '0' && seventh_letter <= '9';\n    let eighth_letter_is_digit\
    \ = eighth_letter >= '0' && eighth_letter <= '9';\n    let ninth_letter_is_digit\
    \ = ninth_letter >= '0' && ninth_letter <= '9';\n    let first_letter_", "   \
    \ let file_name = file_name.toLowerCase();\n    let file_name = file_name.replace(/\\\
    ./g, '');\n    let file_name = file_name.replace(/[^0-9\\.]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/^[^a-z]/g,\
    \ '');\n    let file_name = file_name.replace(/[^a-z\\.]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z\\.]/g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.\\./g, '');\n    let file_name\
    \ = file_name.replace(/\\.\\./g, '');\n    let file_name = file_name.replace(/\\\
    .\\./g, '');\n    let file_name = file_name.replace(/\\.", "    let file_name\
    \ = file_name.toLowerCase();\n    let dot_index = file_name.indexOf(\".\");\n\
    \    let first_letter = file_name.charAt(0);\n    let second_letter = file_name.charAt(1);\n\
    \    let third_letter = file_name.charAt(2);\n    let fourth_letter = file_name.charAt(3);\n\
    \    let fifth_letter = file_name.charAt(4);\n    let sixth_letter = file_name.charAt(5);\n\
    \    let seventh_letter = file_name.charAt(6);\n    let eighth_letter = file_name.charAt(7);\n\
    \    let ninth_letter = file_name.charAt(8);\n    let tenth_letter = file_name.charAt(9);\n\
    \    let first_letter_is_letter = first_letter >= 'a' && first_letter <= 'z';\n\
    \    let second_letter_is_letter = second_letter >= 'a' && second_letter <= 'z';\n\
    \    let third_letter_is_letter = third_letter >= 'a' && third_letter <= 'z';\n\
    \    let fourth_letter_is_letter = fourth_letter >= 'a' && fourth_letter <= 'z';\n\
    \    let fifth_letter_is_letter = fifth_letter >= 'a' && fifth_letter <= 'z';\n\
    \    let sixth_letter_is_letter = sixth_letter >= 'a' && sixth_letter <= 'z';\n\
    \    let seventh_letter_is_letter = seventh_letter >= 'a' && seventh_letter <=\
    \ 'z';\n    let eighth_letter_is_letter = eighth_letter >= 'a' && eighth_letter\
    \ <= 'z';\n    let ninth_letter_is_letter = ninth_letter >= 'a' && ninth_letter\
    \ <= 'z';\n    let tenth_letter_is_letter = tenth_letter >= 'a' && tenth_letter\
    \ <= 'z';\n    let first_letter_is_digit = first_letter >= '0' && first_letter\
    \ <= '9';\n    let second_letter_is_digit = second_letter >= '0' && second_letter\
    \ <= '9';\n    let third_letter_is_digit = third_letter >= '0' && third_letter\
    \ <= '9';\n    let fourth_letter_is_digit = fourth_letter >= '0' && fourth_letter\
    \ <= '9';\n    let fifth_letter_is_digit = fifth_letter >= '0' && fifth_letter\
    \ <= '9';\n    let sixth_letter_is_digit = sixth_letter >= '0' && sixth_letter\
    \ <= '9';\n    let seventh_letter_is_digit = seventh_letter >= '0' && seventh_letter\
    \ <= '9';\n    let eighth_letter_is_digit = eighth_letter >= '0' && eighth_letter\
    \ <= '9';\n    let ninth_letter_", "    let file_name = file_name.toLowerCase();\n\
    \    let file_name = file_name.replace(/\\./g, '');\n    let file_name = file_name.replace(/^[^a-z]/,\
    \ '');\n    let file_name = file_name.replace(/[^a-z0-9\\.]/, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/, '');\n    let file_name = file_name.replace(/\\.[^a-z]/, '');\n    let\
    \ file_name = file_name.replace(/", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf('.');\n    let first_letter = file_name.substring(0,\
    \ dot_index);\n    let last_letter = file_name.substring(dot_index + 1);\n   \
    \ let valid_first_letter = first_letter >= 'a' && first_letter <= 'z';\n    let\
    \ valid_last_letter = last_letter >= 'a' && last_letter <= 'z';\n    let valid_first_two_letters\
    \ = first_letter >= 'a' && first_letter <= 'z' && first_letter <= 'z';\n    let\
    \ valid_last_two_letters = last_letter >= 'a' && last_letter <= 'z' && last_letter\
    \ <= 'z';\n    let valid_first_three_letters = first_letter >= 'a' && first_letter\
    \ <= 'z' && first_letter <= 'z' && first_letter <= 'z';\n    let valid_last_three_letters\
    \ = last_letter >= 'a' && last_letter <= 'z' && last_letter <= 'z' && last_letter\
    \ <= 'z';\n    let valid_first_four_letters = first_letter >= 'a' && first_letter\
    \ <= 'z' && first_letter <= 'z' && first_letter <= 'z' && first_letter <= 'z';\n\
    \    let valid_last_four_letters = last_letter >= 'a' && last_letter <= 'z' &&\
    \ last_letter <= 'z' && last_letter <= 'z' && last_letter <= 'z';\n    let valid_first_five_letters\
    \ = first_letter >= 'a' && first_letter <= 'z' && first_letter <= 'z' && first_letter\
    \ <= 'z' && first_letter <= 'z' && first_letter <= 'z';\n    let valid_last_five_letters\
    \ = last_letter >= 'a' && last_letter <= 'z' && last_letter <= 'z' && last_letter\
    \ <= 'z' && last_letter <= 'z' && last_letter <= 'z';\n    let valid_first_six_letters\
    \ = first_letter >= 'a' && first_letter <= 'z' && first_letter <= 'z' && first_letter\
    \ <= 'z' && first_letter <= 'z' && first_letter <= 'z' && first_letter <= 'z';\n\
    \    let valid_last_six_letters = last_letter >= 'a' && last_letter <= 'z' &&\
    \ last_letter <= 'z' && last_letter <= 'z' && last_letter <= 'z' && last_letter\
    \ <= 'z' && last_letter <= 'z';\n    let valid_first_seven_letters = first_letter\
    \ >= 'a' && first_letter <= 'z' && first_letter <= 'z' && first_letter <= 'z'\
    \ && first_letter <= 'z' && first_letter <= 'z' && first_letter <= 'z' && first_letter\
    \ <= 'z';\n    let valid_last_seven_letter", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf('.');\n    let first_letter = file_name.charAt(0);\n\
    \    let last_letter = file_name.charAt(file_name.length - 1);\n    let is_valid_char\
    \ = false;\n    \n    if (dot_index > 0) {\n        is_valid_char = true;\n  \
    \  }\n    \n    if (dot_index > 0 && dot_index < file_name.length - 1) {\n   \
    \     is_valid_char = true;\n    }\n    \n    if (dot_index === 0 && first_letter\
    \ >= 'a' && first_letter <= 'z') {\n        is_valid_char = true;\n    }\n   \
    \ \n    if (dot_index === 0 && first_letter >= 'A' && first_letter <= 'Z') {\n\
    \        is_valid_char = true;\n    }\n    \n    if (dot_index === 0 && last_letter\
    \ >= 'a' && last_letter <= 'z') {\n        is_valid_char = true;\n    }\n    \n\
    \    if (dot_index === 0 && last_letter >= 'A' && last_letter <= 'Z') {\n    \
    \    is_valid_char = true;\n    }\n    \n    if (dot_index > 0 && dot_index <\
    \ file_name.length - 1 && \n        (first_letter >= 'a' && first_letter <= 'z'\
    \ || first_letter >= 'A' && first_letter <= 'Z') &&\n        (last_letter >= 'a'\
    \ && last_letter <= 'z' || last_letter >= 'A' && last_letter <= 'Z')) {\n    \
    \    is_valid_char = true;\n    }\n    \n    if (dot_index === 0 && file_name.length\
    \ > 2 && file_name.substring(dot_index - 1, dot_index) === 'txt' &&\n        file_name.substring(dot_index\
    \ + 1, dot_index + 3) === 'exe' &&\n        file_name.substring(dot_index + 2,\
    \ dot_index + 4) === 'dll') {\n        is_valid_char = true;\n    }\n    \n  \
    \  if (dot_index === 0 && file_name.length > 2 && file_name.substring(dot_index\
    \ - 1, dot_index) === 'txt' &&\n        file_name.substring(dot_index + 1, dot_index\
    \ + 3) === 'exe' &&\n        file_name.substring(dot_index + 2, dot_index + 4)\
    \ === 'dll') {\n        is_valid_char = true;\n    }\n    \n    if (dot_index\
    \ === 0 && file_name.length > 2 && file_name.substring(dot_index - 1, dot_index)\
    \ === 'txt' &&\n        file_name.substring(dot_index + 1, dot_index + 3) ===\
    \ 'exe' &&\n        file_name.substring(dot_index + 2, dot_index + 4) === 'dll')\
    \ {\n        is_valid_char = true;\n    }\n    \n    if (dot_index === 0 && file_name.length\
    \ > 2 && file_name.substring(dot_index - 1, dot_index) === 'txt' &&\n        file_name.substring(dot_index\
    \ + 1, dot_index + 3) === 'exe' &&\n        file_name.substring(dot_index + 2,\
    \ dot_index + 4) === 'dll') {\n        is_valid_char = true;\n    }\n    \n  \
    \  if (dot_index === 0 && file_name.length > 2 && file_name.substring(dot_index",
  "    let file_name = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n\
    \    if (dot_index == -1) {\n        return 'No';\n    }\n    let first_letter\
    \ = file_name.substring(0, dot_index);\n    let second_letter = file_name.substring(dot_index\
    \ + 1);\n    if (first_letter.length < 2 || first_letter != 'a' || first_letter\
    \ != 'b' || first_letter != 'c' || first_letter != 'd' || first_letter != 'e'\
    \ || first_letter != 'f' || first_letter != 'g' || first_letter != 'h' || first_letter\
    \ != 'i' || first_letter != 'j' || first_letter != 'k' || first_letter != 'l'\
    \ || first_letter != 'm' || first_letter != 'n' || first_letter != 'o' || first_letter\
    \ != 'p' || first_letter != 'q' || first_letter != 'r' || first_letter != 's'\
    \ || first_letter != 't' || first_letter != 'u' || first_letter != 'v' || first_letter\
    \ != 'w' || first_letter != 'x' || first_letter != 'y' || first_letter != 'z'\
    \ || first_letter != 'A' || first_letter != 'B' || first_letter != 'C' || first_letter\
    \ != 'D' || first_letter != 'E' || first_letter != 'F' || first_letter != 'G'\
    \ || first_letter != 'H' || first_letter != 'I' || first_letter != 'J' || first_letter\
    \ != 'K' || first_letter != 'L' || first_letter != 'M' || first_letter != 'N'\
    \ || first_letter != 'O' || first_letter != 'P' || first_letter != 'Q' || first_letter\
    \ != 'R' || first_letter != 'S' || first_letter != 'T' || first_letter != 'U'\
    \ || first_letter != 'V' || first_letter != 'W' || first_letter != 'X' || first_letter\
    \ != 'Y' || first_letter != 'Z') {\n        return 'No';\n    }\n    if (second_letter\
    \ != 'txt' && second_letter != 'exe' && second_letter != 'dll') {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank\
    \ you so much for your help. I appreciate it.\n<|/ c |>\n<| a dscore=0 |>\nI used\
    \ the code from and modified it a little bit to make it work. \n<code>", "   \
    \ var re = /^[0-9]{3}\\.txt|exe|dll$/;\n    return re.test(file_name) ? \"Yes\"\
    \ : \"No\";\n}\n", "    var pattern = /^[0-9]{3}\\.txt|exe|dll$/;\n    return\
    \ pattern.test(file_name);\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf('.');\n    if (dot_index == -1) {\n   \
    \     return 'No';\n    }\n    let first_letter = file_name.substring(0, dot_index);\n\
    \    let second_letter = file_name.substring(dot_index + 1);\n    let first_letter_upper\
    \ = first_letter.toUpperCase();\n    let second_letter_upper = second_letter.toUpperCase();\n\
    \    if (first_letter_upper != second_letter_upper) {\n        return 'No';\n\
    \    }\n    if (first_letter_upper == 'A' || first_letter_upper == 'B' || first_letter_upper\
    \ == 'C' || first_letter_upper == 'D' || first_letter_upper == 'E' || first_letter_upper\
    \ == 'F' || first_letter_upper == 'G' || first_letter_upper == 'H' || first_letter_upper\
    \ == 'I' || first_letter_upper == 'J' || first_letter_upper == 'K' || first_letter_upper\
    \ == 'L' || first_letter_upper == 'M' || first_letter_upper == 'N' || first_letter_upper\
    \ == 'O' || first_letter_upper == 'P' || first_letter_upper == 'Q' || first_letter_upper\
    \ == 'R' || first_letter_upper == 'S' || first_letter_upper == 'T' || first_letter_upper\
    \ == 'U' || first_letter_upper == 'V' || first_letter_upper == 'W' || first_letter_upper\
    \ == 'X' || first_letter_upper == 'Y' || first_letter_upper == 'Z') {\n      \
    \  if (second_letter != 'txt' && second_letter != 'exe' && second_letter != 'dll')\
    \ {\n            return 'No';\n        }\n    }\n    return 'Yes';\n}\n", "  \
    \  var re = /^[0-9]{1,3}\\.txt$/i;\n    var re2 = /^[0-9]{1,3}\\.exe$/i;\n   \
    \ var re3 = /^[0-9]{1,3}\\.dll$/i;\n    var re4 = /^[a-z][a-z\\.]*$/i;\n    var\
    \ re5 = /^[a-z][a-z\\.]*\\.txt$/i;\n    var re6 = /^[a-z][a-z\\.]*\\.exe$/i;\n\
    \    var re7 = /^[a-z][a-z\\.]*\\.dll$/i;\n    var re8 = /^[a-z][a-z\\.]*\\.exe\\\
    .txt$/i;\n    var re9 = /^[a-z][a-z\\.]*\\.dll\\.txt$/i;\n    var re10 = /^[a-z][a-z\\\
    .]*\\.exe\\.txt\\.dll$/i;\n    var re11 = /^[a-z][a-z\\.]*\\.dll\\.txt\\.exe$/i;\n\
    \    var re12 = /^[a-z][a-z\\.]*\\.exe\\.txt\\.dll\\.txt$/i;\n    var re13 = /^[a-z][a-z\\\
    .]*\\.dll\\.txt\\.exe\\.txt$/i;\n    var re14 = /^[a-z][a-z\\.]*\\.exe\\.txt\\\
    .dll\\.txt\\.exe$/i;\n    var re15 = /^[a-z][a-z\\.]*\\.dll\\.txt\\.exe\\.txt\\\
    .dll$/i;\n    var re16 = /^[a-z][a-z\\.]*\\.exe\\.txt\\.dll\\.txt\\.exe\\.txt$/i;\n\
    \    var re17 = /^[a-z][a-z\\.]*\\.dll\\.txt\\.exe\\.txt\\.dll\\.txt\\.exe$/i;\n\
    \    var re18 = /^[a-z][a-z\\.]*\\.exe\\.txt\\.dll\\.txt\\.exe\\.txt\\.dll\\.txt$/i;\n\
    \    var re19 = /^[a-z][a-z\\.]*\\.dll\\.txt\\.exe\\.txt\\.dll\\.txt\\.exe\\.txt\\\
    .dll$/i;\n    var re20 = /^[a-z][a-z\\.]*\\.exe\\.txt\\.dll\\.txt\\.exe\\.txt\\\
    .dll\\.txt\\.exe\\.txt\\.dll\\.txt$/i;\n    var re21 = /^[a-z][a-z\\.]*\\.dll\\\
    .txt\\.exe\\.txt\\.dll\\.txt\\.exe\\.txt\\.dll\\.txt\\.exe\\.txt\\.dll\\.txt\\\
    .exe$/i;\n    var re22 = /^[a-z][a-z\\.]*\\.exe\\.txt\\.dll\\.txt\\.exe\\.txt\\\
    .dll\\.txt\\.exe\\.txt\\.dll\\.txt\\.exe\\.txt\\.dll\\.txt\\.exe\\.txt\\.dll\\\
    .txt\\.exe\\.txt\\.dll\\.txt\\.exe\\.txt\\.dll\\.txt\\.exe\\.txt\\.dll\\.txt\\\
    .exe\\.txt\\.dll\\.txt\\.exe\\.", "    let file_name = file_name.toLowerCase();\n\
    \    let file_name = file_name.replace(/[^0-9\\.]/g, \"\");\n    let file_name\
    \ = file_name.replace(/\\./g, \"\");\n    let file_name = file_name.charAt(0).toUpperCase()\
    \ + file_name.slice(1);\n    let file_name = file_name.split(\" \");\n    let\
    \ file_name = file_name[0];\n    let file_name = file_name.split(\"\");\n    let\
    \ file_name = file_name.join(\"\");\n    let file_name = file_name.replace(/[^a-z]/g,\
    \ \"\");\n    let file_name = file_name.replace(/[^A-Z]/g, \"\");\n    let file_name\
    \ = file_name.replace(/[^0-9]/g, \"\");\n    let file_name = file_name.replace(/[^a-zA-Z]/g,\
    \ \"\");\n    let file_name = file_name.replace(/[^\\.]/g, \"\");\n    let file_name\
    \ = file_name.replace(/[^0-9\\.]/g, \"\");\n    let file_name = file_name.replace(/\\\
    ./g, \"\");\n    let file_name = file_name.split(\" \");\n    let file_name =\
    \ file_name[0];\n    let file_name = file_name.split(\"\");\n    let file_name\
    \ = file_name.join(\"\");\n    let file_name = file_name.replace(/[^a-z]/g, \"\
    \");\n    let file_name = file_name.replace(/[^A-Z]/g, \"\");\n    let file_name\
    \ = file_name.replace(/[^0-9]/g, \"\");\n    let file_name = file_name.replace(/[^a-zA-Z]/g,\
    \ \"\");\n    let file_name = file_name.replace(/[^\\.]/g, \"\");\n    let file_name\
    \ = file_name.replace(/[^0-9\\.]/g, \"\");\n    let file_name = file_name.replace(/\\\
    ./g, \"\");\n    let file_name = file_name.split(\" \");\n    let file_name =\
    \ file_name[0];\n    let file_name = file_name.split(\"\");\n    let file_name\
    \ = file_name.join(\"\");\n    let file_name = file_name.replace(/[^a-z]/g, \"\
    \");\n    let file_name = file_name.replace(/[^A-Z]/g, \"\");\n    let file_name\
    \ = file_name.replace(/[^0-9]/g, \"\");\n    let file_name = file_name.replace(/[^a-zA-Z]/g,\
    \ \"\");\n    let file_name = file_name.replace(/[^\\.]/g, \"\");\n    let file_name\
    \ = file_name.replace(/[^0-9\\.]/g, \"\");\n    let file_name = file_name.replace(/\\\
    ./g, \"\");\n    let file_name = file_name.split(\" \");\n    let file_name =\
    \ file_name[0];\n    let file_name = file_name.split(\"\");\n    let file_name\
    \ = file_name.join(\"\");\n    let file_name = file_name.replace(/[^a-z]/g, \"\
    \");\n    let file_name = file_name.replace(/[^A-Z]/g, \"\");\n    let file_name\
    \ = file_name.replace(/[^0-9]/g, \"\");\n    let file_name = file_name.replace(/[^a-zA-Z]/g,\
    \ \"\");\n    let file_name = file_name.replace(/[^\\.]/g, \"\");\n    let file_name\
    \ = file_name.replace(/[^0-9\\.]/g, \"\");\n    let file_name = file_name.replace(/\\\
    ./g, \"\");\n    let file_name = file_name.split(\" \");\n    let file_name =\
    \ file_name[0];\n    let file_name = file_name.split(\"\");\n    let file_name\
    \ = file_name.join(\"\");\n    let file_name = file_name.replace(/[^a-z]/g, \"\
    \");\n    let file_name = file_name.replace(/[^A-Z]/g, \"\");\n    let file_name\
    \ = file_name.replace(/[^0-9]/g, \"\");\n    let file_name = file_name.replace(/[^a-zA-Z]/g,\
    \ \"\");\n    let file_name = file_name.replace(/[^\\.]/g, \"\");", "    if (file_name.length\
    \ < 3 || file_name.indexOf('.') < 0 || file_name.substring(0, 1) < 'a' || file_name.substring(0,\
    \ 1) > 'z' || file_name.substring(file_name.indexOf('.') + 1) < 'a' || file_name.substring(file_name.indexOf('.')\
    \ + 1) > 'z' || file_name.substring(file_name.indexOf('.') + 1) != 'txt' || file_name.substring(file_name.indexOf('.')\
    \ + 1) != 'exe' || file_name.substring(file_name.indexOf('.') + 1) != 'dll') {\n\
    \        return 'No';\n    } else {\n        return 'Yes';\n    }\n}\n", "   \
    \ let file_name = file_name.toLowerCase();\n    let file_name = file_name.replace(/\\\
    ./g, '');\n    let file_name = file_name.replace(/[^0-9\\.]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^A-Z]/g, '');\n    let file_name = file_name.replace(/\\.[^0-9a-z]/g, '');\n\
    \    let file_name = file_name.replace(/\\.[^0-9A-Z]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^0-9a-z.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^0-9A-Z.]/g, '');\n    let file_name = file_name.replace(/\\.[^0-9a-z.]/g, '');\n\
    \    let file_name = file_name.replace(/\\.[^0-9A-Z.]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^0-9a-z.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^0-9A-Z.]/g, '');\n    let file_name = file_name.replace(/\\.[^0-9a-z.]/g, '');\n\
    \    let file_name = file_name.replace(/\\.[^0-9A-Z.]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^0-9a-z.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^0-9A-Z.]/g, '');\n    let file_name = file_name.replace(/\\.[^0-9a-z.]/g, '');\n\
    \    let file_name = file_name.replace(/\\.[^0-9A-Z.]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^0-9a-z.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^0-9A-Z.]/g, '');\n    let file_name = file_name.replace(/\\.[^0-9a-z.]/g, '');\n\
    \    let file_name = file_name.replace(/\\.[^0-9A-Z.]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^0-9a-z.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^0-9A-Z.]/g, '');\n    let file_name = file_name.replace(/\\.[^0-9a-z.]/g, '');\n\
    \    let file_name = file_name.replace(/\\.[^0-9A-Z.]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^0-9a-z.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^0-9A-Z.]/g, '');\n    let file_name = file_name.replace(/\\.[^0-9a-z.]/g, '');\n\
    \    let file_name = file_name.replace(/\\.[^0-9A-Z.]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^0-9a-z.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^0-9A-Z.]/g, '');\n    let file_name = file_name.replace(/\\.[^0-9a-z.]/g, '');\n\
    \    let file_name = file_name.replace(/\\.[^0-9A-Z.]/g, '');\n    let file_name\
    \ = file_name.replace(/\\.[^0-9a-z.]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^0-9A-Z.]/g, '');\n    let file_name = file_name.replace(/\\.[^0-9a-z.]/g, '');\n\
    \    let ", "    let file_name = file_name.toLowerCase();\n    let dot_index =\
    \ file_name.indexOf('.');\n    let dot_substr = file_name.substr(dot_index);\n\
    \    let first_letter = dot_substr.substr(0, 1);\n    let valid_chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\
    ;\n    let is_valid = dot_substr.substr(0, 1) !== \"\" && dot_substr.substr(0,\
    \ 1) in valid_chars && first_letter >= 'a' && first_letter <= 'z';\n    return\
    \ is_valid ? \"Yes\" : \"No\";\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_position = file_name.indexOf('.');\n    if (dot_position == -1) {\n\
    \        return 'No';\n    }\n    let first_letter = file_name.substring(0, dot_position);\n\
    \    let second_letter = file_name.substring(dot_position + 1);\n    if (first_letter.length\
    \ != 1 || first_letter != 'a' || first_letter != 'b' || first_letter != 'c' ||\
    \ first_letter != 'd' || first_letter != 'e' || first_letter != 'f' || first_letter\
    \ != 'g' || first_letter != 'h' || first_letter != 'i' || first_letter != 'j'\
    \ || first_letter != 'k' || first_letter != 'l' || first_letter != 'm' || first_letter\
    \ != 'n' || first_letter != 'o' || first_letter != 'p' || first_letter != 'q'\
    \ || first_letter != 'r' || first_letter != 's' || first_letter != 't' || first_letter\
    \ != 'u' || first_letter != 'v' || first_letter != 'w' || first_letter != 'x'\
    \ || first_letter != 'y' || first_letter != 'z') {\n        return 'No';\n   \
    \ }\n    if (second_letter.length != 1 || second_letter != 'txt' || second_letter\
    \ != 'exe' || second_letter != 'dll') {\n        return 'No';\n    }\n    return\
    \ 'Yes';\n}\n", "    let file_name = file_name.toLowerCase();\n    let dot_index\
    \ = file_name.indexOf('.');\n    let first_letter = file_name.substring(0, 1);\n\
    \    let second_letter = file_name.substring(1, 2);\n    let third_letter = file_name.substring(2,\
    \ 3);\n    let fourth_letter = file_name.substring(3, 4);\n    let fifth_letter\
    \ = file_name.substring(4, 5);\n    let sixth_letter = file_name.substring(5,\
    \ 6);\n    let seventh_letter = file_name.substring(6, 7);\n    let eighth_letter\
    \ = file_name.substring(7, 8);\n    let ninth_letter = file_name.substring(8,\
    \ 9);\n    let tenth_letter = file_name.substring(9, 10);\n    let first_letter_is_latin_alphabet\
    \ = first_letter >= 'a' && first_letter <= 'z';\n    let second_letter_is_latin_alphabet\
    \ = second_letter >= 'a' && second_letter <= 'z';\n    let third_letter_is_latin_alphabet\
    \ = third_letter >= 'a' && third_letter <= 'z';\n    let fourth_letter_is_latin_alphabet\
    \ = fourth_letter >= 'a' && fourth_letter <= 'z';\n    let fifth_letter_is_latin_alphabet\
    \ = fifth_letter >= 'a' && fifth_letter <= 'z';\n    let sixth_letter_is_latin_alphabet\
    \ = sixth_letter >= 'a' && sixth_letter <= 'z';\n    let seventh_letter_is_latin_alphabet\
    \ = seventh_letter >= 'a' && seventh_letter <= 'z';\n    let eighth_letter_is_latin_alphabet\
    \ = eighth_letter >= 'a' && eighth_letter <= 'z';\n    let ninth_letter_is_latin_alphabet\
    \ = ninth_letter >= 'a' && ninth_letter <= 'z';\n    let tenth_letter_is_latin_alphabet\
    \ = tenth_letter >= 'a' && tenth_letter <= 'z';\n    let first_letter_is_valid_filename\
    \ = first_letter >= '0' && first_letter <= '9';\n    let second_letter_is_valid_filename\
    \ = second_letter >= '0' && second_letter <= '9';\n    let third_letter_is_valid_filename\
    \ = third_letter >= '0' && third_letter <= '9';\n    let fourth_letter_is_valid_filename\
    \ = fourth_letter >= '0' && fourth_letter <= '9';\n    let fifth_letter_is_valid_filename\
    \ = fifth_letter >= '0' && fifth_letter <= '9';\n    let sixth_letter_is_valid_filename\
    \ = sixth_letter >= '0' && sixth_letter <= '9';\n    let seventh_letter_is_valid_filename\
    \ = seventh_letter >= '0' && seventh_letter <= '9';\n    let ", "    if (file_name.length\
    \ <= 3) {\n        return \"No\";\n    }\n    if (file_name.indexOf(\".\") !=\
    \ -1) {\n        if (file_name.indexOf(\".\") != 0) {\n            return \"No\"\
    ;\n        }\n        if (file_name.substring(0, 1) != \"a\" && file_name.substring(0,\
    \ 1) != \"A\" && file_name.substring(0, 1) != \"b\" && file_name.substring(0,\
    \ 1) != \"B\" && file_name.substring(0, 1) != \"c\" && file_name.substring(0,\
    \ 1) != \"C\" && file_name.substring(0, 1) != \"d\" && file_name.substring(0,\
    \ 1) != \"D\" && file_name.substring(0, 1) != \"e\" && file_name.substring(0,\
    \ 1) != \"E\" && file_name.substring(0, 1) != \"f\" && file_name.substring(0,\
    \ 1) != \"F\" && file_name.substring(0, 1) != \"g\" && file_name.substring(0,\
    \ 1) != \"G\" && file_name.substring(0, 1) != \"h\" && file_name.substring(0,\
    \ 1) != \"H\" && file_name.substring(0, 1) != \"i\" && file_name.substring(0,\
    \ 1) != \"I\" && file_name.substring(0, 1) != \"j\" && file_name.substring(0,\
    \ 1) != \"J\" && file_name.substring(0, 1) != \"k\" && file_name.substring(0,\
    \ 1) != \"K\" && file_name.substring(0, 1) != \"l\" && file_name.substring(0,\
    \ 1) != \"L\" && file_name.substring(0, 1) != \"m\" && file_name.substring(0,\
    \ 1) != \"M\" && file_name.substring(0, 1) != \"n\" && file_name.substring(0,\
    \ 1) != \"N\" && file_name.substring(0, 1) != \"o\" && file_name.substring(0,\
    \ 1) != \"O\" && file_name.substring(0, 1) != \"p\" && file_name.substring(0,\
    \ 1) != \"P\" && file_name.substring(0, 1) != \"q\" && file_name.substring(0,\
    \ 1) != \"Q\" && file_name.substring(0, 1) != \"r\" && file_name.substring(0,\
    \ 1) != \"R\" && file_name.substring(0, 1) != \"s\" && file_name.substring(0,\
    \ 1) != \"S\" && file_name.substring(0, 1) != \"t\" && file_name.substring(0,\
    \ 1) != \"T\" && file_name.substring(0, 1) != \"u\" && file_name.substring(0,\
    \ 1) != \"U\" && file_name.substring(0, 1) != \"v\" && file_name.substring(0,\
    \ 1) != \"V\" && file_name.substring(0, 1) != \"w\" && file_name.substring(0,\
    \ 1) != \"W\" && file_name.substring(0, 1) != \"x\" && file_name.substring(0,\
    \ 1) != \"X\" && file_name.substring(0, 1) != \"y\" && file_name.substring(0,\
    \ 1) != \"Y\" && file_name.substring(0, 1) != \"z\" && file_name.substring(0,\
    \ 1) != \"Z\") {\n            return \"No\";\n        }\n    }\n    return \"\
    Yes\";\n}\n", "    let file_name = file_name.toLowerCase();\n    let dot_index\
    \ = file_name.indexOf('.');\n    let first_letter = file_name.substring(0, 1);\n\
    \    let second_letter = file_name.substring(1, 2);\n    let third_letter = file_name.substring(2,\
    \ 3);\n    let fourth_letter = file_name.substring(3, 4);\n    let fifth_letter\
    \ = file_name.substring(4, 5);\n    let sixth_letter = file_name.substring(5,\
    \ 6);\n    let seventh_letter = file_name.substring(6, 7);\n    let eighth_letter\
    \ = file_name.substring(7, 8);\n    let ninth_letter = file_name.substring(8,\
    \ 9);\n    if (dot_index != -1) {\n        if (first_letter != 'a' && first_letter\
    \ != 'b' && first_letter != 'c' && first_letter != 'd' && first_letter != 'e'\
    \ && first_letter != 'f' && first_letter != 'g' && first_letter != 'h' && first_letter\
    \ != 'i' && first_letter != 'j' && first_letter != 'k' && first_letter != 'l'\
    \ && first_letter != 'm' && first_letter != 'n' && first_letter != 'o' && first_letter\
    \ != 'p' && first_letter != 'q' && first_letter != 'r' && first_letter != 's'\
    \ && first_letter != 't' && first_letter != 'u' && first_letter != 'v' && first_letter\
    \ != 'w' && first_letter != 'x' && first_letter != 'y' && first_letter != 'z')\
    \ {\n            return 'No';\n        }\n        if (second_letter != '0' &&\
    \ second_letter != '1' && second_letter != '2' && second_letter != '3' && second_letter\
    \ != '4' && second_letter != '5' && second_letter != '6' && second_letter != '7'\
    \ && second_letter != '8' && second_letter != '9') {\n            return 'No';\n\
    \        }\n        if (third_letter != '.') {\n            return 'No';\n   \
    \     }\n        if (fourth_letter != 'a' && fourth_letter != 'b' && fourth_letter\
    \ != 'c' && fourth_letter != 'd' && fourth_letter != 'e' && fourth_letter != 'f'\
    \ && fourth_letter != 'g' && fourth_letter != 'h' && fourth_letter != 'i' && fourth_letter\
    \ != 'j' && fourth_letter != 'k' && fourth_letter != 'l' && fourth_letter != 'm'\
    \ && fourth_letter != 'n' && fourth_letter != 'o' && fourth_letter != 'p' && fourth_letter\
    \ != 'q' && fourth_letter != 'r' && fourth_letter != 's' && fourth_letter != 't'\
    \ && fourth_letter != 'u' && fourth_letter != 'v' && fourth_letter != 'w' && fourth_letter\
    \ != 'x' && fourth_letter != 'y' && fourth_letter != 'z') {\n            return\
    \ 'No';\n        }\n        if (fifth_letter != '0' && fifth_letter != '1' &&\
    \ fifth_letter != '2' && fif", "    var valid_file_name = false;\n    var file_name_parts\
    \ = file_name.split('.');\n    var file_name_length = file_name_parts.length;\n\
    \    var file_name_first_letter = file_name_parts[0];\n    var file_name_first_letter_is_latin_alphabet\
    \ = file_name_first_letter >= 'a' && file_name_first_letter <= 'z' || file_name_first_letter\
    \ >= 'A' && file_name_first_letter <= 'Z';\n    if (file_name_length == 0 || file_name_length\
    \ > 3 || file_name_first_letter_is_latin_alphabet || file_name_parts[0].length\
    \ == 0) {\n        valid_file_name = false;\n    } else {\n        valid_file_name\
    \ = true;\n    }\n    return valid_file_name ? 'Yes' : 'No';\n}\n", "    var pattern\
    \ = /^[0-9]{3}\\.txt|[0-9]{3}\\.exe|[0-9]{3}\\.dll$/;\n    return pattern.test(file_name);\n\
    }\n", "    let valid_file_name = file_name.match(/^[0-9]{3}\\.[a-z][a-z]$/);\n\
    \    if (valid_file_name == null) {\n        return \"No\";\n    }\n    let dot_index\
    \ = file_name.indexOf(\".\");\n    if (dot_index == -1) {\n        return \"No\"\
    ;\n    }\n    let first_letter = file_name.substring(0, 1);\n    if (first_letter\
    \ != first_letter.match(/[a-z]/)) {\n        return \"No\";\n    }\n    let last_letter\
    \ = file_name.substring(dot_index + 1);\n    if (last_letter != last_letter.match(/[txt|exe|dll]/))\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    var pattern\
    \ = /^[0-9]{3}\\.txt$/i;\n    var pattern2 = /^[0-9]{3}\\.exe$/i;\n    var pattern3\
    \ = /^[0-9]{3}\\.dll$/i;\n    var pattern4 = /^[a-z]{2}\\.txt$/i;\n    var pattern5\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern6 = /^[a-z]{2}\\.dll$/i;\n    var pattern7\
    \ = /^[a-z]{3}\\.txt$/i;\n    var pattern8 = /^[a-z]{3}\\.exe$/i;\n    var pattern9\
    \ = /^[a-z]{3}\\.dll$/i;\n    var pattern10 = /^[A-Z]{2}\\.txt$/i;\n    var pattern11\
    \ = /^[A-Z]{2}\\.exe$/i;\n    var pattern12 = /^[A-Z]{2}\\.dll$/i;\n    var pattern13\
    \ = /^[A-Z]{3}\\.txt$/i;\n    var pattern14 = /^[A-Z]{3}\\.exe$/i;\n    var pattern15\
    \ = /^[A-Z]{3}\\.dll$/i;\n    var pattern16 = /^[a-z]{2}\\.txt$/i;\n    var pattern17\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern18 = /^[a-z]{2}\\.dll$/i;\n    var pattern19\
    \ = /^[a-z]{3}\\.txt$/i;\n    var pattern20 = /^[a-z]{3}\\.exe$/i;\n    var pattern21\
    \ = /^[a-z]{3}\\.dll$/i;\n    var pattern22 = /^[A-Z]{2}\\.txt$/i;\n    var pattern23\
    \ = /^[A-Z]{2}\\.exe$/i;\n    var pattern24 = /^[A-Z]{2}\\.dll$/i;\n    var pattern25\
    \ = /^[A-Z]{3}\\.txt$/i;\n    var pattern26 = /^[A-Z]{3}\\.exe$/i;\n    var pattern27\
    \ = /^[A-Z]{3}\\.dll$/i;\n    var pattern28 = /^[a-z]{2}\\.txt$/i;\n    var pattern29\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern30 = /^[a-z]{2}\\.dll$/i;\n    var pattern31\
    \ = /^[a-z]{3}\\.txt$/i;\n    var pattern32 = /^[a-z]{3}\\.exe$/i;\n    var pattern33\
    \ = /^[a-z]{3}\\.dll$/i;\n    var pattern34 = /^[A-Z]{2}\\.txt$/i;\n    var pattern35\
    \ = /^[A-Z]{2}\\.exe$/i;\n    var pattern36 = /^[A-Z]{2}\\.dll$/i;\n    var pattern37\
    \ = /^[A-Z]{3}\\.txt$/i;\n    var pattern38 = /^[A-Z]{3}\\.exe$/i;\n    var pattern39\
    \ = /^[A-Z]{3}\\.dll$/i;\n    var pattern40 = /^[a-z]{2}\\.txt$/i;\n    var pattern41\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern42 = /^[a-z]{2}\\.dll$/i;\n    var pattern43\
    \ = /^", "    let file_name = file_name.toLowerCase();\n    let file_name = file_name.replace(/\\\
    ./g, '');\n    let file_name = file_name.substring(0, 3);\n    let file_name =\
    \ file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n \
    \   let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = ", "    let result = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n\
    \    if (result === null) {\n        return \"No\";\n    }\n    if (result.length\
    \ > 3) {\n        return \"No\";\n    }\n    if (result[0].length === 0) {\n \
    \       return \"No\";\n    }\n    if (result[0].charAt(0) === 'a' || result[0].charAt(0)\
    \ === 'A') {\n        return \"No\";\n    }\n    if (result[0].charAt(1) === 'a'\
    \ || result[0].charAt(1) === 'A') {\n        return \"No\";\n    }\n    if (result[0].charAt(2)\
    \ === 'a' || result[0].charAt(2) === 'A') {\n        return \"No\";\n    }\n \
    \   if (result[0].charAt(3) === 'a' || result[0].charAt(3) === 'A') {\n      \
    \  return \"No\";\n    }\n    if (result[0].charAt(4) === 'a' || result[0].charAt(4)\
    \ === 'A') {\n        return \"No\";\n    }\n    if (result[0].charAt(5) === 'a'\
    \ || result[0].charAt(5) === 'A') {\n        return \"No\";\n    }\n    if (result[0].charAt(6)\
    \ === 'a' || result[0].charAt(6) === 'A') {\n        return \"No\";\n    }\n \
    \   if (result[0].charAt(7) === 'a' || result[0].charAt(7) === 'A') {\n      \
    \  return \"No\";\n    }\n    if (result[0].charAt(8) === 'a' || result[0].charAt(8)\
    \ === 'A') {\n        return \"No\";\n    }\n    if (result[0].charAt(9) === 'a'\
    \ || result[0].charAt(9) === 'A') {\n        return \"No\";\n    }\n    if (result[0].charAt(10)\
    \ === 'a' || result[0].charAt(10) === 'A') {\n        return \"No\";\n    }\n\
    \    if (result[0].charAt(11) === 'a' || result[0].charAt(11) === 'A') {\n   \
    \     return \"No\";\n    }\n    if (result[0].charAt(12) === 'a' || result[0].charAt(12)\
    \ === 'A') {\n        return \"No\";\n    }\n    if (result[0].charAt(13) ===\
    \ 'a' || result[0].charAt(13) === 'A') {\n        return \"No\";\n    }\n    if\
    \ (result[0].charAt(14) === 'a' || result[0].charAt(14) === 'A') {\n        return\
    \ \"No\";\n    }\n    if (result[0].charAt(15) === 'a' || result[0].charAt(15)\
    \ === 'A') {\n        return \"No\";\n    }\n    if (result[0].charAt(16) ===\
    \ 'a' || result[0].charAt(16) === 'A') {\n        return \"No\";\n    }\n    if\
    \ (result[0].charAt(17) === 'a' || result[0].charAt(17) === 'A') {\n        return\
    \ \"No\";\n    }\n    if (result[0].charAt(18) === 'a' || result[0].charAt(18)\
    \ === 'A') {\n        return \"No\";\n    }\n    if (result[0].charAt(19) ===\
    \ 'a' || result[0].charAt(19) === 'A') {\n        return \"No\";\n    }\n    if\
    \ (result[0].charAt(20) === 'a' || result[0].charAt(20) === 'A') {\n        return\
    \ \"No\";\n    }\n    if (", "    if (file_name.match(/^[0-9]{3}$/)) {\n     \
    \   if (file_name.indexOf('.') === -1) {\n            return 'No';\n        }\n\
    \        if (file_name.substring(0, 1) !== '.') {\n            return 'No';\n\
    \        }\n        if (file_name.substring(file_name.length - 1) !== '.') {\n\
    \            return 'No';\n        }\n        if (file_name.substring(file_name.length\
    \ - 1, file_name.length) !== 'txt' && \n            file_name.substring(file_name.length\
    \ - 1, file_name.length) !== 'exe' && \n            file_name.substring(file_name.length\
    \ - 1, file_name.length) !== 'dll') {\n            return 'No';\n        }\n \
    \       return 'Yes';\n    }\n    return 'No';\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf(\".\");\n    let first_letter = file_name.charAt(0);\n\
    \    let last_letter = file_name.charAt(file_name.length - 1);\n    let first_letter_is_letter\
    \ = first_letter >= 'a' && first_letter <= 'z';\n    let last_letter_is_letter\
    \ = last_letter >= 'a' && last_letter <= 'z';\n    let dot_is_letter = dot_index\
    \ >= 0 && dot_index < file_name.length - 1;\n    let dot_is_valid = dot_is_letter\
    \ && first_letter_is_letter && last_letter_is_letter;\n    let dot_is_not_empty\
    \ = dot_index >= 0 && dot_index < file_name.length - 1;\n    let dot_is_not_valid\
    \ = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty\
    \ && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n\
    \    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid\
    \ = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty\
    \ && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n\
    \    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid\
    \ = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty\
    \ && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n\
    \    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid\
    \ = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty\
    \ && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n\
    \    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid\
    \ = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty\
    \ && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n\
    \    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid\
    \ = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty\
    \ && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n\
    \    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid\
    \ = dot_is_not_empty && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty\
    \ && dot_is_letter;\n    let dot_is_not_valid = dot_is_not_empty && dot_is_letter;\n\
    \    let dot_is_not_valid = dot_is_not_empty && dot_is_", "    let result = file_name;\n\
    \    let dotIndex = file_name.indexOf('.');\n    if (dotIndex == -1) {\n     \
    \   result = 'No';\n    }\n    else if (dotIndex > 0 && dotIndex < file_name.length\
    \ - 1) {\n        let firstChar = file_name.charAt(0);\n        let lastChar =\
    \ file_name.charAt(file_name.length - 1);\n        let firstCharLower = firstChar.toLowerCase();\n\
    \        let lastCharLower = lastChar.toLowerCase();\n        if (firstCharLower\
    \ >= 'a' && firstCharLower <= 'z') {\n            if (lastCharLower >= 'a' &&\
    \ lastCharLower <= 'z') {\n                if (firstChar == lastChar) {\n    \
    \                result = 'Yes';\n                }\n                else {\n\
    \                    result = 'No';\n                }\n            }\n      \
    \      else {\n                result = 'No';\n            }\n        }\n    \
    \    else {\n            result = 'No';\n        }\n    }\n    else {\n      \
    \  result = 'No';\n    }\n    return result;\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf('.');\n    if (dot_index == -1) {\n   \
    \     return 'No';\n    }\n    if (file_name.substring(dot_index - 1, dot_index)\
    \ != '.') {\n        return 'No';\n    }\n    let first_letter = file_name.substring(0,\
    \ dot_index).toLowerCase();\n    if (first_letter != 'a' && first_letter != 'b'\
    \ && first_letter != 'c' && first_letter != 'd' && first_letter != 'e' && first_letter\
    \ != 'f' && first_letter != 'g' && first_letter != 'h' && first_letter != 'i'\
    \ && first_letter != 'j' && first_letter != 'k' && first_letter != 'l' && first_letter\
    \ != 'm' && first_letter != 'n' && first_letter != 'o' && first_letter != 'p'\
    \ && first_letter != 'q' && first_letter != 'r' && first_letter != 's' && first_letter\
    \ != 't' && first_letter != 'u' && first_letter != 'v' && first_letter != 'w'\
    \ && first_letter != 'x' && first_letter != 'y' && first_letter != 'z') {\n  \
    \      return 'No';\n    }\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    if (extension != 'txt' && extension != 'exe' && extension != 'dll')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n", "    var re = /^[0-9]{3}\\\
    .txt|exe|dll$/i;\n    return re.test(file_name);\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let file_ext = file_name.split('.').pop();\n    let file_length = file_name.length;\n\
    \    let file_digits = file_name.split('').filter(function(char) {\n        return\
    \ char >= '0' && char <= '9';\n    });\n    let file_letters = file_name.split('').filter(function(char)\
    \ {\n        return char >= 'a' && char <= 'z' || char >= 'A' && char <= 'Z';\n\
    \    });\n    let file_first_letter = file_name.split('')[0];\n    let file_first_digit\
    \ = file_name.split('')[0];\n    let file_first_letter_capital = file_name.split('')[0].charAt(0).toUpperCase();\n\
    \    let file_first_digit_capital = file_name.split('')[0].charAt(0).toUpperCase();\n\
    \    let file_first_letter_lower = file_name.split('')[0].charAt(0).toLowerCase();\n\
    \    let file_first_digit_lower = file_name.split('')[0].charAt(0).toLowerCase();\n\
    \    let file_first_letter_upper = file_name.split('')[0].charAt(0).toUpperCase();\n\
    \    let file_first_digit_upper = file_name.split('')[0].charAt(0).toUpperCase();\n\
    \    let file_first_letter_digit = file_name.split('')[0].charAt(0);\n    let\
    \ file_first_digit_digit = file_name.split('')[0].charAt(0);\n    let file_first_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_digit_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_letter_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_digit_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_letter_letter_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_digit_letter_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_letter_letter_letter_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_digit_letter_letter_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_letter_letter_letter_letter_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_digit_letter_letter_letter_letter_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_letter_letter_letter_letter_letter_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_digit_letter_letter_letter_letter_letter_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_letter_letter_letter_letter_letter_letter_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_digit_letter_letter_letter_letter_letter_letter_letter_letter_digit\
    \ = file_name.split('')[0].charAt(0).toLowerCase();\n    let file_first_letter_letter_letter_letter_",
  "    let valid_file_name = false;\n    let file_name_array = file_name.split('.');\n\
    \    if (file_name_array.length > 3 || file_name_array.length < 1 || file_name_array[0].length\
    \ < 1 || file_name_array[0].length > 1 || file_name_array[1].length < 3 || file_name_array[1].length\
    \ > 3 || file_name_array[1][0] < 'a' || file_name_array[1][0] > 'z' || file_name_array[1][1]\
    \ < 'a' || file_name_array[1][1] > 'z') {\n        valid_file_name = false;\n\
    \    } else {\n        valid_file_name = true;\n    }\n    return valid_file_name\
    \ ? 'Yes' : 'No';\n}\n", "    var re = /^[0-9]{3}\\.txt|[0-9]{3}\\.exe|[0-9]{3}\\\
    .dll$/;\n    return re.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    let valid_file_name\
    \ = file_name.match(/^[0-9]{3}\\.[a-z][a-z]$/);\n    if (valid_file_name === null)\
    \ {\n        return \"No\";\n    }\n    let dot_index = file_name.indexOf(\".\"\
    );\n    if (dot_index === -1) {\n        return \"No\";\n    }\n    let first_letter\
    \ = file_name.charAt(0);\n    if (first_letter < \"a\" || first_letter > \"z\"\
    ) {\n        return \"No\";\n    }\n    let last_letter = file_name.charAt(file_name.length\
    \ - 1);\n    if (last_letter < \"a\" || last_letter > \"z\") {\n        return\
    \ \"No\";\n    }\n    if (file_name.indexOf(\".\") === dot_index - 1) {\n    \
    \    return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf('.');\n    let first_letter = file_name.charAt(0);\n\
    \    let second_letter = file_name.charAt(1);\n    let third_letter = file_name.charAt(2);\n\
    \    let fourth_letter = file_name.charAt(3);\n    let fifth_letter = file_name.charAt(4);\n\
    \    let sixth_letter = file_name.charAt(5);\n    let seventh_letter = file_name.charAt(6);\n\
    \    let eighth_letter = file_name.charAt(7);\n    let ninth_letter = file_name.charAt(8);\n\
    \    let tenth_letter = file_name.charAt(9);\n    let first_letter_is_letter =\
    \ first_letter >= 'a' && first_letter <= 'z';\n    let second_letter_is_letter\
    \ = second_letter >= 'a' && second_letter <= 'z';\n    let third_letter_is_letter\
    \ = third_letter >= 'a' && third_letter <= 'z';\n    let fourth_letter_is_letter\
    \ = fourth_letter >= 'a' && fourth_letter <= 'z';\n    let fifth_letter_is_letter\
    \ = fifth_letter >= 'a' && fifth_letter <= 'z';\n    let sixth_letter_is_letter\
    \ = sixth_letter >= 'a' && sixth_letter <= 'z';\n    let seventh_letter_is_letter\
    \ = seventh_letter >= 'a' && seventh_letter <= 'z';\n    let eighth_letter_is_letter\
    \ = eighth_letter >= 'a' && eighth_letter <= 'z';\n    let ninth_letter_is_letter\
    \ = ninth_letter >= 'a' && ninth_letter <= 'z';\n    let first_letter_is_digit\
    \ = first_letter >= '0' && first_letter <= '9';\n    let second_letter_is_digit\
    \ = second_letter >= '0' && second_letter <= '9';\n    let third_letter_is_digit\
    \ = third_letter >= '0' && third_letter <= '9';\n    let fourth_letter_is_digit\
    \ = fourth_letter >= '0' && fourth_letter <= '9';\n    let fifth_letter_is_digit\
    \ = fifth_letter >= '0' && fifth_letter <= '9';\n    let sixth_letter_is_digit\
    \ = sixth_letter >= '0' && sixth_letter <= '9';\n    let seventh_letter_is_digit\
    \ = seventh_letter >= '0' && seventh_letter <= '9';\n    let eighth_letter_is_digit\
    \ = eighth_letter >= '0' && eighth_letter <= '9';\n    let ninth_letter_is_digit\
    \ = ninth_letter >= '0' && ninth_letter <= '9';\n    let first_letter_", "   \
    \ let file_name = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n\
    \    if (dot_index == -1) {\n        return 'No';\n    }\n    let first_letter\
    \ = file_name.substring(0, dot_index);\n    let second_letter = file_name.substring(dot_index\
    \ + 1);\n    if (first_letter.length < 2 || first_letter != 'a' || first_letter\
    \ != 'b' || first_letter != 'c' || first_letter != 'd' || first_letter != 'e'\
    \ || first_letter != 'f' || first_letter != 'g' || first_letter != 'h' || first_letter\
    \ != 'i' || first_letter != 'j' || first_letter != 'k' || first_letter != 'l'\
    \ || first_letter != 'm' || first_letter != 'n' || first_letter != 'o' || first_letter\
    \ != 'p' || first_letter != 'q' || first_letter != 'r' || first_letter != 's'\
    \ || first_letter != 't' || first_letter != 'u' || first_letter != 'v' || first_letter\
    \ != 'w' || first_letter != 'x' || first_letter != 'y' || first_letter != 'z')\
    \ {\n        return 'No';\n    }\n    if (second_letter.length != 1 || second_letter\
    \ != 'txt' || second_letter != 'exe' || second_letter != 'dll') {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\nfile_name_check('test.txt'); // 'Yes'\n\
    file_name_check('test.exe'); // 'Yes'\nfile_name_check('test.dll'); // 'Yes'\n\
    file_name_check('test.'); // 'No'\nfile_name_check('test'); // 'No'\nfile_name_check('');\
    \ // 'No'\nfile_name_check('test.'); // 'No'\nfile_name_check('test.txt.exe');\
    \ // 'No'\nfile_name_check('test.txt.exe.c'); // 'No'\nfile_name_check('test.txt.exe.cpp');\
    \ // 'No'\nfile_name_check('test.txt.exe.c++'); // 'No'\nfile_name_check('test.txt.exe.c#');\
    \ // 'No'\nfile_name_check('test.txt.exe.c++.exe'); // 'No'\nfile_name_check('test.txt.exe.c++.exe.c');\
    \ // 'No'\nfile_name_check('test.txt.exe.c++.exe.cpp'); // 'No'\nfile_name_check('test.txt.exe.c++.exe.c#');\
    \ // 'No'\nfile_name_check('test.txt.exe.c++.exe.c++'); // 'No'\nfile_name_check('test.txt.exe.c++.exe.c++.exe');\
    \ // 'No'\nfile_name_check('test.txt.exe.c++.exe", "    let valid_file_name =\
    \ file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n    if (valid_file_name ==\
    \ null) {\n        return \"No\";\n    }\n    if (valid_file_name[0].length <=\
    \ 3) {\n        return \"No\";\n    }\n    if (valid_file_name[0].indexOf('.')\
    \ < 0) {\n        return \"No\";\n    }\n    if (valid_file_name[0].substring(0,\
    \ 1) != 'a' && valid_file_name[0].substring(0, 1) != 'A' && valid_file_name[0].substring(0,\
    \ 1) != 'b' && valid_file_name[0].substring(0, 1) != 'B' && valid_file_name[0].substring(0,\
    \ 1) != 'c' && valid_file_name[0].substring(0, 1) != 'C' && valid_file_name[0].substring(0,\
    \ 1) != 'd' && valid_file_name[0].substring(0, 1) != 'D' && valid_file_name[0].substring(0,\
    \ 1) != 'e' && valid_file_name[0].substring(0, 1) != 'E' && valid_file_name[0].substring(0,\
    \ 1) != 'f' && valid_file_name[0].substring(0, 1) != 'F' && valid_file_name[0].substring(0,\
    \ 1) != 'g' && valid_file_name[0].substring(0, 1) != 'G' && valid_file_name[0].substring(0,\
    \ 1) != 'h' && valid_file_name[0].substring(0, 1) != 'H' && valid_file_name[0].substring(0,\
    \ 1) != 'i' && valid_file_name[0].substring(0, 1) != 'I' && valid_file_name[0].substring(0,\
    \ 1) != 'j' && valid_file_name[0].substring(0, 1) != 'J' && valid_file_name[0].substring(0,\
    \ 1) != 'k' && valid_file_name[0].substring(0, 1) != 'K' && valid_file_name[0].substring(0,\
    \ 1) != 'l' && valid_file_name[0].substring(0, 1) != 'L' && valid_file_name[0].substring(0,\
    \ 1) != 'm' && valid_file_name[0].substring(0, 1) != 'M' && valid_file_name[0].substring(0,\
    \ 1) != 'n' && valid_file_name[0].substring(0, 1) != 'N' && valid_file_name[0].substring(0,\
    \ 1) != 'o' && valid_file_name[0].substring(0, 1) != 'O' && valid_file_name[0].substring(0,\
    \ 1) != 'p' && valid_file_name[0].substring(0, 1) != 'P' && valid_file_name[0].substring(0,\
    \ 1) != 'q' && valid_file_name[0].substring(0, 1) != 'Q' && valid_file_name[0].substring(0,\
    \ 1) != 'r' && valid_file_name[0].substring(0, 1) != 'R' && valid_file_name[0].substring(0,\
    \ 1) != 's' && valid_file_name[0].substring(0, 1) != 'S' && valid_file_name[0].substring(0,\
    \ 1) != 't' && valid_file_name[0].substring(0, 1) != 'T' && valid_file_name[0].substring(0,\
    \ 1) != 'u' && valid_file_name[0].substring(0, 1) != 'U' && valid_file_name[0].substring(0,\
    \ 1) != 'v' && valid_file_name[0].substring(0, 1) != 'V' && valid_file_name[0].substring(0,\
    \ 1) != 'w' && valid_file_name[0].substring(0, 1) != 'W' && valid_file_name[0].substring(0,\
    \ 1) != 'x' && valid_file_name[0].substring(0, 1) != 'X' && valid_file_name[0].substring(0,\
    \ 1) != 'y' && valid_file_name[0].substring(0, 1) ", "    let file_name = file_name.toLowerCase();\n\
    \    let file_name = file_name.replace(/\\./g, '');\n    let file_name = file_name.replace(/[^0-9\\\
    .]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let\
    \ file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/\\.[^a-z]/g, '');\n    let file_name = file_name.replace(/\\\
    .[^a-z]/g, '');\n    let file_name = file_name.replace(/\\.[^a-z]/g, '');\n  \
    \  let file_name = file_name.replace(/", "    let file_name = file_name.toLowerCase();\n\
    \    let file_name = file_name.trim();\n    let file_name = file_name.replace(/\\\
    ./g, '');\n    let file_name = file_name.trim();\n    let file_name = file_name.substring(0,\
    \ 1);\n    let file_name = file_name.substring(1);\n    let file_name = file_name.trim();\n\
    \    let file_name = file_name.substring(0, 3);\n    let file_name = file_name.substring(3);\n\
    \    let file_name = file_name.trim();\n    let file_name = file_name.substring(0,\
    \ 2);\n    let file_name = file_name.substring(2);\n    let file_name = file_name.trim();\n\
    \    let file_name = file_name.substring(0, 1);\n    let file_name = file_name.substring(1);\n\
    \    let file_name = file_name.trim();\n    let file_name = file_name.substring(0,\
    \ 1);\n    let file_name = file_name.substring(1);\n    let file_name = file_name.trim();\n\
    \    let file_name = file_name.substring(0, 1);\n    let file_name = file_name.substring(1);\n\
    \    let file_name = file_name.trim();\n    let file_name = file_name.substring(0,\
    \ 1);\n    let file_name = file_name.substring(1);\n    let file_name = file_name.trim();\n\
    \    let file_name = file_name.substring(0, 1);\n    let file_name = file_name.substring(1);\n\
    \    let file_name = file_name.trim();\n    let file_name = file_name.substring(0,\
    \ 1);\n    let file_name = file_name.substring(1);\n    let file_name = file_name.trim();\n\
    \    let file_name = file_name.substring(0, 1);\n    let file_name = file_name.substring(1);\n\
    \    let file_name = file_name.trim();\n    let file_name = file_name.substring(0,\
    \ 1);\n    let file_name = file_name.substring(1);\n    let file_name = file_name.trim();\n\
    \    let file_name = file_name.substring(0, 1);\n    let file_name = file_name.substring(1);\n\
    \    let file_name = file_name.trim();\n    let file_name = file_name.substring(0,\
    \ 1);\n    let file_name = file_name.substring(1);\n    let file_name = file_name.trim();\n\
    \    let file_name = file_name.substring(0, 1);\n    let file_name = file_name.substring(1);\n\
    \    let file_name = file_name.trim();\n    let file_name = file_name.substring(0,\
    \ 1);\n    let file_name = file_name.substring(1);\n    let file_name = file_name.trim();\n\
    \    let file_name = file_name.substring(0, 1);\n    let file_name = file_name.substring(1);\n\
    \    let file_name = file_name.trim();\n    let file_name = file_name.substring(0,\
    \ 1);\n    let file_name = file_name.substring(1);\n    let file_name = file_name.trim();\n\
    \    let file_name = file_name.substring(0, 1);\n    let file_name = file_name.substring(1);\n\
    \    let file_name = file_name.trim();\n    let file_name = file_name.substring(0,\
    \ 1);\n    let file_name = file_name.substring(1);\n    let file_name = file_name.trim();\n\
    \    let file_name = file_name.substring(0, 1);\n    let file_name = file_name.substring(1);\n\
    \    let file_name = file_name.trim();\n    let ", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf('.');\n    if (dot_index == -1) {\n   \
    \     return \"No\";\n    }\n    let first_letter = file_name.substring(0, dot_index);\n\
    \    let second_letter = file_name.substring(dot_index + 1);\n    if (first_letter.length\
    \ < 2 || first_letter != 'a' || first_letter != 'b' || first_letter != 'c' ||\
    \ first_letter != 'd' || first_letter != 'e' || first_letter != 'f' || first_letter\
    \ != 'g' || first_letter != 'h' || first_letter != 'i' || first_letter != 'j'\
    \ || first_letter != 'k' || first_letter != 'l' || first_letter != 'm' || first_letter\
    \ != 'n' || first_letter != 'o' || first_letter != 'p' || first_letter != 'q'\
    \ || first_letter != 'r' || first_letter != 's' || first_letter != 't' || first_letter\
    \ != 'u' || first_letter != 'v' || first_letter != 'w' || first_letter != 'x'\
    \ || first_letter != 'y' || first_letter != 'z') {\n        return \"No\";\n \
    \   }\n    if (second_letter.length != 1 || second_letter != 'txt' || second_letter\
    \ != 'exe' || second_letter != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let file_name = file_name.toLowerCase();\n    let dot_index\
    \ = file_name.indexOf('.');\n    if (dot_index == -1) {\n        return \"No\"\
    ;\n    }\n    let first_letter = file_name.substring(0, dot_index);\n    let valid_first_letter\
    \ = first_letter >= 'a' && first_letter <= 'z' || first_letter >= 'A' && first_letter\
    \ <= 'Z';\n    if (valid_first_letter == false) {\n        return \"No\";\n  \
    \  }\n    let extension = file_name.substring(dot_index + 1);\n    let valid_extension\
    \ = extension == 'txt' || extension == 'exe' || extension == 'dll';\n    if (valid_extension\
    \ == false) {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "   \
    \ let valid = false;\n    let dotIndex = file_name.indexOf('.');\n    if (dotIndex\
    \ == -1) {\n        valid = true;\n    } else {\n        let firstLetter = file_name.substring(0,\
    \ dotIndex);\n        let lastLetter = file_name.substring(dotIndex + 1);\n  \
    \      if (firstLetter.length < 1 || firstLetter.length > 2 || firstLetter < 'a'\
    \ || firstLetter > 'z' || firstLetter < 'A' || firstLetter > 'Z' || lastLetter.length\
    \ < 1 || lastLetter.length > 3 || lastLetter < 'a' || lastLetter > 'z' || lastLetter\
    \ < 'A' || lastLetter > 'Z') {\n            valid = false;\n        } else {\n\
    \            valid = true;\n        }\n    }\n    if (valid) {\n        let fileName\
    \ = file_name.substring(file_name.lastIndexOf('/') + 1, file_name.lastIndexOf('.'));\n\
    \        if (fileName == 'txt' || fileName == 'exe' || fileName == 'dll') {\n\
    \            return 'Yes';\n        } else {\n            return 'No';\n     \
    \   }\n    } else {\n        return 'No';\n    }\n}\n", "    let valid_file_name\
    \ = file_name.match(/^[0-9]{3}\\.[a-z][a-z]$/);\n    let dot_index = file_name.indexOf('.');\n\
    \    if (dot_index == -1 || dot_index > 3 || file_name.substring(0, dot_index).length\
    \ == 0) {\n        return \"No\";\n    }\n    let dot_substr = file_name.substring(dot_index\
    \ + 1);\n    let dot_substr_lower = dot_substr.toLowerCase();\n    if (dot_substr_lower\
    \ != 'txt' && dot_substr_lower != 'exe' && dot_substr_lower != 'dll') {\n    \
    \    return \"No\";\n    }\n    return \"Yes\";\n}\n", "    var re = /^[^\\.]*\\\
    .[^\\.]*$/;\n    var re2 = /^[a-z][a-z][a-z]$/;\n    var re3 = /^[a-z][a-z][a-z][a-z][a-z]$/;\n\
    \    var re4 = /^[a-z][a-z][a-z][a-z][a-z][a-z][a-z]$/;\n    var re5 = /^[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]$/;\n\
    \    var re6 = /^[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]$/;\n\
    \    var re7 = /^[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][",
  "    let valid_file_name = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n  \
    \  if (valid_file_name == null) {\n        return \"No\";\n    }\n    let dot_index\
    \ = file_name.indexOf(\".\");\n    if (dot_index == -1) {\n        return \"No\"\
    ;\n    }\n    let first_letter = file_name.substring(0, dot_index);\n    let valid_first_letter\
    \ = first_letter.match(/[a-z]/);\n    if (valid_first_letter == null) {\n    \
    \    return \"No\";\n    }\n    let last_letter = file_name.substring(dot_index\
    \ + 1);\n    let valid_last_letter = last_letter.match(/[txt|exe|dll]/);\n   \
    \ if (valid_last_letter == null) {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let file_name = file_name.toLowerCase();\n    let file_ext\
    \ = file_name.split('.').pop();\n    let file_len = file_name.length;\n    let\
    \ file_digits = file_name.split('').filter(char => char >= '0' && char <= '9');\n\
    \    let file_first_letter = file_name.split('')[0];\n    let file_first_letter_upper\
    \ = file_name.split('')[0].charCodeAt(0) - 65;\n    let file_first_letter_lower\
    \ = file_name.split('')[0].charCodeAt(0) - 97;\n    let file_first_letter_digit\
    \ = file_name.split('')[0].charCodeAt(0);\n    let file_last_letter = file_name.split('').pop();\n\
    \    let file_last_letter_upper = file_name.split('').pop().charCodeAt(0) - 65;\n\
    \    let file_last_letter_lower = file_name.split('').pop().charCodeAt(0) - 97;\n\
    \    let file_last_letter_digit = file_name.split('').pop().charCodeAt(0);\n \
    \   let file_first_letter_digits = file_name.split('')[0].split('');\n    let\
    \ file_last_letter_digits = file_name.split('').pop().split('');\n    let file_first_letter_digits_len\
    \ = file_first_letter_digits.length;\n    let file_last_letter_digits_len = file_last_letter_digits.length;\n\
    \    let file_first_letter_digits_check = file_first_letter_digits.every(char\
    \ => char >= '0' && char <= '9');\n    let file_last_letter_digits_check = file_last_letter_digits.every(char\
    \ => char >= '0' && char <= '9');\n    let file_first_letter_digits_check = file_first_letter_digits.every(char\
    \ => char >= 'a' && char <= 'z');\n    let file_last_letter_digits_check = file_last_letter_digits.every(char\
    \ => char >= 'a' && char <= 'z');\n    let file_first_letter_digits_check = file_first_letter_digits.every(char\
    \ => char >= 'A' && char <= 'Z');\n    let file_last_letter_digits_check = file_last_letter_digits.every(char\
    \ => char >= 'A' && char <= 'Z');\n    let file_first_letter_digits_check = file_first_letter_digits.every(char\
    \ => char >= 'a' && char <= 'z');\n    let file_last_letter_digits_check = file_last_letter_digits.every(char\
    \ => char >= 'a' && char <= 'z');\n    let file_first_letter_digits_check = file_first_letter_digits.every(char\
    \ => char >= 'A' && char <= 'Z');\n    let file_last_letter_digits_check = file_last_letter_digits.every(char\
    \ => char >= 'A' && char <= 'Z');\n    let file_first_letter_digits_check = file_first_letter_digits.every(char\
    \ => char >= '0' && char <= '9');\n    let file_last_letter_digits_check = file_last_letter_digits.every(char\
    \ => char >= ", "    var file_extension = file_name.split('.').pop();\n    if\
    \ (file_name.indexOf('..') != -1 || file_name.indexOf('\\\\') != -1 || file_name.indexOf(':')\
    \ != -1 || file_name.indexOf(' ') != -1) {\n        return 'No';\n    }\n    if\
    \ (file_name.length < 3) {\n        return 'No';\n    }\n    if (file_name.indexOf('.')\
    \ != -1) {\n        if (file_name.split('.').pop().length > 3) {\n           \
    \ return 'No';\n        }\n    }\n    if (file_name.charAt(0) < 'a' || file_name.charAt(0)\
    \ > 'z') {\n        return 'No';\n    }\n    if (file_name.charAt(file_name.length\
    \ - 1) < 'a' || file_name.charAt(file_name.length - 1) > 'z') {\n        return\
    \ 'No';\n    }\n    if (file_name.charAt(0) == '.') {\n        if (file_name.charAt(1)\
    \ == '\\0' || file_name.charAt(1) == '/' || file_name.charAt(1) == '\\\\') {\n\
    \            return 'No';\n        }\n    }\n    if (file_name.charAt(file_name.length\
    \ - 1) != '.') {\n        if (file_name.charAt(file_name.length - 1) != '\\0'\
    \ || file_name.charAt(file_name.length - 1) != '/' || file_name.charAt(file_name.length\
    \ - 1) != '\\\\') {\n            return 'No';\n        }\n    }\n    if (file_name.charAt(0)\
    \ == '.' && file_name.charAt(1) == '\\0' && file_name.charAt(2) == '.' && file_name.charAt(3)\
    \ == '.') {\n        return 'No';\n    }\n    if (file_name.charAt(0) == '.' &&\
    \ file_name.charAt(1) == '\\0' && file_name.charAt(2) == '.' && file_name.charAt(3)\
    \ != '.') {\n        return 'No';\n    }\n    if (file_name.charAt(0) == '.' &&\
    \ file_name.charAt(1) == '\\0' && file_name.charAt(2) == '.' && file_name.charAt(3)\
    \ != '.' && file_name.charAt(4) == '.') {\n        return 'No';\n    }\n    if\
    \ (file_name.charAt(0) == '.' && file_name.charAt(1) == '\\0' && file_name.charAt(2)\
    \ == '.' && file_name.charAt(3) != '.' && file_name.charAt(4) != '.') {\n    \
    \    return 'No';\n    }\n    if (file_name.charAt(0) == '.' && file_name.charAt(1)\
    \ == '\\0' && file_name.charAt(2) == '.' && file_name.charAt(3) != '.' && file_name.charAt(4)\
    \ != '.' && file_name.charAt(5) == '.') {\n        return 'No';\n    }\n    if\
    \ (file_name.charAt(0) == '.' && file_name.charAt(1) == '\\0' && file_name.charAt(2)\
    \ == '.' && file_name.charAt(3) != '.' && file_name.charAt(4) != '.' && file_name.charAt(5)\
    \ != '.') {\n        return 'No';\n    }\n    if (file_name.charAt(0) == '.' &&\
    \ file_name.charAt(1) == '\\0' && file_name.charAt(2) == ", "    let file_name\
    \ = file_name.toLowerCase();\n    let file_ext = file_name.split('.').pop();\n\
    \    let file_ext = file_ext.toLowerCase();\n    let file_num = file_name.split('.').length;\n\
    \    let file_num_str = file_name.split('.').join('');\n    let file_num_str =\
    \ file_num_str.replace(/[^0-9]/g, '');\n    let file_num_str = file_num_str.replace(/^0+/,\
    \ '');\n    let file_num_str = file_num_str.replace(/\\.$/, '');\n    let file_num_str\
    \ = file_num_str.replace(/^[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\\
    .[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n\
    \    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str\
    \ = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\\
    .[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n\
    \    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str\
    \ = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\\
    .[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n\
    \    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str\
    \ = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\\
    .[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n\
    \    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str\
    \ = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\\
    .[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n\
    \    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str\
    \ = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\\
    .[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n\
    \    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str\
    \ = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\\
    .[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n\
    \    let file_num_str = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str\
    \ = file_num_str.replace(/\\.[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\\
    .[a-z]/, '');\n    let file_num_str = file_num_str.replace(/\\.", "    let file_name\
    \ = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n  \
    \  let first_letter = file_name.charAt(0);\n    let second_letter = file_name.charAt(1);\n\
    \    let third_letter = file_name.charAt(2);\n    let fourth_letter = file_name.charAt(3);\n\
    \    let fifth_letter = file_name.charAt(4);\n    let sixth_letter = file_name.charAt(5);\n\
    \    let seventh_letter = file_name.charAt(6);\n    let eighth_letter = file_name.charAt(7);\n\
    \    let ninth_letter = file_name.charAt(8);\n    let tenth_letter = file_name.charAt(9);\n\
    \    let first_letter_is_letter = first_letter >= 'a' && first_letter <= 'z';\n\
    \    let second_letter_is_letter = second_letter >= 'a' && second_letter <= 'z';\n\
    \    let third_letter_is_letter = third_letter >= 'a' && third_letter <= 'z';\n\
    \    let fourth_letter_is_letter = fourth_letter >= 'a' && fourth_letter <= 'z';\n\
    \    let fifth_letter_is_letter = fifth_letter >= 'a' && fifth_letter <= 'z';\n\
    \    let sixth_letter_is_letter = sixth_letter >= 'a' && sixth_letter <= 'z';\n\
    \    let seventh_letter_is_letter = seventh_letter >= 'a' && seventh_letter <=\
    \ 'z';\n    let eighth_letter_is_letter = eighth_letter >= 'a' && eighth_letter\
    \ <= 'z';\n    let ninth_letter_is_letter = ninth_letter >= 'a' && ninth_letter\
    \ <= 'z';\n    let first_letter_is_digit = first_letter >= '0' && first_letter\
    \ <= '9';\n    let second_letter_is_digit = second_letter >= '0' && second_letter\
    \ <= '9';\n    let third_letter_is_digit = third_letter >= '0' && third_letter\
    \ <= '9';\n    let fourth_letter_is_digit = fourth_letter >= '0' && fourth_letter\
    \ <= '9';\n    let fifth_letter_is_digit = fifth_letter >= '0' && fifth_letter\
    \ <= '9';\n    let sixth_letter_is_digit = sixth_letter >= '0' && sixth_letter\
    \ <= '9';\n    let seventh_letter_is_digit = seventh_letter >= '0' && seventh_letter\
    \ <= '9';\n    let eighth_letter_is_digit = eighth_letter >= '0' && eighth_letter\
    \ <= '9';\n    let ninth_letter_is_digit = ninth_letter >= '0' && ninth_letter\
    \ <= '9';\n    let first_letter_", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf('.');\n    if (dot_index == -1) {\n   \
    \     return \"No\";\n    }\n    let first_letter = file_name.substring(0, dot_index);\n\
    \    let second_letter = file_name.substring(dot_index + 1);\n    if (first_letter.length\
    \ < 2 || first_letter < 'a' || first_letter > 'z') {\n        return \"No\";\n\
    \    }\n    if (second_letter != '' && second_letter != 'txt' && second_letter\
    \ != 'exe' && second_letter != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let file_name = file_name.toLowerCase();\n    let dot_index\
    \ = file_name.indexOf(\".\");\n    let first_letter = file_name.charAt(0);\n \
    \   let second_letter = file_name.charAt(1);\n    let third_letter = file_name.charAt(2);\n\
    \    let fourth_letter = file_name.charAt(3);\n    let fifth_letter = file_name.charAt(4);\n\
    \    let sixth_letter = file_name.charAt(5);\n    let seventh_letter = file_name.charAt(6);\n\
    \    let eighth_letter = file_name.charAt(7);\n    let ninth_letter = file_name.charAt(8);\n\
    \    let tenth_letter = file_name.charAt(9);\n    let first_letter_is_letter =\
    \ first_letter >= 'a' && first_letter <= 'z';\n    let second_letter_is_letter\
    \ = second_letter >= 'a' && second_letter <= 'z';\n    let third_letter_is_letter\
    \ = third_letter >= 'a' && third_letter <= 'z';\n    let fourth_letter_is_letter\
    \ = fourth_letter >= 'a' && fourth_letter <= 'z';\n    let fifth_letter_is_letter\
    \ = fifth_letter >= 'a' && fifth_letter <= 'z';\n    let sixth_letter_is_letter\
    \ = sixth_letter >= 'a' && sixth_letter <= 'z';\n    let seventh_letter_is_letter\
    \ = seventh_letter >= 'a' && seventh_letter <= 'z';\n    let eighth_letter_is_letter\
    \ = eighth_letter >= 'a' && eighth_letter <= 'z';\n    let ninth_letter_is_letter\
    \ = ninth_letter >= 'a' && ninth_letter <= 'z';\n    let first_letter_is_digit\
    \ = first_letter >= '0' && first_letter <= '9';\n    let second_letter_is_digit\
    \ = second_letter >= '0' && second_letter <= '9';\n    let third_letter_is_digit\
    \ = third_letter >= '0' && third_letter <= '9';\n    let fourth_letter_is_digit\
    \ = fourth_letter >= '0' && fourth_letter <= '9';\n    let fifth_letter_is_digit\
    \ = fifth_letter >= '0' && fifth_letter <= '9';\n    let sixth_letter_is_digit\
    \ = sixth_letter >= '0' && sixth_letter <= '9';\n    let seventh_letter_is_digit\
    \ = seventh_letter >= '0' && seventh_letter <= '9';\n    let eighth_letter_is_digit\
    \ = eighth_letter >= '0' && eighth_letter <= '9';\n    let ninth_letter_is_digit\
    \ = ninth_letter >= '0' && ninth_letter <= '9';\n    let first_letter_", "   \
    \ let pattern = /^[0-9]{3}\\.txt|[0-9]{3}\\.exe|[0-9]{3}\\.dll$/;\n    return\
    \ pattern.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    var pattern = /^[0-9]{3}\\\
    .txt$/i;\n    return pattern.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    let\
    \ file_name = file_name.toLowerCase();\n    let dotIndex = file_name.indexOf(\"\
    .\");\n    if (dotIndex == -1) {\n        return \"No\";\n    }\n    let firstLetter\
    \ = file_name.substring(0, dotIndex);\n    let lastLetter = file_name.substring(dotIndex\
    \ + 1);\n    let firstLetterIsLetter = firstLetter.length == 1 && firstLetter.toUpperCase()\
    \ == firstLetter;\n    let lastLetterIsLetter = lastLetter.length == 1 && lastLetter.toUpperCase()\
    \ == lastLetter;\n    let firstLetterIsLetterOrDigit = firstLetterIsLetter ||\
    \ firstLetter.isDigit();\n    let lastLetterIsLetterOrDigit = lastLetterIsLetter\
    \ || lastLetter.isDigit();\n    if (firstLetterIsLetterOrDigit && lastLetterIsLetterOrDigit)\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nI appreciate your efforts, but this doesn't work. As I mentioned\
    \ in my question, my code works fine for most of the cases, but fails for some\
    \ cases. Please have a look at my updated question.\n<|/ c |>\n<| c |>\nI updated\
    \ my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your efforts, but this\
    \ doesn't work either. Please have a look at my updated question.\n<|/ c |>\n\
    <| c |>\nI updated my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your\
    \ efforts, but this doesn't work either. Please have a look at my updated question.\n\
    <|/ c |>\n<| a dscore=0 |>\nI finally found a solution to my problem. Here is\
    \ the code:\n<code>", "    var pattern = /^[0-9]{3}\\.txt$/i;\n    var pattern2\
    \ = /^[0-9]{3}\\.exe$/i;\n    var pattern3 = /^[0-9]{3}\\.dll$/i;\n    var pattern4\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern5 = /^[a-z]{2}\\.exe$/i;\n    var pattern6\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern7 = /^[a-z]{3}\\.txt$/i;\n    var pattern8\
    \ = /^[a-z]{3}\\.exe$/i;\n    var pattern9 = /^[a-z]{3}\\.dll$/i;\n    var pattern10\
    \ = /^[A-Z]{2}\\.txt$/i;\n    var pattern11 = /^[A-Z]{2}\\.exe$/i;\n    var pattern12\
    \ = /^[A-Z]{2}\\.dll$/i;\n    var pattern13 = /^[A-Z]{3}\\.txt$/i;\n    var pattern14\
    \ = /^[A-Z]{3}\\.exe$/i;\n    var pattern15 = /^[A-Z]{3}\\.dll$/i;\n    var pattern16\
    \ = /^[0-9]{2}\\.txt$/i;\n    var pattern17 = /^[0-9]{2}\\.exe$/i;\n    var pattern18\
    \ = /^[0-9]{2}\\.dll$/i;\n    var pattern19 = /^[0-9]{3}\\.txt$/i;\n    var pattern20\
    \ = /^[0-9]{3}\\.exe$/i;\n    var pattern21 = /^[0-9]{3}\\.dll$/i;\n    var pattern22\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern23 = /^[a-z]{2}\\.exe$/i;\n    var pattern24\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern25 = /^[a-z]{3}\\.txt$/i;\n    var pattern26\
    \ = /^[a-z]{3}\\.exe$/i;\n    var pattern27 = /^[a-z]{3}\\.dll$/i;\n    var pattern28\
    \ = /^[A-Z]{2}\\.txt$/i;\n    var pattern29 = /^[A-Z]{2}\\.exe$/i;\n    var pattern30\
    \ = /^[A-Z]{2}\\.dll$/i;\n    var pattern31 = /^[A-Z]{3}\\.txt$/i;\n    var pattern32\
    \ = /^[A-Z]{3}\\.exe$/i;\n    var pattern33 = /^[A-Z]{3}\\.dll$/i;\n    var pattern34\
    \ = /^[0-9]{2}\\.txt$/i;\n    var pattern35 = /^[0-9]{2}\\.exe$/i;\n    var pattern36\
    \ = /^[0-9]{2}\\.dll$/i;\n    var pattern37 = /^[0-9]{3}\\.txt$/i;\n    var pattern38\
    \ = /^[0-9]{3}\\.exe$/i;\n    var pattern39 = /^[0-9]{3}\\.dll$/i;\n    var pattern40\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern41 = /^[a-z]{2}\\.exe$/i;\n    var pattern42\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern43 = /^", "    var pattern = /^[0-9]{3}\\\
    .txt$/;\n    var pattern2 = /^[0-9]{3}\\.exe$/;\n    var pattern3 = /^[0-9]{3}\\\
    .dll$/;\n    var pattern4 = /^[a-z]{2}\\.txt$/;\n    var pattern5 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern6 = /^[a-z]{2}\\.dll$/;\n    var pattern7 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern8 = /^[a-z]{2}\\.dll$/;\n    var pattern9 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern10 = /^[a-z]{2}\\.dll$/;\n    var pattern11 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern12 = /^[a-z]{2}\\.dll$/;\n    var pattern13 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern14 = /^[a-z]{2}\\.dll$/;\n    var pattern15 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern16 = /^[a-z]{2}\\.dll$/;\n    var pattern17 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern18 = /^[a-z]{2}\\.dll$/;\n    var pattern19 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern20 = /^[a-z]{2}\\.dll$/;\n    var pattern21 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern22 = /^[a-z]{2}\\.dll$/;\n    var pattern23 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern24 = /^[a-z]{2}\\.dll$/;\n    var pattern25 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern26 = /^[a-z]{2}\\.dll$/;\n    var pattern27 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern28 = /^[a-z]{2}\\.dll$/;\n    var pattern29 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern30 = /^[a-z]{2}\\.dll$/;\n    var pattern31 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern32 = /^[a-z]{2}\\.dll$/;\n    var pattern33 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern34 = /^[a-z]{2}\\.dll$/;\n    var pattern35 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern36 = /^[a-z]{2}\\.dll$/;\n    var pattern37 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern38 = /^[a-z]{2}\\.dll$/;\n    var pattern39 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern40 = /^[a-z]{2}\\.dll$/;\n    var pattern41 = /^[a-z]{2}\\\
    .exe$/;\n    var pattern42 = /^[a-z]{2}\\.dll$/;\n    var pattern43 = /^", " \
    \   let file_name_array = file_name.split('.');\n    let file_name_array_length\
    \ = file_name_array.length;\n    let file_name_array_first_char = file_name_array[0].charAt(0);\n\
    \    let file_name_array_first_char_uppercase = file_name_array_first_char.toUpperCase();\n\
    \    let file_name_array_first_char_lowercase = file_name_array_first_char.toLowerCase();\n\
    \    let file_name_array_first_char_digit = file_name_array_first_char.charCodeAt(0);\n\
    \    let file_name_array_first_char_digit_uppercase = file_name_array_first_char_digit\
    \ + 32;\n    let file_name_array_first_char_digit_lowercase = file_name_array_first_char_digit\
    \ - 32;\n    let file_name_array_first_char_digit_digit = file_name_array_first_char_digit\
    \ - 48;\n    let file_name_array_first_char_digit_digit_uppercase = file_name_array_first_char_digit_digit\
    \ + 32;\n    let file_name_array_first_char_digit_digit_lowercase = file_name_array_first_char_digit_digit\
    \ - 32;\n    let file_name_array_first_char_digit_digit_digit = file_name_array_first_char_digit_digit\
    \ - 48;\n    let file_name_array_first_char_digit_digit_digit_uppercase = file_name_array_first_char_digit_digit_digit\
    \ + 32;\n    let file_name_array_first_char_digit_digit_digit_lowercase = file_name_array_first_char_digit_digit_digit\
    \ - 32;\n    let file_name_array_first_char_digit_digit_digit_digit = file_name_array_first_char_digit_digit_digit\
    \ - 48;\n    let file_name_array_first_char_digit_digit_digit_digit_uppercase\
    \ = file_name_array_first_char_digit_digit_digit_digit + 32;\n    let file_name_array_first_char_digit_digit_digit_digit_lowercase\
    \ = file_name_array_first_char_digit_digit_digit_digit - 32;\n    let file_name_array_first_char_digit_digit_digit_digit_digit\
    \ = file_name_array_first_char_digit_digit_digit_digit - 48;\n    let file_name_array_first_char_digit_digit_digit_digit_digit_uppercase\
    \ = file_name_array_first_char_digit_digit_digit_digit_digit + 32;\n    let file_name_array_first_char_digit_digit_digit_digit_lowercase\
    \ = file_name_array_first_char_digit_digit_digit_digit - 32;\n    let file_name_array_first_char_digit_digit_digit_digit_digit\
    \ = file_name_array_first_char_digit_digit_digit_digit - 48;\n    let file_name_array_first_char_digit_digit_digit_digit_digit_uppercase\
    \ = file_name_array_first_char_digit_digit_digit_digit_digit + 32;\n    let file_name_array_first_char_digit_digit_digit_digit_digit_lowercase\
    \ = file_name_array_first_char_digit_digit_digit_digit_digit - 32;\n    let file_name_array_first_char_digit_digit_digit_digit_digit\
    \ = file_name_array_first_char_digit_digit_digit_digit - 48;\n    let file_name_array_first_char_digit_digit_digit_digit_digit_uppercase\
    \ = file_name_array_first_char_digit_digit_digit_digit_digit + ", "    let file_name\
    \ = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n  \
    \  let first_letter = file_name.charAt(0);\n    let last_letter = file_name.charAt(file_name.length\
    \ - 1);\n    let valid_chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n\
    \    let valid_chars_length = valid_chars.length;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length +\
    \ 2;\n    let valid_chars_length = valid_chars_length + 2;\n    let valid_chars_length\
    \ = valid_chars_length + 2;\n    let valid_chars_length = valid_chars_length + ",
  "    let file_name = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n\
    \    let first_letter = file_name.charAt(0);\n    let last_letter = file_name.charAt(file_name.length\
    \ - 1);\n    if (dot_index == -1 || dot_index == 0 || first_letter != 'a' || first_letter\
    \ != 'b' || first_letter != 'c' || first_letter != 'd' || first_letter != 'e'\
    \ || first_letter != 'f' || first_letter != 'g' || first_letter != 'h' || first_letter\
    \ != 'i' || first_letter != 'j' || first_letter != 'k' || first_letter != 'l'\
    \ || first_letter != 'm' || first_letter != 'n' || first_letter != 'o' || first_letter\
    \ != 'p' || first_letter != 'q' || first_letter != 'r' || first_letter != 's'\
    \ || first_letter != 't' || first_letter != 'u' || first_letter != 'v' || first_letter\
    \ != 'w' || first_letter != 'x' || first_letter != 'y' || first_letter != 'z'\
    \ || last_letter != 'a' || last_letter != 'b' || last_letter != 'c' || last_letter\
    \ != 'd' || last_letter != 'e' || last_letter != 'f' || last_letter != 'g' ||\
    \ last_letter != 'h' || last_letter != 'i' || last_letter != 'j' || last_letter\
    \ != 'k' || last_letter != 'l' || last_letter != 'm' || last_letter != 'n' ||\
    \ last_letter != 'o' || last_letter != 'p' || last_letter != 'q' || last_letter\
    \ != 'r' || last_letter != 's' || last_letter != 't' || last_letter != 'u' ||\
    \ last_letter != 'v' || last_letter != 'w' || last_letter != 'x' || last_letter\
    \ != 'y' || last_letter != 'z') {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n", "    let pattern = /^[0-9]{3}\\.txt$/i;\n    let pattern2 = /^[0-9]{3}\\\
    .exe$/i;\n    let pattern3 = /^[0-9]{3}\\.dll$/i;\n    let pattern4 = /^[a-z]{2}\\\
    .txt$/i;\n    let pattern5 = /^[a-z]{2}\\.exe$/i;\n    let pattern6 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern7 = /^[a-z]{2}\\.exe$/i;\n    let pattern8 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern9 = /^[a-z]{2}\\.exe$/i;\n    let pattern10 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern11 = /^[a-z]{2}\\.exe$/i;\n    let pattern12 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern13 = /^[a-z]{2}\\.exe$/i;\n    let pattern14 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern15 = /^[a-z]{2}\\.exe$/i;\n    let pattern16 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern17 = /^[a-z]{2}\\.exe$/i;\n    let pattern18 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern19 = /^[a-z]{2}\\.exe$/i;\n    let pattern20 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern21 = /^[a-z]{2}\\.exe$/i;\n    let pattern22 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern23 = /^[a-z]{2}\\.exe$/i;\n    let pattern24 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern25 = /^[a-z]{2}\\.exe$/i;\n    let pattern26 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern27 = /^[a-z]{2}\\.exe$/i;\n    let pattern28 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern29 = /^[a-z]{2}\\.exe$/i;\n    let pattern30 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern31 = /^[a-z]{2}\\.exe$/i;\n    let pattern32 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern33 = /^[a-z]{2}\\.exe$/i;\n    let pattern34 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern35 = /^[a-z]{2}\\.exe$/i;\n    let pattern36 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern37 = /^[a-z]{2}\\.exe$/i;\n    let pattern38 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern39 = /^[a-z]{2}\\.exe$/i;\n    let pattern40 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern41 = /^[a-z]{2}\\.exe$/i;\n    let pattern42 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern43 = /^", "    let file_name_split = file_name.split('.');\n\
    \    let file_name_length = file_name_split.length;\n    if (file_name_length\
    \ < 3 || file_name_length > 4) {\n        return 'No';\n    }\n    let first_letter\
    \ = file_name_split[0].substring(0, 1);\n    let second_letter = file_name_split[0].substring(1,\
    \ 2);\n    let third_letter = file_name_split[0].substring(2, 3);\n    if (first_letter\
    \ < 'a' || first_letter > 'z' || second_letter < 'a' || second_letter > 'z' ||\
    \ third_letter < 'a' || third_letter > 'z') {\n        return 'No';\n    }\n \
    \   if (file_name_split[1] != '' && file_name_split[1] != 'exe' && file_name_split[1]\
    \ != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n}\n", "    var\
    \ pattern = /^[0-9]{3}\\.txt|exe|dll$/;\n    return pattern.test(file_name);\n\
    }\n", "    let valid_file_name = file_name.match(/^[0-9]{3}\\.[a-z][a-z]$/);\n\
    \    if (valid_file_name == null) {\n        return \"No\";\n    } else {\n  \
    \      return \"Yes\";\n    }\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dotIndex = file_name.indexOf('.');\n    if (dotIndex == -1) {\n     \
    \   return 'No';\n    }\n    let firstLetter = file_name.substring(0, dotIndex);\n\
    \    let lastLetter = file_name.substring(dotIndex + 1);\n    let firstLetterIsLetter\
    \ = firstLetter.length == 1 && firstLetter.toUpperCase() == firstLetter;\n   \
    \ let lastLetterIsLetter = lastLetter.length == 1 && lastLetter.toUpperCase()\
    \ == lastLetter;\n    let firstLetterIsLatinLetter = firstLetter.length == 1 &&\
    \ firstLetter.toUpperCase() != firstLetter;\n    let lastLetterIsLatinLetter =\
    \ lastLetter.length == 1 && lastLetter.toUpperCase() != lastLetter;\n    if (firstLetterIsLetter\
    \ && lastLetterIsLetter) {\n        return 'Yes';\n    }\n    if (firstLetterIsLetter\
    \ && lastLetterIsLatinLetter) {\n        return 'Yes';\n    }\n    if (firstLetterIsLatinLetter\
    \ && lastLetterIsLetter) {\n        return 'Yes';\n    }\n    return 'No';\n}\n",
  "    var pattern = /^[0-9]{3}\\.txt|[0-9]{3}\\.exe|[0-9]{3}\\.dll$/;\n    return\
    \ pattern.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    let pattern = /^[0-9]{3}\\\
    .txt$/i;\n    let pattern2 = /^[0-9]{3}\\.exe$/i;\n    let pattern3 = /^[0-9]{3}\\\
    .dll$/i;\n    let pattern4 = /^[a-z]{2}\\.txt$/i;\n    let pattern5 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern6 = /^[a-z]{2}\\.dll$/i;\n    let pattern7 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern8 = /^[a-z]{2}\\.dll$/i;\n    let pattern9 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern10 = /^[a-z]{2}\\.dll$/i;\n    let pattern11 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern12 = /^[a-z]{2}\\.dll$/i;\n    let pattern13 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern14 = /^[a-z]{2}\\.dll$/i;\n    let pattern15 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern16 = /^[a-z]{2}\\.dll$/i;\n    let pattern17 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern18 = /^[a-z]{2}\\.dll$/i;\n    let pattern19 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern20 = /^[a-z]{2}\\.dll$/i;\n    let pattern21 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern22 = /^[a-z]{2}\\.dll$/i;\n    let pattern23 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern24 = /^[a-z]{2}\\.dll$/i;\n    let pattern25 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern26 = /^[a-z]{2}\\.dll$/i;\n    let pattern27 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern28 = /^[a-z]{2}\\.dll$/i;\n    let pattern29 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern30 = /^[a-z]{2}\\.dll$/i;\n    let pattern31 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern32 = /^[a-z]{2}\\.dll$/i;\n    let pattern33 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern34 = /^[a-z]{2}\\.dll$/i;\n    let pattern35 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern36 = /^[a-z]{2}\\.dll$/i;\n    let pattern37 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern38 = /^[a-z]{2}\\.dll$/i;\n    let pattern39 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern40 = /^[a-z]{2}\\.dll$/i;\n    let pattern41 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern42 = /^[a-z]{2}\\.dll$/i;\n    let pattern43 = /^", " \
    \   let pattern = /^[0-9]{3}\\.txt$/i;\n    let pattern2 = /^[0-9]{3}\\.exe$/i;\n\
    \    let pattern3 = /^[0-9]{3}\\.dll$/i;\n    let pattern4 = /^[a-z]{2}\\.txt$/i;\n\
    \    let pattern5 = /^[a-z]{2}\\.exe$/i;\n    let pattern6 = /^[a-z]{2}\\.dll$/i;\n\
    \    let pattern7 = /^[a-z]{3}\\.txt$/i;\n    let pattern8 = /^[a-z]{3}\\.exe$/i;\n\
    \    let pattern9 = /^[a-z]{3}\\.dll$/i;\n    let pattern10 = /^[A-Z]{2}\\.txt$/i;\n\
    \    let pattern11 = /^[A-Z]{2}\\.exe$/i;\n    let pattern12 = /^[A-Z]{2}\\.dll$/i;\n\
    \    let pattern13 = /^[A-Z]{3}\\.txt$/i;\n    let pattern14 = /^[A-Z]{3}\\.exe$/i;\n\
    \    let pattern15 = /^[A-Z]{3}\\.dll$/i;\n    let pattern16 = /^[A-Z]{4}\\.txt$/i;\n\
    \    let pattern17 = /^[A-Z]{4}\\.exe$/i;\n    let pattern18 = /^[A-Z]{4}\\.dll$/i;\n\
    \    let pattern19 = /^[A-Z]{5}\\.txt$/i;\n    let pattern20 = /^[A-Z]{5}\\.exe$/i;\n\
    \    let pattern21 = /^[A-Z]{5}\\.dll$/i;\n    let pattern22 = /^[A-Z]{6}\\.txt$/i;\n\
    \    let pattern23 = /^[A-Z]{6}\\.exe$/i;\n    let pattern24 = /^[A-Z]{6}\\.dll$/i;\n\
    \    let pattern25 = /^[A-Z]{7}\\.txt$/i;\n    let pattern26 = /^[A-Z]{7}\\.exe$/i;\n\
    \    let pattern27 = /^[A-Z]{7}\\.dll$/i;\n    let pattern28 = /^[A-Z]{8}\\.txt$/i;\n\
    \    let pattern29 = /^[A-Z]{8}\\.exe$/i;\n    let pattern30 = /^[A-Z]{8}\\.dll$/i;\n\
    \    let pattern31 = /^[A-Z]{9}\\.txt$/i;\n    let pattern32 = /^[A-Z]{9}\\.exe$/i;\n\
    \    let pattern33 = /^[A-Z]{9}\\.dll$/i;\n    let pattern34 = /^[A-Z]{10}\\.txt$/i;\n\
    \    let pattern35 = /^[A-Z]{10}\\.exe$/i;\n    let pattern36 = /^[A-Z]{10}\\\
    .dll$/i;\n    let pattern37 = /^[A-Z]{11}\\.txt$/i;\n    let pattern38 = /^[A-Z]{11}\\\
    .exe$/i;\n    let pattern39 = /^[A-Z]{11}\\.dll$/i;\n    let pattern40 = /^[A-Z]{12}\\\
    .txt$/i;\n    let pattern41 = /^[A-Z]{12}", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf(\".\");\n    let first_letter = file_name.charAt(0);\n\
    \    let second_letter = file_name.charAt(1);\n    let third_letter = file_name.charAt(2);\n\
    \    let fourth_letter = file_name.charAt(3);\n    let fifth_letter = file_name.charAt(4);\n\
    \    let sixth_letter = file_name.charAt(5);\n    let seventh_letter = file_name.charAt(6);\n\
    \    let eighth_letter = file_name.charAt(7);\n    let ninth_letter = file_name.charAt(8);\n\
    \    let tenth_letter = file_name.charAt(9);\n    let first_letter_is_letter =\
    \ first_letter >= 'a' && first_letter <= 'z';\n    let second_letter_is_letter\
    \ = second_letter >= 'a' && second_letter <= 'z';\n    let third_letter_is_letter\
    \ = third_letter >= 'a' && third_letter <= 'z';\n    let fourth_letter_is_letter\
    \ = fourth_letter >= 'a' && fourth_letter <= 'z';\n    let fifth_letter_is_letter\
    \ = fifth_letter >= 'a' && fifth_letter <= 'z';\n    let sixth_letter_is_letter\
    \ = sixth_letter >= 'a' && sixth_letter <= 'z';\n    let seventh_letter_is_letter\
    \ = seventh_letter >= 'a' && seventh_letter <= 'z';\n    let eighth_letter_is_letter\
    \ = eighth_letter >= 'a' && eighth_letter <= 'z';\n    let ninth_letter_is_letter\
    \ = ninth_letter >= 'a' && ninth_letter <= 'z';\n    let first_letter_is_digit\
    \ = first_letter >= '0' && first_letter <= '9';\n    let second_letter_is_digit\
    \ = second_letter >= '0' && second_letter <= '9';\n    let third_letter_is_digit\
    \ = third_letter >= '0' && third_letter <= '9';\n    let fourth_letter_is_digit\
    \ = fourth_letter >= '0' && fourth_letter <= '9';\n    let fifth_letter_is_digit\
    \ = fifth_letter >= '0' && fifth_letter <= '9';\n    let sixth_letter_is_digit\
    \ = sixth_letter >= '0' && sixth_letter <= '9';\n    let seventh_letter_is_digit\
    \ = seventh_letter >= '0' && seventh_letter <= '9';\n    let eighth_letter_is_digit\
    \ = eighth_letter >= '0' && eighth_letter <= '9';\n    let ninth_letter_is_digit\
    \ = ninth_letter >= '0' && ninth_letter <= '9';\n    let first_letter_", "   \
    \ var pattern = /^[0-9]{3}\\.txt$/i;\n    var pattern2 = /^[0-9]{3}\\.exe$/i;\n\
    \    var pattern3 = /^[0-9]{3}\\.dll$/i;\n    var pattern4 = /^[a-z]{2}\\.txt$/i;\n\
    \    var pattern5 = /^[a-z]{2}\\.exe$/i;\n    var pattern6 = /^[a-z]{2}\\.dll$/i;\n\
    \    var pattern7 = /^[a-z]{3}\\.txt$/i;\n    var pattern8 = /^[a-z]{3}\\.exe$/i;\n\
    \    var pattern9 = /^[a-z]{3}\\.dll$/i;\n    var pattern10 = /^[A-Z]{2}\\.txt$/i;\n\
    \    var pattern11 = /^[A-Z]{2}\\.exe$/i;\n    var pattern12 = /^[A-Z]{2}\\.dll$/i;\n\
    \    var pattern13 = /^[A-Z]{3}\\.txt$/i;\n    var pattern14 = /^[A-Z]{3}\\.exe$/i;\n\
    \    var pattern15 = /^[A-Z]{3}\\.dll$/i;\n    var pattern16 = /^[0-9]{2}\\.txt$/i;\n\
    \    var pattern17 = /^[0-9]{2}\\.exe$/i;\n    var pattern18 = /^[0-9]{2}\\.dll$/i;\n\
    \    var pattern19 = /^[0-9]{3}\\.txt$/i;\n    var pattern20 = /^[0-9]{3}\\.exe$/i;\n\
    \    var pattern21 = /^[0-9]{3}\\.dll$/i;\n    var pattern22 = /^[a-z]{2}\\.txt$/i;\n\
    \    var pattern23 = /^[a-z]{2}\\.exe$/i;\n    var pattern24 = /^[a-z]{2}\\.dll$/i;\n\
    \    var pattern25 = /^[a-z]{3}\\.txt$/i;\n    var pattern26 = /^[a-z]{3}\\.exe$/i;\n\
    \    var pattern27 = /^[a-z]{3}\\.dll$/i;\n    var pattern28 = /^[A-Z]{2}\\.txt$/i;\n\
    \    var pattern29 = /^[A-Z]{2}\\.exe$/i;\n    var pattern30 = /^[A-Z]{2}\\.dll$/i;\n\
    \    var pattern31 = /^[A-Z]{3}\\.txt$/i;\n    var pattern32 = /^[A-Z]{3}\\.exe$/i;\n\
    \    var pattern33 = /^[A-Z]{3}\\.dll$/i;\n    var pattern34 = /^[0-9]{2}\\.txt$/i;\n\
    \    var pattern35 = /^[0-9]{2}\\.exe$/i;\n    var pattern36 = /^[0-9]{2}\\.dll$/i;\n\
    \    var pattern37 = /^[0-9]{3}\\.txt$/i;\n    var pattern38 = /^[0-9]{3}\\.exe$/i;\n\
    \    var pattern39 = /^[0-9]{3}\\.dll$/i;\n    var pattern40 = /^[a-z]{2}\\.txt$/i;\n\
    \    var pattern41 = /^[a-z]{2}\\.exe$/i;\n    var pattern42 = /^[a-z]{2}\\.dll$/i;\n\
    \    var pattern43 = /^", "    var re = /^[^0-9\\.]{1,3}\\.txt$/i;\n    return\
    \ re.test(file_name);\n}\n", "    let file_extension = file_name.split('.').pop();\n\
    \    let file_extension_lowercase = file_extension.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n    let file_extension_lowercase\
    \ = file_extension_lowercase.toLowerCase();\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf('.');\n    let first_letter = file_name.charAt(0);\n\
    \    let second_letter = file_name.charAt(1);\n    let third_letter = file_name.charAt(2);\n\
    \    let fourth_letter = file_name.charAt(3);\n    let fifth_letter = file_name.charAt(4);\n\
    \    let sixth_letter = file_name.charAt(5);\n    let seventh_letter = file_name.charAt(6);\n\
    \    let eighth_letter = file_name.charAt(7);\n    let ninth_letter = file_name.charAt(8);\n\
    \    let tenth_letter = file_name.charAt(9);\n    let first_letter_is_letter =\
    \ first_letter >= 'a' && first_letter <= 'z';\n    let second_letter_is_letter\
    \ = second_letter >= 'a' && second_letter <= 'z';\n    let third_letter_is_letter\
    \ = third_letter >= 'a' && third_letter <= 'z';\n    let fourth_letter_is_letter\
    \ = fourth_letter >= 'a' && fourth_letter <= 'z';\n    let fifth_letter_is_letter\
    \ = fifth_letter >= 'a' && fifth_letter <= 'z';\n    let sixth_letter_is_letter\
    \ = sixth_letter >= 'a' && sixth_letter <= 'z';\n    let seventh_letter_is_letter\
    \ = seventh_letter >= 'a' && seventh_letter <= 'z';\n    let eighth_letter_is_letter\
    \ = eighth_letter >= 'a' && eighth_letter <= 'z';\n    let ninth_letter_is_letter\
    \ = ninth_letter >= 'a' && ninth_letter <= 'z';\n    let tenth_letter_is_letter\
    \ = tenth_letter >= 'a' && tenth_letter <= 'z';\n    let first_letter_is_digit\
    \ = first_letter >= '0' && first_letter <= '9';\n    let second_letter_is_digit\
    \ = second_letter >= '0' && second_letter <= '9';\n    let third_letter_is_digit\
    \ = third_letter >= '0' && third_letter <= '9';\n    let fourth_letter_is_digit\
    \ = fourth_letter >= '0' && fourth_letter <= '9';\n    let fifth_letter_is_digit\
    \ = fifth_letter >= '0' && fifth_letter <= '9';\n    let sixth_letter_is_digit\
    \ = sixth_letter >= '0' && sixth_letter <= '9';\n    let seventh_letter_is_digit\
    \ = seventh_letter >= '0' && seventh_letter <= '9';\n    let eighth_letter_is_digit\
    \ = eighth_letter >= '0' && eighth_letter <= '9';\n    let ninth_letter_", " \
    \   var pattern = /^[0-9]{3}\\.txt$/i;\n    return pattern.test(file_name) ? \"\
    Yes\" : \"No\";\n}\n", "    let file_name = file_name.toLowerCase();\n    let\
    \ file_name = file_name.replace(/\\./g, '');\n    let file_name = file_name.replace(/[^0-9a-z\\\
    .]/g, '');\n    let file_name = file_name.substr(0, 1);\n    let file_name = file_name.substr(0,\
    \ 3);\n    if (file_name === '0') {\n        return 'No';\n    }\n    if (file_name\
    \ === '1') {\n        return 'No';\n    }\n    if (file_name === '2') {\n    \
    \    return 'No';\n    }\n    if (file_name === '3') {\n        return 'No';\n\
    \    }\n    if (file_name === '4') {\n        return 'No';\n    }\n    if (file_name\
    \ === '5') {\n        return 'No';\n    }\n    if (file_name === '6') {\n    \
    \    return 'No';\n    }\n    if (file_name === '7') {\n        return 'No';\n\
    \    }\n    if (file_name === '8') {\n        return 'No';\n    }\n    if (file_name\
    \ === '9') {\n        return 'No';\n    }\n    if (file_name === 'a') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'b') {\n        return 'No';\n\
    \    }\n    if (file_name === 'c') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'd') {\n        return 'No';\n    }\n    if (file_name === 'e') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'f') {\n        return 'No';\n\
    \    }\n    if (file_name === 'g') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'h') {\n        return 'No';\n    }\n    if (file_name === 'i') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'j') {\n        return 'No';\n\
    \    }\n    if (file_name === 'k') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'l') {\n        return 'No';\n    }\n    if (file_name === 'm') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'n') {\n        return 'No';\n\
    \    }\n    if (file_name === 'o') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'p') {\n        return 'No';\n    }\n    if (file_name === 'q') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'r') {\n        return 'No';\n\
    \    }\n    if (file_name === 's') {\n        return 'No';\n    }\n    if (file_name\
    \ === 't') {\n        return 'No';\n    }\n    if (file_name === 'u') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'v') {\n        return 'No';\n\
    \    }\n    if (file_name === 'w') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'x') {\n        return 'No';\n    }\n    if (file_name === 'y') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'z') {\n        return 'No';\n",
  "    var re = /^[0-9]{1,3}\\.txt$|exe$|dll$/;\n    if (re.test(file_name)) {\n \
    \       return 'Yes';\n    } else {\n        return 'No';\n    }\n}\n", "    let\
    \ valid_file_name: string = file_name;\n    let dot_position: string = valid_file_name.indexOf('.');\n\
    \    if (dot_position === -1) {\n        return 'No';\n    }\n    let first_letter:\
    \ string = valid_file_name.substring(0, dot_position);\n    let second_letter:\
    \ string = valid_file_name.substring(dot_position + 1);\n    if (first_letter.length\
    \ !== 1 && first_letter !== '0' && first_letter !== '1' \n        && first_letter\
    \ !== '2' && first_letter !== '3' && first_letter !== '4' \n        && first_letter\
    \ !== '5' && first_letter !== '6' && first_letter !== '7' \n        && first_letter\
    \ !== '8' && first_letter !== '9') {\n        return 'No';\n    }\n    if (second_letter\
    \ !== 'txt' && second_letter !== 'exe' && second_letter !== 'dll') {\n       \
    \ return 'No';\n    }\n    return 'Yes';\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf('.');\n    let first_letter = file_name.substring(0,\
    \ 1);\n    let last_letter = file_name.substring(dot_index + 1);\n    let valid_chars\
    \ = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    let\
    \ valid_chars_length = valid_chars.length;\n    let valid_chars_length2 = valid_chars.length\
    \ - 1;\n    let valid_chars_length3 = valid_chars.length - 2;\n    let valid_chars_length4\
    \ = valid_chars.length - 3;\n    let valid_chars_length5 = valid_chars.length\
    \ - 4;\n    let valid_chars_length6 = valid_chars.length - 5;\n    let valid_chars_length7\
    \ = valid_chars.length - 6;\n    let valid_chars_length8 = valid_chars.length\
    \ - 7;\n    let valid_chars_length9 = valid_chars.length - 8;\n    let valid_chars_length10\
    \ = valid_chars.length - 9;\n    let valid_chars_length11 = valid_chars.length\
    \ - 10;\n    let valid_chars_length12 = valid_chars.length - 11;\n    let valid_chars_length13\
    \ = valid_chars.length - 12;\n    let valid_chars_length14 = valid_chars.length\
    \ - 13;\n    let valid_chars_length15 = valid_chars.length - 14;\n    let valid_chars_length16\
    \ = valid_chars.length - 15;\n    let valid_chars_length17 = valid_chars.length\
    \ - 16;\n    let valid_chars_length18 = valid_chars.length - 17;\n    let valid_chars_length19\
    \ = valid_chars.length - 18;\n    let valid_chars_length20 = valid_chars.length\
    \ - 19;\n    let valid_chars_length21 = valid_chars.length - 20;\n    let valid_chars_length22\
    \ = valid_chars.length - 21;\n    let valid_chars_length23 = valid_chars.length\
    \ - 22;\n    let valid_chars_length24 = valid_chars.length - 23;\n    let valid_chars_length25\
    \ = valid_chars.length - 24;\n    let valid_chars_length26 = valid_chars.length\
    \ - 25;\n    let valid_chars_length27 = valid_chars.length - 26;\n    let valid_chars_length28\
    \ = valid_chars.length - 27;\n    let valid_chars_length29 = valid_chars.length\
    \ - 28;\n    let valid_chars_length30 = valid_chars.length - 29;\n    let valid_chars_length31\
    \ = valid_chars.length - 30;\n    let valid_chars_length32 = valid_chars.length\
    \ - 31;\n    let valid_chars_length33 = valid_chars.length - 32;\n    let valid_chars_length34\
    \ = valid_chars.length - 33;\n    let valid_chars_length35 = valid_chars.length\
    \ - 34;\n    let valid_chars_length36 = valid_chars.length - 35;\n    let valid_chars_length37\
    \ = valid_chars.length - 36;", "    let valid_file_name = false;\n    let file_name_array\
    \ = file_name.split('.');\n    let file_name_array_length = file_name_array.length;\n\
    \    let file_name_array_first_element = file_name_array[0];\n    let file_name_array_second_element\
    \ = file_name_array[1];\n    let file_name_array_third_element = file_name_array[2];\n\
    \    let file_name_array_first_element_length = file_name_array_first_element.length;\n\
    \    let file_name_array_second_element_length = file_name_array_second_element.length;\n\
    \    let file_name_array_third_element_length = file_name_array_third_element.length;\n\
    \    let file_name_array_first_element_letter = file_name_array_first_element.charAt(0);\n\
    \    let file_name_array_second_element_letter = file_name_array_second_element.charAt(0);\n\
    \    let file_name_array_third_element_letter = file_name_array_third_element.charAt(0);\n\
    \    let file_name_array_first_element_letter_length = file_name_array_first_element_letter.length;\n\
    \    let file_name_array_second_element_letter_length = file_name_array_second_element_letter.length;\n\
    \    let file_name_array_third_element_letter_length = file_name_array_third_element_letter.length;\n\
    \    \n    if (file_name_array_length < 3 || file_name_array_length > 3 || file_name_array_first_element_length\
    \ < 1 || file_name_array_first_element_length > 1 || file_name_array_first_element_letter\
    \ < 'a' || file_name_array_first_element_letter > 'z' || file_name_array_second_element_length\
    \ < 1 || file_name_array_second_element_length > 1 || file_name_array_second_element_letter\
    \ < 'a' || file_name_array_second_element_letter > 'z' || file_name_array_third_element_length\
    \ < 1 || file_name_array_third_element_length > 1 || file_name_array_third_element_letter\
    \ < 'a' || file_name_array_third_element_letter > 'z') {\n        valid_file_name\
    \ = false;\n    } else {\n        valid_file_name = true;\n    }\n    \n    if\
    \ (valid_file_name == true) {\n        if (file_name_array_first_element_length\
    \ == 1 && file_name_array_first_element_letter != '.') {\n            valid_file_name\
    \ = false;\n        } else if (file_name_array_second_element_length == 1 && file_name_array_second_element_letter\
    \ != '.') {\n            valid_file_name = false;\n        } else if (file_name_array_third_element_length\
    \ == 1 && file_name_array_third_element_letter != '.') {\n            valid_file_name\
    \ = false;\n        }\n    }\n    \n    return valid_file_name ? 'Yes' : 'No';\n\
    }\n", "    let result = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n   \
    \ if (result == null) {\n        return \"No\";\n    }\n    if (result.length\
    \ > 3) {\n        return \"No\";\n    }\n    if (result[0].indexOf('.') === -1)\
    \ {\n        return \"No\";\n    }\n    if (result[0].substring(0, 1) !== 'a'\
    \ && result[0].substring(0, 1) !== 'A') {\n        return \"No\";\n    }\n   \
    \ if (result[0].substring(1) !== 'txt' && result[0].substring(1) !== 'exe' &&\
    \ result[0].substring(1) !== 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let file_name = file_name.toLowerCase();\n    let file_name\
    \ = file_name.replace(/\\./g, '');\n    let file_name = file_name.replace(/[^0-9\\\
    .]/g, '');\n    let file_name = file_name.substring(0, 3);\n    let file_name\
    \ = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n", "    var valid_file_name_regex\
    \ = /^[0-9]{3}\\.txt|exe|dll$/;\n    var valid_file_name = valid_file_name_regex.test(file_name);\n\
    \    var valid_file_name_length = file_name.length <= 3;\n    var valid_file_name_contains_dots\
    \ = file_name.indexOf('.') > 0;\n    var valid_file_name_contains_letters = file_name.charAt(0)\
    \ >= 'a' && file_name.charAt(0) <= 'z' || file_name.charAt(0) >= 'A' && file_name.charAt(0)\
    \ <= 'Z';\n    return valid_file_name && valid_file_name_length && valid_file_name_contains_dots\
    \ && valid_file_name_contains_letters;\n}\n</code>\n<|/ a tags=javascript,typescript\
    \ |>\n<| c |>\nThanks for your answer. Your code works fine but i want to know\
    \ why my code is not working and why my code is not working in typescript. Can\
    \ you please explain me why my code is not working and why my code is not working\
    \ in typescript?\n<|/ c |>\n<| c |>\nThe reason why your code is failing is because\
    \ you have a typo in your code. `file_name_check` should be `file_name_check`.\
    \ You missed the underscore in the function name.\n<|/ c |>\n<| c |>\nThanks for\
    \ your answer. Your code works fine but i want to know why my code is not working\
    \ and why my code is not working in typescript. Can you please explain me why\
    \ my code is not working and why my code is not working in typescript?\n<|/ c\
    \ |>\n<| c |>\nI updated my answer to include a description of why your code is\
    \ not working.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works fine\
    \ but i want to know why my code is not working and why my code is not working\
    \ in typescript. Can you please explain me why my code is not working and why\
    \ my code is not working in typescript?\n<|/ c |>\n<| a tags=javascript,typescript\
    \ |>\n<code>", "    let file_name = file_name.toLowerCase().replace(/[^0-9a-z\\\
    .]/g, '');\n    let dot_index = file_name.indexOf('.');\n    if (dot_index ==\
    \ -1) {\n        return 'No';\n    }\n    if (dot_index > 0 && file_name.substring(0,\
    \ dot_index).length == 0) {\n        return 'No';\n    }\n    if (file_name.substring(0,\
    \ dot_index).length != 1 && file_name.substring(dot_index).length != 4) {\n  \
    \      return 'No';\n    }\n    if (file_name.substring(dot_index).length != 4\
    \ && file_name.substring(dot_index).length != 5) {\n        return 'No';\n   \
    \ }\n    if (file_name.substring(dot_index).length != 5 && file_name.substring(dot_index).length\
    \ != 6) {\n        return 'No';\n    }\n    if (file_name.substring(dot_index).length\
    \ != 6 && file_name.substring(dot_index).length != 7) {\n        return 'No';\n\
    \    }\n    if (file_name.substring(dot_index).length != 7 && file_name.substring(dot_index).length\
    \ != 8) {\n        return 'No';\n    }\n    if (file_name.substring(dot_index).length\
    \ != 8 && file_name.substring(dot_index).length != 9) {\n        return 'No';\n\
    \    }\n    if (file_name.substring(dot_index).length != 9 && file_name.substring(dot_index).length\
    \ != 10) {\n        return 'No';\n    }\n    return 'Yes';\n}\n", "    let file_name\
    \ = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n  \
    \  if (dot_index == -1) {\n        return \"No\";\n    }\n    if (file_name.substring(dot_index\
    \ - 1, dot_index) != \".\") {\n        return \"No\";\n    }\n    let first_letter\
    \ = file_name.substring(0, dot_index);\n    let letters = first_letter.split('');\n\
    \    if (letters.length != 1 || letters[0] != 'a' || letters[0] != 'b' || letters[0]\
    \ != 'c' || letters[0] != 'd' || letters[0] != 'e' || letters[0] != 'f' || letters[0]\
    \ != 'g' || letters[0] != 'h' || letters[0] != 'i' || letters[0] != 'j' || letters[0]\
    \ != 'k' || letters[0] != 'l' || letters[0] != 'm' || letters[0] != 'n' || letters[0]\
    \ != 'o' || letters[0] != 'p' || letters[0] != 'q' || letters[0] != 'r' || letters[0]\
    \ != 's' || letters[0] != 't' || letters[0] != 'u' || letters[0] != 'v' || letters[0]\
    \ != 'w' || letters[0] != 'x' || letters[0] != 'y' || letters[0] != 'z') {\n \
    \       return \"No\";\n    }\n    return \"Yes\";\n}\n", "    var valid_file_name\
    \ = false;\n    var file_name_parts = file_name.split('.');\n    var file_name_length\
    \ = file_name_parts.length;\n    var file_name_first_letter = file_name_parts[0];\n\
    \    var file_name_first_letter_upper = file_name_first_letter.toUpperCase();\n\
    \    var file_name_contains_only_letters = file_name_first_letter != file_name_first_letter_upper;\n\
    \    var file_name_contains_only_numbers = file_name_parts.length == 1 && file_name_parts[0].length\
    \ == 0;\n    var file_name_contains_only_dots = file_name_parts.length == 2 &&\
    \ file_name_parts[1].length != 0;\n    var file_name_contains_only_txt = file_name_parts.length\
    \ == 2 && file_name_parts[1] == 'txt';\n    var file_name_contains_only_exe =\
    \ file_name_parts.length == 2 && file_name_parts[1] == 'exe';\n    var file_name_contains_only_dll\
    \ = file_name_parts.length == 2 && file_name_parts[1] == 'dll';\n    if (file_name_length\
    \ < 3 || file_name_length > 4 || file_name_contains_only_letters || file_name_contains_only_numbers\
    \ || file_name_contains_only_dots || file_name_contains_only_txt || file_name_contains_only_exe\
    \ || file_name_contains_only_dll) {\n        valid_file_name = false;\n    } else\
    \ {\n        valid_file_name = true;\n    }\n    return valid_file_name ? 'Yes'\
    \ : 'No';\n}\n", "    let file_name = file_name.toLowerCase();\n    let file_ext\
    \ = file_name.split('.').pop();\n    let file_length = file_name.length;\n   \
    \ let file_letters = file_name.split('')\n        .filter(char => char >= 'a'\
    \ && char <= 'z' || char >= 'A' && char <= 'Z')\n        .map(char => char.toLowerCase());\n\
    \    let file_letters_length = file_letters.length;\n    let file_letters_length_minus_1\
    \ = file_letters_length - 1;\n    let file_letters_length_minus_2 = file_letters_length\
    \ - 2;\n    let file_letters_length_minus_3 = file_letters_length - 3;\n    let\
    \ file_letters_length_minus_4 = file_letters_length - 4;\n    let file_letters_length_minus_5\
    \ = file_letters_length - 5;\n    let file_letters_length_minus_6 = file_letters_length\
    \ - 6;\n    let file_letters_length_minus_7 = file_letters_length - 7;\n    let\
    \ file_letters_length_minus_8 = file_letters_length - 8;\n    let file_letters_length_minus_9\
    \ = file_letters_length - 9;\n    let file_letters_length_minus_10 = file_letters_length\
    \ - 10;\n    let file_letters_length_minus_11 = file_letters_length - 11;\n  \
    \  let file_letters_length_minus_12 = file_letters_length - 12;\n    let file_letters_length_minus_13\
    \ = file_letters_length - 13;\n    let file_letters_length_minus_14 = file_letters_length\
    \ - 14;\n    let file_letters_length_minus_15 = file_letters_length - 15;\n  \
    \  let file_letters_length_minus_16 = file_letters_length - 16;\n    let file_letters_length_minus_17\
    \ = file_letters_length - 17;\n    let file_letters_length_minus_18 = file_letters_length\
    \ - 18;\n    let file_letters_length_minus_19 = file_letters_length - 19;\n  \
    \  let file_letters_length_minus_20 = file_letters_length - 20;\n    let file_letters_length_minus_21\
    \ = file_letters_length - 21;\n    let file_letters_length_minus_22 = file_letters_length\
    \ - 22;\n    let file_letters_length_minus_23 = file_letters_length - 23;\n  \
    \  let file_letters_length_minus_24 = file_letters_length - 24;\n    let file_letters_length_minus_25\
    \ = file_letters_length - 25;\n    let file_letters_length_minus_26 = file_letters_length\
    \ - 26;\n    let file_letters_length_minus_27 = file_letters_length - 27;\n  \
    \  let file_letters_length_minus_28 = file_letters_length - 28;\n    let file_letters_length_minus_29\
    \ = file_letters_length - 29;\n    let file_letters_length_min", "    const regex\
    \ = /^[0-9]{3}\\.[a-z][a-z]$/;\n    const result = regex.test(file_name);\n  \
    \  if (result) {\n        return result;\n    } else {\n        return \"No\"\
    ;\n    }\n}\n", "    var pattern = /^[0-9]{3}\\.[a-z][a-z][a-z]$/;\n    var result\
    \ = file_name.match(pattern);\n    if (result === null) {\n        return \"No\"\
    ;\n    } else {\n        return \"Yes\";\n    }\n}\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf('.');\n    let first_letter = file_name.substring(0,\
    \ 1);\n    let second_letter = file_name.substring(1, 2);\n    let third_letter\
    \ = file_name.substring(2, 3);\n    let fourth_letter = file_name.substring(3,\
    \ 4);\n    let fifth_letter = file_name.substring(4, 5);\n    let sixth_letter\
    \ = file_name.substring(5, 6);\n    let seventh_letter = file_name.substring(6,\
    \ 7);\n    let eighth_letter = file_name.substring(7, 8);\n    let ninth_letter\
    \ = file_name.substring(8, 9);\n    let tenth_letter = file_name.substring(9,\
    \ 10);\n    let first_letter_upper = first_letter.toUpperCase();\n    let second_letter_upper\
    \ = second_letter.toUpperCase();\n    let third_letter_upper = third_letter.toUpperCase();\n\
    \    let fourth_letter_upper = fourth_letter.toUpperCase();\n    let fifth_letter_upper\
    \ = fifth_letter.toUpperCase();\n    let sixth_letter_upper = sixth_letter.toUpperCase();\n\
    \    let seventh_letter_upper = seventh_letter.toUpperCase();\n    let eighth_letter_upper\
    \ = eighth_letter.toUpperCase();\n    let ninth_letter_upper = ninth_letter.toUpperCase();\n\
    \    let tenth_letter_upper = tenth_letter.toUpperCase();\n    let first_letter_lower\
    \ = first_letter.toLowerCase();\n    let second_letter_lower = second_letter.toLowerCase();\n\
    \    let third_letter_lower = third_letter.toLowerCase();\n    let fourth_letter_lower\
    \ = fourth_letter.toLowerCase();\n    let fifth_letter_lower = fifth_letter.toLowerCase();\n\
    \    let sixth_letter_lower = sixth_letter.toLowerCase();\n    let seventh_letter_lower\
    \ = seventh_letter.toLowerCase();\n    let eighth_letter_lower = eighth_letter.toLowerCase();\n\
    \    let ninth_letter_lower = ninth_letter.toLowerCase();\n    let tenth_letter_lower\
    \ = tenth_letter.toLowerCase();\n    let first_letter_digit = first_letter.charCodeAt(0)\
    \ - 97;\n    let second_letter_digit = second_letter.charCodeAt(0) - 97;\n   \
    \ let third_letter_digit = third_letter.charCodeAt(0) - 97;\n    let fourth_letter_digit\
    \ = fourth_letter.charCodeAt(0) - 97;\n    let fifth_letter_digit = fifth_letter.charCodeAt(0)\
    \ - 97;\n    let sixth_letter_digit = sixth_letter.charCodeAt(0) - 97;\n    let\
    \ seventh_letter_digit = seventh_letter.charCodeAt(0) - 97;\n    let eighth_letter_digit\
    \ = eighth_letter.charCodeAt(0) - 97;\n    let ninth_letter_digit = ninth_letter.charCodeAt(0)\
    \ - 97;\n    let tenth_letter_digit = tenth_letter.charCodeAt(0) - 97;\n", " \
    \   var re = /^[0-9]{1,3}\\.txt|exe|dll$/;\n    return re.test(file_name);\n}\n",
  "    let file_name = file_name.toLowerCase();\n    let dot_index = file_name.indexOf('.');\n\
    \    if (dot_index === -1) {\n        return 'No';\n    }\n    if (file_name.substring(dot_index\
    \ - 1, dot_index) !== '') {\n        return 'No';\n    }\n    if (file_name.substring(0,\
    \ 1) !== 'a' && file_name.substring(0, 1) !== 'b' && file_name.substring(0, 1)\
    \ !== 'c' && file_name.substring(0, 1) !== 'd' && file_name.substring(0, 1) !==\
    \ 'e' && file_name.substring(0, 1) !== 'f' && file_name.substring(0, 1) !== 'g'\
    \ && file_name.substring(0, 1) !== 'h' && file_name.substring(0, 1) !== 'i' &&\
    \ file_name.substring(0, 1) !== 'j' && file_name.substring(0, 1) !== 'k' && file_name.substring(0,\
    \ 1) !== 'l' && file_name.substring(0, 1) !== 'm' && file_name.substring(0, 1)\
    \ !== 'n' && file_name.substring(0, 1) !== 'o' && file_name.substring(0, 1) !==\
    \ 'p' && file_name.substring(0, 1) !== 'q' && file_name.substring(0, 1) !== 'r'\
    \ && file_name.substring(0, 1) !== 's' && file_name.substring(0, 1) !== 't' &&\
    \ file_name.substring(0, 1) !== 'u' && file_name.substring(0, 1) !== 'v' && file_name.substring(0,\
    \ 1) !== 'w' && file_name.substring(0, 1) !== 'x' && file_name.substring(0, 1)\
    \ !== 'y' && file_name.substring(0, 1) !== 'z') {\n        return 'No';\n    }\n\
    \    return 'Yes';\n}\n", "    let valid_file_name = file_name.match(/^[0-9]{3}\\\
    .txt$/);\n    let valid_file_name_2 = file_name.match(/^[0-9]{3}\\.exe$/);\n \
    \   let valid_file_name_3 = file_name.match(/^[0-9]{3}\\.dll$/);\n    let valid_file_name_4\
    \ = file_name.match(/^[0-9]{3}\\.txt|[0-9]{3}\\.exe|[0-9]{3}\\.dll$/);\n    \n\
    \    if (valid_file_name != null) {\n        return \"Yes\";\n    }\n    else\
    \ if (valid_file_name_2 != null) {\n        return \"Yes\";\n    }\n    else if\
    \ (valid_file_name_3 != null) {\n        return \"Yes\";\n    }\n    else if (valid_file_name_4\
    \ != null) {\n        return \"Yes\";\n    }\n    else {\n        return \"No\"\
    ;\n    }\n}\n\nfile_name_check(\"01.txt\");\nfile_name_check(\"02.exe\");\nfile_name_check(\"\
    03.dll\");\nfile_name_check(\"01.txt.exe\");\nfile_name_check(\"01.txt.exe.dll\"\
    );\nfile_name_check(\"01.txt.exe.txt\");\nfile_name_check(\"01.txt.exe.txt.dll\"\
    );\nfile_name_check(\"01.txt.exe.txt.dll.exe\");\nfile_name_check(\"01.txt.exe.txt.dll.exe.dll\"\
    );\nfile_name_check(\"01.txt.exe.txt.dll.exe.dll.txt\");\nfile_name_check(\"01.txt.exe.txt.dll.exe.dll.txt.exe\"\
    );\nfile_name_check(\"01.txt.exe.txt.dll.exe.dll.txt.exe.dll\");\nfile_name_check(\"\
    01.txt.exe.txt.dll.exe.dll.txt.exe.dll.txt\");\nfile_name_check(\"01.txt.exe.txt.dll.exe.dll.txt.exe.dll.txt.exe\"\
    );\nfile_name_check(\"01.txt.exe.txt.dll.exe.dll.txt.exe.dll.txt.exe.dll\");\n\
    file_name_check(\"01.txt.exe.txt.dll.exe.dll.txt.exe.dll.txt.exe.dll.txt\");\n\
    file_name_check(\"01.txt.exe.txt.dll.exe.dll.txt.exe.dll.txt.exe.dll.txt.exe\"\
    );\nfile_name_check(\"01.txt.exe.txt.dll.exe.dll.txt.exe.dll.txt.exe.dll.txt.exe.dll\"\
    );\nfile_name_check(\"01.txt.exe.txt.dll.exe.dll.txt.exe.dll.txt.exe.dll.txt.exe.dll.txt\"\
    );\nfile_name_check(\"01.txt.exe.txt.dll.exe.dll.txt.exe.dll.txt.exe.dll.txt.exe.dll.txt.exe\"\
    );\nfile_name_check", "    let result = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n\
    \    if (result == null) {\n        return \"No\";\n    } else {\n        return\
    \ \"Yes\";\n    }\n}\n", "    let valid_file_name: string = 'No';\n    let file_name_length:\
    \ number = file_name.length;\n    let dot_count: number = file_name_length - 1;\n\
    \    let first_letter: number = file_name.charAt(0);\n    let last_letter: number\
    \ = file_name.charAt(dot_count);\n    let first_letter_uppercase: number = first_letter.toUpperCase();\n\
    \    let last_letter_uppercase: number = last_letter.toUpperCase();\n    let dot_not_empty:\
    \ boolean = dot_count > 0;\n    let dot_not_start_with_letter: boolean = dot_count\
    \ > 1 && first_letter !== first_letter_uppercase;\n    let dot_not_end_with_letter:\
    \ boolean = dot_count > 1 && last_letter !== last_letter_uppercase;\n    let dot_not_in_list:\
    \ boolean = dot_count > 1 && dot_not_empty && dot_not_start_with_letter && dot_not_end_with_letter\
    \ && ['txt', 'exe', 'dll'].indexOf(file_name.substring(dot_count - 1, dot_count))\
    \ === -1;\n    if (dot_count > 3 || file_name_length < 1 || dot_count === 1 ||\
    \ dot_not_empty || dot_not_start_with_letter || dot_not_end_with_letter || dot_not_in_list)\
    \ {\n        valid_file_name = 'No';\n    } else {\n        valid_file_name =\
    \ 'Yes';\n    }\n    return valid_file_name;\n}\n", "    let pattern = /^[0-9]{3}\\\
    .txt$/i;\n    let pattern2 = /^[0-9]{3}\\.exe$/i;\n    let pattern3 = /^[0-9]{3}\\\
    .dll$/i;\n    let pattern4 = /^[a-z]{2}\\.txt$/i;\n    let pattern5 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern6 = /^[a-z]{2}\\.dll$/i;\n    let pattern7 = /^[A-Z]{2}\\\
    .txt$/i;\n    let pattern8 = /^[A-Z]{2}\\.exe$/i;\n    let pattern9 = /^[A-Z]{2}\\\
    .dll$/i;\n    let pattern10 = /^[a-z]{2}\\.txt$/i;\n    let pattern11 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern12 = /^[a-z]{2}\\.dll$/i;\n    let pattern13 = /^[A-Z]{2}\\\
    .txt$/i;\n    let pattern14 = /^[A-Z]{2}\\.exe$/i;\n    let pattern15 = /^[A-Z]{2}\\\
    .dll$/i;\n    let pattern16 = /^[0-9]{3}\\.txt$/i;\n    let pattern17 = /^[0-9]{3}\\\
    .exe$/i;\n    let pattern18 = /^[0-9]{3}\\.dll$/i;\n    let pattern19 = /^[a-z]{2}\\\
    .txt$/i;\n    let pattern20 = /^[a-z]{2}\\.exe$/i;\n    let pattern21 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern22 = /^[A-Z]{2}\\.txt$/i;\n    let pattern23 = /^[A-Z]{2}\\\
    .exe$/i;\n    let pattern24 = /^[A-Z]{2}\\.dll$/i;\n    let pattern25 = /^[0-9]{3}\\\
    .txt$/i;\n    let pattern26 = /^[0-9]{3}\\.exe$/i;\n    let pattern27 = /^[0-9]{3}\\\
    .dll$/i;\n    let pattern28 = /^[a-z]{2}\\.txt$/i;\n    let pattern29 = /^[a-z]{2}\\\
    .exe$/i;\n    let pattern30 = /^[a-z]{2}\\.dll$/i;\n    let pattern31 = /^[A-Z]{2}\\\
    .txt$/i;\n    let pattern32 = /^[A-Z]{2}\\.exe$/i;\n    let pattern33 = /^[A-Z]{2}\\\
    .dll$/i;\n    let pattern34 = /^[0-9]{3}\\.txt$/i;\n    let pattern35 = /^[0-9]{3}\\\
    .exe$/i;\n    let pattern36 = /^[0-9]{3}\\.dll$/i;\n    let pattern37 = /^[a-z]{2}\\\
    .txt$/i;\n    let pattern38 = /^[a-z]{2}\\.exe$/i;\n    let pattern39 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern40 = /^[A-Z]{2}\\.txt$/i;\n    let pattern41 = /^[A-Z]{2}\\\
    .exe$/i;\n    let pattern42 = /^[A-Z]{2}\\.dll$/i;\n    let pattern43 = /^", " \
    \   let valid_file_name = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n \
    \   if (valid_file_name == null) {\n        return 'No';\n    } else {\n     \
    \   return 'Yes';\n    }\n}\n", "    var re = /^[^0-9\\.]+\\.[^\\.]+$/;\n    return\
    \ re.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    var valid_file_name = file_name.match(/^[0-9]{3}\\\
    .txt$/);\n    var dot_position = file_name.indexOf('.');\n    var first_letter\
    \ = file_name.charAt(0);\n    var last_letter = file_name.charAt(file_name.length\
    \ - 1);\n    var valid_substring_1 = (dot_position > 0 && first_letter >= 'a'\
    \ && first_letter <= 'z') || (dot_position > 0 && first_letter >= 'A' && first_letter\
    \ <= 'Z');\n    var valid_substring_2 = (dot_position > 0 && last_letter >= 'a'\
    \ && last_letter <= 'z') || (dot_position > 0 && last_letter >= 'A' && last_letter\
    \ <= 'Z');\n    var valid_substring_3 = ['txt', 'exe', 'dll'].indexOf(file_name.substring(dot_position\
    \ + 1)) >= 0;\n    return valid_file_name && valid_substring_1 && valid_substring_2\
    \ && valid_substring_3;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=javascript,typescript\
    \ |>\n<code>", "    var pattern = /^[0-9]{3}\\.txt$/i;\n    var pattern2 = /^[0-9]{3}\\\
    .exe$/i;\n    var pattern3 = /^[0-9]{3}\\.dll$/i;\n    var pattern4 = /^[a-z]{2}\\\
    .txt$/i;\n    var pattern5 = /^[a-z]{2}\\.exe$/i;\n    var pattern6 = /^[a-z]{2}\\\
    .dll$/i;\n    var pattern7 = /^[A-Z]{2}\\.txt$/i;\n    var pattern8 = /^[A-Z]{2}\\\
    .exe$/i;\n    var pattern9 = /^[A-Z]{2}\\.dll$/i;\n    var pattern10 = /^[a-z]{2}[A-Z]{2}\\\
    .txt$/i;\n    var pattern11 = /^[a-z]{2}[A-Z]{2}\\.exe$/i;\n    var pattern12\
    \ = /^[a-z]{2}[A-Z]{2}\\.dll$/i;\n    var pattern13 = /^[A-Z]{2}[A-Z]{2}\\.txt$/i;\n\
    \    var pattern14 = /^[A-Z]{2}[A-Z]{2}\\.exe$/i;\n    var pattern15 = /^[A-Z]{2}[A-Z]{2}\\\
    .dll$/i;\n    var pattern16 = /^[0-9]{3}[A-Z]{2}\\.txt$/i;\n    var pattern17\
    \ = /^[0-9]{3}[A-Z]{2}\\.exe$/i;\n    var pattern18 = /^[0-9]{3}[A-Z]{2}\\.dll$/i;\n\
    \    var pattern19 = /^[a-z]{2}[A-Z]{2}[A-Z]{2}\\.txt$/i;\n    var pattern20 =\
    \ /^[a-z]{2}[A-Z]{2}[A-Z]{2}\\.exe$/i;\n    var pattern21 = /^[a-z]{2}[A-Z]{2}[A-Z]{2}\\\
    .dll$/i;\n    var pattern22 = /^[A-Z]{2}[A-Z]{2}[A-Z]{2}\\.txt$/i;\n    var pattern23\
    \ = /^[A-Z]{2}[A-Z]{2}[A-Z]{2}\\.exe$/i;\n    var pattern24 = /^[A-Z]{2}[A-Z]{2}[A-Z]{2}\\\
    .dll$/i;\n    var pattern25 = /^[0-9]{3}[A-Z]{2}[A-Z]{2}[A-Z]{2}\\.txt$/i;\n \
    \   var pattern26 = /^[0-9]{3}[A-Z]{2}[A-Z]{2}[A-Z]{2}\\.exe$/i;\n    var pattern27\
    \ = /^[0-9]{3}[A-Z]{2}[A-Z]{2}[A-Z]{2}\\.dll$/i;\n    var pattern28 = /^[a-z]{2}[A-Z]{2}[A-Z]{2}[A-Z]{2}[A-Z]{2}\\\
    .txt$/i;\n    var pattern29 = /^[a-z]{2}[A-Z]{2}[A-Z]{2}[A-Z]{2}[A-Z]{2}\\.exe$/i;\n\
    \    var pattern30 = /^[a-z]{2}[A-Z]{2}[A-Z]{2}[A-Z]{2}[A-Z]{2}\\.dll$/i;\n  \
    \  var pattern31 = /^[A-Z]{2}[A-Z]{2}[A-Z]{2}[A-Z]{2}[A-Z]{2}\\.txt$/i;\n    var ",
  "    if (file_name.length <= 3) {\n        return \"No\";\n    }\n    if (file_name.indexOf('.')\
    \ === -1) {\n        return \"No\";\n    }\n    if (file_name.substring(0, 1)\
    \ !== 'a' && file_name.substring(0, 1) !== 'A' && file_name.substring(0, 1) !==\
    \ 'b' && file_name.substring(0, 1) !== 'B' && file_name.substring(0, 1) !== 'c'\
    \ && file_name.substring(0, 1) !== 'C' && file_name.substring(0, 1) !== 'd' &&\
    \ file_name.substring(0, 1) !== 'D' && file_name.substring(0, 1) !== 'e' && file_name.substring(0,\
    \ 1) !== 'E' && file_name.substring(0, 1) !== 'f' && file_name.substring(0, 1)\
    \ !== 'F' && file_name.substring(0, 1) !== 'g' && file_name.substring(0, 1) !==\
    \ 'G' && file_name.substring(0, 1) !== 'h' && file_name.substring(0, 1) !== 'H'\
    \ && file_name.substring(0, 1) !== 'i' && file_name.substring(0, 1) !== 'I' &&\
    \ file_name.substring(0, 1) !== 'j' && file_name.substring(0, 1) !== 'J' && file_name.substring(0,\
    \ 1) !== 'k' && file_name.substring(0, 1) !== 'K' && file_name.substring(0, 1)\
    \ !== 'l' && file_name.substring(0, 1) !== 'L' && file_name.substring(0, 1) !==\
    \ 'm' && file_name.substring(0, 1) !== 'M' && file_name.substring(0, 1) !== 'n'\
    \ && file_name.substring(0, 1) !== 'N' && file_name.substring(0, 1) !== 'o' &&\
    \ file_name.substring(0, 1) !== 'O' && file_name.substring(0, 1) !== 'p' && file_name.substring(0,\
    \ 1) !== 'P' && file_name.substring(0, 1) !== 'q' && file_name.substring(0, 1)\
    \ !== 'Q' && file_name.substring(0, 1) !== 'r' && file_name.substring(0, 1) !==\
    \ 'R' && file_name.substring(0, 1) !== 's' && file_name.substring(0, 1) !== 'S'\
    \ && file_name.substring(0, 1) !== 't' && file_name.substring(0, 1) !== 'T' &&\
    \ file_name.substring(0, 1) !== 'u' && file_name.substring(0, 1) !== 'U' && file_name.substring(0,\
    \ 1) !== 'v' && file_name.substring(0, 1) !== 'V' && file_name.substring(0, 1)\
    \ !== 'w' && file_name.substring(0, 1) !== 'W' && file_name.substring(0, 1) !==\
    \ 'x' && file_name.substring(0, 1) !== 'X' && file_name.substring(0, 1) !== 'y'\
    \ && file_name.substring(0, 1) !== 'Y') {\n        return \"No\";\n    }\n   \
    \ return \"Yes\";\n}\n", "    var pattern = /^[0-9]{3}\\.txt$/i;\n    var pattern2\
    \ = /^[0-9]{3}\\.exe$/i;\n    var pattern3 = /^[0-9]{3}\\.dll$/i;\n    var pattern4\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern5 = /^[a-z]{2}\\.exe$/i;\n    var pattern6\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern7 = /^[a-z]{2}\\.txt$/i;\n    var pattern8\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern9 = /^[a-z]{2}\\.dll$/i;\n    var pattern10\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern11 = /^[a-z]{2}\\.exe$/i;\n    var pattern12\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern13 = /^[a-z]{2}\\.txt$/i;\n    var pattern14\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern15 = /^[a-z]{2}\\.dll$/i;\n    var pattern16\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern17 = /^[a-z]{2}\\.exe$/i;\n    var pattern18\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern19 = /^[a-z]{2}\\.txt$/i;\n    var pattern20\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern21 = /^[a-z]{2}\\.dll$/i;\n    var pattern22\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern23 = /^[a-z]{2}\\.exe$/i;\n    var pattern24\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern25 = /^[a-z]{2}\\.txt$/i;\n    var pattern26\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern27 = /^[a-z]{2}\\.dll$/i;\n    var pattern28\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern29 = /^[a-z]{2}\\.exe$/i;\n    var pattern30\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern31 = /^[a-z]{2}\\.txt$/i;\n    var pattern32\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern33 = /^[a-z]{2}\\.dll$/i;\n    var pattern34\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern35 = /^[a-z]{2}\\.exe$/i;\n    var pattern36\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern37 = /^[a-z]{2}\\.txt$/i;\n    var pattern38\
    \ = /^[a-z]{2}\\.exe$/i;\n    var pattern39 = /^[a-z]{2}\\.dll$/i;\n    var pattern40\
    \ = /^[a-z]{2}\\.txt$/i;\n    var pattern41 = /^[a-z]{2}\\.exe$/i;\n    var pattern42\
    \ = /^[a-z]{2}\\.dll$/i;\n    var pattern43 = /^", "    const regex = /^[0-9]{3}\\\
    .txt$/i;\n    const regex_exe = /^[0-9]{3}\\.exe$/i;\n    const regex_dll = /^[0-9]{3}\\\
    .dll$/i;\n    const regex_empty = /^$/;\n    const regex_letter = /^[a-zA-z]$/i;\n\
    \    const regex_letters = /^[a-zA-z]{0,3}$/i;\n    const regex_digit = /^[0-9]$/;\n\
    \    const regex_digits = /^[0-9]{0,3}$/;\n    const regex_dot = /^\\.$/;\n  \
    \  const regex_dots = /^\\.{0,3}$/;\n    const regex_extension = /^\\.(txt|exe|dll)$/i;\n\
    \    const regex_extensions = /^\\.(txt|exe|dll){0,3}$/i;\n    const regex_all\
    \ = /^[0-9]{3}\\.(txt|exe|dll)$/i;\n    const regex_alls = /^[0-9]{3}\\.(txt|exe|dll){0,3}$/i;\n\
    \    const regex_all_letters = /^[a-zA-z]{0,3}\\.(txt|exe|dll)$/i;\n    const\
    \ regex_all_letters_letters = /^[a-zA-z]{0,3}\\.[a-zA-z]{0,3}\\.(txt|exe|dll)$/i;\n\
    \    const regex_all_letters_digits = /^[a-zA-z]{0,3}\\.[0-9]{0,3}\\.(txt|exe|dll)$/i;\n\
    \    const regex_all_letters_digits_letters = /^[a-zA-z]{0,3}\\.[0-9]{0,3}\\.[a-zA-z]{0,3}\\\
    .(txt|exe|dll)$/i;\n    const regex_all_digits = /^[0-9]{0,3}\\.(txt|exe|dll)$/i;\n\
    \    const regex_all_digits_letters = /^[0-9]{0,3}\\.[a-zA-z]{0,3}\\.(txt|exe|dll)$/i;\n\
    \    const regex_all_digits_digits = /^[0-9]{0,3}\\.[0-9]{0,3}\\.(txt|exe|dll)$/i;\n\
    \    const regex_all_digits_digits_letters = /^[0-9]{0,3}\\.[0-9]{0,3}\\.[a-zA-z]{0,3}\\\
    .(txt|exe|dll)$/i;\n    const regex_all_letters_letters = /^[a-zA-z]{0,3}\\.[a-zA-z]{0,3}\\\
    .(txt|exe|dll)$/i;\n    const regex_all_letters_digits_letters = /^[a-zA-z]{0,3}\\\
    .[0-9]{0,3}\\.[a-zA-z]{0,3}\\.(txt|exe|dll)$/i;\n    const regex_all_letters_digits_digits\
    \ = /^[a-zA-z]{0,3}\\.[0-9]{", "    var re = /^[0-9]{1,3}\\.txt|exe|dll$/;\n \
    \   return re.test(file_name);\n}\n", "    const pattern = /^[0-9]{3}\\.txt|[0-9]{3}\\\
    .exe|[0-9]{3}\\.dll$/;\n    return pattern.test(file_name);\n}\n", "    let file_name\
    \ = file_name.toLowerCase();\n    let file_name = file_name.replace(/\\./g, '');\n\
    \    let file_name = file_name.replace(/[^0-9\\.]/g, '');\n    let file_name =\
    \ file_name.substring(0, 3);\n    let file_name = file_name.substring(0,1);\n\
    \    let file_name = file_name.substring(0,1);\n    if (file_name === '0') {\n\
    \        return 'No';\n    }\n    if (file_name === '1') {\n        return 'No';\n\
    \    }\n    if (file_name === '2') {\n        return 'No';\n    }\n    if (file_name\
    \ === '3') {\n        return 'No';\n    }\n    if (file_name === '4') {\n    \
    \    return 'No';\n    }\n    if (file_name === '5') {\n        return 'No';\n\
    \    }\n    if (file_name === '6') {\n        return 'No';\n    }\n    if (file_name\
    \ === '7') {\n        return 'No';\n    }\n    if (file_name === '8') {\n    \
    \    return 'No';\n    }\n    if (file_name === '9') {\n        return 'No';\n\
    \    }\n    if (file_name === 'a') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'b') {\n        return 'No';\n    }\n    if (file_name === 'c') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'd') {\n        return 'No';\n\
    \    }\n    if (file_name === 'e') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'f') {\n        return 'No';\n    }\n    if (file_name === 'g') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'h') {\n        return 'No';\n\
    \    }\n    if (file_name === 'i') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'j') {\n        return 'No';\n    }\n    if (file_name === 'k') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'l') {\n        return 'No';\n\
    \    }\n    if (file_name === 'm') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'n') {\n        return 'No';\n    }\n    if (file_name === 'o') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'p') {\n        return 'No';\n\
    \    }\n    if (file_name === 'q') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'r') {\n        return 'No';\n    }\n    if (file_name === 's') {\n    \
    \    return 'No';\n    }\n    if (file_name === 't') {\n        return 'No';\n\
    \    }\n    if (file_name === 'u') {\n        return 'No';\n    }\n    if (file_name\
    \ === 'v') {\n        return 'No';\n    }\n    if (file_name === 'w') {\n    \
    \    return 'No';\n    }\n    if (file_name === 'x') {\n        return 'No';\n\
    \    }\n    if (file_name === 'y') {\n        return 'No';\n    }\n    if (file_name\
    \ === '", "    let pattern = /^[0-9]{3}\\.txt$/i;\n    let pattern2 = /^[0-9]{3}\\\
    .exe$/i;\n    let pattern3 = /^[0-9]{3}\\.dll$/i;\n    let pattern4 = /^[a-z]{2}\\\
    .txt$/i;\n    let pattern5 = /^[a-z]{2}\\.exe$/i;\n    let pattern6 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern7 = /^[a-z]{3}\\.txt$/i;\n    let pattern8 = /^[a-z]{3}\\\
    .exe$/i;\n    let pattern9 = /^[a-z]{3}\\.dll$/i;\n    let pattern10 = /^[A-Z]{2}\\\
    .txt$/i;\n    let pattern11 = /^[A-Z]{2}\\.exe$/i;\n    let pattern12 = /^[A-Z]{2}\\\
    .dll$/i;\n    let pattern13 = /^[A-Z]{3}\\.txt$/i;\n    let pattern14 = /^[A-Z]{3}\\\
    .exe$/i;\n    let pattern15 = /^[A-Z]{3}\\.dll$/i;\n    let pattern16 = /^[0-9]{2}\\\
    .txt$/i;\n    let pattern17 = /^[0-9]{2}\\.exe$/i;\n    let pattern18 = /^[0-9]{2}\\\
    .dll$/i;\n    let pattern19 = /^[0-9]{3}\\.txt$/i;\n    let pattern20 = /^[0-9]{3}\\\
    .exe$/i;\n    let pattern21 = /^[0-9]{3}\\.dll$/i;\n    let pattern22 = /^[a-z]{2}\\\
    .txt$/i;\n    let pattern23 = /^[a-z]{2}\\.exe$/i;\n    let pattern24 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern25 = /^[a-z]{3}\\.txt$/i;\n    let pattern26 = /^[a-z]{3}\\\
    .exe$/i;\n    let pattern27 = /^[a-z]{3}\\.dll$/i;\n    let pattern28 = /^[A-Z]{2}\\\
    .txt$/i;\n    let pattern29 = /^[A-Z]{2}\\.exe$/i;\n    let pattern30 = /^[A-Z]{2}\\\
    .dll$/i;\n    let pattern31 = /^[A-Z]{3}\\.txt$/i;\n    let pattern32 = /^[A-Z]{3}\\\
    .exe$/i;\n    let pattern33 = /^[A-Z]{3}\\.dll$/i;\n    let pattern34 = /^[0-9]{2}\\\
    .txt$/i;\n    let pattern35 = /^[0-9]{2}\\.exe$/i;\n    let pattern36 = /^[0-9]{2}\\\
    .dll$/i;\n    let pattern37 = /^[0-9]{3}\\.txt$/i;\n    let pattern38 = /^[0-9]{3}\\\
    .exe$/i;\n    let pattern39 = /^[0-9]{3}\\.dll$/i;\n    let pattern40 = /^[a-z]{2}\\\
    .txt$/i;\n    let pattern41 = /^[a-z]{2}\\.exe$/i;\n    let pattern42 = /^[a-z]{2}\\\
    .dll$/i;\n    let pattern43 = /^", "    let valid_file_name = file_name.match(/^[0-9]{3}\\\
    .[a-z][a-z]$/);\n    let dot_position = file_name.indexOf('.');\n    if (dot_position\
    \ == -1) {\n        return \"No\";\n    }\n    if (dot_position > 0) {\n     \
    \   let first_letter = file_name.charAt(0);\n        if (first_letter < 'a' ||\
    \ first_letter > 'z') {\n            return \"No\";\n        }\n    }\n    if\
    \ (valid_file_name == null) {\n        return \"No\";\n    }\n    if (valid_file_name.length\
    \ != 3) {\n        return \"No\";\n    }\n    if (valid_file_name[0].length !=\
    \ 1) {\n        return \"No\";\n    }\n    if (valid_file_name[1].length != 1)\
    \ {\n        return \"No\";\n    }\n    if (valid_file_name[2] != \"txt\" && valid_file_name[2]\
    \ != \"exe\" && valid_file_name[2] != \"dll\") {\n        return \"No\";\n   \
    \ }\n    return \"Yes\";\n}\n</code>\n<|/ a tags=javascript,typescript |>\n<|\
    \ c |>\nThanks for your answer. Your code works fine but i want to know why my\
    \ code is not working and why my code is working in typescript but not in javascript.\n\
    <|/ c |>\n<| c |>\nI added some explanation to the answer.\n<|/ c |>\n<| c |>\n\
    Thanks for your answer. Your code works fine but i want to know why my code is\
    \ not working and why my code is working in typescript but not in javascript.\n\
    <|/ c |>\n<| c |>\nI added some explanation to the answer.\n<|/ c |>\n<| c |>\n\
    Thanks for your answer. Your code works fine but i want to know why my code is\
    \ not working and why my code is working in typescript but not in javascript.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "    let result = file_name.split('.');\n\
    \    if (result.length != 3 || result[0].length != 1 || result[1].length != 1\
    \ || result[2].length != 1 || result[0].charAt(0) != 'a' || result[0].charAt(0)\
    \ != 'A' || result[0].charAt(1) != 'z' || result[0].charAt(1) != 'Z' || result[1].charAt(0)\
    \ != 'a' || result[1].charAt(0) != 'A' || result[1].charAt(1) != 'z' || result[1].charAt(1)\
    \ != 'Z' || result[2].charAt(0) != 'a' || result[2].charAt(0) != 'A' || result[2].charAt(1)\
    \ != 'z' || result[2].charAt(1) != 'Z') {\n        return 'No';\n    }\n    return\
    \ 'Yes';\n}\n", "    let file_name = file_name.toLowerCase();\n    let dot_index\
    \ = file_name.indexOf(\".\");\n    if (dot_index == -1) {\n        return \"No\"\
    ;\n    }\n    let first_letter = file_name.substring(0, dot_index);\n    let second_letter\
    \ = file_name.substring(dot_index + 1);\n    let letters = first_letter.split(\"\
    \");\n    let letters_set = letters.reduce((acc, letter) => acc | letter, 0);\n\
    \    if (letters_set > 3 || letters_set < 1) {\n        return \"No\";\n    }\n\
    \    if (second_letter != \"\" && second_letter != \"txt\" && second_letter !=\
    \ \"exe\" && second_letter != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let valid_file_name = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n\
    \    if (valid_file_name == null) {\n        return \"No\";\n    }\n    if (file_name.indexOf('.')\
    \ < 0) {\n        return \"No\";\n    }\n    if (file_name.substring(0, 1) !=\
    \ file_name.substring(0, 1).toLowerCase()) {\n        return \"No\";\n    }\n\
    \    if (file_name.substring(file_name.length - 1) != file_name.substring(file_name.length\
    \ - 1, file_name.length).toLowerCase()) {\n        return \"No\";\n    }\n   \
    \ return \"Yes\";\n}\n", "    let result = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n\
    \    if (result === null) return 'No';\n    if (result.length > 3) return 'No';\n\
    \    if (result[0].indexOf('.') === -1) return 'No';\n    if (result[0].charAt(0)\
    \ !== 'a' && result[0].charAt(0) !== 'A' && result[0].charAt(0) !== 'z' && result[0].charAt(0)\
    \ !== 'Z') return 'No';\n    if (result[0].charAt(1) !== '.') return 'No';\n \
    \   if (result[0].charAt(2) !== '.') return 'No';\n    if (result[0].charAt(3)\
    \ !== '.') return 'No';\n    return 'Yes';\n}\n", "    let result = file_name.match(/^[0-9]{3}\\\
    .[a-z][a-z][a-z]$/);\n    if (result === null) {\n        return 'No';\n    }\
    \ else {\n        return 'Yes';\n    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

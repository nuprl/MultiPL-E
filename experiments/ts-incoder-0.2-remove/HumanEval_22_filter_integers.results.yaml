language: ts
name: HumanEval_22_filter_integers
results:
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value): boolean {\n \
    \       return typeof value === 'number';\n    });\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp55p70zvr.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp55p70zvr.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val, 10);\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function(value){\n        return\
    \ typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpgf34x_6h.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmpgf34x_6h.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function(value) {\n        return\
    \ typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmps0fmiatp.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmps0fmiatp.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return isInteger(value);\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2a87lhno.ts(4,16): error TS2304: Cannot find name
    ''isInteger''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp4vh8o1fo.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4vh8o1fo.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return isInteger(value);\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2a87lhno.ts(4,16): error TS2304: Cannot find name
    ''isInteger''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val);\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val, 10);\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === Math.floor(v));\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v % 1 === 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  [],\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp7k11p8hc.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7k11p8hc.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, [], 9\
    \ ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return isInteger(val);\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkhzdb52w.ts(4,16): error TS2304: Cannot find name
    ''isInteger''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v % 1 === 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  [],\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp7k11p8hc.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7k11p8hc.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, [], 9\
    \ ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return isInteger(val);\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkhzdb52w.ts(4,16): error TS2304: Cannot find name
    ''isInteger''.

    '
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return isInteger(val);\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkhzdb52w.ts(4,16): error TS2304: Cannot find name
    ''isInteger''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value): boolean {\n \
    \       return typeof value === 'number';\n    });\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp55p70zvr.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp55p70zvr.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value): boolean {\n \
    \       return typeof value === 'number';\n    });\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp55p70zvr.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp55p70zvr.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function(value) {\n        return\
    \ typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmps0fmiatp.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmps0fmiatp.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function(value) {\n        return\
    \ typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmps0fmiatp.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmps0fmiatp.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v % 1 === 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  [],\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp7k11p8hc.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7k11p8hc.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, [], 9\
    \ ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === Math.floor(v));\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === Math.floor(v));\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return Number.isInteger(val);\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5lcai8vg.ts(4,23): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (v: any) {\n        return\
    \ typeof v === \"number\";\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpqcce_etd.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcce_etd.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function(value){\n        return\
    \ typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpgf34x_6h.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmpgf34x_6h.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function(value) {\n        return\
    \ typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmps0fmiatp.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmps0fmiatp.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val, 10);\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val);\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function(value) {\n        return\
    \ typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmps0fmiatp.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmps0fmiatp.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return Number.isInteger(value);\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxv_xmjbk.ts(4,23): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return typeof val === 'number';\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp_2b4k1jf.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_2b4k1jf.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v % 1 === 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  [],\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp7k11p8hc.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7k11p8hc.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, [], 9\
    \ ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp4vh8o1fo.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4vh8o1fo.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function(value) {\n        return\
    \ typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmps0fmiatp.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmps0fmiatp.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp4vh8o1fo.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4vh8o1fo.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return isInteger(val);\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkhzdb52w.ts(4,16): error TS2304: Cannot find name
    ''isInteger''.

    '
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val);\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => typeof v === \"number\");\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpyk2tm5ps.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyk2tm5ps.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp4vh8o1fo.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4vh8o1fo.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val, 10);\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v % 1 === 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  [],\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp7k11p8hc.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7k11p8hc.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, [], 9\
    \ ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return isInteger(val);\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkhzdb52w.ts(4,16): error TS2304: Cannot find name
    ''isInteger''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v % 1 === 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  [],\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp7k11p8hc.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7k11p8hc.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, [], 9\
    \ ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => typeof v === \"number\");\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpyk2tm5ps.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyk2tm5ps.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return Number.isInteger(value);\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxv_xmjbk.ts(4,23): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val);\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return typeof val === 'number';\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp_2b4k1jf.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_2b4k1jf.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return Number.isInteger(value);\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxv_xmjbk.ts(4,23): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val);\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value): boolean {\n \
    \       return typeof value === 'number';\n    });\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp55p70zvr.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp55p70zvr.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp4vh8o1fo.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4vh8o1fo.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => typeof v === \"number\");\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpyk2tm5ps.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyk2tm5ps.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return isInteger(val);\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkhzdb52w.ts(4,16): error TS2304: Cannot find name
    ''isInteger''.

    '
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => typeof v === \"number\");\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpyk2tm5ps.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyk2tm5ps.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v % 1 === 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  [],\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp7k11p8hc.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7k11p8hc.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, [], 9\
    \ ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return isInteger(val);\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkhzdb52w.ts(4,16): error TS2304: Cannot find name
    ''isInteger''.

    '
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === Math.floor(v));\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === Math.floor(v));\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp4vh8o1fo.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4vh8o1fo.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => typeof v === \"number\");\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpyk2tm5ps.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyk2tm5ps.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v % 1 === 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  [],\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp7k11p8hc.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7k11p8hc.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, [], 9\
    \ ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value) {\n        return\
    \ typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmppcgxpipj.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmppcgxpipj.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp4vh8o1fo.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4vh8o1fo.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val);\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function(value) {\n        return\
    \ typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmps0fmiatp.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmps0fmiatp.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => typeof v === \"number\");\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpyk2tm5ps.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyk2tm5ps.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val);\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function(value){\n        return\
    \ isInteger(value);\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppc6byipu.ts(4,16): error TS2304: Cannot find name
    ''isInteger''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v % 1 === 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  [],\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp7k11p8hc.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7k11p8hc.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, [], 9\
    \ ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === Math.floor(v));\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val);\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val);\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013307
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v === parseInt(v, 10));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => typeof v === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpffzvbxmq.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmpffzvbxmq.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function(value) {\n        return\
    \ typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmps0fmiatp.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmps0fmiatp.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => v % 1 === 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  [],\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp7k11p8hc.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7k11p8hc.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, [], 9\
    \ ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013307
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => Number.isInteger(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpychwjfb9.ts(3,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 0
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (val: any) {\n       \
    \ return val === parseInt(val);\n    });\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(v => typeof v === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpffzvbxmq.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmpffzvbxmq.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return typeof value === 'number';\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp4vh8o1fo.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4vh8o1fo.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013306
- exit_code: 2
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(function (value: any) {\n     \
    \   return Number.isInteger(value);\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxv_xmjbk.ts(4,23): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013306
- exit_code: 1
  program: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
    \ any[]): number[] {\n    return values.filter(value => typeof value === 'number');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmplpayop38.js:9:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpayop38.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013241

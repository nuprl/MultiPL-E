{
  "language": "ts",
  "name": "HumanEval_16_count_distinct_characters",
  "results": [
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters = 0;\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        if (char === char.toUpperCase()) {\n            distinct_characters += 1;\n        } else if (char === char.toLowerCase()) {\n            distinct_characters += 2;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpaucksrcv.js:19:12)\n    at Object.<anonymous> (/tmp/tmpaucksrcv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    string.split('').forEach(char => {\n        if (distinct_characters < char.toLowerCase().length) {\n            distinct_characters = char.toLowerCase().length;\n        }\n    });\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq2ii5iph.js:15:12)\n    at Object.<anonymous> (/tmp/tmpq2ii5iph.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet char_count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet char = string[i];\n\t\tlet char_code = char.charCodeAt(0);\n\t\tif (char_code >= 65 && char_code <= 90) {\n\t\t\tchar_count++;\n\t\t}\n\t}\n\treturn char_count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpj98_zrr8.js:17:12)\n    at Object.<anonymous> (/tmp/tmpj98_zrr8.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let character = string[i];\n        if (distinct_characters > 0) {\n            distinct_characters += 1;\n        } else {\n            distinct_characters = 1;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpx3rs4ug7.js:20:12)\n    at Object.<anonymous> (/tmp/tmpx3rs4ug7.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowerCaseChar = string[i].toLowerCase();\n        let upperCaseChar = string[i].toUpperCase();\n        if (char === lowerCaseChar || char === upperCaseChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpvjw05kyy.js:19:12)\n    at Object.<anonymous> (/tmp/tmpvjw05kyy.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars: string[] = string.split('');\n    let char_count: number = 0;\n    for (let i = 0; i < chars.length; i++) {\n        let char = chars[i];\n        let char_lower = char.toLowerCase();\n        let char_upper = char.toUpperCase();\n        if (char === char_lower || char === char_upper) {\n            char_count++;\n        }\n    }\n    return char_count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpf0p5_zca.js:20:12)\n    at Object.<anonymous> (/tmp/tmpf0p5_zca.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        if (distinctCharacterCount < char.toLowerCase().length) {\n            distinctCharacterCount = char.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpxw6emrpv.js:16:12)\n    at Object.<anonymous> (/tmp/tmpxw6emrpv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toUpperCase()) {\n            distinct_characters += 1;\n        } else if (char === char.toLowerCase()) {\n            distinct_characters += 2;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp8ll6v9dg.js:19:12)\n    at Object.<anonymous> (/tmp/tmp8ll6v9dg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        if (distinctCharacterCount < currentChar.toLowerCase().length) {\n            distinctCharacterCount = currentChar.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp390n28__.js:16:12)\n    at Object.<anonymous> (/tmp/tmp390n28__.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq808y0da.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq808y0da.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (distinctCharacters < string[i].length) {\n            distinctCharacters = string[i].length;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpv4ap7mvn.js:15:12)\n    at Object.<anonymous> (/tmp/tmpv4ap7mvn.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq808y0da.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq808y0da.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() !== char.toUpperCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp2z8amcs4.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2z8amcs4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        if (distinctCharacters < currentChar.toLowerCase().length) {\n            distinctCharacters = currentChar.toLowerCase().length;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp976d9rqm.js:16:12)\n    at Object.<anonymous> (/tmp/tmp976d9rqm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowercase_char = char.toLowerCase();\n        if (lowercase_char === char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpon_5wyyy.js:18:12)\n    at Object.<anonymous> (/tmp/tmpon_5wyyy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for(let i = 0; i < string.length; i++) {\n        const character = string[i];\n        if(distinctCharacterCount < character.toLowerCase().length) {\n            distinctCharacterCount = character.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp0gsw8vu0.js:16:12)\n    at Object.<anonymous> (/tmp/tmp0gsw8vu0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        const character = string[i].toLowerCase();\n        if (distinctCharacterCount < character.length) {\n            distinctCharacterCount = character.length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpgeo9n_yw.js:16:12)\n    at Object.<anonymous> (/tmp/tmpgeo9n_yw.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar !== previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpbqhapkmr.js:18:12)\n    at Object.<anonymous> (/tmp/tmpbqhapkmr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar !== previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpbqhapkmr.js:18:12)\n    at Object.<anonymous> (/tmp/tmpbqhapkmr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i].toLowerCase();\n        if (distinct_characters[char]) {\n            distinct_characters[char]++;\n        } else {\n            distinct_characters[char] = 1;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpk25arb8s.js:19:12)\n    at Object.<anonymous> (/tmp/tmpk25arb8s.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let currentCharLower = string[i].toLowerCase();\n        let currentCharUpper = string[i].toUpperCase();\n        if (currentChar === currentCharLower || currentChar === currentCharUpper) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp9z_0atlk.js:19:12)\n    at Object.<anonymous> (/tmp/tmp9z_0atlk.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334229
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() !== char.toUpperCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp2z8amcs4.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2z8amcs4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toUpperCase()) {\n            distinct_characters += 1;\n        } else if (char === char.toLowerCase()) {\n            distinct_characters += 2;\n        } else {\n            distinct_characters += 3;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp4jlknrfz.js:22:12)\n    at Object.<anonymous> (/tmp/tmp4jlknrfz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsCount = chars.length;\n    let distinctCharsCount = 0;\n    for (let i = 0; i < charsCount; i++) {\n        let char = chars[i];\n        let lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            distinctCharsCount++;\n        }\n    }\n    return distinctCharsCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp46yjbj5p.js:19:12)\n    at Object.<anonymous> (/tmp/tmp46yjbj5p.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsCount = {};\n    for (let i = 0; i < chars.length; i++) {\n        let char = chars[i];\n        if (charsCount[char]) {\n            charsCount[char] += 1;\n        } else {\n            charsCount[char] = 1;\n        }\n    }\n    return Object.keys(charsCount).length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp6xq1pw_c.js:21:12)\n    at Object.<anonymous> (/tmp/tmp6xq1pw_c.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 2,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    const distinctCharacters: Set<string> = new Set();\n    for (const char of string) {\n        distinctCharacters.add(char.toLowerCase());\n        distinctCharacters.add(char.toUpperCase());\n    }\n    return distinctCharacters.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpdnmbtx4y.ts(8,31): error TS2339: Property 'length' does not exist on type 'Set<string>'.\n",
      "timestamp": 1660334234
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    string.split('').forEach(char => {\n        if (distinctCharacterCount < char.toLowerCase().length) {\n            distinctCharacterCount = char.toLowerCase().length;\n        }\n    });\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpo71xplu8.js:15:12)\n    at Object.<anonymous> (/tmp/tmpo71xplu8.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowercase_char = char.toLowerCase();\n        if (lowercase_char === char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpon_5wyyy.js:18:12)\n    at Object.<anonymous> (/tmp/tmpon_5wyyy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq808y0da.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq808y0da.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let current_char = string[i];\n        let previous_char = string[i - 1];\n        if (current_char === previous_char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpo25h_pcc.js:17:12)\n    at Object.<anonymous> (/tmp/tmpo25h_pcc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowercase_char = char.toLowerCase();\n        let uppercase_char = char.toUpperCase();\n        if (lowercase_char === uppercase_char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp2fd3uxi3.js:18:12)\n    at Object.<anonymous> (/tmp/tmp2fd3uxi3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        if (distinctCharacters < currentChar.toLowerCase().length) {\n            distinctCharacters = currentChar.toLowerCase().length;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpns4ltdlq.js:16:12)\n    at Object.<anonymous> (/tmp/tmpns4ltdlq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq808y0da.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq808y0da.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsSet = new Set(chars);\n    return charsSet.size;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmppgy9dihy.js:12:12)\n    at Object.<anonymous> (/tmp/tmppgy9dihy.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charAt(i) !== string.charAt(i).toUpperCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpj760zu7y.js:16:12)\n    at Object.<anonymous> (/tmp/tmpj760zu7y.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        const character = string[i].toLowerCase();\n        if (distinctCharacterCount < character.length) {\n            distinctCharacterCount = character.length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpgeo9n_yw.js:16:12)\n    at Object.<anonymous> (/tmp/tmpgeo9n_yw.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 2,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for(let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if(distinct_characters.indexOf(char) === -1) {\n            distinct_characters += 1;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpfvztp07g.ts(6,32): error TS2339: Property 'indexOf' does not exist on type 'number'.\n",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    const chars = string.split('');\n    const distinct_chars = chars.filter((char) => char.match(/[a-z]/i) && char.match(/[A-Z]/i) && char.match(/[0-9]/i));\n    return distinct_chars.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpbuyshyvm.js:11:12)\n    at Object.<anonymous> (/tmp/tmpbuyshyvm.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowercase_char = char.toLowerCase();\n        if (lowercase_char === char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpon_5wyyy.js:18:12)\n    at Object.<anonymous> (/tmp/tmpon_5wyyy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq808y0da.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq808y0da.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let lowerChar = string[i].toLowerCase();\n        let upperChar = string[i].toUpperCase();\n        if (currentChar === lowerChar || currentChar === upperChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmplp69lf2y.js:19:12)\n    at Object.<anonymous> (/tmp/tmplp69lf2y.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (distinctCharacterCount < string[i].toUpperCase().charCodeAt(0) - string[i].toLowerCase().charCodeAt(0)) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp6gk_f_6a.js:15:12)\n    at Object.<anonymous> (/tmp/tmp6gk_f_6a.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowercase_char = char.toLowerCase();\n        if (lowercase_char === char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpon_5wyyy.js:18:12)\n    at Object.<anonymous> (/tmp/tmpon_5wyyy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar !== previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpbqhapkmr.js:18:12)\n    at Object.<anonymous> (/tmp/tmpbqhapkmr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        const currentChar = string[i].toLowerCase();\n        const nextChar = string[i + 1].toLowerCase();\n        if (currentChar !== nextChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "Exception",
      "stderr": "/tmp/tmpeah2_d73.js:6\n        const nextChar = string[i + 1].toLowerCase();\n                                       ^\n\nTypeError: Cannot read properties of undefined (reading 'toLowerCase')\n    at count_distinct_characters (/tmp/tmpeah2_d73.js:6:40)\n    at test (/tmp/tmpeah2_d73.js:17:22)\n    at Object.<anonymous> (/tmp/tmpeah2_d73.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() !== char.toUpperCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp2z8amcs4.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2z8amcs4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet distinctCharacters = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet char = string[i];\n\t\tlet lowerChar = string[i].toLowerCase();\n\t\tif (lowerChar !== char) {\n\t\t\tdistinctCharacters++;\n\t\t}\n\t}\n\treturn distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp4gpsjbgx.js:17:12)\n    at Object.<anonymous> (/tmp/tmp4gpsjbgx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let current_char = string[i];\n        let previous_char = string[i - 1];\n        if (current_char === previous_char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpo25h_pcc.js:17:12)\n    at Object.<anonymous> (/tmp/tmpo25h_pcc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowercase_char = char.toLowerCase();\n        if (lowercase_char === char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpon_5wyyy.js:18:12)\n    at Object.<anonymous> (/tmp/tmpon_5wyyy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toLowerCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmphgpnjobt.js:17:12)\n    at Object.<anonymous> (/tmp/tmphgpnjobt.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        const currentChar = string[i];\n        const lowerCaseChar = string[i].toLowerCase();\n        const upperCaseChar = string[i].toUpperCase();\n        if (currentChar === lowerCaseChar || currentChar === upperCaseChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp5_v0oyx_.js:19:12)\n    at Object.<anonymous> (/tmp/tmp5_v0oyx_.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsCount = {};\n    for (let i = 0; i < chars.length; i++) {\n        charsCount[chars[i]] = charsCount[chars[i]] ? charsCount[chars[i]] + 1 : 1;\n    }\n    return Object.keys(charsCount).length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp47ehols0.js:15:12)\n    at Object.<anonymous> (/tmp/tmp47ehols0.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() !== char.toUpperCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmph_9jx2b1.js:17:12)\n    at Object.<anonymous> (/tmp/tmph_9jx2b1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        if (distinctCharacterCount < currentChar.toLowerCase().length) {\n            distinctCharacterCount = currentChar.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp390n28__.js:16:12)\n    at Object.<anonymous> (/tmp/tmp390n28__.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars: number[] = [];\n    for (let i = 0; i < string.length; i++) {\n        chars.push(string.charCodeAt(i));\n    }\n    let distinctChars = chars.filter((value, index, self) => self.indexOf(value) === index);\n    return distinctChars.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpohuq_a0u.js:15:12)\n    at Object.<anonymous> (/tmp/tmpohuq_a0u.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let lowerCaseChar = string[i].toLowerCase();\n        let upperCaseChar = string[i].toUpperCase();\n        if (currentChar === lowerCaseChar || currentChar === upperCaseChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpz5zb11aw.js:19:12)\n    at Object.<anonymous> (/tmp/tmpz5zb11aw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        if (distinctCharacterCount < currentChar.toLowerCase().length) {\n            distinctCharacterCount = currentChar.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp390n28__.js:16:12)\n    at Object.<anonymous> (/tmp/tmp390n28__.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq808y0da.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq808y0da.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacters++;\n        } else {\n            distinctCharacters = 1;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpu8yh6a1l.js:20:12)\n    at Object.<anonymous> (/tmp/tmpu8yh6a1l.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowercase_char = char.toLowerCase();\n        if (lowercase_char === char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpon_5wyyy.js:18:12)\n    at Object.<anonymous> (/tmp/tmpon_5wyyy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let character = string[i];\n        let lowerCaseCharacter = character.toLowerCase();\n        if (lowerCaseCharacter !== character) {\n            distinctCharacters++;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp5n13tet2.js:17:12)\n    at Object.<anonymous> (/tmp/tmp5n13tet2.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() !== char) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpw6ff9144.js:16:12)\n    at Object.<anonymous> (/tmp/tmpw6ff9144.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() === char.toUpperCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp7e87761m.js:16:12)\n    at Object.<anonymous> (/tmp/tmp7e87761m.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() === char.toUpperCase()) {\n            distinctCharacters++;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpuh9wdixq.js:16:12)\n    at Object.<anonymous> (/tmp/tmpuh9wdixq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334240
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let lowerChar = string[i].toLowerCase();\n        let upperChar = string[i].toUpperCase();\n        if (lowerChar !== currentChar) {\n            distinctCharacterCount++;\n        }\n        if (upperChar !== currentChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp2ckhhlt3.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2ckhhlt3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334241
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let character = string[i];\n        if (distinctCharacterCount < character.toLowerCase().length) {\n            distinctCharacterCount = character.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp61l2hx7p.js:16:12)\n    at Object.<anonymous> (/tmp/tmp61l2hx7p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toUpperCase()) {\n            distinct_characters++;\n        }\n        if (char === char.toLowerCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpm2h5bxxp.js:20:12)\n    at Object.<anonymous> (/tmp/tmpm2h5bxxp.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        const currentChar = string[i];\n        if (distinctCharacterCount < currentChar.toLowerCase().length) {\n            distinctCharacterCount = currentChar.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp1yfe0bef.js:16:12)\n    at Object.<anonymous> (/tmp/tmp1yfe0bef.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (distinct_characters > 0) {\n            distinct_characters += char.charCodeAt(0) - distinct_characters;\n        } else {\n            distinct_characters += char.charCodeAt(0);\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n101\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp8y55ww52.js:19:12)\n    at Object.<anonymous> (/tmp/tmp8y55ww52.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 101,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet distinct_characters = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tdistinct_characters += string.charCodeAt(i);\n\t}\n\treturn distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n495\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp5ic_lkph.js:13:12)\n    at Object.<anonymous> (/tmp/tmp5ic_lkph.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 495,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 2,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for(let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if(distinctCharacterCount.includes(char)) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount.push(char);\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpbqeq0il4.ts(6,35): error TS2339: Property 'includes' does not exist on type 'number'.\n../../../../tmp/tmpbqeq0il4.ts(9,36): error TS2339: Property 'push' does not exist on type 'number'.\n",
      "timestamp": 1660334241
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsSet = new Set(chars);\n    return charsSet.size;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmppgy9dihy.js:12:12)\n    at Object.<anonymous> (/tmp/tmppgy9dihy.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let character = string[i];\n        if (distinctCharacterCount < character.toLowerCase().length) {\n            distinctCharacterCount = character.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp61l2hx7p.js:16:12)\n    at Object.<anonymous> (/tmp/tmp61l2hx7p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        if (distinctCharacters < currentChar.toLowerCase().length) {\n            distinctCharacters = currentChar.toLowerCase().length;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpns4ltdlq.js:16:12)\n    at Object.<anonymous> (/tmp/tmpns4ltdlq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowerChar = string[i].toLowerCase();\n        let upperChar = string[i].toUpperCase();\n        if (char === lowerChar || char === upperChar) {\n            distinctCharacters++;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmptpcqh08g.js:19:12)\n    at Object.<anonymous> (/tmp/tmptpcqh08g.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let char_count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        char_count += string.charCodeAt(i);\n    }\n    return char_count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n495\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp_k2nlis6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp_k2nlis6.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 495,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 2,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let character = string[i];\n        if (distinctCharacters.indexOf(character) === -1) {\n            distinctCharacters++;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpz1k_opk7.ts(6,32): error TS2339: Property 'indexOf' does not exist on type 'number'.\n",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[i].toLowerCase()) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpetbh7q8m.js:16:12)\n    at Object.<anonymous> (/tmp/tmpetbh7q8m.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        if (distinctCharacterCount > 0) {\n            if (currentChar !== string[i - 1]) {\n                distinctCharacterCount++;\n            }\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpema89ff2.js:22:12)\n    at Object.<anonymous> (/tmp/tmpema89ff2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (distinctCharacterCount < char.toLowerCase().length) {\n            distinctCharacterCount = char.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpifjas68q.js:16:12)\n    at Object.<anonymous> (/tmp/tmpifjas68q.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        const character = string[i].toLowerCase();\n        if (distinct_characters < character.length) {\n            distinct_characters = character.length;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpywom210d.js:16:12)\n    at Object.<anonymous> (/tmp/tmpywom210d.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 2,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for(let i = 0; i < string.length; i++) {\n        let character = string[i];\n        if(distinctCharacterCount.includes(character)) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount.push(character);\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpnv62e9v6.ts(6,35): error TS2339: Property 'includes' does not exist on type 'number'.\n../../../../tmp/tmpnv62e9v6.ts(9,36): error TS2339: Property 'push' does not exist on type 'number'.\n",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let current_char = string[i];\n        let previous_char = string[i - 1];\n        if (current_char === previous_char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpo25h_pcc.js:17:12)\n    at Object.<anonymous> (/tmp/tmpo25h_pcc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toUpperCase()) {\n            distinct_characters += 1;\n        }\n        else if (char === char.toLowerCase()) {\n            distinct_characters += 1;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpy3k5g7j3.js:20:12)\n    at Object.<anonymous> (/tmp/tmpy3k5g7j3.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charAt(i) !== string.charAt(i).toUpperCase()) {\n            distinctCharacters++;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpgo_yfw0y.js:16:12)\n    at Object.<anonymous> (/tmp/tmpgo_yfw0y.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq808y0da.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq808y0da.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let distinct_char_count = 0;\n    for (let i = 0; i < chars.length; i++) {\n        let char = chars[i];\n        let char_lower = char.toLowerCase();\n        let char_upper = char.toUpperCase();\n        if (chars.indexOf(char_lower) !== chars.indexOf(char_upper)) {\n            distinct_char_count++;\n        }\n    }\n    return distinct_char_count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpzxbu2xg4.js:20:12)\n    at Object.<anonymous> (/tmp/tmpzxbu2xg4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() !== char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpjhujwrkl.js:16:12)\n    at Object.<anonymous> (/tmp/tmpjhujwrkl.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charAt(i) !== string.charAt(i).toUpperCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpj760zu7y.js:16:12)\n    at Object.<anonymous> (/tmp/tmpj760zu7y.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowercase_char = char.toLowerCase();\n        let uppercase_char = char.toUpperCase();\n        if (lowercase_char === uppercase_char) {\n            distinct_characters++;\n        } else {\n            distinct_characters += 2;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp3q348kp9.js:21:12)\n    at Object.<anonymous> (/tmp/tmp3q348kp9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toUpperCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpwuqfqyla.js:16:12)\n    at Object.<anonymous> (/tmp/tmpwuqfqyla.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toUpperCase()) {\n            distinctCharacters++;\n        } else if (char === char.toLowerCase()) {\n            distinctCharacters++;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp0otc1s8a.js:20:12)\n    at Object.<anonymous> (/tmp/tmp0otc1s8a.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toUpperCase()) {\n            distinct_characters++;\n        }\n        else if (char === char.toLowerCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp0ebuj5wv.js:20:12)\n    at Object.<anonymous> (/tmp/tmp0ebuj5wv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334247
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let character = string[i];\n        if (distinctCharacterCount < character.toLowerCase().length) {\n            distinctCharacterCount = character.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp61l2hx7p.js:16:12)\n    at Object.<anonymous> (/tmp/tmp61l2hx7p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() !== char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpjhujwrkl.js:16:12)\n    at Object.<anonymous> (/tmp/tmpjhujwrkl.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let char_count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charAt(i) !== string.charAt(i).toUpperCase()) {\n            char_count++;\n        }\n    }\n    return char_count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp_st2fejl.js:16:12)\n    at Object.<anonymous> (/tmp/tmp_st2fejl.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334248
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.match(/[a-z]/i)) {\n            distinctCharacterCount++;\n        }\n        if (char.match(/[A-Z]/i)) {\n            distinctCharacterCount++;\n        }\n        if (char.match(/[0-9]/i)) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpg1c8e2kg.js:22:12)\n    at Object.<anonymous> (/tmp/tmpg1c8e2kg.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334248
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        if (distinctCharacterCount < currentChar.toLowerCase().length) {\n            distinctCharacterCount = currentChar.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp390n28__.js:16:12)\n    at Object.<anonymous> (/tmp/tmp390n28__.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsSet = new Set(chars);\n    return charsSet.size;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmppgy9dihy.js:12:12)\n    at Object.<anonymous> (/tmp/tmppgy9dihy.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 2,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars: number[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (chars.indexOf(char) === -1) {\n            chars.push(char);\n        }\n    }\n    return chars.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpi93p39cy.ts(6,27): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.\n../../../../tmp/tmpi93p39cy.ts(7,24): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.\n",
      "timestamp": 1660334248
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpmkvsk6hr.js:17:12)\n    at Object.<anonymous> (/tmp/tmpmkvsk6hr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() === char.toUpperCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp7e87761m.js:16:12)\n    at Object.<anonymous> (/tmp/tmp7e87761m.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let char_count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charAt(i) !== string.charAt(i).toUpperCase()) {\n            char_count++;\n        }\n    }\n    return char_count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp_st2fejl.js:16:12)\n    at Object.<anonymous> (/tmp/tmp_st2fejl.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334248
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet distinct_characters = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet character = string[i];\n\t\tif (distinct_characters < character.length) {\n\t\t\tdistinct_characters = character.length;\n\t\t}\n\t}\n\treturn distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpggpnqj63.js:16:12)\n    at Object.<anonymous> (/tmp/tmpggpnqj63.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet distinctCharacterCount = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst currentChar = string[i];\n\t\tlet previousChar = string[i - 1];\n\t\tlet nextChar = string[i + 1];\n\t\tlet previousCharIsUppercase = previousChar === currentChar.toUpperCase();\n\t\tlet nextCharIsUppercase = nextChar === currentChar.toUpperCase();\n\t\tif (previousCharIsUppercase && nextCharIsUppercase) {\n\t\t\tdistinctCharacterCount++;\n\t\t}\n\t}\n\treturn distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpnj6ry01w.js:20:12)\n    at Object.<anonymous> (/tmp/tmpnj6ry01w.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334248
    },
    {
      "exit_code": 2,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (distinctCharacters.indexOf(char) === -1) {\n            distinctCharacters.push(char);\n        }\n    }\n    return distinctCharacters.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpjojvdo10.ts(6,32): error TS2339: Property 'indexOf' does not exist on type 'number'.\n../../../../tmp/tmpjojvdo10.ts(7,32): error TS2339: Property 'push' does not exist on type 'number'.\n../../../../tmp/tmpjojvdo10.ts(10,31): error TS2339: Property 'length' does not exist on type 'number'.\n",
      "timestamp": 1660334248
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        const character = string[i].toLowerCase();\n        if (distinctCharacterCount < character.length) {\n            distinctCharacterCount = character.length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpgeo9n_yw.js:16:12)\n    at Object.<anonymous> (/tmp/tmpgeo9n_yw.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (distinctCharacters < string[i].toUpperCase().length) {\n            distinctCharacters = string[i].toUpperCase().length;\n        } else if (distinctCharacters < string[i].toLowerCase().length) {\n            distinctCharacters = string[i].toLowerCase().length;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpw48pwx7n.js:18:12)\n    at Object.<anonymous> (/tmp/tmpw48pwx7n.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let character = string[i].toLowerCase();\n        if (distinctCharacterCount < character.length) {\n            distinctCharacterCount = character.length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp53dr8k73.js:16:12)\n    at Object.<anonymous> (/tmp/tmp53dr8k73.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (distinctCharacterCount < string[i].toUpperCase().charCodeAt(0) - string[i].toLowerCase().charCodeAt(0)) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp6gk_f_6a.js:15:12)\n    at Object.<anonymous> (/tmp/tmp6gk_f_6a.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toUpperCase()) {\n            distinct_characters += 1;\n        } else if (char === char.toLowerCase()) {\n            distinct_characters += 2;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp8ll6v9dg.js:19:12)\n    at Object.<anonymous> (/tmp/tmp8ll6v9dg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[i].toLowerCase()) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpetbh7q8m.js:16:12)\n    at Object.<anonymous> (/tmp/tmpetbh7q8m.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (distinct_characters > 0) {\n            distinct_characters += char.charCodeAt(0) - distinct_characters;\n        } else {\n            distinct_characters += char.charCodeAt(0);\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n101\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp8y55ww52.js:19:12)\n    at Object.<anonymous> (/tmp/tmp8y55ww52.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 101,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacters++;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp3q3e50cv.js:17:12)\n    at Object.<anonymous> (/tmp/tmp3q3e50cv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        if (char === char.toLowerCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmph2sx13f7.js:17:12)\n    at Object.<anonymous> (/tmp/tmph2sx13f7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsCount = chars.reduce((acc, curr) => {\n        return acc + curr.length;\n    }, 0);\n    return charsCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmptroyxj0u.js:14:12)\n    at Object.<anonymous> (/tmp/tmptroyxj0u.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet distinct_characters: number = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tdistinct_characters += string.charCodeAt(i);\n\t}\n\treturn distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n495\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpxfv2sx7m.js:13:12)\n    at Object.<anonymous> (/tmp/tmpxfv2sx7m.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 495,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() === char.toUpperCase()) {\n            distinctCharacters++;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpuh9wdixq.js:16:12)\n    at Object.<anonymous> (/tmp/tmpuh9wdixq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334240
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let lowerCaseChar = string[i].toLowerCase();\n        let upperCaseChar = string[i].toUpperCase();\n        if (currentChar === lowerCaseChar || currentChar === upperCaseChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpz5zb11aw.js:19:12)\n    at Object.<anonymous> (/tmp/tmpz5zb11aw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        if (distinct_characters > 0) {\n            distinct_characters += 1;\n        } else {\n            distinct_characters += char.charCodeAt(0);\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n101\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpci2q099l.js:19:12)\n    at Object.<anonymous> (/tmp/tmpci2q099l.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 101,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        if (distinctCharacters < char.toLowerCase().length) {\n            distinctCharacters = char.toLowerCase().length;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp1laatp_9.js:16:12)\n    at Object.<anonymous> (/tmp/tmp1laatp_9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 2,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charCodeAt(i) !== string.charCodeAt(i).toUpperCase().charCodeAt(0)) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpgsmmfuk1.ts(5,59): error TS2339: Property 'toUpperCase' does not exist on type 'number'.\n",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        const lowerCaseChar = string[i].toLowerCase();\n        const upperCaseChar = string[i].toUpperCase();\n        if (char === lowerCaseChar || char === upperCaseChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpbe391h72.js:19:12)\n    at Object.<anonymous> (/tmp/tmpbe391h72.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsCount = chars.reduce((acc, cur) => acc + cur.length, 0);\n    return charsCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp2d_ez3qc.js:12:12)\n    at Object.<anonymous> (/tmp/tmp2d_ez3qc.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toLowerCase()) {\n            distinct_characters += 1;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpemek57rx.js:17:12)\n    at Object.<anonymous> (/tmp/tmpemek57rx.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let lowerCaseChar = string[i].toLowerCase();\n        let upperCaseChar = string[i].toUpperCase();\n        if (currentChar === lowerCaseChar || currentChar === upperCaseChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpz5zb11aw.js:19:12)\n    at Object.<anonymous> (/tmp/tmpz5zb11aw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowerChar = char.toLowerCase();\n        let upperChar = char.toUpperCase();\n        if (lowerChar !== upperChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmps4d7awgw.js:19:12)\n    at Object.<anonymous> (/tmp/tmps4d7awgw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowercase_char = char.toLowerCase();\n        if (lowercase_char === char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmphtd2n3xj.js:18:12)\n    at Object.<anonymous> (/tmp/tmphtd2n3xj.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 2,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        if (distinct_characters > 0) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 1) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 2) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 3) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 4) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 5) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 6) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 7) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 8) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 9) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 10) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 11) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 12) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 13) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 14) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 15) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 16) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 17) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 18) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 19) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 20) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 21) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 22) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 23) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 24) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 25) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 26) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 27) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > 28) {\n            distinct_characters += 1;\n        }\n        if (distinct_characters > \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpb5vuy7r5.ts(94,9): error TS1005: ')' expected.\n../../../../tmp/tmpb5vuy7r5.ts(107,8): error TS1005: '}' expected.\n",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet distinct_characters: number = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tdistinct_characters += string.charCodeAt(i);\n\t}\n\treturn distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n495\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpxfv2sx7m.js:13:12)\n    at Object.<anonymous> (/tmp/tmpxfv2sx7m.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 495,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet distinctCharacterCount = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet currentChar = string[i];\n\t\tlet previousChar = string[i - 1];\n\t\tif (currentChar === previousChar) {\n\t\t\tdistinctCharacterCount++;\n\t\t} else {\n\t\t\tdistinctCharacterCount = 1;\n\t\t}\n\t}\n\treturn distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpeh1alv4w.js:20:12)\n    at Object.<anonymous> (/tmp/tmpeh1alv4w.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334253
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let lowerCaseChar = string[i].toLowerCase();\n        let upperCaseChar = string[i].toUpperCase();\n        if (currentChar === lowerCaseChar || currentChar === upperCaseChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpz5zb11aw.js:19:12)\n    at Object.<anonymous> (/tmp/tmpz5zb11aw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        if (distinctCharacterCount < currentChar.toLowerCase().length) {\n            distinctCharacterCount = currentChar.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp390n28__.js:16:12)\n    at Object.<anonymous> (/tmp/tmp390n28__.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters < string[i].charCodeAt(0)) {\n            distinct_characters = string[i].charCodeAt(0);\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n101\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp9l3qosut.js:15:12)\n    at Object.<anonymous> (/tmp/tmp9l3qosut.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 101,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334254
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let current_char = string[i];\n        let previous_char = string[i - 1];\n        if (current_char === previous_char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpo25h_pcc.js:17:12)\n    at Object.<anonymous> (/tmp/tmpo25h_pcc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq808y0da.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq808y0da.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq808y0da.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq808y0da.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.match(/[a-z]/i)) {\n            distinct_characters += 1;\n        }\n        if (char.match(/[A-Z]/i)) {\n            distinct_characters += 1;\n        }\n        if (char.match(/[0-9]/i)) {\n            distinct_characters += 1;\n        }\n        if (char.match(/[^a-zA-Z0-9]/i)) {\n            distinct_characters += 1;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpswh9elod.js:25:12)\n    at Object.<anonymous> (/tmp/tmpswh9elod.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334255
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq808y0da.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq808y0da.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let character = string[i];\n        if (distinctCharacterCount < character.toLowerCase().length) {\n            distinctCharacterCount = character.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp61l2hx7p.js:16:12)\n    at Object.<anonymous> (/tmp/tmp61l2hx7p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (distinct_characters < char.toLowerCase().length) {\n            distinct_characters = char.toLowerCase().length;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp6880d48o.js:16:12)\n    at Object.<anonymous> (/tmp/tmp6880d48o.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334255
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsSet = new Set(chars);\n    return charsSet.size;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmppgy9dihy.js:12:12)\n    at Object.<anonymous> (/tmp/tmppgy9dihy.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let char_count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charAt(i) !== string.charAt(i).toUpperCase()) {\n            char_count++;\n        }\n    }\n    return char_count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp_st2fejl.js:16:12)\n    at Object.<anonymous> (/tmp/tmp_st2fejl.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334248
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let uniqueChars = new Set<string>();\n    chars.forEach(char => {\n        if (uniqueChars.has(char)) {\n            uniqueChars.add(char);\n        } else {\n            uniqueChars.add(char.toLowerCase());\n            uniqueChars.add(char.toUpperCase());\n        }\n    });\n    return uniqueChars.size;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp8dsvmk0j.js:20:12)\n    at Object.<anonymous> (/tmp/tmp8dsvmk0j.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toUpperCase()) {\n            distinctCharacters++;\n        }\n        else if (char === char.toLowerCase()) {\n            distinctCharacters++;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp1p4kcsv1.js:20:12)\n    at Object.<anonymous> (/tmp/tmp1p4kcsv1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334255
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        const currentChar = string[i];\n        const lowerCaseChar = string[i].toLowerCase();\n        const upperCaseChar = string[i].toUpperCase();\n        if (currentChar === lowerCaseChar || currentChar === upperCaseChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp5_v0oyx_.js:19:12)\n    at Object.<anonymous> (/tmp/tmp5_v0oyx_.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let current_char = string[i];\n        let previous_char = string[i - 1];\n        if (current_char === previous_char) {\n            distinct_characters++;\n        } else {\n            distinct_characters = 1;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp41q620q8.js:20:12)\n    at Object.<anonymous> (/tmp/tmp41q620q8.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334255
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsSet = new Set(chars);\n    return charsSet.size;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmppgy9dihy.js:12:12)\n    at Object.<anonymous> (/tmp/tmppgy9dihy.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (distinctCharacterCount < string[i].toUpperCase().length) {\n            distinctCharacterCount = string[i].toUpperCase().length;\n        }\n        if (distinctCharacterCount < string[i].toLowerCase().length) {\n            distinctCharacterCount = string[i].toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpz9q61zfh.js:18:12)\n    at Object.<anonymous> (/tmp/tmpz9q61zfh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334255
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charAt(i) !== string.charAt(i).toUpperCase()) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmplm7gqu5k.js:16:12)\n    at Object.<anonymous> (/tmp/tmplm7gqu5k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334255
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowerCaseChar = string[i].toLowerCase();\n        let upperCaseChar = string[i].toUpperCase();\n        if (char === lowerCaseChar || char === upperCaseChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpvjw05kyy.js:19:12)\n    at Object.<anonymous> (/tmp/tmpvjw05kyy.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 2,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsCount = chars.filter(char => char.match(/[a-z]/i)).filter(char => char.match(/[A-Z]/i)).filter(char => char.match(/[0-9]/i)).filter(char => char.match(/[^A-Za-z0-9]/i)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@#$%^&*()_+=|;':\",.<>\\/?~`{}[\\]]/)).filter(char => char.match(/[!@\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzmrxwalz.ts(4,1120): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpzmrxwalz.ts(5,1): error TS1005: ',' expected.\n../../../../tmp/tmpzmrxwalz.ts(5,9): error TS1005: ',' expected.\n../../../../tmp/tmpzmrxwalz.ts(18,8): error TS1005: '}' expected.\n",
      "timestamp": 1660334255
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet distinct_characters: number = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tdistinct_characters += string.charCodeAt(i);\n\t}\n\treturn distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n495\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpxfv2sx7m.js:13:12)\n    at Object.<anonymous> (/tmp/tmpxfv2sx7m.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 495,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334249
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar !== previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpbqhapkmr.js:18:12)\n    at Object.<anonymous> (/tmp/tmpbqhapkmr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 2,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsCount = {};\n    chars.forEach((char) => {\n        if (charsCount[char] == null) {\n            charsCount[char] = 1;\n        } else {\n            charsCount[char] += 1;\n        }\n    });\n    return charsCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpt8nydsof.ts(12,5): error TS2322: Type '{}' is not assignable to type 'number'.\n",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (distinctCharacterCount < char.toLowerCase().length) {\n            distinctCharacterCount = char.toLowerCase().length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpifjas68q.js:16:12)\n    at Object.<anonymous> (/tmp/tmpifjas68q.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet distinctCharacterCount = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet character = string[i];\n\t\tlet lowerCaseCharacter = character.toLowerCase();\n\t\tlet upperCaseCharacter = character.toUpperCase();\n\t\tif (lowerCaseCharacter === upperCaseCharacter) {\n\t\t\tdistinctCharacterCount++;\n\t\t}\n\t}\n\treturn distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpnm9cuu5a.js:18:12)\n    at Object.<anonymous> (/tmp/tmpnm9cuu5a.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters = 0;\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        if (char === char.toUpperCase()) {\n            distinct_characters += 1;\n        } else if (char === char.toLowerCase()) {\n            distinct_characters += 2;\n        } else {\n            distinct_characters += 3;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpbqlrhabf.js:22:12)\n    at Object.<anonymous> (/tmp/tmpbqlrhabf.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() === char.toUpperCase()) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq1mhgllm.js:16:12)\n    at Object.<anonymous> (/tmp/tmpq1mhgllm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let current_char = string[i];\n        let previous_char = string[i - 1];\n        if (current_char === previous_char) {\n            distinct_characters++;\n        } else {\n            break;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpzj7hzyiz.js:20:12)\n    at Object.<anonymous> (/tmp/tmpzj7hzyiz.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowerCaseChar = string[i].toLowerCase();\n        let upperCaseChar = string[i].toUpperCase();\n        if (char === lowerCaseChar || char === upperCaseChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpvjw05kyy.js:19:12)\n    at Object.<anonymous> (/tmp/tmpvjw05kyy.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() !== char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpjhujwrkl.js:16:12)\n    at Object.<anonymous> (/tmp/tmpjhujwrkl.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toUpperCase()) {\n            distinct_characters += 1;\n        }\n        if (char === char.toLowerCase()) {\n            distinct_characters += 1;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpdznobc0i.js:20:12)\n    at Object.<anonymous> (/tmp/tmpdznobc0i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.match(/[a-z]/i)) {\n            distinct_characters++;\n        }\n        if (char.match(/[A-Z]/i)) {\n            distinct_characters++;\n        }\n        if (char.match(/[0-9]/i)) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp8pcqrox2.js:22:12)\n    at Object.<anonymous> (/tmp/tmp8pcqrox2.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacters++;\n        } else {\n            distinctCharacters = 1;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpu8yh6a1l.js:20:12)\n    at Object.<anonymous> (/tmp/tmpu8yh6a1l.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar !== previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpbqhapkmr.js:18:12)\n    at Object.<anonymous> (/tmp/tmpbqhapkmr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowercase_char = char.toLowerCase();\n        let uppercase_char = char.toUpperCase();\n        if (lowercase_char === uppercase_char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp2fd3uxi3.js:18:12)\n    at Object.<anonymous> (/tmp/tmp2fd3uxi3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() === char.toUpperCase()) {\n            distinctCharacters++;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpuh9wdixq.js:16:12)\n    at Object.<anonymous> (/tmp/tmpuh9wdixq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334240
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowercase_char = char.toLowerCase();\n        if (lowercase_char === char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpon_5wyyy.js:18:12)\n    at Object.<anonymous> (/tmp/tmpon_5wyyy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar !== previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpbqhapkmr.js:18:12)\n    at Object.<anonymous> (/tmp/tmpbqhapkmr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet distinctCharacterCount = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet currentChar = string[i];\n\t\tlet previousChar = string[i - 1];\n\t\tif (currentChar === previousChar) {\n\t\t\tdistinctCharacterCount++;\n\t\t}\n\t}\n\treturn distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp_wezpgjm.js:17:12)\n    at Object.<anonymous> (/tmp/tmp_wezpgjm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (distinctCharacterCount < string[i].length) {\n            distinctCharacterCount = string[i].length;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpuamly_vt.js:15:12)\n    at Object.<anonymous> (/tmp/tmpuamly_vt.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charAt(i) !== string.charAt(i).toUpperCase()) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmplm7gqu5k.js:16:12)\n    at Object.<anonymous> (/tmp/tmplm7gqu5k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334255
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.toLowerCase() !== char) {\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpjhujwrkl.js:16:12)\n    at Object.<anonymous> (/tmp/tmpjhujwrkl.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334242
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinct_characters: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters += string.charCodeAt(i);\n    }\n    return distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n495\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpjleuw8ey.js:13:12)\n    at Object.<anonymous> (/tmp/tmpjleuw8ey.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 495,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        if (char === char.toUpperCase()) {\n            distinctCharacterCount++;\n        }\n        if (char === char.toLowerCase()) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpz0lgg6b6.js:20:12)\n    at Object.<anonymous> (/tmp/tmpz0lgg6b6.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpq808y0da.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq808y0da.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        const currentChar = string[i];\n        const lowerCaseChar = string[i].toLowerCase();\n        const upperCaseChar = string[i].toUpperCase();\n        if (currentChar === lowerCaseChar || currentChar === upperCaseChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp5_v0oyx_.js:19:12)\n    at Object.<anonymous> (/tmp/tmp5_v0oyx_.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334235
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet distinct_characters: number = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet char = string[i];\n\t\tif (char.toLowerCase() !== char) {\n\t\t\tdistinct_characters++;\n\t\t}\n\t}\n\treturn distinct_characters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp74anqbgg.js:16:12)\n    at Object.<anonymous> (/tmp/tmp74anqbgg.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        let lowerChar = string[i].toLowerCase();\n        let upperChar = string[i].toUpperCase();\n        if (char === lowerChar || char === upperChar) {\n            distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpv9ydlnu4.js:19:12)\n    at Object.<anonymous> (/tmp/tmpv9ydlnu4.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334256
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === char.toUpperCase()) {\n            distinctCharacters++;\n        } else if (char === char.toLowerCase()) {\n            distinctCharacters++;\n        }\n    }\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmppere849a.js:20:12)\n    at Object.<anonymous> (/tmp/tmppere849a.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334258
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++) {\n        let currentChar = string[i];\n        let previousChar = string[i - 1];\n        if (currentChar === previousChar) {\n            distinctCharacterCount++;\n        } else {\n            distinctCharacterCount = 1;\n        }\n    }\n    return distinctCharacterCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpfjssmk6f.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfjssmk6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334228
    },
    {
      "exit_code": 2,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let charsCount = {};\n    chars.forEach((char) => {\n        if (charsCount[char] === undefined) {\n            charsCount[char] = 1;\n        } else {\n            charsCount[char] += 1;\n        }\n    });\n    return charsCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpj8p6l8hn.ts(12,5): error TS2322: Type '{}' is not assignable to type 'number'.\n",
      "timestamp": 1660334257
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let distinctCharacters: number = 0;\n    string.split('').forEach((char: string) => {\n        if (distinctCharacters < char.toLowerCase().length) {\n            distinctCharacters = char.toLowerCase().length;\n        }\n    });\n    return distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpwwxfd7sc.js:15:12)\n    at Object.<anonymous> (/tmp/tmpwwxfd7sc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334258
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n\tlet distinctCharacters = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet character = string[i];\n\t\tif (distinctCharacters < character.toLowerCase().length) {\n\t\t\tdistinctCharacters = character.toLowerCase().length;\n\t\t}\n\t\tif (distinctCharacters < character.toUpperCase().length) {\n\t\t\tdistinctCharacters = character.toUpperCase().length;\n\t\t}\n\t}\n\treturn distinctCharacters;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp2q0_7mis.js:19:12)\n    at Object.<anonymous> (/tmp/tmp2q0_7mis.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334258
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let char_count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char.charCodeAt(0) >= 65 && char.charCodeAt(0) <= 90) {\n            char_count++;\n        }\n    }\n    return char_count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpcphhiquv.js:16:12)\n    at Object.<anonymous> (/tmp/tmpcphhiquv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334258
    },
    {
      "exit_code": 1,
      "program": "//Given a string, find out how many distinct characters (regardless of case) does it consist of\nfunction count_distinct_characters(string: string): number {\n    let chars = string.split('');\n    let uniqueChars = {};\n    chars.forEach((char) => {\n        uniqueChars[char] = uniqueChars[char] ? uniqueChars[char] + 1 : 1;\n    });\n    return Object.keys(uniqueChars).length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpsmw6logr.js:15:12)\n    at Object.<anonymous> (/tmp/tmpsmw6logr.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334258
    }
  ]
}
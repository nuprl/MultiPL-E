language: ts
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpb1dz5dxk.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb1dz5dxk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let largest\
    \ = n;\n    let divisor = 1;\n    while (divisor < n) {\n        if (n % divisor\
    \ === 0) {\n            largest = divisor;\n        }\n        divisor++;\n  \
    \  }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n  \
    \      if (n % i === 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_index = i;\n            }\n \
    \       }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcddlcg0l.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcddlcg0l.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = max_divisor * max_divisor;\n    for (let\
    \ i = 1; i <= n; i++) {\n        let divisor = i;\n        while (divisor < max_divisor_square\
    \ && n % divisor === 0) {\n            divisor++;\n        }\n        if (divisor\
    \ > max_divisor) {\n            max_divisor = divisor;\n        }\n    }\n   \
    \ return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp90zv9wd1.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp90zv9wd1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            let divisor = i;\n            if (divisor\
    \ > max_divisor_value) {\n                max_divisor_value = divisor;\n     \
    \           max_divisor = i;\n            }\n        }\n    }\n    return max_divisor;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpal3th85v.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpal3th85v.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n        if (n % i === 0) {\n            max_divisor = i;\n      \
    \      max_divisor_square = n * i;\n        }\n    }\n    return max_divisor;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmphtxysvaw.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphtxysvaw.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977635
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        let divisor = n / i;\n        if (divisor > max_divisor)\
    \ {\n            max_divisor = divisor;\n            max_divisor_p = i;\n    \
    \        max_divisor_p2 = max_divisor;\n        }\n    }\n    return max_divisor_p2;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp69q208y0.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp69q208y0.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvtd_s40h.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvtd_s40h.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpb1dz5dxk.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb1dz5dxk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i < n; i++) {\n      \
    \  if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977635
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n  \
    \      if (n % i === 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_index = i;\n            }\n \
    \       }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcddlcg0l.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcddlcg0l.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_value = i;\n            }\n\
    \        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpn57f23kb.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn57f23kb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977635
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i < n; i++) {\n \
    \       if (n % i == 0) {\n            max_divisor = i;\n            max_divisor_square\
    \ = max_divisor * i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor_p\
    \ = i / n;\n            let divisor_p2 = divisor_p * divisor_p;\n            if\
    \ (divisor_p2 > max_divisor_p2) {\n                max_divisor_p2 = divisor_p2;\n\
    \                max_divisor_p = divisor_p;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpq5t5lnfd.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpq5t5lnfd.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square\
    \ = i * i;\n            if (divisor > max_divisor) {\n                max_divisor\
    \ = divisor;\n                max_divisor_square = divisor_square;\n         \
    \   }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpobdrl8tc.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpobdrl8tc.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n     \
    \   max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor_p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppfrtv0cl.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppfrtv0cl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            if (max_divisor < i) {\n               \
    \ max_divisor = i;\n                max_divisor_index = i;\n            }\n  \
    \      }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpgreaurei.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgreaurei.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 1;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            let p = i / n;\n            if (p > max_divisor_p)\
    \ {\n                max_divisor_p = p;\n                max_divisor = i;\n  \
    \          }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp3suhb0s7.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3suhb0s7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      max_divisor = i;\n      max_divisor_p = i;\n    }\n  }\n\
    \  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmptq4a0jym.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptq4a0jym.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = n;\n            }\n        }\n    }\n\
    \    return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp1y4irlga.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1y4irlga.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_index = i;\n            }\n \
    \       }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpc16o74oa.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc16o74oa.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tlet max_divisor_p = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tlet divisor_p\
    \ = n / i;\n\t\tif (divisor_p > max_divisor) {\n\t\t\tmax_divisor = divisor_p;\n\
    \t\t\tmax_divisor_p = i;\n\t\t}\n\t}\n\treturn max_divisor_p;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpu7c7zsno.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu7c7zsno.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977635
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor\
    \ < i) {\n                max_divisor = i;\n                max_divisor_p = max_divisor_p2;\n\
    \            }\n            if (max_divisor == i) {\n                max_divisor_p2\
    \ = max_divisor_p;\n            }\n        }\n    }\n    return max_divisor;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4_gx6_kh.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4_gx6_kh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4exmy78m.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4exmy78m.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n     \
    \       max_divisor = i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7s2zq_m4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7s2zq_m4.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n     \
    \       max_divisor = i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7s2zq_m4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7s2zq_m4.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let p = Math.pow(i,\
    \ 2);\n            if (p > max_divisor_p) {\n                max_divisor_p = p;\n\
    \                max_divisor_p2 = i;\n            }\n        }\n    }\n    return\
    \ max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcbrfdj8u.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcbrfdj8u.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor_p\
    \ = n / i;\n            if (divisor_p > max_divisor_p) {\n                max_divisor_p\
    \ = divisor_p;\n                max_divisor_p2 = i;\n            }\n        }\n\
    \    }\n    return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp_yrl2epm.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_yrl2epm.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            if (max_divisor < i) {\n               \
    \ max_divisor = i;\n                max_divisor_index = i;\n            }\n  \
    \      }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpzfbq1k1h.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzfbq1k1h.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1;\
    \ i <= n; i++) {\n    if (n % i === 0) {\n      let p = Math.floor(Math.sqrt(i));\n\
    \      if (p > max_divisor_p) {\n        max_divisor_p = p;\n        max_divisor_p2\
    \ = i;\n      }\n    }\n  }\n  return max_divisor_p2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4rusnf7q.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4rusnf7q.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 0;\n\tlet max_divisor_value = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif\
    \ (n % i === 0) {\n\t\t\tlet divisor = i;\n\t\t\twhile (n % divisor === 0) {\n\
    \t\t\t\tdivisor++;\n\t\t\t}\n\t\t\tif (divisor > max_divisor_value) {\n\t\t\t\t\
    max_divisor = divisor;\n\t\t\t\tmax_divisor_value = i;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpg0quuo8n.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg0quuo8n.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = max_divisor * max_divisor;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor_square\
    \ = i * i;\n            if (divisor_square > max_divisor_square) {\n         \
    \       max_divisor = i;\n                max_divisor_square = divisor_square;\n\
    \            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7h2gf9ic.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7h2gf9ic.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpi9qewz81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi9qewz81.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 3; i <= Math.sqrt(n);\
    \ i++) {\n        if (n % i == 0) {\n            max_divisor = i;\n          \
    \  max_divisor_square = n / i;\n        }\n    }\n    return max_divisor;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpxud6jgik.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxud6jgik.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppe5ovtwt.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppe5ovtwt.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i < n; i++) {\n \
    \       if (n % i == 0) {\n            let divisor = i;\n            let divisor_square\
    \ = i * i;\n            if (divisor_square > max_divisor_square) {\n         \
    \       max_divisor = divisor;\n                max_divisor_square = divisor_square;\n\
    \            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n7\n    at test (/tmp/tmp97q8qv9t.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp97q8qv9t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 7,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n     \
    \       max_divisor = i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7s2zq_m4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7s2zq_m4.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 0;\n  let max_divisor_index = 0;\n  for (let i = 1; i <= n; i++) {\n    if\
    \ (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n  \
    \      max_divisor_index = i;\n      }\n    }\n  }\n  return max_divisor_index;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpzfc72rfa.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzfc72rfa.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpi9qewz81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi9qewz81.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpi9qewz81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi9qewz81.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 0;\n  let max_divisor_value = 0;\n  for (let i = 1; i <= n; i++) {\n    if\
    \ (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n  \
    \      max_divisor_value = i;\n      }\n    }\n  }\n  return max_divisor_value;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpfzdcdvl4.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfzdcdvl4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let p = Math.floor(n\
    \ / i);\n            if (p > max_divisor_p) {\n                max_divisor_p =\
    \ p;\n                max_divisor_p2 = i;\n            }\n        }\n    }\n \
    \   return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpbsfjf3c4.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbsfjf3c4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = n;\n            }\n        }\n    }\n\
    \    return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp1y4irlga.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1y4irlga.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppe5ovtwt.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppe5ovtwt.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i < n; i++) {\n \
    \       if (n % i === 0) {\n            let divisor = i;\n            let divisor_square\
    \ = i * i;\n            if (divisor_square > max_divisor_square) {\n         \
    \       max_divisor = divisor;\n                max_divisor_square = divisor_square;\n\
    \            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n7\n    at test (/tmp/tmpwkmj3zkw.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwkmj3zkw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 7,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_index = i;\n            }\n \
    \       }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6t8efb6y.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6t8efb6y.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            let divisor_p = i / n;\n            if (divisor_p\
    \ > max_divisor_p) {\n                max_divisor = divisor_p;\n             \
    \   max_divisor_p = divisor_p;\n            } else if (divisor_p === max_divisor_p)\
    \ {\n                max_divisor_p = divisor_p;\n            }\n        }\n  \
    \  }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp7sggiwab.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7sggiwab.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor_p\
    \ = i;\n            let divisor_p2 = i;\n            if (i > max_divisor) {\n\
    \                max_divisor = i;\n                max_divisor_p = divisor_p;\n\
    \                max_divisor_p2 = divisor_p2;\n            }\n            if (i\
    \ < max_divisor) {\n                let divisor_p2 = max_divisor_p2;\n       \
    \         max_divisor_p2 = divisor_p;\n                max_divisor_p = divisor_p2;\n\
    \            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpwmnq7y5z.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwmnq7y5z.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tlet max_divisor_p = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n\
    \ % i == 0) {\n\t\t\tlet p = Math.floor(n / i);\n\t\t\tif (p > max_divisor_p)\
    \ {\n\t\t\t\tmax_divisor = i;\n\t\t\t\tmax_divisor_p = p;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp59xpey30.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp59xpey30.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            max_divisor = i;\n            max_divisor_square\
    \ = max_divisor * max_divisor;\n        }\n    }\n    return max_divisor_square;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7mo865r6.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7mo865r6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n  \
    \      if (n % i === 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_index = i;\n            }\n \
    \       }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcddlcg0l.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcddlcg0l.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            let p = Math.floor((n / i) + 1);\n        \
    \    if (p > max_divisor_p) {\n                max_divisor = i;\n            \
    \    max_divisor_p = p;\n            }\n        }\n    }\n    return max_divisor;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp82mgvbi7.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp82mgvbi7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1;\
    \ i <= n; i++) {\n    if (n % i == 0) {\n      let p = Math.floor(n / i);\n  \
    \    if (p > max_divisor_p) {\n        max_divisor_p = p;\n        max_divisor_p2\
    \ = i;\n      }\n    }\n  }\n  return max_divisor_p2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmptee09tbl.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptee09tbl.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_value = i;\n            }\n \
    \       }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpux40184b.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpux40184b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_index = i;\n            }\n \
    \       }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_rer5atn.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_rer5atn.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977640
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i < n; i++) {\n      \
    \  if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977635
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i < n; i++) {\n      \
    \  if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977635
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n     \
    \   max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor_p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppfrtv0cl.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppfrtv0cl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let largest\
    \ = n;\n    let divisor = 1;\n    while (divisor < n) {\n        if (n % divisor\
    \ === 0) {\n            largest = divisor;\n        }\n        divisor++;\n  \
    \  }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 1;\n    let max_divisor_pp = 1;\n    for (let\
    \ i = 1; i <= n; i++) {\n        let divisor_p = n / i;\n        let divisor_pp\
    \ = i / n;\n        if (divisor_p > max_divisor) {\n            max_divisor =\
    \ divisor_p;\n            max_divisor_p = divisor_pp;\n        }\n        if (divisor_pp\
    \ > max_divisor_p) {\n            max_divisor_pp = divisor_pp;\n        }\n  \
    \  }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpolst9n0g.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpolst9n0g.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i == 0) {\n            let divisor = i;\n            let divisor_square\
    \ = i * i;\n            if (divisor > max_divisor) {\n                max_divisor\
    \ = divisor;\n                max_divisor_square = divisor_square;\n         \
    \   }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp798f2n56.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp798f2n56.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square\
    \ = i * i;\n            if (divisor_square > max_divisor_square) {\n         \
    \       max_divisor = divisor;\n                max_divisor_square = divisor_square;\n\
    \            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdwzm3yrt.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdwzm3yrt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      \
    \  max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3_pyhym1.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3_pyhym1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 1;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      max_divisor = i;\n      max_divisor_p = n / i;\n    }\n\
    \  }\n  return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpk40n0tsb.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpk40n0tsb.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            if (max_divisor < i) {\n            \
    \    max_divisor = i;\n                max_divisor_square = n * i;\n         \
    \   }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp65_ie6mw.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp65_ie6mw.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_value = n;\n            }\n\
    \        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp9klx_veu.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9klx_veu.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_square = n;\n  for (let i = 1; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      max_divisor = i;\n      max_divisor_square = max_divisor_square\
    \ * i;\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977641
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let largest\
    \ = n;\n    let divisor = 1;\n    while (divisor < n) {\n        if (n % divisor\
    \ === 0) {\n            largest = divisor;\n        }\n        divisor++;\n  \
    \  }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let largest\
    \ = n;\n    let divisor = 1;\n    while (divisor < n) {\n        largest = divisor;\n\
    \        divisor += 2;\n    }\n    return largest;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpb_w7u6bv.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb_w7u6bv.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5mpn_nhx.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5mpn_nhx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_value = i;\n            }\n\
    \        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp0gb5dsty.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0gb5dsty.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            if (max_divisor < i) {\n               \
    \ max_divisor = i;\n                max_divisor_index = i;\n            }\n  \
    \      }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpzfbq1k1h.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzfbq1k1h.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_value = i;\n            }\n\
    \        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpn57f23kb.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn57f23kb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977635
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 1;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i === 0) {\n            let p = Math.floor(n / i);\n            if\
    \ (p > max_divisor_p) {\n                max_divisor_p = p;\n                max_divisor\
    \ = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpc1gjlkpw.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc1gjlkpw.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = max_divisor;\n    for (let i = 1; i <= n;\
    \ i++) {\n        if (n % i === 0) {\n            let divisor_square = i * i;\n\
    \            if (divisor_square > max_divisor_square) {\n                max_divisor\
    \ = i;\n                max_divisor_square = divisor_square;\n            }\n\
    \        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpd_wvktdq.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd_wvktdq.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let largest\
    \ = n;\n    let divisor = 1;\n    while (divisor < n) {\n        if (n % divisor\
    \ === 0) {\n            largest = divisor;\n        }\n        divisor++;\n  \
    \  }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_value = i;\n            }\n\
    \        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpn57f23kb.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn57f23kb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977635
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor\
    \ = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4yvrreut.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4yvrreut.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      max_divisor\
    \ = i;\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpiufcliww.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiufcliww.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor\
    \ = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4yvrreut.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4yvrreut.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            if (max_divisor < i) {\n            \
    \    max_divisor = i;\n            }\n            if (max_divisor_square < i *\
    \ i) {\n                max_divisor_square = i * i;\n            }\n        }\n\
    \    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmprx8ohi77.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprx8ohi77.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tlet max_divisor_p = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tlet p\
    \ = Math.pow(i, 0.5);\n\t\tif (p > max_divisor_p) {\n\t\t\tmax_divisor_p = p;\n\
    \t\t\tmax_divisor = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp2ra69ws9.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ra69ws9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpc1l2lo2h.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc1l2lo2h.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpb1dz5dxk.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb1dz5dxk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpi9qewz81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi9qewz81.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor\
    \ < i) {\n                max_divisor = i;\n                max_divisor_p = max_divisor_p2;\n\
    \            }\n            if (max_divisor == i) {\n                max_divisor_p2\
    \ = max_divisor_p;\n            }\n        }\n    }\n    return max_divisor;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4_gx6_kh.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4_gx6_kh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    let max_divisor_square_prime = 1;\n\
    \    let max_divisor_square_prime_prime = 1;\n    for (let i = 1; i <= n; i++)\
    \ {\n        let divisor = i;\n        let divisor_square = i * i;\n        let\
    \ divisor_square_prime = i * i * i;\n        let divisor_square_prime_prime =\
    \ i * i * i * i;\n        if (divisor < max_divisor) {\n            max_divisor\
    \ = divisor;\n            max_divisor_square = divisor_square;\n            max_divisor_square_prime\
    \ = divisor_square_prime;\n            max_divisor_square_prime_prime = divisor_square_prime_prime;\n\
    \        }\n        if (divisor_square < max_divisor_square) {\n            max_divisor_square\
    \ = divisor_square;\n            max_divisor_square_prime = divisor_square_prime;\n\
    \            max_divisor_square_prime_prime = divisor_square_prime_prime;\n  \
    \      }\n        if (divisor_square_prime < max_divisor_square_prime) {\n   \
    \         max_divisor_square_prime = divisor_square_prime;\n            max_divisor_square_prime_prime\
    \ = divisor_square_prime_prime;\n        }\n        if (divisor_square_prime_prime\
    \ < max_divisor_square_prime_prime) {\n            max_divisor_square_prime_prime\
    \ = divisor_square_prime_prime;\n        }\n    }\n    return max_divisor;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp6r0ss3sw.js:38:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6r0ss3sw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpi9qewz81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi9qewz81.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = max_divisor;\n            }\n        }\n\
    \    }\n    return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpc8fwyn70.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc8fwyn70.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_value = 1;\n  for (let i = 1; i <= n; i++) {\n    if\
    \ (n % i === 0) {\n      let divisor = i;\n      while (divisor <= n) {\n    \
    \    if (n % divisor === 0) {\n          divisor++;\n        } else {\n      \
    \    break;\n        }\n      }\n      if (divisor > max_divisor) {\n        max_divisor\
    \ = divisor;\n        max_divisor_value = i;\n      }\n    }\n  }\n  return max_divisor_value;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpt3x54ree.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt3x54ree.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor\
    \ = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4yvrreut.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4yvrreut.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let p = Math.floor(n\
    \ / i);\n            if (p > max_divisor_p) {\n                max_divisor_p =\
    \ p;\n                max_divisor_p2 = i;\n            }\n        }\n    }\n \
    \   return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpbsfjf3c4.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbsfjf3c4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpi9qewz81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi9qewz81.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square\
    \ = i * i;\n            if (divisor > max_divisor) {\n                max_divisor\
    \ = divisor;\n                max_divisor_square = divisor_square;\n         \
    \   }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpobdrl8tc.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpobdrl8tc.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let largestDivisor\
    \ = 1;\n    let divisor = 2;\n    while (divisor <= n) {\n        if (n % divisor\
    \ === 0) {\n            largestDivisor = divisor;\n        }\n        divisor++;\n\
    \    }\n    return largestDivisor;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpl60ceuo0.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl60ceuo0.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_value = i;\n            }\n \
    \       }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp1lsu6msc.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1lsu6msc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_value = i;\n            }\n \
    \       }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp1lsu6msc.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1lsu6msc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tmax_divisor\
    \ = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpgyf95d0d.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgyf95d0d.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            let divisor_square = i * i;\n       \
    \     if (divisor_square > max_divisor_square) {\n                max_divisor\
    \ = i;\n                max_divisor_square = divisor_square;\n            }\n\
    \        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpg25ip0u6.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg25ip0u6.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n     \
    \   max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpn_vv0gz9.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn_vv0gz9.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_index = i;\n            }\n \
    \       }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpt5nsyaur.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt5nsyaur.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpb1dz5dxk.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb1dz5dxk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n     \
    \   max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpn_vv0gz9.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn_vv0gz9.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let p = Math.floor(n\
    \ / i);\n            if (p > max_divisor_p) {\n                max_divisor_p =\
    \ p;\n                max_divisor_p2 = i;\n            }\n        }\n    }\n \
    \   return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpbsfjf3c4.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbsfjf3c4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let largest\
    \ = n;\n    let divisor = 1;\n    while (divisor < n) {\n        if (n % divisor\
    \ === 0) {\n            largest = divisor;\n        }\n        divisor++;\n  \
    \  }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      \
    \  max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3_pyhym1.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3_pyhym1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      let divisor_p = i / n;\n      if (divisor_p > max_divisor_p)\
    \ {\n        max_divisor = divisor_p;\n        max_divisor_p = divisor_p;\n  \
    \    }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpsk_fwcpi.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsk_fwcpi.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let largest\
    \ = n;\n    let divisor = 1;\n    while (divisor <= n) {\n        if (n % divisor\
    \ === 0) {\n            largest = divisor;\n        }\n        divisor++;\n  \
    \  }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppsxd8wh4.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppsxd8wh4.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor_p\
    \ = i / n;\n            let divisor_p2 = divisor_p * divisor_p;\n            if\
    \ (divisor_p2 > max_divisor_p2) {\n                max_divisor_p2 = divisor_p2;\n\
    \                max_divisor_p = divisor_p;\n            }\n        }\n    }\n\
    \    return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpngpo4daq.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpngpo4daq.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i == 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_square = n * i;\n          \
    \  }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5gr4ndws.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5gr4ndws.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1;\
    \ i <= n; i++) {\n    if (n % i === 0) {\n      let divisor_p = i;\n      let\
    \ divisor_p2 = i;\n      for (let j = 2; j <= Math.sqrt(i); j++) {\n        if\
    \ (i % j === 0) {\n          divisor_p = j;\n          divisor_p2 = j;\n     \
    \   }\n      }\n      if (divisor_p2 > max_divisor_p2) {\n        max_divisor_p2\
    \ = divisor_p2;\n        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return\
    \ max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpsr198vk7.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsr198vk7.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      max_divisor\
    \ = i;\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpiufcliww.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiufcliww.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      \
    \  max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3_pyhym1.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3_pyhym1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_index = i;\n            }\n \
    \       }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpt5nsyaur.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt5nsyaur.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square\
    \ = i * i;\n            if (divisor > max_divisor) {\n                max_divisor\
    \ = divisor;\n            }\n            if (divisor_square > max_divisor_square)\
    \ {\n                max_divisor_square = divisor_square;\n            }\n   \
    \     }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6dgp21ui.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6dgp21ui.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 2
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tlet max_divisor_p = 0;\n\tlet max_divisor_p2 = 0;\n\tlet max_divisor_p3\
    \ = 0;\n\tlet max_divisor_p4 = 0;\n\tlet max_divisor_p5 = 0;\n\tlet max_divisor_p6\
    \ = 0;\n\tlet max_divisor_p7 = 0;\n\tlet max_divisor_p8 = 0;\n\tlet max_divisor_p9\
    \ = 0;\n\tlet max_divisor_p10 = 0;\n\tlet max_divisor_p11 = 0;\n\tlet max_divisor_p12\
    \ = 0;\n\tlet max_divisor_p13 = 0;\n\tlet max_divisor_p14 = 0;\n\tlet max_divisor_p15\
    \ = 0;\n\tlet max_divisor_p16 = 0;\n\tlet max_divisor_p17 = 0;\n\tlet max_divisor_p18\
    \ = 0;\n\tlet max_divisor_p19 = 0;\n\tlet max_divisor_p20 = 0;\n\tlet max_divisor_p21\
    \ = 0;\n\tlet max_divisor_p22 = 0;\n\tlet max_divisor_p23 = 0;\n\tlet max_divisor_p24\
    \ = 0;\n\tlet max_divisor_p25 = 0;\n\tlet max_divisor_p26 = 0;\n\tlet max_divisor_p27\
    \ = 0;\n\tlet max_divisor_p28 = 0;\n\tlet max_divisor_p29 = 0;\n\tlet max_divisor_p30\
    \ = 0;\n\tlet max_divisor_p31 = 0;\n\tlet max_divisor_p32 = 0;\n\tlet max_divisor_p33\
    \ = 0;\n\tlet max_divisor_p34 = 0;\n\tlet max_divisor_p35 = 0;\n\tlet max_divisor_p36\
    \ = 0;\n\tlet max_divisor_p37 = 0;\n\tlet max_divisor_p38 = 0;\n\tlet max_divisor_p39\
    \ = 0;\n\tlet max_divisor_p40 = 0;\n\tlet max_divisor_p41 = 0;\n\tlet max_divisor_p42\
    \ = 0;\n\tlet max_divisor_p43 = 0;\n\tlet max_divisor_p44 = 0;\n\tlet max_divisor_p45\
    \ = 0;\n\tlet max_divisor_p46 = 0;\n\tlet max_divisor_p47 = 0;\n\tlet max_divisor_p48\
    \ = 0;\n\tlet max_divisor_p49 = 0;\n\tlet max_divisor_p50 = 0;\n\tlet max_divisor_p51\
    \ = 0;\n\tlet max_divisor_p52 = 0;\n\tlet max_divisor_p53 = 0;\n\tlet max_divisor_p54\
    \ = 0;\n\tlet max_divisor_p55 = 0;\n\tlet max_divisor_p56 = 0;\n\tlet max_divisor_p57\
    \ = 0;\n\tlet max_divisor_p58 = 0;\n\tlet max_divisor_p59 = 0;\n\tlet max_divisor_p60\
    \ = 0;\n\tlet max_divisor_p61 = 0;\n\tlet max_divisor_p62 = 0;\n\tlet max_divisor_p63\
    \ = 0;\n\tlet max_divisor_p64 = 0;\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy7r7lrq5.ts(81,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659977643
- exit_code: 2
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 1;\n    let max_divisor_pp = 1;\n    let max_divisor_ppp\
    \ = 1;\n    let max_divisor_pppp = 1;\n    let max_divisor_ppppp = 1;\n    let\
    \ max_divisor_pppppp = 1;\n    let max_divisor_ppppppp = 1;\n    let max_divisor_ppppppp\
    \ = 1;\n    let max_divisor_pppppppp = 1;\n    let max_divisor_ppppppppp = 1;\n\
    \    let max_divisor_ppppppppp = 1;\n    let max_divisor_pppppppppp = 1;\n   \
    \ let max_divisor_ppppppppppp = 1;\n    let max_divisor_pppppppppppp = 1;\n  \
    \  let max_divisor_ppppppppppppp = 1;\n    let max_divisor_ppppppppppppp = 1;\n\
    \    let max_divisor_pppppppppppppp = 1;\n    let max_divisor_ppppppppppppppp\
    \ = 1;\n    let max_divisor_ppppppppppppppp = 1;\n    let max_divisor_pppppppppppppppp\
    \ = 1;\n    let max_divisor_ppppppppppppppppppp = 1;\n    let max_divisor_ppppppppppppppppppp\
    \ = 1;\n    let max_divisor_pppppppppppppppppppp = 1;\n    let max_divisor_ppppppppppppppppppppp\
    \ = 1;\n    let max_divisor_pppppppppppppppppppppp = 1\n    \n    for (let i =\
    \ 1; i <= n; i++) {\n        let divisor = i;\n        let divisor_p = 1;\n  \
    \      let divisor_pp = 1;\n        let divisor_ppp = 1;\n        let divisor_pppp\
    \ = 1;\n        let divisor_ppppp = 1;\n        let divisor_pppppp = 1;\n    \
    \    let divisor_ppppppp = 1;\n        let divisor_pppppppp = 1;\n        let\
    \ divisor_ppppppppp = 1;\n        let divisor_pppppppppp = 1;\n        let divisor_ppppppppppp\
    \ = 1;\n        let divisor_ppppppppppp = 1;\n        let divisor_pppppppppppp\
    \ = 1;\n        let divisor_ppppppppppppp = 1;\n        let divisor_ppppppppppppppp\
    \ = 1;\n        let divisor_pppppppppppppppp = 1\n        \n        for (let j\
    \ = 1; j <= i; j++) {\n            divisor_p = divisor * j;\n            divisor_pp\
    \ = divisor_p * j;\n            divisor_ppp = divisor_pp * j;\n            divisor_pppp\
    \ = divisor_ppp * j;\n            divisor_ppppp = divisor_pppp * j;\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq3r01rap.ts(69,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i == 0) {\n            let divisor = i;\n            let divisor_square\
    \ = i * i;\n            if (divisor > max_divisor) {\n                max_divisor\
    \ = divisor;\n                max_divisor_square = divisor_square;\n         \
    \   }\n            if (divisor_square > max_divisor_square) {\n              \
    \  max_divisor_square = divisor_square;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpv3obd18b.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv3obd18b.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpi9qewz81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi9qewz81.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            let p = Math.floor(n / i);\n            if\
    \ (p > max_divisor_p) {\n                max_divisor = i;\n                max_divisor_p\
    \ = p;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp12xnebeh.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp12xnebeh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            max_divisor = i;\n            max_divisor_square\
    \ = max_divisor * i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpgn_hhtes.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgn_hhtes.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let largest:\
    \ number = 1;\n    let divisor: number = 2;\n    while (divisor <= n) {\n    \
    \    if (n % divisor === 0) {\n            largest = divisor;\n        }\n   \
    \     divisor++;\n    }\n    return largest;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5v_6lkqw.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5v_6lkqw.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      \
    \  max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3_pyhym1.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3_pyhym1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = n;\n  let max_divisor_index = -1;\n  for (let i = 1; i < n; i++) {\n    if\
    \ (n % i === 0) {\n      max_divisor = i;\n      max_divisor_index = i;\n    }\n\
    \  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4exmy78m.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4exmy78m.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_value = 1;\n    let max_divisor_value_index = 0;\n\
    \    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            if\
    \ (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value\
    \ = i;\n                max_divisor_value_index = i;\n            }\n        }\n\
    \    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977644
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_value = i;\n            }\n\
    \        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp0gb5dsty.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0gb5dsty.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = n;\n  let max_divisor_index = 0;\n  for (let i = 1; i < n; i++) {\n    if\
    \ (n % i === 0) {\n      max_divisor = i;\n      max_divisor_index = i;\n    }\n\
    \  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor\
    \ = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4yvrreut.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4yvrreut.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = n;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor\
    \ = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpl5gvu4y5.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl5gvu4y5.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977644
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tlet max_divisor_p = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tlet divisor_p\
    \ = n / i;\n\t\tif (divisor_p > max_divisor_p) {\n\t\t\tmax_divisor = i;\n\t\t\
    \tmax_divisor_p = divisor_p;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpiw8c8pun.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiw8c8pun.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_index = i;\n            }\n \
    \       }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_rer5atn.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_rer5atn.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977640
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square\
    \ = i * i;\n            if (divisor > max_divisor) {\n                max_divisor\
    \ = divisor;\n                max_divisor_square = divisor_square;\n         \
    \   }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpobdrl8tc.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpobdrl8tc.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            if (max_divisor < i) {\n               \
    \ max_divisor = i;\n                max_divisor_index = i;\n            }\n  \
    \      }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_value = i;\n            }\n \
    \       }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp1lsu6msc.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1lsu6msc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n  \
    \      if (n % i === 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_index = i;\n            }\n \
    \       }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcddlcg0l.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcddlcg0l.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_value = i;\n            }\n\
    \        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp0gb5dsty.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0gb5dsty.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4exmy78m.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4exmy78m.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square\
    \ = i * i;\n            if (divisor_square > max_divisor_square) {\n         \
    \       max_divisor = divisor;\n                max_divisor_square = divisor_square;\n\
    \            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdwzm3yrt.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdwzm3yrt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor_p\
    \ = i;\n            let divisor_p2 = i;\n            if (i === n) {\n        \
    \        divisor_p2 = n;\n            }\n            if (divisor_p2 > max_divisor_p2)\
    \ {\n                max_divisor_p2 = divisor_p2;\n                max_divisor_p\
    \ = divisor_p;\n            }\n        }\n    }\n    return max_divisor_p2;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpaukfxis7.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaukfxis7.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977645
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_value = i;\n            }\n \
    \       }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpux40184b.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpux40184b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_value = i;\n            }\n\
    \        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp0gb5dsty.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0gb5dsty.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 1;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            let p = Math.floor(n / i);\n            if\
    \ (p > max_divisor_p) {\n                max_divisor_p = p;\n                max_divisor\
    \ = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpnbelfw6i.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnbelfw6i.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 0;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      let divisor_p = i;\n      let divisor = i;\n      while\
    \ (divisor < n) {\n        divisor *= 2;\n        divisor_p *= 2;\n      }\n \
    \     if (divisor > max_divisor) {\n        max_divisor = divisor;\n        max_divisor_p\
    \ = divisor_p;\n      }\n    }\n  }\n  return max_divisor_p;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpuwj4urll.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuwj4urll.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977645
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_index = i;\n            }\n \
    \       }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpc16o74oa.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc16o74oa.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 2
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    let max_divisor_p3\
    \ = 0;\n    let max_divisor_p4 = 0;\n    let max_divisor_p5 = 0;\n    let max_divisor_p6\
    \ = 0;\n    let max_divisor_p7 = 0;\n    let max_divisor_p8 = 0;\n    let max_divisor_p9\
    \ = 0;\n    let max_divisor_p10 = 0;\n    let max_divisor_p11 = 0;\n    let max_divisor_p12\
    \ = 0;\n    let max_divisor_p13 = 0;\n    let max_divisor_p14 = 0;\n    let max_divisor_p15\
    \ = 0;\n    let max_divisor_p16 = 0;\n    let max_divisor_p17 = 0;\n    let max_divisor_p18\
    \ = 0;\n    let max_divisor_p19 = 0;\n    let max_divisor_p20 = 0;\n    let max_divisor_p21\
    \ = 0;\n    let max_divisor_p22 = 0;\n    let max_divisor_p23 = 0;\n    let max_divisor_p24\
    \ = 0;\n    let max_divisor_p25 = 0;\n    let max_divisor_p26 = 0;\n    let max_divisor_p27\
    \ = 0;\n    let max_divisor_p28 = 0;\n    let max_divisor_p29 = 0;\n    let max_divisor_p30\
    \ = 0;\n    let max_divisor_p31 = 0;\n    let max_divisor_p32 = 0;\n    let max_divisor_p33\
    \ = 0;\n    let max_divisor_p34 = 0;\n    let max_divisor_p35 = 0;\n    let max_divisor_p36\
    \ = 0;\n    let max_divisor_p37 = 0;\n    let max_divisor_p38 = 0;\n    let max_divisor_p39\
    \ = 0;\n    let max_divisor_p40 = 0;\n    let max_divisor_p41 = 0;\n    let max_divisor_p42\
    \ = 0;\n    let max_divisor_p43 = 0;\n    let max_divisor_p44 = 0;\n    let max_divisor_p45\
    \ = 0;\n    let max_divisor_p46 = 0;\n    let max_divisor_p47 = 0;\n    let max_divisor_p48\
    \ = 0;\n    let max_divisor_p49 = 0;\n    let max_divisor_p50 = 0;\n    let max_divisor_p51\
    \ = 0;\n    let max_divisor_p52 = 0;\n    let max_divisor_p53 = 0;\n    let max_divisor_p54\
    \ = 0;\n    let max_divisor_p55 = 0;\n    let max_divisor_p56 = 0;\n    let max_divisor_p57\
    \ = 0;\n    let max_divisor_p58 = 0;\n    let max_divisor_p59 = 0;\n    let max_divisor_p60\
    \ = 0;\n    let max_divisor_p61 = 0;\n    let max_divisor_p62 = 0;\n    let max_divisor_p63\
    \ = 0;\n    let max_divisor_p64 = 0;\n    let max_divisor_p65 = 0;\n    let max_divisor_p66\
    \ = 0;\n    let max_divisor_p67 = 0;\n    let max_divisor_p68 = 0;\n    let max_divisor_p69\
    \ = 0;\n    let max_divisor_p70 = 0;\n    let max_divisor_p71 = 0;\n    let max_divisor_p72\
    \ = 0;\n    let max_divisor_p73 = 0;\n    let \ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyzs3iv6_.ts(78,9): error TS1005: '','' expected.

    ../../../../../tmp/tmpyzs3iv6_.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659977645
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i == 0) {\n            let divisor = i;\n            let divisor_square\
    \ = i * i;\n            if (divisor_square > max_divisor_square) {\n         \
    \       max_divisor = divisor;\n                max_divisor_square = divisor_square;\n\
    \            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp2l3xzmsk.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2l3xzmsk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tlet max_divisor_index = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif\
    \ (n % i == 0) {\n\t\t\tmax_divisor = i;\n\t\t\tmax_divisor_index = i;\n\t\t}\n\
    \t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpaf2zul4b.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaf2zul4b.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n  \
    \      if (n % i === 0) {\n            max_divisor = i;\n            max_divisor_index\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_square = max_divisor;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i === 0) {\n      max_divisor = i;\n      max_divisor_square\
    \ = max_divisor * max_divisor;\n    }\n  }\n  return max_divisor_square;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp09dfhlbr.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp09dfhlbr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1;\
    \ i <= n; i++) {\n    if (n % i === 0) {\n      let divisor_p = i;\n      let\
    \ divisor_p2 = i;\n      for (let j = 1; j <= n; j++) {\n        if (n % j ===\
    \ 0) {\n          divisor_p2 = j;\n          break;\n        }\n      }\n    \
    \  if (divisor_p2 > max_divisor_p2) {\n        max_divisor_p2 = divisor_p2;\n\
    \        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp9vc_v_w_.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9vc_v_w_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = max_divisor * max_divisor;\n    for (let\
    \ i = 1; i <= n; i++) {\n        let divisor = i;\n        while (divisor <= max_divisor_square)\
    \ {\n            if (n % divisor === 0) {\n                max_divisor = divisor;\n\
    \                break;\n            }\n            divisor++;\n        }\n  \
    \  }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpu6pj18fv.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu6pj18fv.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_value = i;\n            }\n\
    \        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpn57f23kb.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn57f23kb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977635
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            if (max_divisor_square % i === 0) {\n\
    \                max_divisor = i;\n                max_divisor_square = max_divisor\
    \ * i;\n            } else {\n                max_divisor_square = max_divisor\
    \ * i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp5333znc5.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5333znc5.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 0;\n  let max_divisor_value = 0;\n  for (let i = 1; i <= n; i++) {\n    if\
    \ (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n  \
    \    }\n      if (max_divisor_value < n) {\n        max_divisor_value = n;\n \
    \     }\n    }\n  }\n  return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7om2zhs_.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7om2zhs_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_value = i;\n            }\n\
    \        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpn57f23kb.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn57f23kb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977635
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n     \
    \   max_divisor_p = i;\n      }\n    } else {\n      if (max_divisor_p < i) {\n\
    \        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpirhofwgd.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpirhofwgd.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1;\
    \ i <= n; i++) {\n    if (n % i === 0) {\n      let p = Math.floor(n / i);\n \
    \     if (p > max_divisor_p) {\n        max_divisor_p = p;\n        max_divisor_p2\
    \ = i;\n      }\n    }\n  }\n  return max_divisor_p2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpknltrmdz.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpknltrmdz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n  \
    \      if (n % i === 0) {\n            if (max_divisor < i) {\n              \
    \  max_divisor = i;\n                max_divisor_index = i;\n            }\n \
    \       }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcddlcg0l.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcddlcg0l.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n     \
    \   max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpn_vv0gz9.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn_vv0gz9.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tlet max_divisor_p = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n\
    \ % i == 0) {\n\t\t\tlet p = Math.floor(n / i);\n\t\t\tif (p > max_divisor_p)\
    \ {\n\t\t\t\tmax_divisor_p = p;\n\t\t\t\tmax_divisor = i;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpmt0xogff.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmt0xogff.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor\
    \ < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n\
    \                max_divisor_p2 = i;\n            }\n            if (max_divisor_p\
    \ < i) {\n                max_divisor_p = i;\n                max_divisor_p2 =\
    \ i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsibo9lqx.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsibo9lqx.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n     \
    \   max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor_p;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppfrtv0cl.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppfrtv0cl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 0;\n  let max_divisor_value = 0;\n  for (let i = 1; i <= n; i++) {\n    if\
    \ (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n  \
    \      max_divisor_value = i;\n      }\n    }\n  }\n  return max_divisor_value;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpfzdcdvl4.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfzdcdvl4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor\
    \ = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4yvrreut.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4yvrreut.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      \
    \  max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3_pyhym1.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3_pyhym1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      \
    \  max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3_pyhym1.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3_pyhym1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor\
    \ = 1;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor\
    \ = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4yvrreut.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4yvrreut.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977641
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let largest\
    \ = 1;\n    let divisor = 1;\n    while (divisor < n) {\n        divisor *= 2;\n\
    \        if (divisor > n) {\n            divisor = n;\n        }\n        if (divisor\
    \ > largest) {\n            largest = divisor;\n        }\n    }\n    return largest;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5mefibf7.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5mefibf7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let largest\
    \ = n;\n    let divisor = 1;\n    while (divisor < n) {\n        if (n % divisor\
    \ === 0) {\n            largest = divisor;\n        }\n        divisor++;\n  \
    \  }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            let divisor = i;\n            if (divisor\
    \ > max_divisor_value) {\n                max_divisor_value = divisor;\n     \
    \           max_divisor = i;\n            }\n        }\n    }\n    return max_divisor;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpal3th85v.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpal3th85v.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            if (max_divisor < i) {\n               \
    \ max_divisor = i;\n                max_divisor_index = i;\n            }\n  \
    \      }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpgreaurei.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgreaurei.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n     \
    \   max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpn_vv0gz9.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn_vv0gz9.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977643
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 2
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 1;\n    let max_divisor_p1 = 1;\n    let max_divisor_p2\
    \ = 1;\n    let max_divisor_p3 = 1;\n    let max_divisor_p4 = 1;\n    let max_divisor_p5\
    \ = 1;\n    let max_divisor_p6 = 1;\n    let max_divisor_p7 = 1;\n    let max_divisor_p8\
    \ = 1;\n    let max_divisor_p9 = 1;\n    let max_divisor_p10 = 1;\n    let max_divisor_p11\
    \ = 1;\n    let max_divisor_p12 = 1;\n    let max_divisor_p13 = 1;\n    let max_divisor_p14\
    \ = 1;\n    let max_divisor_p15 = 1;\n    let max_divisor_p16 = 1;\n    let max_divisor_p17\
    \ = 1;\n    let max_divisor_p18 = 1;\n    let max_divisor_p19 = 1;\n    let max_divisor_p20\
    \ = 1;\n    let max_divisor_p21 = 1;\n    let max_divisor_p22 = 1;\n    let max_divisor_p23\
    \ = 1;\n    let max_divisor_p24 = 1;\n    let max_divisor_p25 = 1;\n    let max_divisor_p26\
    \ = 1;\n    let max_divisor_p27 = 1;\n    let max_divisor_p28 = 1;\n    let max_divisor_p29\
    \ = 1;\n    let max_divisor_p30 = 1;\n    let max_divisor_p31 = 1;\n    let max_divisor_p32\
    \ = 1;\n    let max_divisor_p33 = 1;\n    let max_divisor_p34 = 1;\n    let max_divisor_p35\
    \ = 1;\n    let max_divisor_p36 = 1;\n    let max_divisor_p37 = 1;\n    let max_divisor_p38\
    \ = 1;\n    let max_divisor_p39 = 1;\n    let max_divisor_p40 = 1;\n    let max_divisor_p41\
    \ = 1;\n    let max_divisor_p42 = 1;\n    let max_divisor_p43 = 1;\n    let max_divisor_p44\
    \ = 1;\n    let max_divisor_p45 = 1;\n    let max_divisor_p46 = 1;\n    let max_divisor_p47\
    \ = 1;\n    let max_divisor_p48 = 1;\n    let max_divisor_p49 = 1;\n    let max_divisor_p50\
    \ = 1;\n    let max_divisor_p51 = 1;\n    let max_divisor_p52 = 1;\n    let max_divisor_p53\
    \ = 1;\n    let max_divisor_p54 = 1;\n    let max_divisor_p55 = 1;\n    let max_divisor_p56\
    \ = 1;\n    let max_divisor_p57 = 1;\n    let max_divisor_p58 = 1;\n    let max_divisor_p59\
    \ = 1;\n    let max_divisor_p60 = 1;\n    let max_divisor_p61 = 1;\n    let max_divisor_p62\
    \ = 1;\n    let max_divisor_p63 = 1;\n    let max_divisor_p64 = 1;\n    let max_divisor_p65\
    \ = 1;\n    let max_divisor_p66 = 1;\n    let max_divisor_p67 = 1;\n    let max_divisor_p68\
    \ = 1;\n    let max_divisor_p69 = 1;\n    let max_divisor_p70 = 1;\n    let max_divisor_p71\
    \ = 1;\n    let \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptsq6ppu_.ts(77,9): error TS1005: '','' expected.

    ../../../../../tmp/tmptsq6ppu_.ts(90,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n  \
    \      if (n % i == 0) {\n            if (max_divisor < i) {\n               \
    \ max_divisor = i;\n                max_divisor_index = i;\n            }\n  \
    \      }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpzfbq1k1h.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzfbq1k1h.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977638
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor_p\
    \ = i;\n            let divisor_p2 = i;\n            if (max_divisor < divisor_p)\
    \ {\n                max_divisor = divisor_p;\n                max_divisor_p =\
    \ divisor_p2;\n            }\n            if (max_divisor < divisor_p2) {\n  \
    \              max_divisor = divisor_p2;\n                max_divisor_p2 = divisor_p;\n\
    \            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7szalwfa.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7szalwfa.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = n;\n  let max_divisor_index = 0;\n  for (let i = 1; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      max_divisor = i;\n      max_divisor_index = i;\n    }\n\
    \  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor\
    \ = 1;\n  let max_divisor_p = 1;\n  for (let i = 1; i <= n; i++) {\n    if (n\
    \ % i === 0) {\n      let p = Math.floor(n / i);\n      if (p > max_divisor_p)\
    \ {\n        max_divisor_p = p;\n        max_divisor = i;\n      }\n    }\n  }\n\
    \  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmprn4xydrh.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprn4xydrh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977646
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n \
    \       if (n % i === 0) {\n            if (max_divisor < i) {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4exmy78m.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4exmy78m.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor\
    \ = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor\
    \ = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpffkvr0ch.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffkvr0ch.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977636

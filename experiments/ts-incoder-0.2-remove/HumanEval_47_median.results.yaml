language: ts
name: HumanEval_47_median
results:
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)]\n\
    \  } else {\n    return (l[l.length / 2 - 1] + l[l.length / 2]) / 2\n  }\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpuqldes5y.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuqldes5y.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[(l.length / 2) - 1];\n\
    \    }\n    return l[(l.length / 2)];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpqfc6389a.js:11:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqfc6389a.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  return (l[(l.length / 2) - 1] + l[(l.length / 2)]) / 2;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpw2qrlpew.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw2qrlpew.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  return (l[l.length / 2] + l[l.length / 2 - 1]) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpdccad_vf.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdccad_vf.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const left =\
    \ median(l.slice(0, mid));\n  const right = median(l.slice(mid));\n  return ((left\
    \ + right) / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpkhajoe8o.js:10\n    const left = median(l.slice(0, mid));\n   \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmpkhajoe8o.js:10:27)\n \
    \   at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid - 1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmptdttoqep.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptdttoqep.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const left =\
    \ median(l.slice(0, mid));\n  const right = median(l.slice(mid));\n  return ((left\
    \ + right) / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpkhajoe8o.js:10\n    const left = median(l.slice(0, mid));\n   \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmpkhajoe8o.js:10:27)\n \
    \   at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[(l.length / 2) - 1];\n\
    \    }\n    return l[l.length / 2];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpbn7pk0bq.js:11:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbn7pk0bq.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)]\n\
    \  } else {\n    return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length /\
    \ 2) - 1]) / 2\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpazf8bkjq.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpazf8bkjq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length % 2 === 0) {\n\
    \    return l[mid];\n  } else {\n    return (l[mid] + l[mid-1]) / 2;\n  }\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpkkupb6nw.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkkupb6nw.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot compute\
    \ median of an empty list');\n    }\n    const middle = Math.floor(l.length /\
    \ 2);\n    if (middle === 0) {\n        return l[0];\n    }\n    if (middle ===\
    \ 1) {\n        return l[l.length - 1];\n    }\n    const medianValue = l[middle];\n\
    \    const leftMedian = median(l.slice(0, middle));\n    const rightMedian = median(l.slice(middle\
    \ + 1));\n    return medianValue + Math.max(leftMedian, rightMedian);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpn8pa_1n0.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn8pa_1n0.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw new Error(\"Cannot calculate median\
    \ of an empty list\");\n  }\n  const middle = Math.floor(l.length / 2);\n  if\
    \ (middle === 0) {\n    return l[0];\n  }\n  if (middle === 1) {\n    return l[l.length\
    \ - 1];\n  }\n  const leftMedian = median(l.slice(0, middle));\n  const rightMedian\
    \ = median(l.slice(middle));\n  return ((leftMedian + rightMedian) / 2);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmps7j7_0hf.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps7j7_0hf.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    let sortedArray = l.sort((a: number, b: number) => a - b);\n \
    \   let middle = Math.floor(sortedArray.length / 2);\n    if (sortedArray.length\
    \ % 2 === 0) {\n        return sortedArray[middle];\n    } else {\n        return\
    \ (sortedArray[middle - 1] + sortedArray[middle]) / 2;\n    }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpwy9lyap_.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwy9lyap_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw new Error('Cannot calculate median\
    \ of an empty list');\n  }\n  const mid = Math.floor(l.length / 2);\n  if (l.length\
    \ % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid] + l[mid-1]) / 2;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp3g5brfd6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3g5brfd6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  const mid = Math.floor(l.length / 2);\n  const left = l.slice(0, mid);\n\
    \  const right = l.slice(mid);\n  return median(left) + median(right);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpa4owgwny.js:7\n    const left = l.slice(0, mid);\n            \
    \       ^\n\nRangeError: Maximum call stack size exceeded\n    at Array.slice\
    \ (<anonymous>)\n    at median (/tmp/tmpa4owgwny.js:7:20)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  const mid = Math.floor(l.length / 2);\n  const left = l.slice(0, mid);\n\
    \  const right = l.slice(mid);\n  return median(left) + median(right);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpa4owgwny.js:7\n    const left = l.slice(0, mid);\n            \
    \       ^\n\nRangeError: Maximum call stack size exceeded\n    at Array.slice\
    \ (<anonymous>)\n    at median (/tmp/tmpa4owgwny.js:7:20)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  return (l[l.length / 2] + l[l.length / 2 - 1]) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpdccad_vf.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdccad_vf.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot compute\
    \ median of an empty list');\n    }\n    const mid = Math.floor(l.length / 2);\n\
    \    if (l.length % 2 === 0) {\n        return l[mid];\n    }\n    const leftMedian\
    \ = median(l.slice(0, mid));\n    const rightMedian = median(l.slice(mid));\n\
    \    return leftMedian + rightMedian / 2;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmptbnmccai.js:4\n        throw new RangeError('Cannot compute median\
    \ of an empty list');\n        ^\n\nRangeError: Cannot compute median of an empty\
    \ list\n    at median (/tmp/tmptbnmccai.js:4:15)\n    at median (/tmp/tmptbnmccai.js:10:24)\n\
    \    at median (/tmp/tmptbnmccai.js:10:24)\n    at median (/tmp/tmptbnmccai.js:11:25)\n\
    \    at test (/tmp/tmptbnmccai.js:17:22)\n    at Object.<anonymous> (/tmp/tmptbnmccai.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const left =\
    \ median(l.slice(0, mid));\n  const right = median(l.slice(mid));\n  return ((left\
    \ + right) / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpkhajoe8o.js:10\n    const left = median(l.slice(0, mid));\n   \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmpkhajoe8o.js:10:27)\n \
    \   at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 2
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw new Error('Cannot calculate median\
    \ of an empty list');\n  }\n  if (l.length === 1) {\n    return l[0];\n  }\n \
    \ const middle = Math.floor(l.length / 2);\n  if (l.length % 2 === 0) {\n    return\
    \ l[middle];\n  }\n  return l[middle-1] + median(l[middle]);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpmg16e331.ts(13,31): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error(\"Cannot calculate\
    \ median of an empty list\");\n    }\n    const middle = Math.floor(l.length /\
    \ 2);\n    if (middle === 0) {\n        return l[0];\n    }\n    if (middle ===\
    \ 1) {\n        return l[l.length - 1];\n    }\n    const medianValue = l[middle];\n\
    \    let leftMedian = median(l);\n    let rightMedian = median(l.slice(0, middle\
    \ + 1));\n    if (leftMedian > rightMedian) {\n        return leftMedian;\n  \
    \  }\n    return rightMedian;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp_9wanolm.js:6\n    const middle = Math.floor(l.length / 2);\n \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Math.floor (<anonymous>)\n    at median (/tmp/tmp_9wanolm.js:6:25)\n   \
    \ at median (/tmp/tmp_9wanolm.js:14:22)\n    at median (/tmp/tmp_9wanolm.js:14:22)\n\
    \    at median (/tmp/tmp_9wanolm.js:14:22)\n    at median (/tmp/tmp_9wanolm.js:14:22)\n\
    \    at median (/tmp/tmp_9wanolm.js:14:22)\n    at median (/tmp/tmp_9wanolm.js:14:22)\n\
    \    at median (/tmp/tmp_9wanolm.js:14:22)\n    at median (/tmp/tmp_9wanolm.js:14:22)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[Math.floor(l.length\
    \ / 2)];\n    } else {\n        return (l[l.length / 2] + l[l.length / 2 - 1])\
    \ / 2;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp6gimnujy.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6gimnujy.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length % 2 === 0) {\n\
    \    return l[mid];\n  }\n  return (l[mid] + l[mid-1]) / 2;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpynx1_b2x.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpynx1_b2x.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length % 2 === 0) {\n\
    \    return l[mid];\n  } else {\n    return (l[mid] + l[mid-1]) / 2;\n  }\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpkkupb6nw.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkkupb6nw.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedArray = l.slice().sort((a: number, b: number) => a - b);\n\
    \  if (sortedArray.length % 2 === 0) {\n    return sortedArray[Math.floor(sortedArray.length\
    \ / 2)];\n  } else {\n    return sortedArray[Math.floor(sortedArray.length / 2)\
    \ - 1];\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpvarofwxc.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvarofwxc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  return (l[l.length / 2 - 1] + l[l.length / 2]) / 2;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp54u4gp6w.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp54u4gp6w.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  return l[(l.length / 2)];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpnbjvzvnv.js:11:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpnbjvzvnv.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot calculate\
    \ median of an empty list');\n    }\n    const middle = Math.floor(l.length /\
    \ 2);\n    if (middle === 0) {\n        return l[middle];\n    }\n    if (middle\
    \ === 1) {\n        return l[0];\n    }\n    const medianValue = l[middle];\n\
    \    let leftMedian = median(l);\n    let rightMedian = median(l.slice(middle\
    \ + 1));\n    if (leftMedian > rightMedian) {\n        return leftMedian;\n  \
    \  }\n    return rightMedian;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpb1n_hn4e.js:3\n    if (l.length === 0) {\n          ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at median (/tmp/tmpb1n_hn4e.js:3:11)\n\
    \    at median (/tmp/tmpb1n_hn4e.js:14:22)\n    at median (/tmp/tmpb1n_hn4e.js:14:22)\n\
    \    at median (/tmp/tmpb1n_hn4e.js:14:22)\n    at median (/tmp/tmpb1n_hn4e.js:14:22)\n\
    \    at median (/tmp/tmpb1n_hn4e.js:14:22)\n    at median (/tmp/tmpb1n_hn4e.js:14:22)\n\
    \    at median (/tmp/tmpb1n_hn4e.js:14:22)\n    at median (/tmp/tmpb1n_hn4e.js:14:22)\n\
    \    at median (/tmp/tmpb1n_hn4e.js:14:22)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    let mid = l.length / 2;\n    if (l.length % 2 === 0) {\n     \
    \   return l[mid];\n    } else {\n        return (l[mid] + l[mid-1]) / 2;\n  \
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpjm6bdorm.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjm6bdorm.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[(l.length / 2) - 1];\n\
    \    }\n    return l[(l.length / 2)];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpqfc6389a.js:11:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqfc6389a.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)]\n\
    \  } else {\n    return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length /\
    \ 2) - 1]) / 2\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpazf8bkjq.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpazf8bkjq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot calculate\
    \ median of an empty list');\n    }\n    const mid = Math.floor(l.length / 2);\n\
    \    if (l.length % 2 === 0) {\n        return l[mid];\n    }\n    return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpwenc67zn.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwenc67zn.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)]\n\
    \  } else {\n    return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length /\
    \ 2) - 1]) / 2\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpazf8bkjq.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpazf8bkjq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[Math.floor(l.length\
    \ / 2)];\n    } else {\n        return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length\
    \ / 2) - 1]) / 2;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpvvq3uem6.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvvq3uem6.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error(\"Cannot calculate\
    \ median of an empty list\");\n    }\n    let middle = Math.floor(l.length / 2);\n\
    \    let median = l[middle];\n    for (let i = middle + 1; i < l.length; i++)\
    \ {\n        if (l[i] < median) {\n            median = l[i];\n        }\n   \
    \ }\n    return median;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpsq2ajlqf.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsq2ajlqf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)]\n\
    \  } else {\n    return (l[l.length / 2 - 1] + l[l.length / 2]) / 2\n  }\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpuqldes5y.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuqldes5y.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = l.length\
    \ / 2;\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const left = median(l.slice(0,\
    \ mid));\n  const right = median(l.slice(mid));\n  return ((left + right) / 2);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3o2am12u.js:10\n    const left = median(l.slice(0, mid));\n   \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmp3o2am12u.js:10:27)\n \
    \   at median (/tmp/tmp3o2am12u.js:11:19)\n    at median (/tmp/tmp3o2am12u.js:11:19)\n\
    \    at median (/tmp/tmp3o2am12u.js:11:19)\n    at median (/tmp/tmp3o2am12u.js:11:19)\n\
    \    at median (/tmp/tmp3o2am12u.js:11:19)\n    at median (/tmp/tmp3o2am12u.js:11:19)\n\
    \    at median (/tmp/tmp3o2am12u.js:11:19)\n    at median (/tmp/tmp3o2am12u.js:11:19)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const left =\
    \ median(l.slice(0, mid));\n  const right = median(l.slice(mid));\n  return l.length\
    \ % 2 ? Math.max(left, right) : Math.min((left + right) / 2, right);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpyivs65ca.js:10\n    const left = median(l.slice(0, mid));\n   \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmpyivs65ca.js:10:27)\n \
    \   at median (/tmp/tmpyivs65ca.js:11:19)\n    at median (/tmp/tmpyivs65ca.js:11:19)\n\
    \    at median (/tmp/tmpyivs65ca.js:11:19)\n    at median (/tmp/tmpyivs65ca.js:11:19)\n\
    \    at median (/tmp/tmpyivs65ca.js:11:19)\n    at median (/tmp/tmpyivs65ca.js:11:19)\n\
    \    at median (/tmp/tmpyivs65ca.js:11:19)\n    at median (/tmp/tmpyivs65ca.js:11:19)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  return l[mid];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpcmvo4qn6.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcmvo4qn6.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  const mid = Math.floor(l.length / 2);\n  return (l[mid] + l[mid - 1])\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpz425rnlv.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz425rnlv.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const leftMedian\
    \ = median(l.slice(0, mid));\n  const rightMedian = median(l.slice(mid));\n  return\
    \ leftMedian + rightMedian / 2;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmphj0czuow.js:10\n    const leftMedian = median(l.slice(0, mid));\n\
    \                                ^\n\nRangeError: Maximum call stack size exceeded\n\
    \    at Array.slice (<anonymous>)\n    at median (/tmp/tmphj0czuow.js:10:33)\n\
    \    at median (/tmp/tmphj0czuow.js:11:25)\n    at median (/tmp/tmphj0czuow.js:11:25)\n\
    \    at median (/tmp/tmphj0czuow.js:11:25)\n    at median (/tmp/tmphj0czuow.js:11:25)\n\
    \    at median (/tmp/tmphj0czuow.js:11:25)\n    at median (/tmp/tmphj0czuow.js:11:25)\n\
    \    at median (/tmp/tmphj0czuow.js:11:25)\n    at median (/tmp/tmphj0czuow.js:11:25)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw new Error('Cannot compute median\
    \ of an empty list');\n  }\n  const mid = Math.floor(l.length / 2);\n  if (l.length\
    \ % 2 === 0) {\n    return l[mid];\n  }\n  const leftMedian = median(l.slice(0,\
    \ mid));\n  const rightMedian = median(l.slice(mid));\n  return leftMedian + rightMedian\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp0rk87zjt.js:4\n        throw new Error('Cannot compute median of\
    \ an empty list');\n        ^\n\nError: Cannot compute median of an empty list\n\
    \    at median (/tmp/tmp0rk87zjt.js:4:15)\n    at median (/tmp/tmp0rk87zjt.js:10:24)\n\
    \    at median (/tmp/tmp0rk87zjt.js:10:24)\n    at median (/tmp/tmp0rk87zjt.js:11:25)\n\
    \    at test (/tmp/tmp0rk87zjt.js:17:22)\n    at Object.<anonymous> (/tmp/tmp0rk87zjt.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedArray = l.sort((a, b) => a - b);\n  let middle = Math.floor(sortedArray.length\
    \ / 2);\n  return sortedArray[middle];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmp4tc1x76n.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tc1x76n.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw new Error(\"Cannot calculate median\
    \ of an empty list\");\n  }\n  return l.reduce((p, c) => c + p, 0) / l.length;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n171.66666666666666\n\
    \nshould loosely deep-equal\n\n8\n    at test (/tmp/tmpxnyvceii.js:12:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpxnyvceii.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 171.66666666666666,\n\
    \  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length % 2 === 0) {\n\
    \    return l[mid];\n  } else {\n    return (l[mid - 1] + l[mid]) / 2;\n  }\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpv4ryx74x.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv4ryx74x.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedArray = l.slice().sort((a: number, b: number) => a - b);\n\
    \  let middle = Math.floor(sortedArray.length / 2);\n  if (sortedArray.length\
    \ % 2 === 0) {\n    return sortedArray[middle];\n  } else {\n    return (sortedArray[middle\
    \ - 1] + sortedArray[middle]) / 2;\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp625gonws.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp625gonws.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length % 2 === 0) {\n\
    \    return l[mid];\n  } else {\n    return (l[mid] + l[mid-1]) / 2;\n  }\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpkkupb6nw.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkkupb6nw.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2) {\n    return l[mid];\n  }\n  const leftMedian =\
    \ median(l.slice(0, mid));\n  const rightMedian = median(l.slice(mid));\n  return\
    \ leftMedian + rightMedian / 2;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpqnsqr6z1.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqnsqr6z1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot compute\
    \ median of an empty list');\n    }\n    const mid = Math.floor(l.length / 2);\n\
    \    if (l.length % 2 === 0) {\n        return l[mid];\n    }\n    const leftMedian\
    \ = median(l.slice(0, mid));\n    const rightMedian = median(l.slice(mid));\n\
    \    return leftMedian + rightMedian / 2;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmptbnmccai.js:4\n        throw new RangeError('Cannot compute median\
    \ of an empty list');\n        ^\n\nRangeError: Cannot compute median of an empty\
    \ list\n    at median (/tmp/tmptbnmccai.js:4:15)\n    at median (/tmp/tmptbnmccai.js:10:24)\n\
    \    at median (/tmp/tmptbnmccai.js:10:24)\n    at median (/tmp/tmptbnmccai.js:11:25)\n\
    \    at test (/tmp/tmptbnmccai.js:17:22)\n    at Object.<anonymous> (/tmp/tmptbnmccai.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[Math.floor(l.length\
    \ / 2)];\n    }\n    else {\n        return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length\
    \ / 2) - 1]) / 2;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpk3ufzw8o.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpk3ufzw8o.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[Math.floor(l.length\
    \ / 2)];\n    }\n    else {\n        var mid = Math.floor(l.length / 2);\n   \
    \     var left = l.slice(0, mid);\n        var right = l.slice(mid);\n       \
    \ return median(left) + median(right);\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpln_51et0.js:8\n        var left = l.slice(0, mid);\n          \
    \           ^\n\nRangeError: Maximum call stack size exceeded\n    at Array.slice\
    \ (<anonymous>)\n    at median (/tmp/tmpln_51et0.js:8:22)\n    at median (/tmp/tmpln_51et0.js:10:31)\n\
    \    at median (/tmp/tmpln_51et0.js:10:31)\n    at median (/tmp/tmpln_51et0.js:10:31)\n\
    \    at median (/tmp/tmpln_51et0.js:10:31)\n    at median (/tmp/tmpln_51et0.js:10:31)\n\
    \    at median (/tmp/tmpln_51et0.js:10:31)\n    at median (/tmp/tmpln_51et0.js:10:31)\n\
    \    at median (/tmp/tmpln_51et0.js:10:31)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot compute\
    \ median of an empty list');\n    }\n    const middle = Math.floor(l.length /\
    \ 2);\n    if (middle === 0) {\n        return l[0];\n    }\n    if (middle ===\
    \ 1) {\n        return l[l.length - 1];\n    }\n    const medianValue = l[middle];\n\
    \    const leftMedian = median(l.slice(0, middle));\n    const rightMedian = median(l.slice(middle\
    \ + 1));\n    return medianValue + leftMedian + rightMedian;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpqn2dzcty.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqn2dzcty.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error('Cannot calculate\
    \ median of an empty list');\n    }\n    let middle = Math.floor(l.length / 2);\n\
    \    if (middle === 0) {\n        return l[0];\n    }\n    if (middle === 1) {\n\
    \        return l[l.length - 1];\n    }\n    let medianOfMiddle = Math.floor(middle);\n\
    \    let leftMedian = median(l.slice(0, middle));\n    let rightMedian = median(l.slice(middle\
    \ + 1));\n    return ((leftMedian + rightMedian) / 2);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmp1bgsvtz_.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1bgsvtz_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw new Error(\"Cannot compute median\
    \ of an empty list\");\n  }\n  const mid = Math.floor(l.length / 2);\n  if (l.length\
    \ % 2 === 0) {\n    return l[mid];\n  } else {\n    return (l[mid - 1] + l[mid])\
    \ / 2;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpaxaapw6t.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaxaapw6t.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length % 2 === 0) {\n\
    \    return l[mid];\n  }\n  else {\n    return (l[mid] + l[mid-1]) / 2;\n  }\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpryh6xbcu.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpryh6xbcu.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)]\n\
    \  } else {\n    return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length /\
    \ 2) - 1]) / 2\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpazf8bkjq.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpazf8bkjq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[l.length / 2 - 1]\n  } else\
    \ {\n    return l[l.length / 2]\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpzovtu6qq.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzovtu6qq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2) {\n    return l[mid];\n  }\n  return (l[mid] + l[mid-1])\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpjx144ixz.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjx144ixz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334948
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[Math.floor(l.length\
    \ / 2)];\n    } else {\n        var a = l[Math.floor(l.length / 2)];\n       \
    \ var b = l[l.length - 1];\n        return a + b / 2;\n    }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpmg9szey1.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmg9szey1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length / 2) - 1])\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpn32fzjts.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn32fzjts.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334948
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedArray = l.sort((a: number, b: number) => a - b);\n  if\
    \ (sortedArray.length % 2 === 0) {\n    return sortedArray[Math.floor(sortedArray.length\
    \ / 2)];\n  } else {\n    return sortedArray[Math.floor(sortedArray.length / 2)\
    \ - 1];\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpw94tqj8n.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw94tqj8n.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedArray = l.sort((a, b) => a - b);\n  let middle = Math.floor(sortedArray.length\
    \ / 2);\n  if (sortedArray.length % 2 === 0) {\n    return sortedArray[middle];\n\
    \  } else {\n    return (sortedArray[middle - 1] + sortedArray[middle]) / 2;\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp10mvbktt.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp10mvbktt.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = l.length\
    \ / 2;\n  return l[mid];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp3jmvy0cp.js:12:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3jmvy0cp.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length / 2) - 1])\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpn32fzjts.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn32fzjts.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334948
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[l.length / 2 - 1]\n  } else\
    \ {\n    return l[l.length / 2]\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpzovtu6qq.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzovtu6qq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[(l.length / 2) - 1];\n\
    \    } else {\n        return l[(l.length / 2)];\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp7kvjvpu3.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7kvjvpu3.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot calculate\
    \ median of an empty list');\n    }\n    const middle = Math.floor(l.length /\
    \ 2);\n    if (middle === 0) {\n        return l[0];\n    }\n    if (middle ===\
    \ 1) {\n        return l[l.length - 1];\n    }\n    const medianValue = l[middle];\n\
    \    const leftMedian = median(l.slice(0, middle));\n    const rightMedian = median(l.slice(middle\
    \ + 1));\n    return medianValue + Math.max(leftMedian, rightMedian);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpfav5arhg.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfav5arhg.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  return l[mid];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpw0ryk0q6.js:9:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw0ryk0q6.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  return (l[l.length / 2] + l[l.length / 2 - 1]) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpdccad_vf.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdccad_vf.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 0
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedArray = l.slice().sort((a: number, b: number) => a - b);\n\
    \  let middle = Math.floor(sortedArray.length / 2);\n  if (sortedArray.length\
    \ % 2) return sortedArray[middle];\n  else return (sortedArray[middle - 1] + sortedArray[middle])\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length % 2 === 0) {\n\
    \    return l[mid];\n  } else {\n    return (l[mid - 1] + l[mid]) / 2;\n  }\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpv4ryx74x.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv4ryx74x.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error(`Cannot compute\
    \ median of an empty list`);\n    }\n    let mid = Math.floor(l.length / 2);\n\
    \    if (l.length % 2 === 0) {\n        return l[mid];\n    }\n    else {\n  \
    \      return (l[mid] + l[mid-1]) / 2;\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp1chcm5xy.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1chcm5xy.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw 'Cannot compute median of an empty\
    \ list';\n  }\n  const sortedList = l.slice().sort((a, b) => a - b);\n  const\
    \ mid = Math.floor(sortedList.length / 2);\n  if (sortedList.length % 2 === 0)\
    \ {\n    return sortedList[mid];\n  } else {\n    return (sortedList[mid - 1]\
    \ + sortedList[mid]) / 2;\n  }\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpq50the36.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpq50the36.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw Error('Cannot calculate median\
    \ of an empty list');\n    }\n    if (l.length === 1) {\n        return l[0];\n\
    \    }\n    const mid = Math.floor(l.length / 2);\n    const left = l.slice(0,\
    \ mid);\n    const right = l.slice(mid);\n    return median(left) + median(right);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpctoxn7vo.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpctoxn7vo.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  return l[mid];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpcmvo4qn6.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcmvo4qn6.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot compute\
    \ median of an empty list');\n    }\n    const mid = Math.floor(l.length / 2);\n\
    \    if (l.length % 2) {\n        return l[mid];\n    }\n    const leftMedian\
    \ = median(l.slice(0, mid));\n    const rightMedian = median(l.slice(mid));\n\
    \    return leftMedian + rightMedian / 2;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpw4iugts9.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw4iugts9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[l.length / 2 - 1]\n\
    \    } else {\n        return l[l.length / 2]\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpu7g5vv6b.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu7g5vv6b.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = l.length\
    \ / 2;\n  return l[mid];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp3jmvy0cp.js:12:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3jmvy0cp.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length / 2) - 1])\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpn32fzjts.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn32fzjts.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334948
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedArray = l.sort((a, b) => a - b);\n  if (sortedArray.length\
    \ % 2 === 0) {\n    return sortedArray[Math.floor(sortedArray.length / 2)];\n\
    \  } else {\n    return sortedArray[Math.floor(sortedArray.length / 2) - 1];\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpo3jss9wr.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo3jss9wr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedArray = l.slice().sort((a: number, b: number) => a - b);\n\
    \  let middleIndex = Math.floor(sortedArray.length / 2);\n  return sortedArray[middleIndex];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpwspbqcvp.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwspbqcvp.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const left =\
    \ median(l.slice(0, mid));\n  const right = median(l.slice(mid));\n  return ((left\
    \ + right) / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpkhajoe8o.js:10\n    const left = median(l.slice(0, mid));\n   \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmpkhajoe8o.js:10:27)\n \
    \   at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 2
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[Math.floor(l.length\
    \ / 2)];\n    }\n    return l[Math.floor(l.length / 2)] + median(l[Math.floor(l.length\
    \ / 2) + 1]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpcbvsme28.ts(6,49): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error(`Cannot compute\
    \ median of an empty list`);\n    }\n    let mid = Math.floor(l.length / 2);\n\
    \    if (l.length % 2 === 0) {\n        return l[mid];\n    }\n    let lower =\
    \ l[mid];\n    let upper = l[mid];\n    for (let i = mid + 1; i < l.length; i++)\
    \ {\n        if (l[i] < lower) {\n            lower = l[i];\n        }\n     \
    \   if (l[i] > upper) {\n            upper = l[i];\n        }\n    }\n    return\
    \ (lower + upper) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpikhe4jq4.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpikhe4jq4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  return (l[l.length / 2] + l[l.length / 2 - 1]) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpdccad_vf.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdccad_vf.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2) {\n    return l[mid];\n  }\n  const left = median(l.slice(0,\
    \ mid));\n  const right = median(l.slice(mid));\n  return ((left + right) / 2);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpgkidyvut.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgkidyvut.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot calculate\
    \ median of an empty list');\n    }\n    const middle = Math.floor(l.length /\
    \ 2);\n    if (middle === 0) {\n        return l[0];\n    }\n    if (middle ===\
    \ 1) {\n        return l[l.length - 1];\n    }\n    const medianValue = l[middle];\n\
    \    let leftMedian = median(l);\n    let rightMedian = median(l.slice(middle\
    \ + 1));\n    if (leftMedian > rightMedian) {\n        return leftMedian;\n  \
    \  }\n    return rightMedian;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp135hptol.js:3\n    if (l.length === 0) {\n          ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at median (/tmp/tmp135hptol.js:3:11)\n\
    \    at median (/tmp/tmp135hptol.js:14:22)\n    at median (/tmp/tmp135hptol.js:14:22)\n\
    \    at median (/tmp/tmp135hptol.js:14:22)\n    at median (/tmp/tmp135hptol.js:14:22)\n\
    \    at median (/tmp/tmp135hptol.js:14:22)\n    at median (/tmp/tmp135hptol.js:14:22)\n\
    \    at median (/tmp/tmp135hptol.js:14:22)\n    at median (/tmp/tmp135hptol.js:14:22)\n\
    \    at median (/tmp/tmp135hptol.js:14:22)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 2
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot compute\
    \ median of an empty list');\n    }\n    const mid = Math.floor(l.length / 2);\n\
    \    if (l.length % 2 === 0) {\n        return l[mid];\n    }\n    return l[mid]\
    \ + median(l[mid+1]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp3i1tehez.ts(10,28): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedArray = l.slice().sort((a: number, b: number) => a - b);\n\
    \  let middle = Math.floor(sortedArray.length / 2);\n  return sortedArray[middle];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpf8fkrj7j.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf8fkrj7j.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334950
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[l.length / 2 - 1]\n  } else\
    \ {\n    return l[l.length / 2]\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpzovtu6qq.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzovtu6qq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length % 2 === 0) {\n\
    \    return l[mid];\n  } else {\n    return (l[mid] + l[mid-1]) / 2;\n  }\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpkkupb6nw.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkkupb6nw.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw new Error(\"Cannot calculate median\
    \ of an empty list\");\n  }\n  const mid = Math.floor(l.length / 2);\n  if (l.length\
    \ % 2 === 0) {\n    return l[mid];\n  } else {\n    return (l[mid] + l[mid-1])\
    \ / 2;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpqyk2x_sa.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqyk2x_sa.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334952
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  return (l[(l.length / 2) - 1] + l[l.length / 2]) / 2;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpcu9dt17_.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcu9dt17_.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334952
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  const mid = Math.floor(l.length / 2);\n  return (l[mid] + l[mid - 1])\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpz425rnlv.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz425rnlv.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error('Cannot calculate\
    \ median of an empty list');\n    }\n    const sortedList = l.slice().sort((a,\
    \ b) => a - b);\n    const middleIndex = Math.floor(sortedList.length / 2);\n\
    \    return sortedList[middleIndex];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmp765krtdq.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp765krtdq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334952
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw new Error('Cannot compute median\
    \ of an empty list');\n  }\n  const mid = Math.floor(l.length / 2);\n  if (l.length\
    \ % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid] + l[mid-1]) / 2;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpazr2jnpn.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpazr2jnpn.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334952
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw Error('Cannot calculate median\
    \ of an empty list');\n    }\n    const middle = Math.floor(l.length / 2);\n \
    \   if (middle === 0) {\n        return l[0];\n    }\n    if (middle === 1) {\n\
    \        return l[l.length - 1];\n    }\n    const medianValue = l[middle];\n\
    \    let leftMedian = median(l);\n    let rightMedian = median(l.slice(middle\
    \ + 1));\n    if (leftMedian > rightMedian) {\n        return leftMedian;\n  \
    \  }\n    return rightMedian;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpqwcx14q2.js:3\n    if (l.length === 0) {\n          ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at median (/tmp/tmpqwcx14q2.js:3:11)\n\
    \    at median (/tmp/tmpqwcx14q2.js:14:22)\n    at median (/tmp/tmpqwcx14q2.js:14:22)\n\
    \    at median (/tmp/tmpqwcx14q2.js:14:22)\n    at median (/tmp/tmpqwcx14q2.js:14:22)\n\
    \    at median (/tmp/tmpqwcx14q2.js:14:22)\n    at median (/tmp/tmpqwcx14q2.js:14:22)\n\
    \    at median (/tmp/tmpqwcx14q2.js:14:22)\n    at median (/tmp/tmpqwcx14q2.js:14:22)\n\
    \    at median (/tmp/tmpqwcx14q2.js:14:22)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot compute\
    \ median of an empty list');\n    }\n    const mid = Math.floor(l.length / 2);\n\
    \    if (l.length % 2) {\n        return l[mid];\n    }\n    const left = median(l.slice(0,\
    \ mid));\n    const right = median(l.slice(mid));\n    return (left + right) /\
    \ 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpy15ynw2i.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy15ynw2i.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  return (l[(l.length / 2) - 1] + l[(l.length / 2)]) / 2;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpw2qrlpew.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw2qrlpew.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot compute\
    \ median of an empty list');\n    }\n    const middle = Math.floor(l.length /\
    \ 2);\n    if (middle === 0) {\n        return l[0];\n    }\n    if (middle ===\
    \ 1) {\n        return l[l.length - 1];\n    }\n    const medianValue = l[middle];\n\
    \    let leftMedian = median(l);\n    let rightMedian = median(l.slice(middle\
    \ + 1));\n    if (leftMedian > rightMedian) {\n        return leftMedian;\n  \
    \  }\n    return rightMedian;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpps8hi3u_.js:3\n    if (l.length === 0) {\n          ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at median (/tmp/tmpps8hi3u_.js:3:11)\n\
    \    at median (/tmp/tmpps8hi3u_.js:14:22)\n    at median (/tmp/tmpps8hi3u_.js:14:22)\n\
    \    at median (/tmp/tmpps8hi3u_.js:14:22)\n    at median (/tmp/tmpps8hi3u_.js:14:22)\n\
    \    at median (/tmp/tmpps8hi3u_.js:14:22)\n    at median (/tmp/tmpps8hi3u_.js:14:22)\n\
    \    at median (/tmp/tmpps8hi3u_.js:14:22)\n    at median (/tmp/tmpps8hi3u_.js:14:22)\n\
    \    at median (/tmp/tmpps8hi3u_.js:14:22)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  const mid = Math.floor(l.length / 2);\n  const left = l.slice(0, mid);\n\
    \  const right = l.slice(mid);\n  return median(left) + median(right);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpa4owgwny.js:7\n    const left = l.slice(0, mid);\n            \
    \       ^\n\nRangeError: Maximum call stack size exceeded\n    at Array.slice\
    \ (<anonymous>)\n    at median (/tmp/tmpa4owgwny.js:7:20)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = l.length\
    \ / 2;\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid - 1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe50fspkj.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe50fspkj.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot calculate\
    \ median of an empty list');\n    }\n    const middle = Math.floor(l.length /\
    \ 2);\n    if (middle === 0) {\n        return l[0];\n    }\n    if (middle ===\
    \ 1) {\n        return l[l.length - 1];\n    }\n    const medianValue = l[middle];\n\
    \    const leftMedian = median(l.slice(0, middle));\n    const rightMedian = median(l.slice(middle\
    \ + 1));\n    return medianValue + Math.max(leftMedian, rightMedian);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpfav5arhg.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfav5arhg.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  const mid = Math.floor(l.length / 2);\n  return (l[mid] + l[mid]) / 2;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpnlwcgtwi.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnlwcgtwi.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    let sortedArray = l.sort((a: number, b: number) => a - b);\n \
    \   let middleIndex = Math.floor(sortedArray.length / 2);\n    return sortedArray[middleIndex];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpnnc8hl1s.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnnc8hl1s.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  const mid = Math.floor(l.length / 2);\n  const left = l.slice(0, mid);\n\
    \  const right = l.slice(mid);\n  return median(left) + median(right);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpa4owgwny.js:7\n    const left = l.slice(0, mid);\n            \
    \       ^\n\nRangeError: Maximum call stack size exceeded\n    at Array.slice\
    \ (<anonymous>)\n    at median (/tmp/tmpa4owgwny.js:7:20)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length / 2) - 1])\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpn32fzjts.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn32fzjts.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334948
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length / 2) - 1])\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpn32fzjts.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn32fzjts.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334948
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)]\n\
    \  } else {\n    return (l[l.length / 2] + l[l.length / 2 - 1]) / 2\n  }\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpvl1t6swd.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvl1t6swd.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)]\n\
    \  } else {\n    return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length /\
    \ 2) - 1]) / 2\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpazf8bkjq.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpazf8bkjq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[Math.floor(l.length\
    \ / 2)];\n    }\n    return l[Math.floor(l.length / 2)] + median(l.slice(Math.floor(l.length\
    \ / 2)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n11\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp07oybkh8.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp07oybkh8.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 11,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const left =\
    \ median(l.slice(0, mid));\n  const right = median(l.slice(mid));\n  return ((left\
    \ + right) / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpkhajoe8o.js:10\n    const left = median(l.slice(0, mid));\n   \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmpkhajoe8o.js:10:27)\n \
    \   at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedArray = l.slice().sort((a: number, b: number) => a - b);\n\
    \  let middle = Math.floor(sortedArray.length / 2);\n  if (sortedArray.length\
    \ % 2 === 0) {\n    return sortedArray[middle];\n  } else {\n    return (sortedArray[middle\
    \ - 1] + sortedArray[middle]) / 2;\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp625gonws.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp625gonws.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const left =\
    \ median(l.slice(0, mid));\n  const right = median(l.slice(mid));\n  return ((left\
    \ + right) / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpkhajoe8o.js:10\n    const left = median(l.slice(0, mid));\n   \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmpkhajoe8o.js:10:27)\n \
    \   at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error('Cannot calculate\
    \ median of an empty list');\n    }\n    const middle = Math.floor(l.length /\
    \ 2);\n    if (middle === 0) {\n        return l[0];\n    }\n    if (middle ===\
    \ 1) {\n        return l[l.length - 1];\n    }\n    const medianValue = l[middle];\n\
    \    let leftMedian = median(l);\n    let rightMedian = median(l.slice(middle\
    \ + 1));\n    if (leftMedian > rightMedian) {\n        return leftMedian;\n  \
    \  }\n    return rightMedian;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp7q0_syg9.js:3\n    if (l.length === 0) {\n          ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at median (/tmp/tmp7q0_syg9.js:3:11)\n\
    \    at median (/tmp/tmp7q0_syg9.js:14:22)\n    at median (/tmp/tmp7q0_syg9.js:14:22)\n\
    \    at median (/tmp/tmp7q0_syg9.js:14:22)\n    at median (/tmp/tmp7q0_syg9.js:14:22)\n\
    \    at median (/tmp/tmp7q0_syg9.js:14:22)\n    at median (/tmp/tmp7q0_syg9.js:14:22)\n\
    \    at median (/tmp/tmp7q0_syg9.js:14:22)\n    at median (/tmp/tmp7q0_syg9.js:14:22)\n\
    \    at median (/tmp/tmp7q0_syg9.js:14:22)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  return (l[l.length / 2] + l[l.length / 2 - 1]) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpdccad_vf.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdccad_vf.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const leftMedian\
    \ = median(l.slice(0, mid));\n  const rightMedian = median(l.slice(mid));\n  return\
    \ leftMedian + rightMedian / 2;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmphj0czuow.js:10\n    const leftMedian = median(l.slice(0, mid));\n\
    \                                ^\n\nRangeError: Maximum call stack size exceeded\n\
    \    at Array.slice (<anonymous>)\n    at median (/tmp/tmphj0czuow.js:10:33)\n\
    \    at median (/tmp/tmphj0czuow.js:11:25)\n    at median (/tmp/tmphj0czuow.js:11:25)\n\
    \    at median (/tmp/tmphj0czuow.js:11:25)\n    at median (/tmp/tmphj0czuow.js:11:25)\n\
    \    at median (/tmp/tmphj0czuow.js:11:25)\n    at median (/tmp/tmphj0czuow.js:11:25)\n\
    \    at median (/tmp/tmphj0czuow.js:11:25)\n    at median (/tmp/tmphj0czuow.js:11:25)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)]\n\
    \  } else {\n    return (l[l.length / 2 - 1] + l[l.length / 2]) / 2\n  }\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpuqldes5y.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuqldes5y.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw Error('Cannot compute median\
    \ of an empty list');\n    }\n    const middle = Math.floor(l.length / 2);\n \
    \   if (middle === 0) {\n        return l[0];\n    }\n    if (middle === 1) {\n\
    \        return l[l.length - 1];\n    }\n    const medianValue = l[middle];\n\
    \    const leftMedian = median(l.slice(0, middle));\n    const rightMedian = median(l.slice(middle\
    \ + 1));\n    return medianValue + leftMedian + rightMedian;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp0d4tetub.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0d4tetub.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[Math.floor(l.length\
    \ / 2)];\n    } else {\n        return l[(l.length / 2) - 1];\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpkgu4p606.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpkgu4p606.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const left =\
    \ median(l.slice(0, mid));\n  const right = median(l.slice(mid));\n  return ((left\
    \ + right) / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpkhajoe8o.js:10\n    const left = median(l.slice(0, mid));\n   \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmpkhajoe8o.js:10:27)\n \
    \   at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length % 2 === 0) {\n\
    \    return l[mid];\n  } else {\n    return (l[mid] + l[mid-1]) / 2;\n  }\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpkkupb6nw.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkkupb6nw.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error(\"Cannot calculate\
    \ median of an empty list\");\n    }\n    l.sort();\n    var mid = l.length /\
    \ 2;\n    if (l.length % 2 === 0) {\n        return l[mid];\n    } else {\n  \
    \      return (l[mid - 1] + l[mid]) / 2;\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpnlt7fu23.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnlt7fu23.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 2
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot calculate\
    \ median of an empty list');\n    }\n    const mid = Math.floor(l.length / 2);\n\
    \    if (l.length % 2 === 0) {\n        return l[mid];\n    }\n    return l[mid]\
    \ + median(l[mid+1]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpx95owxoz.ts(10,28): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1660334953
- exit_code: 2
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length % 2) return\
    \ l[mid];\n  else return (median(l[mid-1]) + median(l[mid])) / 2;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpvolexjni.ts(5,23): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    ../../../../tmp/tmpvolexjni.ts(5,42): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[(l.length / 2) - 1];\n\
    \    }\n    return l[Math.floor(l.length / 2)];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpwwwtb58z.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwwwtb58z.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error('Cannot compute\
    \ median of an empty list');\n    }\n    const mid = Math.floor(l.length / 2);\n\
    \    if (l.length % 2 === 0) {\n        return l[mid];\n    }\n    return l[mid\
    \ + 1] + l[mid];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp5g_ab6el.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5g_ab6el.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)]\n\
    \  }\n  return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length / 2) - 1])\
    \ / 2\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpqqlnowgs.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqqlnowgs.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot compute\
    \ median of an empty list');\n    }\n    const middle = Math.floor(l.length /\
    \ 2);\n    if (middle === 0) {\n        return l[0];\n    }\n    if (middle ===\
    \ 1) {\n        return l[l.length - 1];\n    }\n    const medianValue = l[middle];\n\
    \    const leftMedian = median(l.slice(0, middle));\n    const rightMedian = median(l.slice(middle\
    \ + 1));\n    return medianValue + Math.max(leftMedian, rightMedian);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpn8pa_1n0.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn8pa_1n0.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[l.length / 2 - 1]\n  } else\
    \ {\n    return l[l.length / 2]\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpzovtu6qq.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzovtu6qq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length / 2) - 1])\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpn32fzjts.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn32fzjts.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334948
- exit_code: 2
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error(`Cannot calculate\
    \ median of an empty list`);\n    }\n    const middle = Math.floor(l.length /\
    \ 2);\n    if (middle === 0) {\n        return l[0];\n    }\n    if (middle ===\
    \ 1) {\n        return l[l.length - 1];\n    }\n    const medianOfMiddle = median(l);\n\
    \    return medianOfMiddle + median(l).map(x => x - medianOfMiddle).reduce((a,\
    \ b) => a + b, 0) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_edxpf2u.ts(14,39): error TS2339: Property ''map'' does
    not exist on type ''number''.

    '
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[l.length / 2 - 1]\n\
    \    } else {\n        return l[l.length / 2]\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpu7g5vv6b.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu7g5vv6b.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const left =\
    \ median(l.slice(0, mid));\n  const right = median(l.slice(mid));\n  return ((left\
    \ + right) / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpkhajoe8o.js:10\n    const left = median(l.slice(0, mid));\n   \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmpkhajoe8o.js:10:27)\n \
    \   at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[l.length / 2 - 1]\n  } else\
    \ {\n    return l[l.length / 2]\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpzovtu6qq.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzovtu6qq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334946
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const left =\
    \ median(l.slice(0, mid));\n  const right = median(l.slice(mid));\n  return Math.ceil((left\
    \ + right) / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpum38q2sz.js:10\n    const left = median(l.slice(0, mid));\n   \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmpum38q2sz.js:10:27)\n \
    \   at median (/tmp/tmpum38q2sz.js:11:19)\n    at median (/tmp/tmpum38q2sz.js:11:19)\n\
    \    at median (/tmp/tmpum38q2sz.js:11:19)\n    at median (/tmp/tmpum38q2sz.js:11:19)\n\
    \    at median (/tmp/tmpum38q2sz.js:11:19)\n    at median (/tmp/tmpum38q2sz.js:11:19)\n\
    \    at median (/tmp/tmpum38q2sz.js:11:19)\n    at median (/tmp/tmpum38q2sz.js:11:19)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length % 2 === 0) {\n\
    \    return l[mid];\n  } else {\n    return (l[mid] + l[mid-1]) / 2;\n  }\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpkkupb6nw.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkkupb6nw.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw new Error(\"Cannot calculate median\
    \ of an empty list\");\n  }\n  return l.reduce((prev, curr) => prev + curr, 0)\
    \ / l.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n171.66666666666666\n\
    \nshould loosely deep-equal\n\n8\n    at test (/tmp/tmpvv5i2krv.js:12:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpvv5i2krv.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 171.66666666666666,\n\
    \  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334955
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  return l[mid];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpcmvo4qn6.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcmvo4qn6.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[Math.floor(l.length\
    \ / 2)];\n    } else {\n        return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length\
    \ / 2) - 1]) / 2;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpvvq3uem6.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvvq3uem6.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[l.length / 2 - 1]\n  } else\
    \ {\n    return l[(l.length / 2) - 1]\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp4204bapu.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4204bapu.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334955
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1]\n  }\n\
    \  return (l[l.length / 2] + l[l.length / 2 - 1]) / 2\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp7rih8jyy.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7rih8jyy.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334955
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw new Error(\"Cannot calculate median\
    \ of an empty list\");\n  }\n  const sortedList = l.slice().sort((a, b) => a -\
    \ b);\n  const mid = Math.floor(sortedList.length / 2);\n  return sortedList[mid];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpntgfh4j1.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpntgfh4j1.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334955
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[l.length / 2 - 1]\n\
    \    } else {\n        return l[l.length / 2]\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpu7g5vv6b.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu7g5vv6b.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  const mid = Math.floor(l.length / 2);\n  const left = l.slice(0, mid);\n\
    \  const right = l.slice(mid);\n  return median(left) + median(right);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpa4owgwny.js:7\n    const left = l.slice(0, mid);\n            \
    \       ^\n\nRangeError: Maximum call stack size exceeded\n    at Array.slice\
    \ (<anonymous>)\n    at median (/tmp/tmpa4owgwny.js:7:20)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n    at median (/tmp/tmpa4owgwny.js:9:27)\n\
    \    at median (/tmp/tmpa4owgwny.js:9:27)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedList = l.sort((a: number, b: number) => a - b);\n  if\
    \ (sortedList.length % 2 === 0) {\n    return sortedList[Math.floor(sortedList.length\
    \ / 2)];\n  } else {\n    return sortedList[sortedList.length / 2 - 1];\n  }\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp0odp2iv1.js:14:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0odp2iv1.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    let sortedArray = l.sort((a: number, b: number) => a - b);\n \
    \   let middleIndex = Math.floor(sortedArray.length / 2);\n    return sortedArray[middleIndex];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpnnc8hl1s.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnnc8hl1s.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)]\n\
    \  } else {\n    return l[(l.length / 2) - 1]\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpygxuu7cm.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpygxuu7cm.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error(\"Cannot calculate\
    \ median of an empty list\");\n    }\n    let middle = Math.floor(l.length / 2);\n\
    \    if (middle === 0) {\n        return l[0];\n    }\n    if (middle === 1) {\n\
    \        return l[l.length - 1];\n    }\n    let medianValue = l[middle];\n  \
    \  for (let i = middle - 1; i >= 0; i--) {\n        if (l[i] < medianValue) {\n\
    \            medianValue = l[i];\n        }\n    }\n    return medianValue;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpo15e5t6k.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo15e5t6k.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedArr = l.sort((a: number, b: number) => a - b);\n  let\
    \ middle = Math.floor(sortedArr.length / 2);\n  if (sortedArr.length % 2 === 0)\
    \ {\n    return sortedArr[middle];\n  } else {\n    return (sortedArr[middle -\
    \ 1] + sortedArr[middle]) / 2;\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp1jocjzxh.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1jocjzxh.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = l.length\
    \ / 2;\n  return l[mid];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp3jmvy0cp.js:12:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3jmvy0cp.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[Math.floor(l.length\
    \ / 2)];\n    } else {\n        let mid = Math.floor(l.length / 2);\n        let\
    \ low = l[mid];\n        let high = l[mid+1];\n        return (high + low) / 2;\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1000\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmp62y76urm.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp62y76urm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1000,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  const m1 = l[Math.floor(l.length / 2)];\n  const m2 = l[l.length - 1];\n\
    \  return (m1 + m2) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp85in6i31.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp85in6i31.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[Math.floor(l.length\
    \ / 2)];\n    }\n    return l[Math.floor(l.length / 2)] + median(l.slice(0, Math.floor(l.length\
    \ / 2)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1000\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmpyo6b1_sx.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyo6b1_sx.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1000,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length / 2) - 1])\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpn32fzjts.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn32fzjts.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334948
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let sortedArray = l.slice().sort((a: number, b: number) => a - b);\n\
    \  let middleIndex = Math.floor(sortedArray.length / 2);\n  return sortedArray[middleIndex];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpwspbqcvp.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwspbqcvp.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334949
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const middle = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[middle];\n  }\n  return (l[middle\
    \ - 1] + l[middle]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp5zg4je7z.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5zg4je7z.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = l.length / 2;\n  if (l.length % 2 === 0) {\n    return\
    \ l[mid];\n  } else {\n    return l[mid - 1] + l[mid];\n  }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp3lhjm3qh.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3lhjm3qh.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)];\n\
    \  }\n  return (l[Math.floor(l.length / 2)] + l[Math.floor(l.length / 2) - 1])\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpn32fzjts.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn32fzjts.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334948
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 2
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length % 2) return\
    \ l[mid];\n  else return (median(l[mid-1]) + median(l[mid])) / 2;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpvolexjni.ts(5,23): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    ../../../../tmp/tmpvolexjni.ts(5,42): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1660334953
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[Math.floor(l.length / 2)]\n\
    \  } else {\n    return (l[Math.floor(l.length / 2) - 1] + l[Math.floor(l.length\
    \ / 2)]) / 2\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpae7ftirx.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpae7ftirx.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[(l.length / 2) - 1];\n\
    \    }\n    return l[l.length / 2];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpbn7pk0bq.js:11:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbn7pk0bq.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  return l[(l.length / 2)];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpnbjvzvnv.js:11:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpnbjvzvnv.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpe8m8sha6.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8m8sha6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  return (l[l.length / 2] + l[l.length / 2 - 1]) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpdccad_vf.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdccad_vf.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new RangeError('Cannot compute\
    \ median of an empty list');\n    }\n    const middle = Math.floor(l.length /\
    \ 2);\n    if (middle === 0) {\n        return l[0];\n    }\n    if (middle ===\
    \ 1) {\n        return l[l.length - 1];\n    }\n    const medianValue = l[middle];\n\
    \    let leftMedian = median(l);\n    let rightMedian = median(l.slice(middle\
    \ + 1));\n    return medianValue + ((leftMedian + rightMedian) / 2);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp5ro7vpd1.js:3\n    if (l.length === 0) {\n          ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at median (/tmp/tmp5ro7vpd1.js:3:11)\n\
    \    at median (/tmp/tmp5ro7vpd1.js:14:22)\n    at median (/tmp/tmp5ro7vpd1.js:14:22)\n\
    \    at median (/tmp/tmp5ro7vpd1.js:14:22)\n    at median (/tmp/tmp5ro7vpd1.js:14:22)\n\
    \    at median (/tmp/tmp5ro7vpd1.js:14:22)\n    at median (/tmp/tmp5ro7vpd1.js:14:22)\n\
    \    at median (/tmp/tmp5ro7vpd1.js:14:22)\n    at median (/tmp/tmp5ro7vpd1.js:14:22)\n\
    \    at median (/tmp/tmp5ro7vpd1.js:14:22)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  return (l[mid]\
    \ + l[mid - 1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmptdttoqep.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptdttoqep.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw new Error(\"Cannot calculate median\
    \ of an empty list\");\n  }\n  let mid = Math.floor(l.length / 2);\n  if (l.length\
    \ % 2 === 0) {\n    return l[mid];\n  }\n  let lower = l[mid];\n  let upper =\
    \ l[mid];\n  for (let i = mid + 1; i < l.length; i++) {\n    if (l[i] < lower)\
    \ {\n      lower = l[i];\n    }\n    if (l[i] > upper) {\n      upper = l[i];\n\
    \    }\n  }\n  return ((lower + upper) / 2);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpfh570rxa.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfh570rxa.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  return l[mid];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpcmvo4qn6.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcmvo4qn6.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334945
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const mid = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2 === 0) {\n    return l[mid];\n  }\n  const left =\
    \ median(l.slice(0, mid));\n  const right = median(l.slice(mid));\n  return ((left\
    \ + right) / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpkhajoe8o.js:10\n    const left = median(l.slice(0, mid));\n   \
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmpkhajoe8o.js:10:27)\n \
    \   at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \    at median (/tmp/tmpkhajoe8o.js:11:19)\n    at median (/tmp/tmpkhajoe8o.js:11:19)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[l.length / 2 - 1]\n  } else\
    \ {\n    return l[(l.length / 2) - 1]\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp4204bapu.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4204bapu.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334955
- exit_code: 2
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length === 0) {\n    throw new Error(\"Cannot calculate median\
    \ of an empty list\");\n  }\n  if (l.length === 1) {\n    return l[0];\n  }\n\
    \  const mid = Math.floor(l.length / 2);\n  return median(l.slice(0, mid), l.slice(mid));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpu21fr41i.ts(10,34): error TS2554: Expected 1 arguments,
    but got 2.

    '
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length % 2 === 0) {\n        return l[Math.floor(l.length\
    \ / 2)];\n    } else {\n        var a = l[Math.floor(l.length / 2)];\n       \
    \ var b = l[Math.floor(l.length / 2) - 1];\n        return a + b / 2;\n    }\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpvjivx5zh.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvjivx5zh.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2) - 1];\n \
    \ }\n  return (l[(l.length / 2) - 1] + l[(l.length / 2)]) / 2;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpw2qrlpew.js:11:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw2qrlpew.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334942
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error(`Cannot calculate\
    \ median of an empty list`);\n    }\n    const sortedList = l.slice().sort((a,\
    \ b) => a - b);\n    const middleIndex = Math.floor(sortedList.length / 2);\n\
    \    return sortedList[middleIndex];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpodttvpbc.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpodttvpbc.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956
- exit_code: 1
  program: "//Return median of elements in the list l.\nfunction median(l: number[]):\
    \ number {\n    if (l.length === 0) {\n        throw new Error(\"Cannot compute\
    \ median of an empty list\");\n    }\n    l.sort((a, b) => a - b);\n    const\
    \ mid = Math.floor(l.length / 2);\n    if (l.length % 2 === 0) {\n        return\
    \ l[mid];\n    }\n    return l[mid - 1] + l[mid];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpcrjv9oaa.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcrjv9oaa.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334956

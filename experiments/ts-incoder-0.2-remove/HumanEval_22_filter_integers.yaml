name: HumanEval_22_filter_integers
language: ts
prompt: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
  \ any[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
  \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
completions: ["    return values.filter(v => v === parseInt(v));\n}\n", "    return\
    \ values.filter(v => v === parseInt(v));\n}\n", "    return values.filter(function\
    \ (value): boolean {\n        return typeof value === 'number';\n    });\n}\n",
  "    return values.filter(v => v === parseInt(v, 10));\n}\n", "    return values.filter(v\
    \ => v === parseInt(v));\n}\n", "    return values.filter(v => v === parseInt(v));\n\
    }\n", "    return values.filter(function (val: any) {\n        return val ===\
    \ parseInt(val, 10);\n    });\n}\n", "    return values.filter(function(value){\n\
    \        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function\
    \ (value: any) {\n        return isInteger(value);\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(v => v === parseInt(v, 10));\n\
    }\n", "    return values.filter(function (value: any) {\n        return typeof\
    \ value === 'number';\n    });\n}\n", "    return values.filter(v => v === parseInt(v,\
    \ 10));\n}\n", "    return values.filter(function (value: any) {\n        return\
    \ isInteger(value);\n    });\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(function (val: any) {\n\
    \        return val === parseInt(val);\n    });\n}\n", "    return values.filter(v\
    \ => v === parseInt(v));\n}\n", "    return values.filter(function (val: any)\
    \ {\n        return val === parseInt(val, 10);\n    });\n}\n", "    return values.filter(v\
    \ => v === parseInt(v));\n}\n", "    return values.filter(v => v === Math.floor(v));\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(v => v % 1 === 0);\n}\n", "    return values.filter(function\
    \ (val: any) {\n        return isInteger(val);\n    });\n}\n", "    return values.filter(v\
    \ => v % 1 === 0);\n}\n", "    return values.filter(function (val: any) {\n  \
    \      return isInteger(val);\n    });\n}\n", "    return values.filter(function\
    \ (val: any) {\n        return isInteger(val);\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(function (value):\
    \ boolean {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => Number.isInteger(value));\n}\n", "    return values.filter(v\
    \ => v === parseInt(v));\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(function (value): boolean {\n\
    \        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => Number.isInteger(value));\n\
    }\n", "    return values.filter(function(value) {\n        return typeof value\
    \ === 'number';\n    });\n}\n", "    return values.filter(v => v === parseInt(v,\
    \ 10));\n}\n", "    return values.filter(function(value) {\n        return typeof\
    \ value === 'number';\n    });\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(v => v % 1 === 0);\n}\n",
  "    return values.filter(v => v === Math.floor(v));\n}\n", "    return values.filter(value\
    \ => Number.isInteger(value));\n}\n", "    return values.filter(v => v === parseInt(v));\n\
    }\n", "    return values.filter(v => v === parseInt(v, 10));\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(v\
    \ => v === Math.floor(v));\n}\n", "    return values.filter(function (val: any)\
    \ {\n        return Number.isInteger(val);\n    });\n}\n", "    return values.filter(value\
    \ => Number.isInteger(value));\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(v => v === parseInt(v));\n\
    }\n", "    return values.filter(v => v === parseInt(v, 10));\n}\n", "    return\
    \ values.filter(function (v: any) {\n        return typeof v === \"number\";\n\
    \    });\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(v => v === parseInt(v));\n}\n", "    return values.filter(function(value){\n\
    \        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => Number.isInteger(value));\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(function (val: any) {\n\
    \        return val === parseInt(val, 10);\n    });\n}\n", "    return values.filter(v\
    \ => v === parseInt(v, 10));\n}\n", "    return values.filter(function (val: any)\
    \ {\n        return val === parseInt(val);\n    });\n}\n", "    return values.filter(value\
    \ => Number.isInteger(value));\n}\n", "    return values.filter(value => Number.isInteger(value));\n\
    }\n", "    return values.filter(function(value) {\n        return typeof value\
    \ === 'number';\n    });\n}\n", "    return values.filter(value => Number.isInteger(value));\n\
    }\n", "    return values.filter(v => v === parseInt(v));\n}\n", "    return values.filter(value\
    \ => Number.isInteger(value));\n}\n", "    return values.filter(v => v === parseInt(v,\
    \ 10));\n}\n", "    return values.filter(function (value: any) {\n        return\
    \ Number.isInteger(value);\n    });\n}\n", "    return values.filter(function\
    \ (val: any) {\n        return typeof val === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(v\
    \ => v % 1 === 0);\n}\n", "    return values.filter(v => v === parseInt(v));\n\
    }\n", "    return values.filter(function (value: any) {\n        return typeof\
    \ value === 'number';\n    });\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(v => v === parseInt(v));\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(value => typeof value === 'number');\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function\
    \ (value: any) {\n        return typeof value === 'number';\n    });\n}\n", " \
    \   return values.filter(function (val: any) {\n        return isInteger(val);\n\
    \    });\n}\n", "    return values.filter(v => v === parseInt(v, 10));\n}\n",
  "    return values.filter(function (val: any) {\n        return val === parseInt(val);\n\
    \    });\n}\n", "    return values.filter(v => v === parseInt(v));\n}\n", "  \
    \  return values.filter(value => Number.isInteger(value));\n}\n", "    return\
    \ values.filter(v => typeof v === \"number\");\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(function (value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(v\
    \ => v === parseInt(v));\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(v => v === parseInt(v, 10));\n\
    }\n", "    return values.filter(v => v === parseInt(v, 10));\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(function (val:\
    \ any) {\n        return val === parseInt(val, 10);\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(v\
    \ => v === parseInt(v, 10));\n}\n", "    return values.filter(v => v % 1 === 0);\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(function (val: any) {\n        return isInteger(val);\n\
    \    });\n}\n", "    return values.filter(v => v % 1 === 0);\n}\n", "    return\
    \ values.filter(value => Number.isInteger(value));\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(v => typeof v === \"number\"\
    );\n}\n", "    return values.filter(function (value: any) {\n        return Number.isInteger(value);\n\
    \    });\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(function (val: any) {\n        return val ===\
    \ parseInt(val);\n    });\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(value => Number.isInteger(value));\n\
    }\n", "    return values.filter(function (val: any) {\n        return typeof val\
    \ === 'number';\n    });\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(v => v === parseInt(v));\n}\n", "    return values.filter(function\
    \ (value: any) {\n        return Number.isInteger(value);\n    });\n}\n", "  \
    \  return values.filter(value => typeof value === 'number');\n}\n", "    return\
    \ values.filter(function (val: any) {\n        return val === parseInt(val);\n\
    \    });\n}\n", "    return values.filter(function (value): boolean {\n      \
    \  return typeof value === 'number';\n    });\n}\n", "    return values.filter(v\
    \ => v === parseInt(v, 10));\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(function (value: any)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(v\
    \ => typeof v === \"number\");\n}\n", "    return values.filter(function (val:\
    \ any) {\n        return isInteger(val);\n    });\n}\n", "    return values.filter(value\
    \ => Number.isInteger(value));\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(v => typeof v === \"number\"\
    );\n}\n", "    return values.filter(v => v === parseInt(v, 10));\n}\n", "    return\
    \ values.filter(v => v % 1 === 0);\n}\n", "    return values.filter(function (val:\
    \ any) {\n        return isInteger(val);\n    });\n}\n", "    return values.filter(v\
    \ => v === Math.floor(v));\n}\n", "    return values.filter(v => v === parseInt(v,\
    \ 10));\n}\n", "    return values.filter(v => v === parseInt(v));\n}\n", "   \
    \ return values.filter(value => typeof value === 'number');\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(value\
    \ => Number.isInteger(value));\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(v => v === parseInt(v));\n}\n", "    return values.filter(v\
    \ => v === Math.floor(v));\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(function (value: any) {\n        return typeof\
    \ value === 'number';\n    });\n}\n", "    return values.filter(v => typeof v\
    \ === \"number\");\n}\n", "    return values.filter(v => v % 1 === 0);\n}\n",
  "    return values.filter(value => Number.isInteger(value));\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(v\
    \ => v === parseInt(v, 10));\n}\n", "    return values.filter(value => Number.isInteger(value));\n\
    }\n", "    return values.filter(v => v === parseInt(v, 10));\n}\n", "    return\
    \ values.filter(value => Number.isInteger(value));\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(function (value) {\n \
    \       return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(v => v === parseInt(v));\n\
    }\n", "    return values.filter(function (value: any) {\n        return typeof\
    \ value === 'number';\n    });\n}\n", "    return values.filter(function (val:\
    \ any) {\n        return val === parseInt(val);\n    });\n}\n", "    return values.filter(v\
    \ => v === parseInt(v));\n}\n", "    return values.filter(v => v === parseInt(v));\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(value => Number.isInteger(value));\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(v\
    \ => v === parseInt(v, 10));\n}\n", "    return values.filter(v => typeof v ===\
    \ \"number\");\n}\n", "    return values.filter(function (val: any) {\n      \
    \  return val === parseInt(val);\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(function(value){\n\
    \        return isInteger(value);\n    });\n}\n", "    return values.filter(v\
    \ => v % 1 === 0);\n}\n", "    return values.filter(v => v === Math.floor(v));\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(function (val: any) {\n        return val === parseInt(val);\n\
    \    });\n}\n", "    return values.filter(function (val: any) {\n        return\
    \ val === parseInt(val);\n    });\n}\n", "    return values.filter(v => v ===\
    \ parseInt(v, 10));\n}\n", "    return values.filter(v => v === parseInt(v));\n\
    }\n", "    return values.filter(v => v === parseInt(v, 10));\n}\n", "    return\
    \ values.filter(v => typeof v === 'number');\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => Number.isInteger(value));\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(value => Number.isInteger(value));\n\
    }\n", "    return values.filter(v => v % 1 === 0);\n}\n", "    return values.filter(value\
    \ => Number.isInteger(value));\n}\n", "    return values.filter(value => Number.isInteger(value));\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(value => typeof value === 'number');\n}\n", "    return\
    \ values.filter(function (val: any) {\n        return val === parseInt(val);\n\
    \    });\n}\n", "    return values.filter(v => typeof v === 'number');\n}\n",
  "    return values.filter(function (value: any) {\n        return typeof value ===\
    \ 'number';\n    });\n}\n", "    return values.filter(function (value: any) {\n\
    \        return Number.isInteger(value);\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

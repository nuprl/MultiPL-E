language: ts
name: HumanEval_152_compare
results:
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  -3,\n  -3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmppjfzi1sx.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppjfzi1sx.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, -3, -3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332965
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for(let i = 0; i < guess.length; i++){\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=javascript,typescript |>\n<| c |>\nThanks for the answer! I ended up\
    \ using your solution and it worked perfectly. Thanks again!\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmphj5lx6i5.ts(17,2): error TS1110: Type expected.

    ../../../../tmp/tmphj5lx6i5.ts(17,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmphj5lx6i5.ts(18,2): error TS1109: Expression expected.

    ../../../../tmp/tmphj5lx6i5.ts(18,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmphj5lx6i5.ts(19,2): error TS1109: Expression expected.

    ../../../../tmp/tmphj5lx6i5.ts(19,7): error TS1109: Expression expected.

    ../../../../tmp/tmphj5lx6i5.ts(20,8): error TS1005: '';'' expected.

    ../../../../tmp/tmphj5lx6i5.ts(20,12): error TS1005: ''('' expected.

    ../../../../tmp/tmphj5lx6i5.ts(20,16): error TS1005: '';'' expected.

    ../../../../tmp/tmphj5lx6i5.ts(20,24): error TS1005: '';'' expected.

    ../../../../tmp/tmphj5lx6i5.ts(20,26): error TS1005: '')'' expected.

    ../../../../tmp/tmphj5lx6i5.ts(20,32): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmphj5lx6i5.ts(20,35): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmphj5lx6i5.ts(20,41): error'
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let difference\
    \ = Math.abs(guess[i] - game[i]);\n        if (difference === 0) {\n         \
    \   result.push(i);\n        } else {\n            result.push(difference);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmp7ulrc3vy.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7ulrc3vy.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    let maxScore = Math.max(...game);\n    let minScore = Math.min(...game);\n\
    \    let maxGuess = Math.max(...guess);\n    let minGuess = Math.min(...guess);\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let score = game[i] - guess[i];\n\
    \        if (score === 0) {\n            result.push(i);\n        }\n        else\
    \ {\n            result.push(Math.abs(score - maxScore));\n        }\n    }\n\
    \    return result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  2,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmplerj02cc.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplerj02cc.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 2, 2 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff < 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  -3,\n  -3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmp3p71txiy.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3p71txiy.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, -3, -3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff == 0) {\n            result.push(i);\n       \
    \ } else {\n            result.push(diff);\n        }\n    }\n    return result;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmpolq_xe8c.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpolq_xe8c.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332965
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n  let result = [];\n \
    \ for (let i = 0; i < guess.length; i++) {\n    let diff = guess[i] - game[i];\n\
    \    if (diff > 0) {\n      result.push(diff);\n    } else {\n      result.push(Math.abs(diff));\n\
    \    }\n  }\n  return result;\n}\n\ncompare([1,2,3], [1,3,2]); // returns [2,1,1]\n\
    compare([1,2,3], [1,2,3]); // returns [0,1,0]\ncompare([1,2,3], [1,3,1]); // returns\
    \ [2,1,1]\ncompare([1,2,3], [1,3,2]); // returns [2,1,1]\ncompare([1,2,3], [1,3,3]);\
    \ // returns [2,1,1]\ncompare([1,2,3], [1,3,4]); // returns [2,1,1]\ncompare([1,2,3],\
    \ [1,4,3]); // returns [2,1,1]\ncompare([1,2,3], [1,4,4]); // returns [2,1,1]\n\
    compare([1,2,3], [1,5,3]); // returns [2,1,1]\ncompare([1,2,3], [1,5,4]); // returns\
    \ [2,1,1]\ncompare([1,2,3], [1,5,5]); // returns [2,1,1]\ncompare([1,2,3], [1,6,3]);\
    \ // returns [2,1,1]\ncompare([1,2,3], [1,6,4]); // returns [2,1,1]\ncompare([1,2,3],\
    \ [1,6,5]); // returns [2,1,1]\ncompare([1,2,3], [1,7,3]); // returns [2,1,1]\n\
    compare([1,2,3], [1,7,4]); // returns [2,1,1]\ncompare([1,2,3], [1,7,5]); // returns\
    \ [2,1,1]\ncompare([1,2,3], [1,8,3]); // returns [2,1,1]\ncompare([1,2,3], [1,8,4]);\
    \ // returns [2,1,1]\ncompare([1,2,3], [1,8,5]); // returns [2,1,1]\ncompare([1,2,3],\
    \ [1,9,3]); // returns [2,1,1]\ncompare([1,2,3], [1,9,4]); // returns [2,1,1]\n\
    compare([1,2,3], [1,9,5]); // returns [2,1,1]\ncompare([1,2,3], [1,10,3]); //\
    \ returns [2,1,1]\ncompare([1,2,3], [1,10,4]); // returns [2,1,1]\ncompare([1,2,3],\
    \ [1,10,5]); // returns [2,1,1]\ncompare([1,2,3], [1,11,3]); // returns [2,1,1]\n\
    compare([1,2,3], [1,11,4]); // returns [2,1,1]\ncompare([1,2,3], [1,11,5]); //\
    \ returns [2,1,1]\ncompare([1,2,3], [1,12,3]); // returns [2,1,1]\ncompare([1,2,3],\
    \ [1,12,4]); // returns [2,1,1]\ncompare([1,2,3], [1,12,5]); // returns [2,1,1]\n\
    compare([1,2,3], [1,13,3]); // returns [2,1,1]\ncompare([1,2,3], [1,13,\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpdqui049v.ts(56,9): error TS1005: '','' expected.

    '
  timestamp: 1660332965
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let score = game[i];\n\
    \        let guess = guess[i];\n        let diff = guess - score;\n        if\
    \ (diff > 0) {\n            result.push(diff);\n        } else if (diff < 0) {\n\
    \            result.push(Math.abs(diff));\n        } else {\n            result.push(0);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpdg9ulopu.ts(13,21): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let score = game[i];\n\
    \        let guess = guess[i];\n        let diff = guess - score;\n        if\
    \ (diff > 0) {\n            result.push(diff);\n        } else {\n           \
    \ result.push(Math.abs(diff));\n        }\n    }\n    return result;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp5g_4vl83.ts(13,21): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let score: number[] = [];\n    \n    for(let i = 0; i < guess.length;\
    \ i++){\n        score.push(game[i]);\n    }\n    \n    for(let i = 0; i < guess.length;\
    \ i++){\n        result.push(Math.abs(guess[i] - score[i]));\n    }\n    \n  \
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let correct = 0;\n    for (let i = 0; i < game.length; i++) {\n \
    \       if (game[i] === guess[i]) {\n            correct++;\n        }\n    }\n\
    \    for (let i = 0; i < game.length; i++) {\n        result[i] = Math.abs(game[i]\
    \ - guess[i]);\n    }\n    if (correct === game.length) {\n        return result;\n\
    \    }\n    else {\n        return result;\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let score = game[i];\n\
    \        let guess = guess[i];\n        if (guess === score) {\n            result.push(i);\n\
    \        } else {\n            result.push(Math.abs(guess - score));\n       \
    \ }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpaavj6198.ts(13,21): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    const result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        const diff = guess[i] -\
    \ game[i];\n        if (diff < 0) {\n            result.push(Math.abs(diff));\n\
    \        } else {\n            result.push(diff);\n        }\n    }\n    return\
    \ result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            diff *= -1;\n        }\n  \
    \      result.push(diff);\n    }\n    return result;\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for(let i = 0; i < guess.length; i++){\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let correct = 0;\n    for (let i = 0; i < guess.length; i++) {\n\
    \        if (game[i] === guess[i]) {\n            correct++;\n        }\n    }\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        }\n        else\
    \ {\n            result.push(Math.abs(diff));\n        }\n    }\n    if (correct\
    \ === guess.length) {\n        return result;\n    }\n    else {\n        return\
    \ result;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for(let i = 0; i < guess.length; i++){\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff > 0) {\n            result.push(diff);\n     \
    \   }\n    }\n    return result;\n}\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmpqpzkkzcb.js:22:12)\n    at Object.<anonymous> (/tmp/tmpqpzkkzcb.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332968
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let difference\
    \ = Math.abs(guess[i] - game[i]);\n        if (difference > 0) {\n           \
    \ result.push(difference);\n        } else {\n            result.push(0);\n  \
    \      }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332968
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  }\n    }\n    return result;\n}\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n    at test (/tmp/tmphzes5of4.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmphzes5of4.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else if (diff < 0) {\n            result.push(Math.abs(diff));\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmpb1nwju96.js:25:12)\n    at Object.<anonymous> (/tmp/tmpb1nwju96.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    let maxScore = Math.max(...game);\n    let minScore = Math.min(...game);\n\
    \    let maxGuess = Math.max(...guess);\n    let minGuess = Math.min(...guess);\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let score = Math.abs(guess[i]\
    \ - game[i]);\n        if (score > maxScore) {\n            result.push(maxScore\
    \ - score);\n        } else if (score < minScore) {\n            result.push(minScore\
    \ - score);\n        } else if (score == 0) {\n            result.push(0);\n \
    \       } else {\n            result.push(Math.abs(maxGuess - guess[i]));\n  \
    \      }\n    }\n    return result;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| c |>\nThanks for your answer. Your code works perfectly but i was looking\
    \ for a solution without using any loops.\n<|/ c |>\n<| c |>\nI updated my answer\
    \ to include a solution that does not use any loops.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxzhqa2vs.ts(29,2): error TS1110: Type expected.

    ../../../../tmp/tmpxzhqa2vs.ts(29,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpxzhqa2vs.ts(30,2): error TS1109: Expression expected.

    ../../../../tmp/tmpxzhqa2vs.ts(30,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpxzhqa2vs.ts(31,2): error TS1109: Expression expected.

    ../../../../tmp/tmpxzhqa2vs.ts(31,7): error TS1109: Expression expected.

    ../../../../tmp/tmpxzhqa2vs.ts(32,8): error TS1005: '';'' expected.

    ../../../../tmp/tmpxzhqa2vs.ts(32,12): error TS1005: ''('' expected.

    ../../../../tmp/tmpxzhqa2vs.ts(32,17): error TS1005: '';'' expected.

    ../../../../tmp/tmpxzhqa2vs.ts(32,30): error TS1005: '';'' expected.

    ../../../../tmp/tmpxzhqa2vs.ts(32,35): error TS1005: '')'' expected.

    ../../../../tmp/tmpxzhqa2vs.ts(32,41): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpxzhqa2vs.ts(32,51): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpxzhqa2vs.ts(32,55): error'
  timestamp: 1660332968
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  -3,\n  -3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmp5t5uphe_.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5t5uphe_.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, -3, -3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332968
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    game.forEach((score, index) => {\n        let guess = guess[index];\n\
    \        let diff = guess - score;\n        if (diff > 0) {\n            result.push(diff);\n\
    \        } else {\n            result.push(Math.abs(diff));\n        }\n    });\n\
    \    return result;\n}\n\ncompare([10, 20, 30], [20, 10, 30]); // [10, 0, 30]\n\
    compare([10, 20, 30], [20, 10, 20]); // [10, 0, 20]\ncompare([10, 20, 30], [20,\
    \ 10, 10]); // [10, 0, 10]\ncompare([10, 20, 30], [20, 10, 0]); // [10, 0, 0]\n\
    compare([10, 20, 30], [20, 10, 30]); // [10, 0, 30]\ncompare([10, 20, 30], [20,\
    \ 10, 20]); // [10, 0, 20]\ncompare([10, 20, 30], [20, 10, 10]); // [10, 0, 10]\n\
    compare([10, 20, 30], [20, 10, 0]); // [10, 0, 0]\ncompare([10, 20, 30], [20,\
    \ 10, 30]); // [10, 0, 30]\ncompare([10, 20, 30], [20, 10, 20]); // [10, 0, 20]\n\
    compare([10, 20, 30], [20, 10, 10]); // [10, 0, 10]\ncompare([10, 20, 30], [20,\
    \ 10, 0]); // [10, 0, 0]\ncompare([10, 20, 30], [20, 10, 30]); // [10, 0, 30]\n\
    compare([10, 20, 30], [20, 10, 20]); // [10, 0, 20]\ncompare([10, 20, 30], [20,\
    \ 10, 10]); // [10, 0, 10]\ncompare([10, 20, 30], [20, 10, 0]); // [10, 0, 0]\n\
    compare([10, 20, 30], [20, 10, 30]); // [10, 0, 30]\ncompare([10, 20, 30], [20,\
    \ 10, 20]); // [10, 0, 20]\ncompare([10, 20, 30], [20, 10, 10]); // [10, 0, 10]\n\
    compare([10, 20, 30], [20, 10, 0]); // [10, 0, 0]\ncompare([10, 20, 30], [20,\
    \ 10, 30]); // [10, 0, 30]\ncompare([10, 20, 30], [20, 10, 20]); // [10, 0, 20]\n\
    compare([10, 20, 30], [20, 10, 10]); // [10, 0, 10]\ncompare([10, 20, 30], [20,\
    \ 10, 0]); // [10, 0, 0]\ncompare([10, 20, 30], [20, 10, 30]); // [10, 0, 30]\n\
    compare([10, 20, 30], [20, 10, 20]); // [10, 0, 20]\ncompare([10, 20, 30], [20,\
    \ 10, 10]); // [10, 0, 10]\ncompare([10, 20, 30], [20, 10, 0]); // [10, 0, 0]\n\
    compare([10, 20, 30], [20, 10, 30]); // [10, 0, \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpfvwu3cnv.ts(12,21): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332969
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    const result = [];\n\
    \    for (let i = 0; i < guess.length; ++i) {\n        const difference = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(difference);\n    }\n    return result;\n}\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332969
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff < 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  -3,\n  -3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmp7qzizret.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qzizret.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, -3, -3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff === 0) {\n            result.push(i);\n      \
    \  } else {\n            result.push(diff);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmpjs83qg8o.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjs83qg8o.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    let score = 0;\n    let guesses = 0;\n    let gameScore = 0;\n    let gameGuesses\
    \ = 0;\n    \n    for(let i = 0; i < game.length; i++){\n        gameScore +=\
    \ game[i];\n        gameGuesses += guess[i];\n    }\n    \n    for(let i = 0;\
    \ i < guess.length; i++){\n        guesses += guess[i];\n    }\n    \n    for(let\
    \ i = 0; i < guess.length; i++){\n        if(gameGuesses == guesses){\n      \
    \      result[i] = 0;\n        }else{\n            result[i] = Math.abs(gameScore\
    \ - guess[i]);\n        }\n    }\n    \n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmp2hh3qah9.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2hh3qah9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, 0, 0 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for(let i = 0; i < guess.length; i++){\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff === 0) {\n            result.push(i);\n      \
    \  } else {\n            result.push(diff);\n        }\n    }\n    return result;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmpsghuql5v.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsghuql5v.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) result.push(diff);\n        else result.push(Math.abs(diff));\n\
    \    }\n    return result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332969
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for(let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332969
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let score: number[] = game.slice();\n    let guess: number[] = guess.slice();\n\
    \    let diff: number[] = [];\n    \n    for(let i = 0; i < guess.length; i++){\n\
    \        diff[i] = Math.abs(guess[i] - score[i]);\n    }\n    \n    for(let i\
    \ = 0; i < guess.length; i++){\n        if(diff[i] === 0){\n            result[i]\
    \ = 0;\n        }else{\n            result[i] = diff[i];\n        }\n    }\n \
    \   \n    return result;\n}\n\ncompare([1,2,3], [1,2,3]);\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi2tbtxqw.ts(9,34): error TS2300: Duplicate identifier
    ''guess''.

    ../../../../tmp/tmpi2tbtxqw.ts(12,9): error TS2300: Duplicate identifier ''guess''.

    '
  timestamp: 1660332969
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    let score = 0;\n    for (let i = 0; i < guess.length; i++) {\n        let\
    \ diff = Math.abs(guess[i] - game[i]);\n        if (diff > 0) {\n            result.push(diff);\n\
    \            score = 0;\n        } else {\n            score += diff;\n      \
    \  }\n    }\n    if (score > 0) {\n        result.push(score);\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmpuke75x9k.js:30:12)\n    at Object.<anonymous> (/tmp/tmpuke75x9k.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff < 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  -3,\n  -3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmp7qzizret.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qzizret.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, -3, -3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    \n    for (let i = 0; i < guess.length; i++) {\n        let diff\
    \ = Math.abs(guess[i] - game[i]);\n        result.push(diff);\n    }\n    \n \
    \   return result;\n}\n\ncompare([1,2,3], [1,3,2]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,4,3]); // returns [0,1,2]\ncompare([1,2,3], [1,3,4]); // returns [0,1,2]\n\
    compare([1,2,3], [1,4,2]); // returns [0,1,2]\ncompare([1,2,3], [1,4,3]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [1,4,2]); // returns [0,1,2]\ncompare([1,2,3], [1,4,3]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,4,2]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,4,3]); // returns [0,1,2]\ncompare([1,2,3], [1,4,2]); // returns [0,1,2]\n\
    compare([1,2,3], [1,4,3]); // returns [0,1,2]\ncompare([1,2,3], [1,4,2]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [1,4,3]); // returns [0,1,2]\ncompare([1,2,3], [1,4,2]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,4,3]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,4,2]); // returns [0,1,2]\ncompare([1,2,3], [1,4,3]); // returns [0,1,2]\n\
    compare([1,2,3], [1,4,2]); // returns [0,1,2]\ncompare([1,2,3], [1,4,3]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [1,4,2]); // returns [0,1,2]\ncompare([1,2,3], [1,4,3]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,4,2]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,4,3]); // returns [0,1,2]\ncompare([1,2,3], [1,4,2]); // returns [0,1,2]\n\
    compare([1,2,3], [1,4,3]); // returns [0,1,2]\ncompare([1,2,3], [1,4,2]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [1,4,3]); // returns [0,1,2]\ncompare([1,2,3], [1,4,2]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,4,3]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,4,2]); // returns [0,1,2]\ncompare([1,2,3], [1,4,3]); // returns [0,1,2]\n\
    compare([1,2,3], [1,4,2]); // returns [0,1,2]\ncompare([1,2,3], [1,4,3]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [1,4,2]); // returns [0,1,2]\ncompare([1,2,3], [1,4,3]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,4,2]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,4,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpznyqyip7.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1660332969
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n  let result: number[]\
    \ = [];\n  for (let i = 0; i < guess.length; i++) {\n    let diff = Math.abs(guess[i]\
    \ - game[i]);\n    if (diff === 0) {\n      result.push(i);\n    }\n  }\n  return\
    \ result;\n}\n\ncompare([1,2,3], [1,2,3]);\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n\
    \  3\n]\n    at test (/tmp/tmpomy2ml7w.js:23:12)\n    at Object.<anonymous> (/tmp/tmpomy2ml7w.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    let score = 0;\n    let maxScore = Math.max(...game);\n    let minScore =\
    \ Math.min(...game);\n    let maxGuess = Math.max(...guess);\n    let minGuess\
    \ = Math.min(...guess);\n    for(let i = 0; i < guess.length; i++){\n        if(game[i]\
    \ === guess[i]){\n            score++;\n        }\n    }\n    for(let i = 0; i\
    \ < guess.length; i++){\n        if(game[i] !== guess[i]){\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    for(let i = 0; i < guess.length; i++){\n\
    \        if(game[i] === guess[i]){\n            result.push(0);\n        }\n \
    \   }\n    for(let i = 0; i < guess.length; i++){\n        if(game[i] !== guess[i]){\n\
    \            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n  \
    \  for(let i = 0; i < guess.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(0);\n        }\n    }\n    for(let i = 0; i < guess.length;\
    \ i++){\n        if(game[i] !== guess[i]){\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    for(let i = 0; i < guess.length; i++){\n\
    \        if(game[i] === guess[i]){\n            result.push(0);\n        }\n \
    \   }\n    for(let i = 0; i < guess.length; i++){\n        if(game[i] !== guess[i]){\n\
    \            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n  \
    \  for(let i = 0; i < guess.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(0);\n        }\n    }\n    for(let i = 0; i < guess.length;\
    \ i++){\n        if(game[i] !== guess[i]){\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    for(let i = 0; i < guess.length; i++){\n\
    \        if(game[i] === guess[i]){\n            result.push(0);\n        }\n \
    \   }\n    for(let i = 0; i < guess.length; i++){\n        if(game[i] !== guess[i]){\n\
    \            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n  \
    \  for(let i = 0; i < guess.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(0);\n        }\n    }\n    for(let i = 0; i < guess.length;\
    \ i++){\n        if(game[i] !== guess[i]){\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    for(let i = 0; i < guess.length; i++){\n\
    \        if(game[i] === guess[i]){\n            result.push(0);\n        }\n \
    \   }\n    for(let i = 0; i < guess.length; i++){\n        if(game[i] !== guess[i]){\n\
    \            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n  \
    \  for(let i = 0; i < guess.length; i++){\n        if(game[i] === guess[i]){\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpw_2pxo7p.ts(111,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332969
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    let score = 0;\n    game.forEach((gameScore, index) => {\n        if (guess[index]\
    \ === gameScore) {\n            score++;\n        } else {\n            result.push(Math.abs(guess[index]\
    \ - gameScore));\n        }\n    });\n    return result.map(item => item === 0\
    \ ? 0 : item);\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmpj_y561fb.js:25:12)\n    at Object.<anonymous> (/tmp/tmpj_y561fb.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff === 0) {\n            result.push(i);\n      \
    \  }\n        else {\n            result.push(diff);\n        }\n    }\n    return\
    \ result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmprdlmpbaa.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprdlmpbaa.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff < 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  -3,\n  -3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmp7qzizret.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qzizret.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, -3, -3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n  let result: number[]\
    \ = [];\n  for (let i = 0; i < guess.length; i++) {\n    let diff = Math.abs(guess[i]\
    \ - game[i]);\n    if (diff === 0) {\n      result.push(i);\n    }\n  }\n  return\
    \ result;\n}\n\ncompare([1,2,3], [1,2,3]);\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n\
    \  3\n]\n    at test (/tmp/tmpomy2ml7w.js:23:12)\n    at Object.<anonymous> (/tmp/tmpomy2ml7w.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let score: number[] = [];\n    let guessed: number[] = [];\n    let\
    \ scoreIndex: number[] = [];\n    let guessedIndex: number[] = [];\n    let guessedIndex2:\
    \ number[] = [];\n    let guessedIndex3: number[] = [];\n    let guessedIndex4:\
    \ number[] = [];\n    let guessedIndex5: number[] = [];\n    let guessedIndex6:\
    \ number[] = [];\n    let guessedIndex7: number[] = [];\n    let guessedIndex8:\
    \ number[] = [];\n    let guessedIndex9: number[] = [];\n    let guessedIndex10:\
    \ number[] = [];\n    let guessedIndex11: number[] = [];\n    let guessedIndex12:\
    \ number[] = [];\n    let guessedIndex13: number[] = [];\n    let guessedIndex14:\
    \ number[] = [];\n    let guessedIndex15: number[] = [];\n    let guessedIndex16:\
    \ number[] = [];\n    let guessedIndex17: number[] = [];\n    let guessedIndex18:\
    \ number[] = [];\n    let guessedIndex19: number[] = [];\n    let guessedIndex20:\
    \ number[] = [];\n    let guessedIndex21: number[] = [];\n    let guessedIndex22:\
    \ number[] = [];\n    let guessedIndex23: number[] = [];\n    let guessedIndex24:\
    \ number[] = [];\n    let guessedIndex25: number[] = [];\n    let guessedIndex26:\
    \ number[] = [];\n    let guessedIndex27: number[] = [];\n    let guessedIndex28:\
    \ number[] = [];\n    let guessedIndex29: number[] = [];\n    let guessedIndex30:\
    \ number[] = [];\n    let guessedIndex31: number[] = [];\n    let guessedIndex32:\
    \ number[] = [];\n    let guessedIndex33: number[] = [];\n    let guessedIndex34:\
    \ number[] = [];\n    let guessedIndex35: number[] = [];\n    let guessedIndex36:\
    \ number[] = [];\n    let guessedIndex37: number[] = [];\n    let guessedIndex38:\
    \ number[] = [];\n    let guessedIndex39: number[] = [];\n    let guessedIndex40:\
    \ number[] = [];\n    let guessedIndex41: number[] = [];\n    let guessedIndex42:\
    \ number[] = [];\n    let guessedIndex43: number[] = [];\n    let guessedIndex44:\
    \ number[] = [];\n    let guessedIndex45: number[] = [];\n    let guessedIndex46:\
    \ number[] = [];\n    let guessedIndex47: number[] = [];\n    let guessedIndex48:\
    \ number[] = [];\n    let guessedIndex49: number\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpbrcotzx2.ts(75,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332969
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n  let result: number[]\
    \ = [];\n  for (let i = 0; i < guess.length; i++) {\n    let diff = Math.abs(guess[i]\
    \ - game[i]);\n    if (diff === 0) {\n      result.push(i);\n    } else {\n  \
    \    result.push(diff);\n    }\n  }\n  return result;\n}\n\ncompare([1,2,3], [1,4,3]);\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmpwigqc6a0.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwigqc6a0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    const result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        const diff = guess[i] -\
    \ game[i];\n        if (diff > 0) {\n            result.push(diff);\n        }\
    \ else if (diff < 0) {\n            result.push(Math.abs(diff));\n        } else\
    \ {\n            result.push(0);\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  }\n        else {\n            result.push(Math.abs(diff));\n        }\n  \
    \  }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332971
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    \n    for (let i = 0; i < guess.length; i++) {\n        let diff\
    \ = guess[i] - game[i];\n        if (diff > 0) {\n            result.push(diff);\n\
    \        } else {\n            result.push(Math.abs(diff));\n        }\n    }\n\
    \    \n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            diff *= -1;\n        }\n  \
    \      result.push(diff);\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332972
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let correct = 0;\n    for (let i = 0; i < guess.length; i++) {\n\
    \        let score = game[i];\n        let guess = guess[i];\n        if (guess\
    \ == score) {\n            correct++;\n        }\n        else {\n           \
    \ result.push(Math.abs(guess - score));\n        }\n    }\n    if (correct ==\
    \ guess.length) {\n        return result;\n    }\n    else {\n        return result;\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_c9mt1vf.ts(14,21): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332972
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff > 0) {\n            result.push(diff);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmp5ld99wec.js:22:12)\n    at Object.<anonymous> (/tmp/tmp5ld99wec.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let correct = 0;\n    for (let i = 0; i < game.length; i++) {\n \
    \       if (game[i] === guess[i]) {\n            correct++;\n        }\n    }\n\
    \    for (let i = 0; i < game.length; i++) {\n        let diff = game[i] - guess[i];\n\
    \        if (diff < 0) {\n            diff *= -1;\n        }\n        result.push(diff);\n\
    \    }\n    if (correct === game.length) {\n        return result;\n    }\n  \
    \  return result.map(function (x) {\n        return Math.abs(x);\n    });\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for(let i = 0; i < guess.length; i++){\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n  let result: number[]\
    \ = [];\n  for (let i = 0; i < guess.length; i++) {\n    let score = game[i];\n\
    \    let guess = guess[i];\n    if (score === guess) {\n      result[i] = 0;\n\
    \    } else {\n      result[i] = Math.abs(score - guess);\n    }\n  }\n  return\
    \ result;\n}\n\ncompare([4, 8, 6, 5, 3, 7], [3, 6, 5, 8, 4, 7]);\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp1n73pr_e.ts(13,17): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332972
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let score = game[i];\n\
    \        let guess = guess[i];\n        let diff = guess - score;\n        if\
    \ (diff > 0) {\n            result.push(diff);\n        }\n    }\n    return result;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpz_37ectf.ts(13,21): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332972
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for(let i = 0; i < guess.length; i++){\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| c |>\nThanks for your answer! I understand\
    \ what you're saying but I don't think I can use that to solve the problem. I'm\
    \ looking for a way to compare the two arrays and determine which one has the\
    \ highest difference between the two arrays. I hope that makes sense.\n<|/ c |>\n\
    <| c |>\nI updated my answer to include a solution that compares two arrays and\
    \ returns the difference between the two arrays. I hope that helps.\n<|/ c |>\n\
    <| c |>\nThanks for your answer! I understand what you're saying but I don't think\
    \ I can use that to solve the problem. I'm looking for a way to compare the two\
    \ arrays and determine which one has the highest difference between the two arrays.\
    \ I hope that makes sense.\n<|/ c |>\n<| c |>\nI updated my answer to include\
    \ a solution that compares two arrays and returns the difference between the two\
    \ arrays. I hope that helps.\n<|/ c |>\n<| c |>\nThanks for your answer! I understand\
    \ what you're saying but I don't think I can use that to solve the problem. I'm\
    \ looking for a way to compare the two arrays and determine which one has the\
    \ highest difference between the two arrays. I hope that makes sense.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmplaxxm8h5.ts(17,2): error TS1110: Type expected.

    ../../../../tmp/tmplaxxm8h5.ts(17,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmplaxxm8h5.ts(18,2): error TS1109: Expression expected.

    ../../../../tmp/tmplaxxm8h5.ts(18,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmplaxxm8h5.ts(19,2): error TS1109: Expression expected.

    ../../../../tmp/tmplaxxm8h5.ts(19,7): error TS1109: Expression expected.

    ../../../../tmp/tmplaxxm8h5.ts(20,8): error TS1005: '';'' expected.

    ../../../../tmp/tmplaxxm8h5.ts(20,12): error TS1005: ''('' expected.

    ../../../../tmp/tmplaxxm8h5.ts(20,17): error TS1005: '';'' expected.

    ../../../../tmp/tmplaxxm8h5.ts(20,25): error TS1005: '';'' expected.

    ../../../../tmp/tmplaxxm8h5.ts(20,27): error TS1005: '')'' expected.

    ../../../../tmp/tmplaxxm8h5.ts(20,38): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmplaxxm8h5.ts(20,43): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmplaxxm8h5.ts(20,67): error'
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let score: number[] = [];\n    let guesses: number[] = [];\n    let\
    \ games: number[] = [];\n    let gamesCount: number = 0;\n    let guessesCount:\
    \ number = 0;\n    let scoreCount: number = 0;\n    \n    for (let i = 0; i <\
    \ game.length; i++) {\n        gamesCount++;\n        games.push(game[i]);\n \
    \   }\n    \n    for (let i = 0; i < guess.length; i++) {\n        guessesCount++;\n\
    \        guesses.push(guess[i]);\n    }\n    \n    for (let i = 0; i < game.length;\
    \ i++) {\n        scoreCount++;\n        score.push(game[i] - guess[i]);\n   \
    \ }\n    \n    for (let i = 0; i < guess.length; i++) {\n        if (guess[i]\
    \ === game[i]) {\n            result[i] = 0;\n        } else {\n            result[i]\
    \ = Math.abs(game[i] - guess[i]);\n        }\n    }\n    \n    for (let i = 0;\
    \ i < guess.length; i++) {\n        if (guess[i] === game[i]) {\n            result[guessesCount]\
    \ = 0;\n        } else {\n            result[guessesCount] = Math.abs(game[i]\
    \ - guess[i]);\n        }\n    }\n    \n    for (let i = 0; i < guess.length;\
    \ i++) {\n        if (guess[i] === game[i]) {\n            result[scoreCount]\
    \ = 0;\n        } else {\n            result[scoreCount] = Math.abs(game[i] -\
    \ guess[i]);\n        }\n    }\n    \n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  3,\n  3\n]\n    at test (/tmp/tmps6588ks6.js:58:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps6588ks6.js:63:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 0, 0, 0,\n    3, 3, 3\n  ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332973
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    const result = [];\n\
    \    for (let i = 0; i < guess.length; ++i) {\n        const diff = guess[i] -\
    \ game[i];\n        if (diff > 0) {\n            result.push(diff);\n        }\
    \ else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let score = game[i];\n\
    \        let guess = guess[i];\n        if (guess === score) {\n            result.push(0);\n\
    \        } else {\n            result.push(Math.abs(guess - score));\n       \
    \ }\n    }\n    return result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmprq10s2k_.ts(13,21): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) result.push(diff);\n        else if (diff\
    \ < 0) result.push(Math.abs(diff));\n        else result.push(0);\n    }\n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332973
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for(let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if(diff < 0) {\n            result.push(diff);\n       \
    \ } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  -3,\n  -3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmp57bs17q1.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57bs17q1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, -3, -3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332972
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    let scoreDiff = 0;\n    for(let i = 0; i < game.length; i++) {\n        if(game[i]\
    \ === guess[i]) {\n            result.push(i);\n            scoreDiff = 0;\n \
    \       }\n        else {\n            result.push(Math.abs(scoreDiff + guess[i]\
    \ - game[i]));\n            scoreDiff += guess[i] - game[i];\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmpz52vnr36.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz52vnr36.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 6 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    const result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        const diff = guess[i] -\
    \ game[i];\n        if (diff > 0) {\n            result.push(diff);\n        }\
    \ else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332973
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let score: number[] = [];\n    let guesses: number[] = [];\n    let\
    \ games: number[] = [];\n    let gamesIndex: number[] = [];\n    let gamesIndex2:\
    \ number[] = [];\n    let gamesIndex3: number[] = [];\n    let gamesIndex4: number[]\
    \ = [];\n    let gamesIndex5: number[] = [];\n    let gamesIndex6: number[] =\
    \ [];\n    let gamesIndex7: number[] = [];\n    let gamesIndex8: number[] = [];\n\
    \    let gamesIndex9: number[] = [];\n    let gamesIndex10: number[] = [];\n \
    \   let gamesIndex11: number[] = [];\n    let gamesIndex12: number[] = [];\n \
    \   let gamesIndex13: number[] = [];\n    let gamesIndex14: number[] = [];\n \
    \   let gamesIndex15: number[] = [];\n    let gamesIndex16: number[] = [];\n \
    \   let gamesIndex17: number[] = [];\n    let gamesIndex18: number[] = [];\n \
    \   let gamesIndex19: number[] = [];\n    let gamesIndex20: number[] = [];\n \
    \   let gamesIndex21: number[] = [];\n    let gamesIndex22: number[] = [];\n \
    \   let gamesIndex23: number[] = [];\n    let gamesIndex24: number[] = [];\n \
    \   let gamesIndex25: number[] = [];\n    let gamesIndex26: number[] = [];\n \
    \   let gamesIndex27: number[] = [];\n    let gamesIndex28: number[] = [];\n \
    \   let gamesIndex29: number[] = [];\n    let gamesIndex30: number[] = [];\n \
    \   let gamesIndex31: number[] = [];\n    let gamesIndex32: number[] = [];\n \
    \   let gamesIndex33: number[] = [];\n    let gamesIndex34: number[] = [];\n \
    \   let gamesIndex35: number[] = [];\n    let gamesIndex36: number[] = [];\n \
    \   let gamesIndex37: number[] = [];\n    let gamesIndex38: number[] = [];\n \
    \   let gamesIndex39: number[] = [];\n    let gamesIndex40: number[] = [];\n \
    \   let gamesIndex41: number[] = [];\n    let gamesIndex42: number[] = [];\n \
    \   let gamesIndex43: number[] = [];\n    let gamesIndex44: number[] = [];\n \
    \   let gamesIndex45: number[] = [];\n    let gamesIndex46: number[] = [];\n \
    \   let gamesIndex47: number[] = [];\n    let gamesIndex48: number[] = [];\n \
    \   let gamesIndex49: number[]\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_h5ziqoy.ts(75,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332972
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    \n    for (let i = 0; i < guess.length; i++) {\n        let score\
    \ = game[i];\n        let guess = guess[i];\n        let diff = guess - score;\n\
    \        if (diff < 0) {\n            diff *= -1;\n        }\n        result.push(diff);\n\
    \    }\n    \n    return result;\n}\n\ncompare([1,2,3,4,5], [1,4,5,6,7]); // returns\
    \ [0,0,-3,0,0]\ncompare([1,2,3,4,5], [1,2,3,4,5]); // returns [0,0,0,0,0]\ncompare([1,2,3,4,5],\
    \ [1,4,5,6,7]); // returns [0,0,-3,0,0]\ncompare([1,2,3,4,5], [1,4,5,6,8]); //\
    \ returns [0,0,0,0,0]\ncompare([1,2,3,4,5], [1,4,5,6,9]); // returns [0,0,0,0,0]\n\
    compare([1,2,3,4,5], [1,4,5,7,9]); // returns [0,0,0,0,0]\ncompare([1,2,3,4,5],\
    \ [1,4,5,6,10]); // returns [0,0,0,0,0]\ncompare([1,2,3,4,5], [1,4,5,7,10]); //\
    \ returns [0,0,0,0,0]\ncompare([1,2,3,4,5], [1,4,5,6,11]); // returns [0,0,0,0,0]\n\
    compare([1,2,3,4,5], [1,4,5,7,11]); // returns [0,0,0,0,0]\ncompare([1,2,3,4,5],\
    \ [1,4,5,6,12]); // returns [0,0,0,0,0]\ncompare([1,2,3,4,5], [1,4,5,7,12]); //\
    \ returns [0,0,0,0,0]\ncompare([1,2,3,4,5], [1,4,5,6,13]); // returns [0,0,0,0,0]\n\
    compare([1,2,3,4,5], [1,4,5,7,13]); // returns [0,0,0,0,0]\ncompare([1,2,3,4,5],\
    \ [1,4,5,6,14]); // returns [0,0,0,0,0]\ncompare([1,2,3,4,5], [1,4,5,7,14]); //\
    \ returns [0,0,0,0,0]\ncompare([1,2,3,4,5], [1,4,5,6,15]); // returns [0,0,0,0,0]\n\
    compare([1,2,3,4,5], [1,4,5,7,15]); // returns [0,0,0,0,0]\ncompare([1,2,3,4,5],\
    \ [1,4,5,6,16]); // returns [0,0,0,0,0]\ncompare([1,2,3,4,5], [1,4,5,7,16]); //\
    \ returns [0,0,0,0,0]\ncompare([1,2,3,4,5], [1,4,5,6,17]); // returns [0,0,0,0,0]\n\
    compare([1,2,3,4,5], [1,4,5,7,17]); // returns [0,0,0,0,0]\ncompare([1,2,3,4,5],\
    \ [1,4,5,6,18]); // returns [0,0,0,0,0]\ncompare([1,2,3,4,5], [1,4,5,7,18]); //\
    \ returns [0,0,0,0,0]\ncompare([1,2,3,4,5], [1,4,5,6,19]); // returns [0,0,0,0,0]\n\
    compare([1,2,3,4,5], [1,4,5,7,19\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi_xbueh2.ts(51,1): error TS1005: '','' expected.

    ../../../../tmp/tmpi_xbueh2.ts(51,9): error TS1005: '','' expected.

    '
  timestamp: 1660332972
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    let score = 0;\n    let maxScore = Math.max(...game);\n    let minScore =\
    \ Math.min(...game);\n    let maxGuess = Math.max(...guess);\n    let minGuess\
    \ = Math.min(...guess);\n    for (let i = 0; i < guess.length; i++) {\n      \
    \  if (guess[i] === maxGuess)\n            score += maxScore;\n        else if\
    \ (guess[i] === minGuess)\n            score += minScore;\n        else\n    \
    \        score += Math.abs(guess[i] - game[i]);\n    }\n    for (let i = 0; i\
    \ < guess.length; i++) {\n        if (guess[i] === maxGuess)\n            result.push(0);\n\
    \        else if (guess[i] === minGuess)\n            result.push(0);\n      \
    \  else\n            result.push(Math.abs(guess[i] - game[i]));\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  3,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmpfmoj341t.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfmoj341t.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, 3, 0 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332973
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let difference\
    \ = Math.abs(guess[i] - game[i]);\n        if (difference === 0) {\n         \
    \   result[i] = 0;\n        } else {\n            result[i] = difference;\n  \
    \      }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332973
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n  let result = [];\n \
    \ for (let i = 0; i < guess.length; i++) {\n    let diff = guess[i] - game[i];\n\
    \    if (diff < 0) {\n      result.push(diff);\n    } else {\n      result.push(Math.abs(diff));\n\
    \    }\n  }\n  return result;\n}\n\ncompare([1,2,3], [1,3,2]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,1]); // returns [0,1,2]\ncompare([1,2,3], [1,3,3]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [1,3,4]); // returns [0,1,2]\ncompare([1,2,3], [1,4,3]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,4,4]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,5,3]); // returns [0,1,2]\ncompare([1,2,3], [1,5,4]); // returns [0,1,2]\n\
    compare([1,2,3], [1,5,5]); // returns [0,1,2]\ncompare([1,2,3], [1,6,3]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [1,6,4]); // returns [0,1,2]\ncompare([1,2,3], [1,6,5]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,7,3]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,7,4]); // returns [0,1,2]\ncompare([1,2,3], [1,7,5]); // returns [0,1,2]\n\
    compare([1,2,3], [1,8,3]); // returns [0,1,2]\ncompare([1,2,3], [1,8,4]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [1,8,5]); // returns [0,1,2]\ncompare([1,2,3], [1,9,3]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,9,4]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,9,5]); // returns [0,1,2]\ncompare([1,2,3], [1,10,3]); // returns [0,1,2]\n\
    compare([1,2,3], [1,10,4]); // returns [0,1,2]\ncompare([1,2,3], [1,10,5]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,11,3]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,11,4]); // returns [0,1,2]\ncompare([1,2,3], [1,11,5]); // returns [0,1,2]\n\
    compare([1,2,3], [1,12,3]); // returns [0,1,2]\ncompare([1,2,3], [1,12,4]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,12,5]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,13,3]); // returns [0,1,2]\ncompare([1,2,3], [1,13,4]); // returns [0,1,2]\n\
    compare([1,2,3], [1,13,5]); // returns [0,1,2]\ncompare([1,2,3], [1,14,3]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,14,4]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,14,5]); // returns [0,1,\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  -3,\n  -3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmp7t3qtk27.js:61:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7t3qtk27.js:66:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, -3, -3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332973
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            diff *= -1;\n        }\n  \
    \      result.push(diff);\n    }\n    return result;\n}\n</code>\n<|/ a tags=arrays,javascript,algorithm\
    \ |>\n<| c |>\nThank you so much! I really appreciate it!\n<|/ c |>\n<| a tags=arrays,javascript,algorithm\
    \ |>\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpzobkxjdb.ts(20,2): error TS1110: Type expected.

    ../../../../tmp/tmpzobkxjdb.ts(20,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpzobkxjdb.ts(21,2): error TS1109: Expression expected.

    ../../../../tmp/tmpzobkxjdb.ts(21,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpzobkxjdb.ts(22,2): error TS1109: Expression expected.

    ../../../../tmp/tmpzobkxjdb.ts(22,7): error TS1109: Expression expected.

    ../../../../tmp/tmpzobkxjdb.ts(23,7): error TS1005: '';'' expected.

    ../../../../tmp/tmpzobkxjdb.ts(23,11): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpzobkxjdb.ts(23,20): error TS1005: '';'' expected.

    ../../../../tmp/tmpzobkxjdb.ts(23,22): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpzobkxjdb.ts(23,29): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpzobkxjdb.ts(24,2): error TS1109: Expression expected.

    ../../../../tmp/tmpzobkxjdb.ts(24,4): error TS1161: Unterminated regular expression
    l'
  timestamp: 1660332973
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let score: number[] = [];\n    for (let i = 0; i < guess.length;\
    \ i++) {\n        let diff = Math.abs(guess[i] - game[i]);\n        result.push(diff);\n\
    \        score.push(game[i]);\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332975
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let score = game[i];\n\
    \        let guess = guess[i];\n        if (guess === score) {\n            result.push(i);\n\
    \        }\n        else {\n            result.push(Math.abs(guess - score));\n\
    \        }\n    }\n    return result;\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp548f5dll.ts(13,21): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332974
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    \n    for (let i = 0; i < game.length; i++) {\n        let diff =\
    \ Math.abs(game[i] - guess[i]);\n        result.push(diff);\n    }\n    \n   \
    \ return result;\n}\n\ncompare([1,2,3], [1,3,2]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,2,3]); // returns [0,1,2]\ncompare([1,2,3], [1,3,1]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,2]); // returns [0,1,2]\ncompare([1,2,3], [1,3,3]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [1,3,4]); // returns [0,1,2]\ncompare([1,2,3], [1,3,5]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,3,6]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,3,7]); // returns [0,1,2]\ncompare([1,2,3], [1,3,8]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,9]); // returns [0,1,2]\ncompare([1,2,3], [1,3,10]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,3,11]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,3,12]); // returns [0,1,2]\ncompare([1,2,3], [1,3,13]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,14]); // returns [0,1,2]\ncompare([1,2,3], [1,3,15]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,3,16]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,3,17]); // returns [0,1,2]\ncompare([1,2,3], [1,3,18]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,19]); // returns [0,1,2]\ncompare([1,2,3], [1,3,20]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,3,21]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,3,22]); // returns [0,1,2]\ncompare([1,2,3], [1,3,23]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,24]); // returns [0,1,2]\ncompare([1,2,3], [1,3,25]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,3,26]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,3,27]); // returns [0,1,2]\ncompare([1,2,3], [1,3,28]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,29]); // returns [0,1,2]\ncompare([1,2,3], [1,3,30]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,3,31]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,3,32]); // returns [0,1,2]\ncompare([1,2,3], [1,3,33]); // returns [0,\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332976
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        result[i] = Math.abs(guess[i]\
    \ - game[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332975
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff > 0) {\n            result.push(diff);\n     \
    \   }\n    }\n    return result;\n}\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmpqpzkkzcb.js:22:12)\n    at Object.<anonymous> (/tmp/tmpqpzkkzcb.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332968
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let score = game[i];\n\
    \        let guess = guess[i];\n        if (score === guess) {\n            result.push(0)\n\
    \        } else {\n            result.push(Math.abs(score - guess));\n       \
    \ }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpfmweom3f.ts(13,21): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332975
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    \n    for(let i = 0; i < game.length; i++) {\n        let diff = Math.abs(game[i]\
    \ - guess[i]);\n        result.push(diff);\n    }\n    \n    return result;\n\
    }\n\ncompare([1,2,3], [1,3,2]); // returns [0,1,2]\ncompare([1,2,3], [1,2,3]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,3,1]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,3,2]); // returns [0,1,2]\ncompare([1,2,3], [1,3,3]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,4]); // returns [0,1,2]\ncompare([1,2,3], [1,3,5]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [1,3,6]); // returns [0,1,2]\ncompare([1,2,3], [1,3,7]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,3,8]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,3,9]); // returns [0,1,2]\ncompare([1,2,3], [1,3,10]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,11]); // returns [0,1,2]\ncompare([1,2,3], [1,3,12]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,3,13]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,3,14]); // returns [0,1,2]\ncompare([1,2,3], [1,3,15]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,16]); // returns [0,1,2]\ncompare([1,2,3], [1,3,17]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,3,18]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,3,19]); // returns [0,1,2]\ncompare([1,2,3], [1,3,20]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,21]); // returns [0,1,2]\ncompare([1,2,3], [1,3,22]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,3,23]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,3,24]); // returns [0,1,2]\ncompare([1,2,3], [1,3,25]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,26]); // returns [0,1,2]\ncompare([1,2,3], [1,3,27]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,3,28]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,3,29]); // returns [0,1,2]\ncompare([1,2,3], [1,3,30]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,31]); // returns [0,1,2]\ncompare([1,2,3], [1,3,32]); //\
    \ returns [0,1,2]\ncompare([1,2,3], [1,3,33]); // returns [0,1,2]\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332976
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff != 0) {\n            result.push(diff);\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmp23p1b1h0.js:22:12)\n    at Object.<anonymous> (/tmp/tmp23p1b1h0.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332976
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    game.forEach((score, index) => {\n        let guess = guess[index];\n\
    \        let diff = guess - score;\n        if (diff > 0) {\n            result.push(diff);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmphi4xz130.ts(12,21): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332976
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            diff *= -1;\n        }\n  \
    \      result.push(diff);\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            diff *= -1;\n        }\n  \
    \      result.push(diff);\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            diff *= -1;\n        }\n  \
    \      result.push(diff);\n    }\n    return result;\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    const result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        const diff = guess[i] -\
    \ game[i];\n        if (diff > 0) {\n            result.push(diff);\n        }\n\
    \        else {\n            result.push(Math.abs(diff));\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332976
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff > 0) {\n            result.push(diff);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmp5ld99wec.js:22:12)\n    at Object.<anonymous> (/tmp/tmp5ld99wec.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ncompare([1,2,3],\
    \ [1,3,2]);\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332976
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            diff *= -1;\n        }\n  \
    \      result.push(diff);\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332972
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff === 0) {\n            result.push(i);\n      \
    \  }\n        else {\n            result.push(diff);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmplvbrls8p.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplvbrls8p.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332976
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff === 0) {\n            result.push(i);\n      \
    \  }\n        else {\n            result.push(diff);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmplvbrls8p.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplvbrls8p.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332976
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    game.forEach((score, index) => {\n        if (guess[index] === score)\
    \ {\n            result.push(0);\n        } else {\n            result.push(Math.abs(guess[index]\
    \ - score));\n        }\n    });\n    return result;\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332976
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for(let i = 0; i < guess.length; i++){\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    const result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        const difference = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(difference);\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332976
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for(let i = 0; i < game.length; i++) {\n        if(game[i] === guess[i])\
    \ {\n            result.push(i);\n        }\n    }\n    return result;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n\
    \  3\n]\n    at test (/tmp/tmpfumy__jv.js:21:12)\n    at Object.<anonymous> (/tmp/tmpfumy__jv.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660332976
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else if (diff < 0) {\n            result.push(Math.abs(diff));\n        }\
    \ else {\n            result.push(0);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332976
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThank you for your answer. Your solution works perfectly\
    \ for me. Thank you very much!\n<|/ c |>\n<| c |>\nGlad it helped. Feel free to\
    \ upvote and accept the answer if it helped you.\n<|/ c |>\n<| c |>\nI did upvote\
    \ and accept the answer. Thank you very much!\n<|/ c |>\n<| a |>\n<code>\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmprcykh28c.ts(17,2): error TS1110: Type expected.

    ../../../../tmp/tmprcykh28c.ts(17,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmprcykh28c.ts(18,2): error TS1109: Expression expected.

    ../../../../tmp/tmprcykh28c.ts(18,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmprcykh28c.ts(19,2): error TS1109: Expression expected.

    ../../../../tmp/tmprcykh28c.ts(19,7): error TS1109: Expression expected.

    ../../../../tmp/tmprcykh28c.ts(20,7): error TS1005: '';'' expected.

    ../../../../tmp/tmprcykh28c.ts(20,15): error TS1005: ''('' expected.

    ../../../../tmp/tmprcykh28c.ts(20,20): error TS1005: '';'' expected.

    ../../../../tmp/tmprcykh28c.ts(20,33): error TS1005: '';'' expected.

    ../../../../tmp/tmprcykh28c.ts(20,42): error TS1005: '')'' expected.

    ../../../../tmp/tmprcykh28c.ts(20,48): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprcykh28c.ts(20,62): error TS1005: ''('' expected.

    ../../../../tmp/tmprcykh28c.ts(20,72): error TS1005: '';'' expected.

    ../../../../tmp/tmprcykh28c.ts(20,76): error TS1005: '';'' expected.

    ../../../../tmp/tmprcykh28c.ts(20,81): error TS1005: '')'' expected.

    ../../../../tmp/tmprcykh28c.ts(21,2): error TS1109: Expression expected.

    ../../../../tmp/tmprcykh28c.ts(21,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmprcykh28c.ts(22,2): error TS1109: Expression expected.

    ../../../../tmp/tmprcykh28c.ts(22,7): error TS1109: Expression expected.

    ../../../../tmp/tmprcykh28c.ts(23,6): error TS1005: '';'' expected.

    ../../../../tmp/tmprcykh28c.ts(23,22): error TS1005: '';'' expected.

    ../../../../tmp/tmprcykh28c.ts(23,27): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprcykh28c.ts(23,30): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprcykh28c.ts(23,37): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprcykh28c.ts(23,41): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprcykh28c.ts(23,48): error TS1434: Unexpected keyword or identifier.

    ../../.'
  timestamp: 1660332976
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            diff *= -1;\n        }\n  \
    \      result.push(diff);\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) result.push(diff);\n        else if (diff\
    \ < 0) result.push(Math.abs(diff));\n        else result.push(0);\n    }\n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332973
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    game.forEach((score, index) => {\n        let diff = guess[index] - score;\n\
    \        if (diff > 0) {\n            result.push(diff);\n        } else if (diff\
    \ < 0) {\n            result.push(Math.abs(diff));\n        } else {\n       \
    \     result.push(0);\n        }\n    });\n    return result;\n}\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332976
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let score: number[] = [];\n    let guesses: number[] = [];\n    let\
    \ games: number[] = [];\n    let gamesIndex: number[] = [];\n    let gamesIndex2:\
    \ number[] = [];\n    let gamesIndex3: number[] = [];\n    let gamesIndex4: number[]\
    \ = [];\n    let gamesIndex5: number[] = [];\n    let gamesIndex6: number[] =\
    \ [];\n    let gamesIndex7: number[] = [];\n    let gamesIndex8: number[] = [];\n\
    \    let gamesIndex9: number[] = [];\n    let gamesIndex10: number[] = [];\n \
    \   let gamesIndex11: number[] = [];\n    let gamesIndex12: number[] = [];\n \
    \   let gamesIndex13: number[] = [];\n    let gamesIndex14: number[] = [];\n \
    \   let gamesIndex15: number[] = [];\n    let gamesIndex16: number[] = [];\n \
    \   let gamesIndex17: number[] = [];\n    let gamesIndex18: number[] = [];\n \
    \   let gamesIndex19: number[] = [];\n    let gamesIndex20: number[] = [];\n \
    \   let gamesIndex21: number[] = [];\n    let gamesIndex22: number[] = [];\n \
    \   let gamesIndex23: number[] = [];\n    let gamesIndex24: number[] = [];\n \
    \   let gamesIndex25: number[] = [];\n    let gamesIndex26: number[] = [];\n \
    \   let gamesIndex27: number[] = [];\n    let gamesIndex28: number[] = [];\n \
    \   let gamesIndex29: number[] = [];\n    let gamesIndex30: number[] = [];\n \
    \   let gamesIndex31: number[] = [];\n    let gamesIndex32: number[] = [];\n \
    \   let gamesIndex33: number[] = [];\n    let gamesIndex34: number[] = [];\n \
    \   let gamesIndex35: number[] = [];\n    let gamesIndex36: number[] = [];\n \
    \   let gamesIndex37: number[] = [];\n    let gamesIndex38: number[] = [];\n \
    \   let gamesIndex39: number[] = [];\n    let gamesIndex40: number[] = [];\n \
    \   let gamesIndex41: number[] = [];\n    let gamesIndex42: number[] = [];\n \
    \   let gamesIndex43: number[] = [];\n    let gamesIndex44: number[] = [];\n \
    \   let gamesIndex45: number[] = [];\n    let gamesIndex46: number[] = [];\n \
    \   let gamesIndex47: number[] = [];\n    let gamesIndex48: number[] = [];\n \
    \   let gamesIndex49: number[]\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_h5ziqoy.ts(75,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332972
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n  let result = [];\n \
    \ for (let i = 0; i < guess.length; i++) {\n    let diff = guess[i] - game[i];\n\
    \    if (diff > 0) result.push(diff);\n    else if (diff < 0) result.push(Math.abs(diff));\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmprmo7aew5.js:23:12)\n    at Object.<anonymous> (/tmp/tmprmo7aew5.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332976
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        } else {\n \
    \           result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let scoreDiff =\
    \ Math.abs(guess[i] - game[i]);\n        if (scoreDiff > 0) {\n            result.push(scoreDiff);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmpneskdj7k.js:22:12)\n    at Object.<anonymous> (/tmp/tmpneskdj7k.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332976
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let score: number[] = [];\n    let guesses: number[] = [];\n    let\
    \ scoreDiff: number[] = [];\n    let guessesDiff: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[] = [];\n    let guessesDiffIndex:\
    \ number[] = [];\n    let scoreDiffIndex: number[]\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpy92k5giv.ts(77,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332976
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let score: number[] = [];\n    let guesses: number[] = [];\n    let\
    \ scoreIndex: number[] = [];\n    let guessesIndex: number[] = [];\n    let scoreIndex2:\
    \ number[] = [];\n    let guessesIndex2: number[] = [];\n    let scoreIndex3:\
    \ number[] = [];\n    let guessesIndex3: number[] = [];\n    let scoreIndex4:\
    \ number[] = [];\n    let guessesIndex4: number[] = [];\n    let scoreIndex5:\
    \ number[] = [];\n    let guessesIndex5: number[] = [];\n    let scoreIndex6:\
    \ number[] = [];\n    let guessesIndex6: number[] = [];\n    let scoreIndex7:\
    \ number[] = [];\n    let guessesIndex7: number[] = [];\n    let scoreIndex8:\
    \ number[] = [];\n    let guessesIndex8: number[] = [];\n    let scoreIndex9:\
    \ number[] = [];\n    let guessesIndex9: number[] = [];\n    let scoreIndex10:\
    \ number[] = [];\n    let guessesIndex10: number[] = [];\n    let scoreIndex11:\
    \ number[] = [];\n    let guessesIndex11: number[] = [];\n    let scoreIndex12:\
    \ number[] = [];\n    let guessesIndex12: number[] = [];\n    let scoreIndex13:\
    \ number[] = [];\n    let guessesIndex13: number[] = [];\n    let scoreIndex14:\
    \ number[] = [];\n    let guessesIndex14: number[] = [];\n    let scoreIndex15:\
    \ number[] = [];\n    let guessesIndex15: number[] = [];\n    let scoreIndex16:\
    \ number[] = [];\n    let guessesIndex16: number[] = [];\n    let scoreIndex17:\
    \ number[] = [];\n    let guessesIndex17: number[] = [];\n    let scoreIndex18:\
    \ number[] = [];\n    let guessesIndex18: number[] = [];\n    let scoreIndex19:\
    \ number[] = [];\n    let guessesIndex19: number[] = [];\n    let scoreIndex20:\
    \ number[] = [];\n    let guessesIndex20: number[] = [];\n    let scoreIndex21:\
    \ number[] = [];\n    let guessesIndex21: number[] = [];\n    let scoreIndex22:\
    \ number[] = [];\n    let guessesIndex22: number[] = [];\n    let scoreIndex23:\
    \ number[] = [];\n    let guessesIndex23: number[] = [];\n    let scoreIndex24:\
    \ number[] = [];\n    let guessesIndex24: number[] = [];\n    let scoreIndex25:\
    \ number[] = [];\n    let guessesIndex25: number[] = [];\n    let scoreIndex26:\
    \ number[] = [];\n    let guessesIndex26: number[] = [];\n    let scoreIndex27:\
    \ number\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpd7c3nr9r.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332976
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff == 0) {\n            result.push(i);\n       \
    \ }\n        else {\n            result.push(diff);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmpvoqyttc7.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvoqyttc7.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332976
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff === 0) {\n            result.push(i);\n      \
    \  } else {\n            result.push(diff);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmpjs83qg8o.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjs83qg8o.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let correct = 0;\n    for (let i = 0; i < guess.length; i++) {\n\
    \        if (guess[i] === game[i]) {\n            correct++;\n        }\n    }\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff < 0) {\n            diff *= -1;\n        }\n        result.push(diff);\n\
    \    }\n    if (correct === guess.length) {\n        return result;\n    }\n \
    \   return result.map(function (x) {\n        return Math.abs(x);\n    });\n}\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332976
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332978
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let score: number[] = [];\n    let guesses: number[] = [];\n    let\
    \ games: number[] = [];\n    \n    for(let i = 0; i < guess.length; i++){\n  \
    \      guesses.push(guess[i]);\n    }\n    \n    for(let i = 0; i < game.length;\
    \ i++){\n        games.push(game[i]);\n    }\n    \n    for(let i = 0; i < guesses.length;\
    \ i++){\n        score.push(games[i] - guesses[i]);\n    }\n    \n    for(let\
    \ i = 0; i < guesses.length; i++){\n        if(score[i] === 0){\n            result.push(i);\n\
    \        }\n    }\n    \n    for(let i = 0; i < guesses.length; i++){\n      \
    \  if(score[i] !== 0){\n            result.push(Math.abs(score[i] - guesses[i]));\n\
    \        }\n    }\n    \n    return result;\n}\n\ncompare([1,3,5,7,9], [1,4,5,8,10])\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  1,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmpvmztadpt.js:39:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvmztadpt.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 1, 5 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332978
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let score: number[] = [];\n    let guesses: number[] = [];\n    let\
    \ games: number[] = [];\n    let gamesIndex: number[] = [];\n    let guessesIndex:\
    \ number[] = [];\n    let guessesIndex2: number[] = [];\n    let guessesIndex3:\
    \ number[] = [];\n    let guessesIndex4: number[] = [];\n    let guessesIndex5:\
    \ number[] = [];\n    let guessesIndex6: number[] = [];\n    let guessesIndex7:\
    \ number[] = [];\n    let guessesIndex8: number[] = [];\n    let guessesIndex9:\
    \ number[] = [];\n    let guessesIndex10: number[] = [];\n    let guessesIndex11:\
    \ number[] = [];\n    let guessesIndex12: number[] = [];\n    let guessesIndex13:\
    \ number[] = [];\n    let guessesIndex14: number[] = [];\n    let guessesIndex15:\
    \ number[] = [];\n    let guessesIndex16: number[] = [];\n    let guessesIndex17:\
    \ number[] = [];\n    let guessesIndex18: number[] = [];\n    let guessesIndex19:\
    \ number[] = [];\n    let guessesIndex20: number[] = [];\n    let guessesIndex21:\
    \ number[] = [];\n    let guessesIndex22: number[] = [];\n    let guessesIndex23:\
    \ number[] = [];\n    let guessesIndex24: number[] = [];\n    let guessesIndex25:\
    \ number[] = [];\n    let guessesIndex26: number[] = [];\n    let guessesIndex27:\
    \ number[] = [];\n    let guessesIndex28: number[] = [];\n    let guessesIndex29:\
    \ number[] = [];\n    let guessesIndex30: number[] = [];\n    let guessesIndex31:\
    \ number[] = [];\n    let guessesIndex32: number[] = [];\n    let guessesIndex33:\
    \ number[] = [];\n    let guessesIndex34: number[] = [];\n    let guessesIndex35:\
    \ number[] = [];\n    let guessesIndex36: number[] = [];\n    let guessesIndex37:\
    \ number[] = [];\n    let guessesIndex38: number[] = [];\n    let guessesIndex39:\
    \ number[] = [];\n    let guessesIndex40: number[] = [];\n    let guessesIndex41:\
    \ number[] = [];\n    let guessesIndex42: number[] = [];\n    let guessesIndex43:\
    \ number[] = [];\n    let guessesIndex44: number[] = [];\n    let guessesIndex45:\
    \ number[] = [];\n    let guessesIndex46: number[] = [];\n    let guessesIndex47:\
    \ number[] = [];\n    let guessesIndex48: number[] = [];\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpow3dp3rq.ts(75,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332978
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            diff *= -1;\n        }\n  \
    \      result.push(diff);\n    }\n    return result;\n}\n\ncompare([10, 20, 30],\
    \ [10, 20, 30]); // returns [0, 0, 0]\ncompare([10, 20, 30], [10, 20, 31]); //\
    \ returns [0, 0, 1]\ncompare([10, 20, 30], [10, 20, 32]); // returns [0, 1, 0]\n\
    compare([10, 20, 30], [10, 21, 32]); // returns [0, 1, 1]\ncompare([10, 20, 30],\
    \ [10, 20, 31]); // returns [0, 0, 1]\ncompare([10, 20, 30], [10, 20, 32]); //\
    \ returns [0, 1, 0]\ncompare([10, 20, 30], [10, 21, 32]); // returns [0, 1, 1]\n\
    compare([10, 20, 30], [10, 20, 31]); // returns [0, 0, 1]\ncompare([10, 20, 30],\
    \ [10, 20, 32]); // returns [0, 1, 0]\ncompare([10, 20, 30], [10, 21, 32]); //\
    \ returns [0, 1, 1]\ncompare([10, 20, 30], [10, 20, 31]); // returns [0, 0, 1]\n\
    compare([10, 20, 30], [10, 20, 32]); // returns [0, 1, 0]\ncompare([10, 20, 30],\
    \ [10, 21, 32]); // returns [0, 1, 1]\ncompare([10, 20, 30], [10, 20, 31]); //\
    \ returns [0, 0, 1]\ncompare([10, 20, 30], [10, 20, 32]); // returns [0, 1, 0]\n\
    compare([10, 20, 30], [10, 21, 32]); // returns [0, 1, 1]\ncompare([10, 20, 30],\
    \ [10, 20, 31]); // returns [0, 0, 1]\ncompare([10, 20, 30], [10, 20, 32]); //\
    \ returns [0, 1, 0]\ncompare([10, 20, 30], [10, 21, 32]); // returns [0, 1, 1]\n\
    compare([10, 20, 30], [10, 20, 31]); // returns [0, 0, 1]\ncompare([10, 20, 30],\
    \ [10, 20, 32]); // returns [0, 1, 0]\ncompare([10, 20, 30], [10, 21, 32]); //\
    \ returns [0, 1, 1]\ncompare([10, 20, 30], [10, 20, 31]); // returns [0, 0, 1]\n\
    compare([10, 20, 30], [10, 20, 32]); // returns [0, 1, 0]\ncompare([10, 20, 30],\
    \ [10, 21, 32]); // returns [0, 1, 1]\ncompare([10, 20, 30], [10, 20, 31]); //\
    \ returns [0, 0, 1]\ncompare([10, 20, 30], [10, 20, 32]); // returns [0, 1, 0]\n\
    compare([10, 20, 30], [10, 21, 32]); // returns [0, 1, 1]\ncompare([10, 20, 30],\
    \ [10, 20, 31]); // returns [0, 0, 1]\ncompare([10, 20, 30], [10, 20, 32]); //\
    \ returns [0, 1, 0]\ncompare([10, 20, 30], [10, 21, \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp16glgpai.ts(52,9): error TS1005: '','' expected.

    '
  timestamp: 1660332979
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332978
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332978
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    game.forEach((score, index) => {\n        let guess = guess[index];\n\
    \        if (guess === score) {\n            result[index] = 0;\n        } else\
    \ {\n            result[index] = Math.abs(guess - score);\n        }\n    });\n\
    \    return result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpegdg8v37.ts(12,21): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332979
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n  let result = [];\n \
    \ for (let i = 0; i < guess.length; i++) {\n    let diff = guess[i] - game[i];\n\
    \    if (diff > 0) {\n      result.push(diff);\n    } else {\n      result.push(Math.abs(diff));\n\
    \    }\n  }\n  return result;\n}\n\ncompare([1,2,3], [1,3,2]); // returns [0,1,2]\n\
    compare([1,2,3], [1,3,1]); // returns [0,1,2]\ncompare([1,2,3], [1,3,0]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [1,0,3]); // returns [0,1,2]\ncompare([1,2,3], [1,0,2]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,0,1]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [0,0,3]); // returns [0,1,2]\ncompare([1,2,3], [0,0,2]); // returns [0,1,2]\n\
    compare([1,2,3], [0,0,1]); // returns [0,1,2]\ncompare([1,2,3], [0,1,3]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [0,1,2]); // returns [0,1,2]\ncompare([1,2,3], [0,1,1]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [1,0,3]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [1,0,2]); // returns [0,1,2]\ncompare([1,2,3], [1,0,1]); // returns [0,1,2]\n\
    compare([1,2,3], [0,0,3]); // returns [0,1,2]\ncompare([1,2,3], [0,0,2]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [0,0,1]); // returns [0,1,2]\ncompare([1,2,3], [0,1,3]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [0,1,2]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [0,1,1]); // returns [0,1,2]\ncompare([1,2,3], [1,0,3]); // returns [0,1,2]\n\
    compare([1,2,3], [1,0,2]); // returns [0,1,2]\ncompare([1,2,3], [1,0,1]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [0,0,3]); // returns [0,1,2]\ncompare([1,2,3], [0,0,2]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [0,0,1]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [0,1,3]); // returns [0,1,2]\ncompare([1,2,3], [0,1,2]); // returns [0,1,2]\n\
    compare([1,2,3], [0,1,1]); // returns [0,1,2]\ncompare([1,2,3], [1,0,3]); // returns\
    \ [0,1,2]\ncompare([1,2,3], [1,0,2]); // returns [0,1,2]\ncompare([1,2,3], [1,0,1]);\
    \ // returns [0,1,2]\ncompare([1,2,3], [0,0,3]); // returns [0,1,2]\ncompare([1,2,3],\
    \ [0,0,2]); // returns [0,1,2]\ncompare([1,2,3], [0,0,1]); // returns [0,1,2]\n\
    compare([1,2,3], [0,1,3]); // returns [0,1,2]\ncompare([1,2,3], [0,1,2]); // \n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332979
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for(let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if(diff < 0) {\n            diff *= -1;\n        }\n   \
    \     result.push(diff);\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332979
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  -3,\n  -3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmppjfzi1sx.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppjfzi1sx.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, -3, -3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n  let result = [];\n \
    \ for (let i = 0; i < guess.length; i++) {\n    let diff = guess[i] - game[i];\n\
    \    if (diff < 0) {\n      result.push(diff);\n    } else {\n      result.push(Math.abs(diff));\n\
    \    }\n  }\n  return result;\n}\n\ncompare([1,2,3], [1,3,2]); // returns [0,1,2]\n\
    compare([1,2,3], [1,2,3]); // returns [0,1,2]\ncompare([1,2,3], [1,2,4]); // returns\
    \ [1,0,2]\ncompare([1,2,3], [1,3,1]); // returns [1,0,2]\ncompare([1,2,3], [1,3,2]);\
    \ // returns [1,0,2]\ncompare([1,2,3], [1,3,3]); // returns [1,0,2]\ncompare([1,2,3],\
    \ [1,3,4]); // returns [1,0,2]\ncompare([1,2,3], [1,4,3]); // returns [1,0,2]\n\
    compare([1,2,3], [1,4,4]); // returns [1,0,2]\ncompare([1,2,3], [1,5,3]); // returns\
    \ [1,0,2]\ncompare([1,2,3], [1,5,4]); // returns [1,0,2]\ncompare([1,2,3], [1,6,3]);\
    \ // returns [1,0,2]\ncompare([1,2,3], [1,6,4]); // returns [1,0,2]\ncompare([1,2,3],\
    \ [1,7,3]); // returns [1,0,2]\ncompare([1,2,3], [1,7,4]); // returns [1,0,2]\n\
    compare([1,2,3], [1,8,3]); // returns [1,0,2]\ncompare([1,2,3], [1,8,4]); // returns\
    \ [1,0,2]\ncompare([1,2,3], [1,9,3]); // returns [1,0,2]\ncompare([1,2,3], [1,9,4]);\
    \ // returns [1,0,2]\ncompare([1,2,3], [1,10,3]); // returns [1,0,2]\ncompare([1,2,3],\
    \ [1,10,4]); // returns [1,0,2]\ncompare([1,2,3], [1,11,3]); // returns [1,0,2]\n\
    compare([1,2,3], [1,11,4]); // returns [1,0,2]\ncompare([1,2,3], [1,12,3]); //\
    \ returns [1,0,2]\ncompare([1,2,3], [1,12,4]); // returns [1,0,2]\ncompare([1,2,3],\
    \ [1,13,3]); // returns [1,0,2]\ncompare([1,2,3], [1,13,4]); // returns [1,0,2]\n\
    compare([1,2,3], [1,14,3]); // returns [1,0,2]\ncompare([1,2,3], [1,14,4]); //\
    \ returns [1,0,2]\ncompare([1,2,3], [1,15,3]); // returns [1,0,2]\ncompare([1,2,3],\
    \ [1,15,4]); // returns [1,0,2]\ncompare([1,2,3], [1,16,3]); // returns [1,0,2]\n\
    compare([1,2,3], [1,16,4]); // returns [1,0,2]\ncompare([1,2,3], [1,17,3]); //\
    \ returns [1,0,2]\ncompare([1,2,3], [1,17,4]); // returns [1,0,2]\ncompare([1,2,3],\
    \ [1,18,3]); // returns [1,0,2]\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  -3,\n  -3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmpdcwbydj_.js:61:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdcwbydj_.js:66:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, -3, -3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332979
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n  let result = [];\n \
    \ for (let i = 0; i < guess.length; i++) {\n    let diff = guess[i] - game[i];\n\
    \    if (diff > 0) {\n      result.push(diff);\n    } else if (diff < 0) {\n \
    \     result.push(Math.abs(diff));\n    }\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmpfessg_sp.js:25:12)\n    at Object.<anonymous> (/tmp/tmpfessg_sp.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332979
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let score = game[i];\n\
    \        let guess = guess[i];\n        let diff = guess - score;\n        if\
    \ (diff > 0) result.push(diff);\n        else if (diff < 0) result.push(Math.abs(diff));\n\
    \        else result.push(0);\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpluzmzowl.ts(13,21): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332979
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    const result = [];\n\
    \    \n    for (let i = 0; i < guess.length; i++) {\n        const score = game[i];\n\
    \        const guess = guess[i];\n        const diff = guess - score;\n      \
    \  \n        if (diff > 0) {\n            result.push(diff);\n        } else {\n\
    \            result.push(Math.abs(diff));\n        }\n    }\n    \n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp14y0q3m4.ts(14,23): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332979
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff === 0) {\n            result.push(i);\n      \
    \  } else {\n            result.push(diff);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmpjs83qg8o.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjs83qg8o.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332969
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332978
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff > 0) {\n            result.push(diff);\n     \
    \   }\n    }\n    return result;\n}\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmpqpzkkzcb.js:22:12)\n    at Object.<anonymous> (/tmp/tmpqpzkkzcb.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332968
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    const result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        const diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            result.push(Math.abs(diff));\n\
    \        } else {\n            result.push(diff);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332980
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        }\n    }\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n    at test (/tmp/tmp29w296ij.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp29w296ij.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332980
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) result.push(diff);\n        else if (diff < 0) result.push(Math.abs(diff));\n\
    \        else result.push(0);\n    }\n    return result;\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332980
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    const result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        const score = game[i];\n\
    \        const guess = guess[i];\n        if (score === guess) {\n           \
    \ result.push(i);\n        } else if (Math.abs(score - guess) > Math.abs(score\
    \ - guess)) {\n            result.push(i);\n        }\n    }\n    return result;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpj3iw_up_.ts(13,23): error TS2448: Block-scoped variable
    ''guess'' used before its declaration.

    '
  timestamp: 1660332980
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let score: number[] = [];\n    let guesses: number[] = [];\n    let\
    \ i: number;\n    let j: number;\n    let k: number;\n    let l: number;\n   \
    \ let m: number;\n    let n: number;\n    let o: number;\n    let p: number;\n\
    \    let q: number;\n    let r: number;\n    let s: number;\n    let t: number;\n\
    \    let u: number;\n    let v: number;\n    let w: number;\n    let x: number;\n\
    \    let y: number;\n    let z: number;\n    let a: number;\n    let b: number;\n\
    \    let c: number;\n    let d: number;\n    let e: number;\n    let f: number;\n\
    \    let g: number;\n    let h: number;\n    let i: number;\n    let j: number;\n\
    \    let k: number;\n    let l: number;\n    let m: number;\n    let n: number;\n\
    \    let o: number;\n    let p: number;\n    let q: number;\n    let r: number;\n\
    \    let s: number;\n    let t: number;\n    let u: number;\n    let v: number;\n\
    \    let w: number;\n    let x: number;\n    let y: number;\n    let z: number;\n\
    \    let a: number;\n    let b: number;\n    let c: number;\n    let d: number;\n\
    \    let e: number;\n    let f: number;\n    let g: number;\n    let h: number;\n\
    \    let i: number;\n    let j: number;\n    let k: number;\n    let l: number;\n\
    \    let m: number;\n    let n: number;\n    let o: number;\n    let p: number;\n\
    \    let q: number;\n    let r: number;\n    let s: number;\n    let t: number;\n\
    \    let u: number;\n    let v: number;\n    let w: number;\n    let x: number;\n\
    \    let y: number;\n    let z: number;\n    let a: number;\n    let b: number;\n\
    \    let c: number;\n    let d: number;\n    let e: number;\n    let f: number;\n\
    \    let g: number;\n    let h: number;\n    let i: number;\n    let j: number;\n\
    \    let k: number;\n    let l: number;\n    let m: number;\n    let n: number;\n\
    \    let o: number;\n    let p: number;\n    let q: number;\n    let r: number;\n\
    \    let s: number;\n    let t: number;\n    let u: number;\n    let v: number;\n\
    \    let w: number;\n    let x: number;\n    let y: number;\n    let z: number;\n\
    \    let a: number;\n    let b: number;\n    let c: number;\n    let d: number;\n\
    \    let e: number;\n    let f: number;\n    let g: number;\n    let h: number;\n\
    \    let i: number;\n    let j: number;\n    let k: number;\n    let l: number;\n\
    \    let m: number;\n    let n: number;\n    let o: number;\n    let p: number;\n\
    \    let q: number;\n    let r: number;\n    let s: number;\n    let t: number;\n\
    \    let u: number;\n    let v: number;\n    let w: number;\n    let x: number;\n\
    \    let y: number;\n    let z: number;\n    let a: \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpm3_2_lhx.ts(136,9): error TS1005: '','' expected.

    ../../../../tmp/tmpm3_2_lhx.ts(148,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332980
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    let score = 0;\n    let guesses = guess.length;\n    let games = game.length;\n\
    \    for (let i = 0; i < guesses; i++) {\n        let diff = guess[i] - games[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n            score +=\
    \ diff;\n        } else {\n            result.push(Math.abs(diff));\n        \
    \    score += Math.abs(diff);\n        }\n    }\n    if (score === games) {\n\
    \        return result;\n    } else {\n        return result;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  NaN,\n  NaN,\n\
    \  NaN,\n  NaN,\n  NaN,\n  NaN\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  3,\n  3\n]\n    at test (/tmp/tmp1h4n0yya.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1h4n0yya.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ NaN, NaN,\
    \ NaN, NaN, NaN, NaN ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332980
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  }\n        else {\n            result.push(Math.abs(diff));\n        }\n  \
    \  }\n    return result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332980
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff === 0) {\n            result.push(i);\n      \
    \  }\n        else {\n            result.push(diff);\n        }\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| c |>\nThis doesn't\
    \ seem to work. Try it with the example I gave.\n<|/ c |>\n<| c |>\nIt does work.\
    \ I've added a working example to my answer. I've also added a link to the codepen\
    \ where you can see it working.\n<|/ c |>\n<| c |>\nYes, it does work. Thank you!\
    \ I guess I didn't understand how it worked.\n<|/ c |>\n<| c |>\nNo problem. Glad\
    \ I could help.\n<|/ c |>\n<| a dscore=0 |>\n<code>\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpyxv6ewjm.ts(22,2): error TS1110: Type expected.

    ../../../../tmp/tmpyxv6ewjm.ts(22,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpyxv6ewjm.ts(23,2): error TS1109: Expression expected.

    ../../../../tmp/tmpyxv6ewjm.ts(23,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpyxv6ewjm.ts(24,2): error TS1109: Expression expected.

    ../../../../tmp/tmpyxv6ewjm.ts(24,7): error TS1109: Expression expected.

    ../../../../tmp/tmpyxv6ewjm.ts(25,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpyxv6ewjm.ts(25,6): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpyxv6ewjm.ts(25,59): error TS1002: Unterminated string literal.

    ../../../../tmp/tmpyxv6ewjm.ts(26,2): error TS1109: Expression expected.

    ../../../../tmp/tmpyxv6ewjm.ts(26,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpyxv6ewjm.ts(27,2): error TS1109: Expression expected.

    ../../../../tmp/tmpyxv6ewjm.ts(27,7): error TS1109: Expression expected.

    ../../'
  timestamp: 1660332980
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        result[i] = Math.abs(guess[i]\
    \ - game[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332975
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    \n    for(let i = 0; i < guess.length; i++){\n        let diff =\
    \ Math.abs(guess[i] - game[i]);\n        result.push(diff);\n    }\n    \n   \
    \ return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332980
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff < 0) {\n            diff *= -1;\n        }\n  \
    \      result.push(diff);\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332972
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for(let i = 0; i < guess.length; i++){\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332980
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let difference\
    \ = Math.abs(guess[i] - game[i]);\n        if (difference > 0) {\n           \
    \ result.push(difference);\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmppsernjdm.js:22:12)\n    at Object.<anonymous> (/tmp/tmppsernjdm.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332980
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    let maxScore = Math.max(...game);\n    let minScore = Math.min(...game);\n\
    \    \n    for (let i = 0; i < guess.length; i++) {\n        let score = game[i]\
    \ - guess[i];\n        if (score < 0) {\n            score = Math.abs(score);\n\
    \        }\n        if (score > maxScore) {\n            score = maxScore - minScore;\n\
    \        }\n        result.push(score);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  2,\n\
    \  2\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  4,\n  6\n]\n    at test (/tmp/tmplaf81ogn.js:30:12)\n\
    \    at Object.<anonymous> (/tmp/tmplaf81ogn.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 2, 2\
    \ ],\n  expected: [ 2, 4, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332980
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i]\
    \ - game[i];\n        if (diff > 0) {\n            result.push(diff);\n      \
    \  } else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    \n    for (let i = 0; i < guess.length; i++) {\n        let diff\
    \ = guess[i] - game[i];\n        if (diff > 0) {\n            result.push(diff);\n\
    \        }\n        else {\n            result.push(Math.abs(diff));\n       \
    \ }\n    }\n    \n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332981
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332965
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n  let result: number[]\
    \ = [];\n  for (let i = 0; i < guess.length; i++) {\n    let diff = guess[i] -\
    \ game[i];\n    if (diff > 0) {\n      result.push(diff);\n    } else {\n    \
    \  result.push(Math.abs(diff));\n    }\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332981
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    const result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        const diff = guess[i] -\
    \ game[i];\n        if (diff > 0) {\n            result.push(diff);\n        }\
    \ else {\n            result.push(Math.abs(diff));\n        }\n    }\n    return\
    \ result;\n}\n\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\n\
    compare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\ncompare([4, 2,\
    \ 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8], [5,\
    \ 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]);\
    \ // [0, 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2,\
    \ -1, -1]\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\ncompare([4,\
    \ 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8],\
    \ [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4,\
    \ 2]); // [0, 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0,\
    \ 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\n\
    compare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\ncompare([4, 2,\
    \ 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8], [5,\
    \ 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]);\
    \ // [0, 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2,\
    \ -1, -1]\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\ncompare([4,\
    \ 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8],\
    \ [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4,\
    \ 2]); // [0, 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0,\
    \ 0, 2, -1, -1]\ncompare([4, 2, 5, 7, 8], [5, 7, 8, 4, 2]); // [0, 0, 2, -1, -1]\n\
    compare([4, 2, 5, 7, 8], [5, \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp5m4kvv20.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660332981
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) result.push(diff);\n        else if (diff < 0) result.push(Math.abs(diff));\n\
    \        else result.push(0);\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2,\
    \ 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332981
- exit_code: 2
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        result.push(diff);\n    }\n    return result;\n}\n\ncompare([2,4,5,6,7,8,9,10],\
    \ [2,4,5,6,7,8,9,10]); // [0, 0, 0, 0, 0, 0, 0]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,9,11]);\
    \ // [0, 0, 0, 0, 0, 0, 1]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,10,10]);\
    \ // [0, 0, 0, 0, 0, 0, 1]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,9,9]); //\
    \ [0, 0, 0, 0, 0, 0, 0]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,9,8]); // [0,\
    \ 0, 0, 0, 0, 0, 0]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,9,7]); // [0, 0,\
    \ 0, 0, 0, 0, 0]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,9,6]); // [0, 0, 0,\
    \ 0, 0, 0, 0]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,9,5]); // [0, 0, 0, 0,\
    \ 0, 0, 0]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,9,4]); // [0, 0, 0, 0, 0,\
    \ 0, 0]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,9,3]); // [0, 0, 0, 0, 0, 0,\
    \ 0]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,9,2]); // [0, 0, 0, 0, 0, 0, 0]\n\
    compare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,9,1]); // [0, 0, 0, 0, 0, 0, 0]\ncompare([2,4,5,6,7,8,9,10],\
    \ [2,4,5,6,7,8,9,0]); // [0, 0, 0, 0, 0, 0, 0]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,9,9]);\
    \ // [0, 0, 0, 0, 0, 0, 0]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,10,10]);\
    \ // [0, 0, 0, 0, 0, 0, 1]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,10,9]); //\
    \ [0, 0, 0, 0, 0, 0, 1]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,10,8]); // [0,\
    \ 0, 0, 0, 0, 0, 1]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,10,7]); // [0, 0,\
    \ 0, 0, 0, 0, 1]\ncompare([2,4,5,6,7,8,9,10], [2,4,5,6,7,8,10,6]); // [0, 0, 0,\
    \ 0, 0, 0, 1]\ncompare([\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpd2mkby8v.ts(38,9): error TS1005: '','' expected.

    '
  timestamp: 1660332981
- exit_code: 0
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result = [];\n\
    \    for (let i = 0; i < guess.length; i++) {\n        let diff = guess[i] - game[i];\n\
    \        if (diff > 0) {\n            result.push(diff);\n        }\n        else\
    \ {\n            result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660332981
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    \n    for (let i = 0; i < game.length; i++) {\n        let diff =\
    \ Math.abs(guess[i] - game[i]);\n        if (guess[i] === game[i]) {\n       \
    \     result.push(i);\n        } else {\n            result.push(diff);\n    \
    \    }\n    }\n    \n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0,\
    \ 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
    \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
    \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
    \ 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmpdfmk6a32.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdfmk6a32.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332982
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let difference\
    \ = Math.abs(guess[i] - game[i]);\n        if (difference > 0) {\n           \
    \ result.push(difference);\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  3,\n  3\n]\n  \
    \  at test (/tmp/tmppsernjdm.js:22:12)\n    at Object.<anonymous> (/tmp/tmppsernjdm.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332980
- exit_code: 1
  program: "//I think we all remember that feeling when the result of some long-awaited\n\
    // event is finally known. The feelings and thoughts you have at that moment are\n\
    // definitely worth noting down and comparing.\n// Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n// You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n// Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n// the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n// example:\nfunction\
    \ compare(game: number[], guess: number[]): number[] {\n    let result: number[]\
    \ = [];\n    for (let i = 0; i < guess.length; i++) {\n        let diff = Math.abs(guess[i]\
    \ - game[i]);\n        if (diff === 0) {\n            result.push(i);\n      \
    \  }\n        else {\n            result.push(diff);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5],\
    \ [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n\
    \  0,\n  3,\n  3\n]\n    at test (/tmp/tmplvbrls8p.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplvbrls8p.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 3, 3 ],\n  expected: [ 0, 0, 0, 0, 3, 3 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332976

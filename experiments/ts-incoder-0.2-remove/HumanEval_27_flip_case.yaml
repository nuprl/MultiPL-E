name: HumanEval_27_flip_case
language: ts
prompt: "//For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\nfunction flip_case(string: string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\"\
  );\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
  These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\");\n}\n\ntest();"
completions: ["    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g, c => c.toUpperCase());\n\
    }\n", "    return string.split('').reverse().join('');\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (letter) {\n        return letter.toUpperCase();\n    }).replace(/[A-Z]/g,\
    \ function (letter) {\n        return letter.toLowerCase();\n    });\n}\n", " \
    \   return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g, function (c) {\
    \ return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g, c =>\
    \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase());\n}\n", "  return\
    \ string.toLowerCase().replace(/[A-Z]/g, function (c: string) {\n    return c\
    \ === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();\n  });\n}\n", "  return\
    \ string.toLowerCase().replace(/[A-Z]/g, function (match) {\n    return match.toUpperCase();\n\
    \  });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ })\n        .replace(/[A-Z]/g, function (c) { return c.toLowerCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ })\n        .replace(/[A-Z]/g, function (c) { return c.toLowerCase(); });\n\
    }\n", "    return string.split('').map(letter => letter.toUpperCase()).join('');\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "  return string.toLowerCase().replace(/[A-Z]/g, c => c.toUpperCase());\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "  return string.toLowerCase().replace(/[A-Z]/g, c => c.toUpperCase());\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.toLowerCase().split(' ').map(function (word) {\n\
    \        return word[0].toUpperCase() + word.slice(1);\n    }).join(' ');\n}\n",
  "    return string.toLowerCase().replace(/[A-Z]/g, c => c.toUpperCase());\n}\n",
  "    return string.toLowerCase().replace(/[A-Z]/g, function (c) { return String.fromCharCode((c\
    \ | 32).toLowerCase()); });\n}\n", "  return string.toLowerCase().split('')\n\
    \      .map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase())\n\
    \      .join('');\n}\n", "    return string.toLowerCase().replace(/[a-z]/g, c\
    \ => c.toUpperCase());\n}\n", "    return string.replace(/[a-z]/g, function (c)\
    \ { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g, function\
    \ (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase());\n}\n", "  \
    \  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.split('').map(c => c === c.toUpperCase() ? c.toLowerCase()\
    \ : c.toUpperCase()).join('');\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ c => c.toUpperCase());\n}\n", "    return string.replace(/[a-z]/g, function\
    \ (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (letter) {\n        return letter.toUpperCase();\n    }).replace(/[A-Z]/g,\
    \ function (letter) {\n        return letter.toLowerCase();\n    });\n}\n", " \
    \   return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "  return string.toLowerCase().replace(/[a-z]/g, c => c.toUpperCase());\n\
    }\n", "    return string.toLowerCase().replace(/[a-z]/g, c => c.toUpperCase());\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g, function (c) {\
    \ return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g, function\
    \ (c) { return c.toUpperCase(); })\n        .replace(/[A-Z]/g, function (c) {\
    \ return c.toLowerCase(); });\n}\n", "    return string.replace(/[a-z]/g, function\
    \ (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase());\n}\n", "  \
    \  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ })\n        .replace(/[A-Z]/g, function (c) { return c.toLowerCase(); });\n\
    }\n", "    return string.toLowerCase().replace(/[a-z]/g, c => c === c.toUpperCase()\
    \ ? c.toLowerCase() : c.toUpperCase());\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (letter) {\n        return letter.toUpperCase();\n    }).replace(/[A-Z]/g,\
    \ function (letter) {\n        return letter.toLowerCase();\n    });\n}\n", " \
    \   return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g, c => c.toUpperCase());\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ })\n                .replace(/[A-Z]/g, function (c) { return c.toLowerCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, c => c.toUpperCase()) // Replace\
    \ all lowercase letters with uppercase letters.\n        .replace(/[A-Z]/g, c\
    \ => c.toLowerCase()) // Replace all uppercase letters with lowercase letters.\n\
    \        .replace(/[^A-Z]/g, c => c.toUpperCase()) // Replace all non-uppercase\
    \ letters with uppercase letters.\n        .replace(/[^a-z]/g, c => c.toLowerCase())\
    \ // Replace all non-lowercase letters with lowercase letters.\n        .replace(/\\\
    s+/g, ' ') // Replace multiple spaces with a single space.\n        .replace(/^\\\
    s+|\\s+$/g, ''); // Trim leading and trailing whitespace.\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (letter) {\n        return letter.toUpperCase();\n    }).replace(/[A-Z]/g,\
    \ function (letter) {\n        return letter.toLowerCase();\n    });\n}\n", " \
    \ return string.split('').map(function (c) {\n    return c === c.toUpperCase()\
    \ ? c.toLowerCase() : c.toUpperCase();\n  }).join('');\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ c => c.toUpperCase());\n}\n", "    return string.replace(/[a-z]/g, function\
    \ (c) { return c.toUpperCase(); });\n}\n", "    return string.split('').map(c\
    \ => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()).join('');\n}\n",
  "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "  return string.toLowerCase().split('').reduce((acc, char) => {\n\
    \    return char === char.toUpperCase() ? acc.toUpperCase() : acc.toLowerCase();\n\
    \  });\n}\n", "  return string.toLowerCase().split('')\n      .map(letter => letter.toUpperCase())\n\
    \      .join('');\n}\n", "    return string.replace(/[a-z]/g, function (c) { return\
    \ c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g, function (c)\
    \ { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g, function\
    \ (letter) {\n        return letter.toUpperCase();\n    }).replace(/[A-Z]/g, function\
    \ (letter) {\n        return letter.toLowerCase();\n    });\n}\n", "    return\
    \ string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });\n}\n", " \
    \   return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "  return string.toLowerCase().split('')\n      .map(c => c === c.toUpperCase()\
    \ ? c.toLowerCase() : c.toUpperCase())\n      .join('');\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ c => c.toUpperCase());\n}\n", "    return string.replace(/[a-z]/g, function\
    \ (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.toLowerCase().split('\
    \ ').map(function (word: string) {\n        return word[0].toUpperCase() + word.substring(1).toLowerCase();\n\
    \    }).join(' ');\n}\n", "    return string.replace(/[a-z]/g, function (c) {\
    \ return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g, function\
    \ (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ c => c.toUpperCase());\n}\n", "    return string.replace(/[a-z]/g, function\
    \ (letter) {\n        return letter.toUpperCase();\n    }).replace(/[A-Z]/g, function\
    \ (letter) {\n        return letter.toLowerCase();\n    });\n}\n", "    return\
    \ string.replace(/[a-z]/g, c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase());\n\
    }\n", "    return string.replace(/[a-z]/g, c => c.toUpperCase()) // Replace all\
    \ lowercase letters with uppercase letters.\n        .replace(/[A-Z]/g, c => c.toLowerCase())\
    \ // Replace all uppercase letters with lowercase letters.\n        .replace(/[^A-Z]/g,\
    \ c => c.toUpperCase()) // Replace all non-uppercase letters with uppercase letters.\n\
    \        .replace(/[^a-z]/g, c => c.toLowerCase()) // Replace all non-lowercase\
    \ letters with lowercase letters.\n        .replace(/[-_]/g, c => c.toUpperCase())\
    \ // Replace all hyphens and underscores with uppercase letters.\n        .replace(/[-_]/g,\
    \ c => c.toLowerCase()) // Replace all hyphens and underscores with lowercase\
    \ letters.\n        .replace(/[-_]/g, c => c.toUpperCase()) // Replace all hyphens\
    \ and underscores with uppercase letters.\n        .replace(/[-_]/g, c => c.toLowerCase())\
    \ // Replace all hyphens and underscores with lowercase letters.\n        .replace(/[-_]/g,\
    \ c => c.toUpperCase()) // Replace all hyphens and underscores with uppercase\
    \ letters.\n        .replace(/[-_]/g, c => c.toLowerCase()) // Replace all hyphens\
    \ and underscores with lowercase letters.\n        .replace(/[-_]/g, c => c.toUpperCase())\
    \ // Replace all hyphens and underscores with uppercase letters.\n        .replace(/[-_]/g,\
    \ c => c.toLowerCase()) // Replace all hyphens and underscores with lowercase\
    \ letters.\n        .replace(/[-_]/g, c => c.toUpperCase()) // Replace all hyphens\
    \ and underscores with uppercase letters.\n        .replace(/[-_]/g, c => c.toLowerCase())\
    \ // Replace all hyphens and underscores with lowercase letters.\n        .replace(/[-_]/g,\
    \ c => c.toUpperCase()) // Replace all hyphens and underscores with uppercase\
    \ letters.\n        .replace(/[-_]/g, c => c.toLowerCase()) // Replace all hyphens\
    \ and underscores with lowercase letters.\n        .replace(/[-_]/g, c => c.toUpperCase())\
    \ // Replace all hyphens and underscores with uppercase letters.\n        .replace(/[-_]/g,\
    \ c => c.toLowerCase()) // Replace all hyphens and underscores with lowercase\
    \ letters.\n        .replace(/[-_]/g, c => c.toUpperCase()) // Replace all hyphens\
    \ and underscores with uppercase letters.\n        .replace(/[-_]/g, c => c.toLowerCase())\
    \ // Replace all hyphens and underscores with lowercase letters.\n        .replace(/[-_]/g,\
    \ c => c.toUpperCase()) // Replace all hyphens and underscores with uppercase\
    \ letters.\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ })\n        .replace(/[A-Z]/g, function (c) { return c.toLowerCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.split('').reverse().join('');\n}\n", "    return\
    \ string.toLowerCase().split('')\n        .map(c => c === c.toUpperCase() ? c.toLowerCase()\
    \ : c.toUpperCase())\n        .join('');\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (letter) {\n        return letter.toUpperCase();\n    }).replace(/[A-Z]/g,\
    \ function (letter) {\n        return letter.toLowerCase();\n    });\n}\n", " \
    \   return string.split('').map(c => c === c.toUpperCase() ? c.toLowerCase() :\
    \ c.toUpperCase()).join('');\n}\n", "    return string.replace(/[a-z]/g, function\
    \ (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ c => c.toUpperCase());\n}\n", "  return string.split('').reduce((acc, char)\
    \ => {\n    return char === char.toUpperCase() ? acc.toUpperCase() : acc.toLowerCase();\n\
    \  });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ })\n    .replace(/[A-Z]/g, function (c) { return c.toLowerCase(); });\n}\n",
  "    return string.toLowerCase().replace(/[a-z]/g, c => c.toUpperCase());\n}\n",
  "    return string.replace(/[a-z]/g, function (letter) {\n        return letter.toUpperCase();\n\
    \    }).replace(/[A-Z]/g, function (letter) {\n        return letter.toLowerCase();\n\
    \    });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, c => c.toUpperCase()) // replace\
    \ all lowercase letters with uppercase\n        .replace(/[A-Z]/g, c => c.toLowerCase())\
    \ // replace all uppercase letters with lowercase\n        .replace(/[^a-zA-Z]/g,\
    \ c => c.toUpperCase()) // replace all non-alphanumeric characters with uppercase\n\
    \        .replace(/[^a-zA-Z]/g, c => c.toLowerCase()) // replace all non-alphanumeric\
    \ characters with lowercase\n}\n", "    return string.replace(/[a-z]/g, function\
    \ (c) { return c.toUpperCase(); });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ c => c.toUpperCase());\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase());\n}\n", "  \
    \  return string.toLowerCase().split('').map(letter => letter.toUpperCase()).join('');\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g, function (c) {\
    \ return c.toUpperCase(); });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.toLowerCase().split('')\n\
    \        .map(function (char: string) { return char.toUpperCase(); })\n      \
    \  .join('');\n}\n", "    return string.replace(/[a-z]/g, c => c === c.toUpperCase()\
    \ ? c.toLowerCase() : c.toUpperCase());\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); })\n        .replace(/[A-Z]/g, function\
    \ (c) { return c.toLowerCase(); });\n}\n", "    return string.toLowerCase().split('').reverse().join('');\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ })\n        .replace(/[A-Z]/g, function (c) { return c.toLowerCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.toLowerCase().replace(/[A-Z]/g, function (c: string)\
    \ {\n        return c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();\n\
    \    });\n}\n", "    return string.toLowerCase().replace(/[A-Z]/g, function (c:\
    \ string) {\n        return c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();\n\
    \    });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ })\n        .replace(/[A-Z]/g, function (c) { return c.toLowerCase(); });\n\
    }\n", "  return string.toLowerCase().split('')\n      .map(c => c === c.toUpperCase()\
    \ ? c.toLowerCase() : c.toUpperCase())\n      .join('');\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.split('').map(c\
    \ => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()).join('');\n}\n",
  "    return string.toLowerCase().replace(/[a-z]/g, c => c === c.toUpperCase() ?\
    \ c.toLowerCase() : c.toUpperCase());\n}\n", "  return string.toLowerCase().split('')\n\
    \      .map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase())\n\
    \      .join('');\n}\n", "    return string.replace(/[a-z]/g, c => c === c.toUpperCase()\
    \ ? c.toLowerCase() : c.toUpperCase());\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "  return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); })\n    .replace(/[A-Z]/g, function (c)\
    \ { return c.toLowerCase(); });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); })\n        .replace(/[A-Z]/g, function\
    \ (c) { return c.toLowerCase(); });\n}\n", "  return string.toLowerCase().replace(/[A-Z]/g,\
    \ function (c) { return String.fromCharCode((c | 32).toLowerCase()); });\n}\n",
  "    return string.toLowerCase().replace(/[A-Z]/g, function (c) { return String.fromCharCode((c\
    \ <= \"Z\" ? 90 : 122) >= (c = c.charCodeAt(0) + 13) ? c : c - 26); }).replace(/[a-z]/g,\
    \ function (c) { return String.fromCharCode((c <= \"Z\" ? 90 : 122) >= (c = c.charCodeAt(0)\
    \ + 13) ? c : c - 26); }); //For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n}\n", "  return string.split('').map(letter\
    \ => letter.toUpperCase()).join('');\n}\n", "    return string.replace(/[a-z]/g,\
    \ c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase());\n}\n", "  \
    \  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (letter) {\n      \
    \  return letter.toUpperCase();\n    }).replace(/[A-Z]/g, function (letter) {\n\
    \        return letter.toLowerCase();\n    });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ c => c.toUpperCase());\n}\n", "    return string.split('')\n        .map(letter\
    \ => letter.toUpperCase())\n        .join('');\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ c => c.toUpperCase());\n}\n", "  return string.split('')\n    .map(c => c.toLowerCase())\n\
    \    .map(c => c.toUpperCase())\n    .join('');\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase());\n}\n", "  \
    \  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); })\n\
    \        .replace(/[A-Z]/g, function (c) { return c.toLowerCase(); });\n}\n",
  "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.toLowerCase().split(' ').map(function (word: string)\
    \ {\n        return word[0].toUpperCase() + word.slice(1);\n    }).join(' ');\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ })\n        .replace(/[A-Z]/g, function (c) { return c.toLowerCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ })\n        .replace(/[A-Z]/g, function (c) { return c.toLowerCase(); });\n\
    }\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "    return string.replace(/[a-z]/g, c => c.toUpperCase()) // Replace\
    \ all lowercase letters with uppercase letters.\n        .replace(/[A-Z]/g, c\
    \ => c.toLowerCase()) // Replace all uppercase letters with lowercase letters.\n\
    \        .replace(/[^a-zA-Z]/g, c => c.toUpperCase()) // Replace all non-alphanumeric\
    \ characters with uppercase letters.\n        .replace(/[^a-zA-Z]/g, c => c.toLowerCase())\
    \ // Replace all non-alphanumeric characters with lowercase letters.\n       \
    \ .replace(/\\s+/g, ' '); // Replace multiple spaces with a single space.\n}\n",
  "    return string.replace(/[a-z]/g, function (letter) {\n        return letter.toUpperCase();\n\
    \    }).replace(/[A-Z]/g, function (letter) {\n        return letter.toLowerCase();\n\
    \    });\n}\n", "    return string.toLowerCase().replace(/[a-z]/g, function (c)\
    \ { return c.toUpperCase(); });\n}\n", "    return string.replace(/[a-z]/g, function\
    \ (c) { return c.toUpperCase(); });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

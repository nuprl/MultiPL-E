name: HumanEval_155_even_odd_count
language: ts
prompt: "//Given an integer. return a tuple that has the number of even and odd digits\
  \ respectively.\n// Example:\nfunction even_odd_count(num: number): [number, number]\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
  \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
  \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
  \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
  \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
completions: ["    let evenCount = 0;\n    let oddCount = 0;\n    while (num > 0)\
    \ {\n        let remainder = num % 10;\n        if (remainder === 0) {\n     \
    \       evenCount++;\n        } else {\n            oddCount++;\n        }\n \
    \       num = Math.floor(num / 10);\n    }\n    return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    let\
    \ remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    }\
    \ else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    const remainder = num % 10;\n    if (remainder === 0)\
    \ {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n\
    \    let oddCount = 0;\n    while (num > 0) {\n        if (num % 2 === 0) {\n\
    \            evenCount++;\n        } else {\n            oddCount++;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return [evenCount, oddCount];\n\
    }\n", "    let evenCount = 0;\n    let oddCount = 0;\n    while (num > 0) {\n\
    \        num = num / 10;\n        if (num % 2 === 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n    }\n    return [evenCount,\
    \ oddCount];\n}\nconsole.log(even_odd_count(123));\nconsole.log(even_odd_count(1234));\n\
    console.log(even_odd_count(12345));\nconsole.log(even_odd_count(123456));\nconsole.log(even_odd_count(1234567));\n\
    console.log(even_odd_count(12345678));\nconsole.log(even_odd_count(123456789));\n\
    console.log(even_odd_count(1234567890));\nconsole.log(even_odd_count(12345678901));\n\
    console.log(even_odd_count(123456789012));\nconsole.log(even_odd_count(1234567890123));\n\
    console.log(even_odd_count(12345678901234));\nconsole.log(even_odd_count(123456789012345));\n\
    console.log(even_odd_count(1234567890123456));\nconsole.log(even_odd_count(12345678901234567));\n\
    console.log(even_odd_count(123456789012345678));\nconsole.log(even_odd_count(1234567890123456789));\n\
    console.log(even_odd_count(12345678901234567890));\nconsole.log(even_odd_count(123456789012345678901));\n\
    console.log(even_odd_count(1234567890123456789012));\nconsole.log(even_odd_count(12345678901234567890123));\n\
    console.log(even_odd_count(123456789012345678901234));\nconsole.log(even_odd_count(1234567890123456789012345));\n\
    console.log(even_odd_count(12345678901234567890123456));\nconsole.log(even_odd_count(123456789012345678901234567));\n\
    console.log(even_odd_count(1234567890123456789012345678));\nconsole.log(even_odd_count(12345678901234567890123456789));\n\
    console.log(even_odd_count(123456789012345678901234567890));\nconsole.log(even_odd_count(1234567890123456789012345678901));\n\
    console.log(even_odd_count(12345678901234567890123456789012));\nconsole.log(even_odd_count(123456789012345678901234567890123));\n\
    console.log(even_odd_count(1234567890123456789012345678901234));\nconsole.log(even_odd_count(12345678901234567890123456789012345));\n\
    console.log(even_odd_count(123456789012345678901234567890123456));\nconsole.log(even_odd_count(1234567890123456789012345678901234567));\n\
    console.log(even_odd_count(12345678901234567890123456789012345678));\nconsole.log(even_odd_count(123456789012345678901234567890123456789));\n\
    console.log(even_odd_count(1234567890123456789012345678901234567890));\nconsole.log(even_odd_count(12345678901234567890123456789012345678901));\n\
    console.log(even_odd_count(1234567890123456789012345678901234567890", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    let currentDigit = num %\
    \ 10;\n    if (currentDigit % 2 === 0) {\n      evenCount++;\n    } else {\n \
    \     oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const\
    \ remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    }\
    \ else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    const remainder = num % 10;\n    if (remainder === 0)\
    \ {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n\
    \  let oddCount = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n \
    \   if (remainder === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    num\
    \ = num / 10;\n    evenCount++;\n  }\n  while (num > 0) {\n    num = num / 10;\n\
    \    oddCount++;\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n \
    \     evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n\
    \    let oddCount = 0;\n    while (num > 0) {\n        if (num % 2 === 0) {\n\
    \            evenCount++;\n        }\n        else {\n            oddCount++;\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    num = num / 10;\n\
    \    even++;\n  }\n  while (num > 0) {\n    num = num / 10;\n    odd++;\n  }\n\
    \  return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while\
    \ (num > 0) {\n    const remainder = num % 10;\n    if (remainder === 0) {\n \
    \     evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n\
    \  let oddCount = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n \
    \   if (remainder === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n",
  "  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n\
    \      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num /\
    \ 10);\n  }\n  return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n  \
    \  } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n  \
    \  } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n  \
    \  } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n  \
    \  } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n    if (remainder\
    \ === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num\
    \ = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let\
    \ evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const remainder\
    \ = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    } else {\n\
    \      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    for (let i = num; i > 0; i--) {\n        if (i % 2 === 0) {\n    \
    \        evenCount++;\n        } else {\n            oddCount++;\n        }\n\
    \    }\n    return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let\
    \ oddCount = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n  \
    \  } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    while (num > 0) {\n        let remainder = num % 10;\n        if (remainder\
    \ === 0) {\n            evenCount++;\n        } else {\n            oddCount++;\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n    while\
    \ (num > 0) {\n        if (num % 2 === 0) {\n            evenCount++;\n      \
    \  }\n        else {\n            oddCount++;\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n\
    \  let oddCount = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "    let even = 0;\n    let odd = 0;\n\
    \    while (num > 0) {\n        let digit = num % 10;\n        if (digit % 2 ===\
    \ 0) {\n            even++;\n        }\n        else {\n            odd++;\n \
    \       }\n        num = Math.floor(num / 10);\n    }\n    return [even, odd];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const\
    \ remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    }\
    \ else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "    let even = 0;\n    let odd = 0;\n    while\
    \ (num > 0) {\n        num = num / 10;\n        if (num % 2 === 0) {\n       \
    \     even++;\n        }\n        else {\n            odd++;\n        }\n    }\n\
    \    return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "    let even = 0;\n    let odd = 0;\n    while\
    \ (num > 0) {\n        let digit = num % 10;\n        if (digit % 2 === 0) {\n\
    \            even++;\n        } else {\n            odd++;\n        }\n      \
    \  num = Math.floor(num / 10);\n    }\n    return [even, odd];\n}\n", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n \
    \     evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n\
    \  let oddCount = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n    if (remainder\
    \ === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num\
    \ = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let\
    \ evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const remainder\
    \ = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    } else {\n\
    \      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n    if (remainder\
    \ === 0) evenCount++;\n    else oddCount++;\n    num = Math.floor(num / 10);\n\
    \  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n    if (remainder\
    \ === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num\
    \ = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "    let\
    \ evenCount = 0;\n    let oddCount = 0;\n    while (num > 0) {\n        if (num\
    \ % 2 === 0) {\n            evenCount++;\n        }\n        else {\n        \
    \    oddCount++;\n        }\n        num = Math.floor(num / 10);\n    }\n    return\
    \ [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n\
    \    while (num > 0) {\n        let remainder = num % 10;\n        if (remainder\
    \ === 0) {\n            evenCount++;\n        } else {\n            oddCount++;\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n    if (remainder\
    \ === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num\
    \ = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let\
    \ evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    let remainder\
    \ = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    } else {\n\
    \      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n  \
    \  even = num % 10;\n    odd = num % 10;\n    num = Math.floor(num / 10);\n  }\n\
    \  return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while\
    \ (num > 0) {\n    num = num / 10;\n    if (num % 2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const\
    \ remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    }\
    \ else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    const remainder = num % 10;\n    if (remainder === 0)\
    \ {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let even = 0;\n  let\
    \ odd = 0;\n  while (num > 0) {\n    num = num / 10;\n    if (num % 2 === 0) {\n\
    \      even++;\n    } else {\n      odd++;\n    }\n  }\n  return [even, odd];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    num\
    \ = num / 10;\n    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n  \
    \    oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n}\n", "  let even\
    \ = 0;\n  let odd = 0;\n  while (num > 0) {\n    num = num / 10;\n    if (num\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num\
    \ > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const\
    \ remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    }\
    \ else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n\
    \    while (num > 0) {\n        let digit = num % 10;\n        if (digit % 2 ===\
    \ 0) {\n            evenCount++;\n        } else {\n            oddCount++;\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n    while\
    \ (num > 0) {\n        let remainder = num % 10;\n        if (remainder === 0)\
    \ {\n            evenCount++;\n        } else {\n            oddCount++;\n   \
    \     }\n        num = Math.floor(num / 10);\n    }\n    return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n",
  "    let evenCount = 0;\n    let oddCount = 0;\n    for (let i = 0; i < num; i++)\
    \ {\n        if (num % 2 === 0) {\n            evenCount++;\n        } else {\n\
    \            oddCount++;\n        }\n    }\n    return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const\
    \ remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    }\
    \ else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n\
    \    while (num > 0) {\n        num = num / 10;\n        if (num % 2 === 0) {\n\
    \            evenCount++;\n        } else {\n            oddCount++;\n       \
    \ }\n    }\n    return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n \
    \ let oddCount = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n  \
    \  if (remainder === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n",
  "  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    const remainder = num\
    \ % 10;\n    if (remainder === 2) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", " \
    \ let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if (num %\
    \ 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n   \
    \ num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", " \
    \ let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const remainder\
    \ = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    } else {\n\
    \      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    const remainder = num % 10;\n    if (remainder === 2) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n  \
    \  } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    for (let i = num; i > 0; i /= 10) {\n        if (i % 2 === 0) {\n\
    \            evenCount++;\n        } else {\n            oddCount++;\n       \
    \ }\n    }\n    return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n \
    \ let oddCount = 0;\n  while (num > 0) {\n    num = num / 10;\n    if (num % 2\
    \ === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    evenCount += num % 2 === 0 ? 1 : 0;\n    oddCount\
    \ += num % 2 === 1 ? 1 : 0;\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n    for (let\
    \ i = num; i > 0; i /= 10) {\n        if (i % 2 === 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    num\
    \ = num / 10;\n    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n  \
    \    oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n \
    \     evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n\
    \  let oddCount = 0;\n  while (num > 0) {\n    evenCount++;\n    num = num / 10;\n\
    \  }\n  while (num > 0) {\n    oddCount++;\n    num = num / 10;\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    num = num / 10;\n    if (num % 2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const\
    \ remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    }\
    \ else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    const remainder = num % 10;\n    if (remainder === 0)\
    \ {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n\
    \    let oddCount = 0;\n    while (num > 0) {\n        let remainder = num % 10;\n\
    \        if (remainder === 0) {\n            evenCount++;\n        } else {\n\
    \            oddCount++;\n        }\n        num = Math.floor(num / 10);\n   \
    \ }\n    return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n  \
    \  } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let even = 0;\n  let odd = 0;\n  while\
    \ (num > 0) {\n    let digit = num % 10;\n    if (digit % 2 === 0) {\n      even++;\n\
    \    } else {\n      odd++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num\
    \ > 0) {\n    evenCount += num % 2 === 0;\n    oddCount += num % 2 !== 0;\n  \
    \  num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", " \
    \ let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if (num %\
    \ 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n   \
    \ num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", " \
    \ let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    let currentDigit\
    \ = num % 10;\n    if (currentDigit % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n\
    \    while (num > 0) {\n        if (num % 2 === 0) {\n            evenCount++;\n\
    \        }\n        else {\n            oddCount++;\n        }\n        num =\
    \ Math.floor(num / 10);\n    }\n    return [evenCount, oddCount];\n}\n", "  let\
    \ evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    let remainder\
    \ = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    } else {\n\
    \      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let even = 0;\n  let odd = 0;\n  while\
    \ (num > 0) {\n    let remainder = num % 10;\n    if (remainder === 0) {\n   \
    \   even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num / 10);\n\
    \  }\n  return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n\
    \  while (num > 0) {\n    num = num / 10;\n    if (num % 2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n\
    }\n", "    let even = 0;\n    let odd = 0;\n    while (num > 0) {\n        if\
    \ (num % 2 === 0) {\n            even++;\n        }\n        else {\n        \
    \    odd++;\n        }\n        num = Math.floor(num / 10);\n    }\n    return\
    \ [even, odd];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n    for\
    \ (let i = num; i > 0; i /= 10) {\n        if (i % 2 === 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    num = num / 10;\n    if (num % 2 === 0) {\n      evenCount++;\n  \
    \  } else {\n      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    num\
    \ = num / 10;\n    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n  \
    \    oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  for (let i = 0; i < num.toString().length; i++)\
    \ {\n    if (num.toString()[i] % 2 === 0) {\n      evenCount++;\n    } else {\n\
    \      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n}\n", "  let\
    \ evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if (num % 2 ===\
    \ 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num =\
    \ Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let even\
    \ = 0;\n  let odd = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      even++;\n\
    \    } else {\n      odd++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num\
    \ > 0) {\n    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n  \
    \  } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    for (let i = num; i > 0; i /= 10) {\n        if (i % 2 === 0) {\n\
    \            evenCount++;\n        } else {\n            oddCount++;\n       \
    \ }\n    }\n    return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n \
    \ let oddCount = 0;\n  for (let i = num; i > 0; i /= 10) {\n    if (i % 2 ===\
    \ 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let even = 0;\n  let odd = 0;\n  while (num\
    \ > 0) {\n    num = num / 10;\n    if (num % 2 === 0) {\n      even++;\n    }\
    \ else {\n      odd++;\n    }\n  }\n  return [even, odd];\n}\n", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const remainder = num %\
    \ 10;\n    if (remainder === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const\
    \ remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    }\
    \ else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    let digit = num % 10;\n    if (digit % 2 === 0) {\n \
    \     evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n\
    \  let oddCount = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n \
    \   if (remainder === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  for (let i = num; i > 0; i\
    \ /= 10) {\n    if (i % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let\
    \ oddCount = 0;\n  while (num > 0) {\n    num = num / 10;\n    if (num % 2 ===\
    \ 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n\
    \    while (num > 0) {\n        let remainder = num % 10;\n        if (remainder\
    \ === 0) {\n            evenCount++;\n        } else {\n            oddCount++;\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    let remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    let digit = num % 10;\n    if (digit % 2 ===\
    \ 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num =\
    \ Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let even\
    \ = 0;\n  let odd = 0;\n  while (num > 0) {\n    num = num / 10;\n    if (num\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num\
    \ > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "    let even = 0;\n    let odd = 0;\n    while (num > 0) {\n        let\
    \ temp = num % 10;\n        if (temp % 2 === 0) {\n            even++;\n     \
    \   }\n        else {\n            odd++;\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n    if (remainder\
    \ === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num\
    \ = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let\
    \ evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const remainder\
    \ = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    } else {\n\
    \      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n  \
    \  } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    while (num > 0) {\n        if (num % 2 === 0) {\n            evenCount++;\n\
    \        }\n        else {\n            oddCount++;\n        }\n        num =\
    \ Math.floor(num / 10);\n    }\n    return [evenCount, oddCount];\n}\n", "  let\
    \ even = 0;\n  let odd = 0;\n  while (num > 0) {\n    num = num / 10;\n    if\
    \ (num % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n \
    \ return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while\
    \ (num > 0) {\n    const remainder = num % 10;\n    if (remainder === 0) {\n \
    \     evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n\
    \  let oddCount = 0;\n  for (let i = num; i > 0; i /= 10) {\n    if (i % 2 ===\
    \ 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    const remainder = num % 10;\n    if (remainder === 0)\
    \ {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let even = 0;\n  let\
    \ odd = 0;\n  while (num > 0) {\n    num = num.toString().split('').reverse().join('');\n\
    \    if (num.length % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n  }\n  return [even, odd];\n}\n", "    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    while (num > 0) {\n        let remainder = num % 10;\n        if (remainder\
    \ === 0) {\n            evenCount++;\n        } else {\n            oddCount++;\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    let remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    evenCount += Math.floor(num / 10);\n    oddCount\
    \ += num % 10;\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n",
  "    let evenCount = 0;\n    let oddCount = 0;\n    while (num > 0) {\n        let\
    \ remainder = num % 10;\n        if (remainder === 2) {\n            evenCount++;\n\
    \        }\n        if (remainder === 1) {\n            oddCount++;\n        }\n\
    \        num = Math.floor(num / 10);\n    }\n    return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const\
    \ remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    }\
    \ else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    const remainder = num % 10;\n    if (remainder === 0)\
    \ {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n\
    \  let oddCount = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n \
    \   if (remainder === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const\
    \ remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    }\
    \ else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    let remainder = num % 10;\n    if (remainder === 2) {\n\
    \      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n\
    \  let oddCount = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n \
    \   if (remainder === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n",
  "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if (num % 2\
    \ === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num\
    \ = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let\
    \ evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const remainder\
    \ = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    } else {\n\
    \      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n  \
    \  num = num / 10;\n    if (num % 2 === 0) {\n      even++;\n    } else {\n  \
    \    odd++;\n    }\n  }\n  return [even, odd];\n}\n\nconsole.log(even_odd_count(123));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\nconsole.log(even_odd_count(12321));\n\
    console.log(even_od", "  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n\
    \    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    num = num / 10;\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let\
    \ oddCount = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "    let even = 0;\n    let odd = 0;\n\
    \    while (num > 0) {\n        if (num % 2 === 0) {\n            even++;\n  \
    \      }\n        else {\n            odd++;\n        }\n        num--;\n    }\n\
    \    return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    num = num / 10;\n    if (num % 2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n",
  "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if (num % 2\
    \ === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num\
    \ = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let\
    \ even = 0;\n  let odd = 0;\n  while (num > 0) {\n    num = num / 10;\n    if\
    \ (num % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n \
    \ return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while\
    \ (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n  \
    \    oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n    while\
    \ (num > 0) {\n        let remainder = num % 10;\n        if (remainder === 0)\
    \ {\n            evenCount++;\n        } else {\n            oddCount++;\n   \
    \     }\n        num = Math.floor(num / 10);\n    }\n    return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n",
  "  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n\
    \      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num /\
    \ 10);\n  }\n  return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n  \
    \  } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let even = 0;\n  let odd = 0;\n  while\
    \ (num > 0) {\n    num = num / 10;\n    if (num % 2 === 0) {\n      even++;\n\
    \    } else {\n      odd++;\n    }\n  }\n  return [even, odd];\n}\n", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    num = num / 10;\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let\
    \ oddCount = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n    if\
    \ (remainder === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n \
    \   }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n",
  "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const remainder\
    \ = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    } else {\n\
    \      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    const remainder = num % 10;\n    if (remainder === 2) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    evenCount += num % 2 === 0;\n    oddCount +=\
    \ num % 2 !== 0;\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n",
  "    let evenCount = 0;\n    let oddCount = 0;\n    while (num > 0) {\n        let\
    \ remainder = num % 10;\n        if (remainder === 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return [evenCount, oddCount];\n}\n", "    let even = 0;\n\
    \    let odd = 0;\n    while (num > 0) {\n        if (num % 2 === 0) {\n     \
    \       even++;\n        }\n        else {\n            odd++;\n        }\n  \
    \      num--;\n    }\n    return [even, odd];\n}\n", "  let evenCount = 0;\n \
    \ let oddCount = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    num = num / 10;\n    if (num % 2 === 0) {\n \
    \     evenCount++;\n    } else {\n      oddCount++;\n    }\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n    while\
    \ (num > 0) {\n        let remainder = num % 10;\n        if (remainder === 0)\
    \ {\n            evenCount++;\n        } else {\n            oddCount++;\n   \
    \     }\n        num = Math.floor(num / 10);\n    }\n    return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const\
    \ remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    }\
    \ else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n \
    \ while (num > 0) {\n    const remainder = num % 10;\n    if (remainder === 0)\
    \ {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let even = 0;\n  let\
    \ odd = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      even++;\n   \
    \ } else {\n      odd++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [even, odd];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n    while\
    \ (num > 0) {\n        let digit = num % 10;\n        if (digit % 2 === 0) {\n\
    \            evenCount++;\n        } else {\n            oddCount++;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  for (let i = 0; i < num.length;\
    \ i++) {\n    if (num[i] % 2 === 0) {\n      evenCount++;\n    } else {\n    \
    \  oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n}\n", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const remainder = num %\
    \ 10;\n    if (remainder === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n",
  "  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n\
    \      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num /\
    \ 10);\n  }\n  return [even, odd];\n}\n", "    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    while (num > 0) {\n        let remainder = num % 10;\n        if (remainder\
    \ === 2) {\n            evenCount++;\n        }\n        if (remainder === 1)\
    \ {\n            oddCount++;\n        }\n        num = Math.floor(num / 10);\n\
    \    }\n    return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let\
    \ oddCount = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n  \
    \  } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n    if (remainder\
    \ === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num\
    \ = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let\
    \ evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const remainder\
    \ = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    } else {\n\
    \      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n    while\
    \ (num > 0) {\n        if (num % 2 === 0) {\n            evenCount++;\n      \
    \  }\n        else {\n            oddCount++;\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n\
    \  let oddCount = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0) {\n    num = num / 10;\n    if (num % 2 === 0) {\n \
    \     evenCount++;\n    } else {\n      oddCount++;\n    }\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    let remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "  let even = 0;\n  let odd = 0;\n  while\
    \ (num > 0) {\n    if (num % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", " \
    \ let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    const remainder\
    \ = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n    } else {\n\
    \      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num >\
    \ 0) {\n    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    if\
    \ (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n   \
    \ }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n}\n",
  "    let evenCount = 0;\n    let oddCount = 0;\n    while (num > 0) {\n        if\
    \ (num % 2 === 0) {\n            evenCount++;\n        } else {\n            oddCount++;\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return [evenCount,\
    \ oddCount];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

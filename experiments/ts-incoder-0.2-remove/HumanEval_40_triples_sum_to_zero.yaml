name: HumanEval_40_triples_sum_to_zero
language: ts
prompt: "//triples_sum_to_zero takes a list of integers as an input.\n// it returns\
  \ True if there are three distinct elements in the list that\n// sum to zero, and\
  \ False otherwise.\nfunction triples_sum_to_zero(l: number[]): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = triples_sum_to_zero;\n  assert.deepEqual(candidate([1,\
  \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, 5, -1]),false);\n  assert.deepEqual(candidate([1,\
  \ 3, -2, 1]),true);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([1,\
  \ 2, 5, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 9, 7]),true);\n\
  \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([1, 3,\
  \ 5, -100]),false);\n  assert.deepEqual(candidate([100, 3, 5, -100]),false);\n}\n\
  \ntest();"
completions: ["  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n    return false;\n\
    \  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === sum) {\n        return true;\n      }\n  \
    \  }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n  const [a, b, c]\
    \ = l;\n  return a + b + c === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i\
    \ < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  for\
    \ (let i = 0; i < l.length; i++) {\n    if (l[i] != 0) {\n      if (sum - l[i]\
    \ == 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n", " \
    \ let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++)\
    \ {\n    sum += l[i];\n  }\n  for (let i = 0; i < l.length; i++) {\n    for (let\
    \ j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === sum) {\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  if (l.length < 3) {\n\
    \    return false;\n  }\n  const [a, b, c] = l;\n  return a + b + c === 0;\n}\n",
  "  if (l.length < 3) {\n    return false;\n  }\n  const set = new Set();\n  for\
    \ (let i = 0; i < l.length; i++) {\n    if (set.has(Math.abs(l[i] - 0))) {\n \
    \     return true;\n    }\n    set.add(Math.abs(l[i] - 0));\n  }\n  return false;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i < l.length; i++) {\n    for\
    \ (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n     \
    \   return true;\n      }\n    }\n  }\n  return false;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n    return false;\n\
    \  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === sum) {\n        return true;\n      }\n  \
    \  }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  const n = l.length;\n  if (n < 3) {\n    return false;\n  }\n \
    \ const set = new Set<number>();\n  for (let i = 0; i < n; i++) {\n    const x\
    \ = l[i];\n    if (set.has(x)) {\n      return false;\n    }\n    set.add(x +\
    \ x);\n  }\n  return true;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length <\
    \ 3) {\n    return false;\n  }\n  const [a, b, c] = l;\n  return a + b + c ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n    if (sum === 0) {\n      return true;\n    }\n  }\n  return false;\n\
    }\n", "  if (l.length < 3) {\n    return false;\n  }\n  const [a, b, c] = l;\n\
    \  return a + b + c === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n    if (sum === 0) {\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n\
    \  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (sum - l[i] !== 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return\
    \ sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n\
    \    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
  "  if (l.length < 3) {\n    return false;\n  }\n  let sum = 0;\n  for (let i = 0;\
    \ i < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i < l.length;\
    \ i++) {\n    if (l[i] === 0 || l[i] === sum) {\n      return true;\n    }\n \
    \ }\n  return false;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n \
    \ let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0 || l[i] === sum) {\n\
    \      return true;\n    }\n  }\n  return false;\n}\n", "  const n = l.length;\n\
    \  if (n < 3) {\n    return false;\n  }\n  const sum = 0;\n  for (let i = 0; i\
    \ < n; i++) {\n    sum += l[i];\n  }\n  const zeros = n - 1;\n  return sum ===\
    \ 0 || sum === n - 1 && zeros === 0;\n}\n", "  if (l.length < 3) {\n    return\
    \ false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum\
    \ += l[i];\n  }\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0 &&\
    \ sum - l[i] === 0) {\n      return true;\n    }\n  }\n  return false;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++)\
    \ {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for\
    \ (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length <\
    \ 3) {\n    return false;\n  }\n  const [a, b, c] = l;\n  return a + b + c ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n    return false;\n\
    \  }\n  const [a, b, c] = l;\n  return a + b + c === 0;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i\
    \ < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i < l.length; i++)\
    \ {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0)\
    \ {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return\
    \ sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n\
    \    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n  \
    \  return false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n\
    \    sum += l[i];\n  }\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] ===\
    \ 0 || l[i] === sum) {\n      return true;\n    }\n  }\n  return false;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  return sum === 0;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n \
    \ const [a, b, c] = l;\n  return a + b + c === 0;\n}\n", "  let sum = 0;\n  for\
    \ (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n\
    }\n", "  if (l.length < 3) {\n    return false;\n  }\n  const zero = l.find(x\
    \ => x === 0);\n  if (zero === undefined) {\n    return false;\n  }\n  const two\
    \ = l.find(x => x === 2);\n  if (two === undefined) {\n    return false;\n  }\n\
    \  const three = l.find(x => x === 3);\n  if (three === undefined) {\n    return\
    \ false;\n  }\n  return true;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n  const zero = l.filter(x\
    \ => x === 0);\n  if (zero.length !== 3) {\n    return false;\n  }\n  const two\
    \ = l.filter(x => x === 2);\n  if (two.length !== 3) {\n    return false;\n  }\n\
    \  const three = l.filter(x => x === 3);\n  if (three.length !== 3) {\n    return\
    \ false;\n  }\n  return true;\n}\n", "  if (l.length < 3) {\n    return false;\n\
    \  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === sum) {\n        return true;\n      }\n  \
    \  }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] !== 0 && l[i]\
    \ !== sum) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  let sum\
    \ = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return\
    \ sum === 0;\n}\n", "  const n = l.length;\n  if (n < 3) {\n    return false;\n\
    \  }\n  const triples = l.slice(1, n - 1);\n  const sums = triples\n    .map((x)\
    \ => x.reduce((acc, x) => acc + x, 0))\n    .filter((x) => x === 0);\n  return\
    \ sums.length === 3;\n}\n", "  l.sort();\n  let sum = 0;\n  for (let i = 0; i\
    \ < l.length; i++) {\n    sum += l[i];\n    if (sum === 0) {\n      return true;\n\
    \    }\n  }\n  return false;\n}\n", "  if (l.length < 3) {\n    return false;\n\
    \  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0 || l[i] === sum)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "  for (let i = 0; i < l.length; i++)\
    \ {\n    for (let j = i + 1; j < l.length; j++) {\n      for (let k = j + 1; k\
    \ < l.length; k++) {\n        if (l[i] + l[j] + l[k] === 0) {\n          return\
    \ true;\n        }\n      }\n    }\n  }\n  return false;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i\
    \ < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return\
    \ sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n\
    \    sum += l[i];\n    if (sum > 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum\
    \ += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  for\
    \ (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++)\
    \ {\n      if (l[i] + l[j] === sum) {\n        return true;\n      }\n    }\n\
    \  }\n  return false;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n\
    \  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0 || l[i] === sum) {\n\
    \      return true;\n    }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for\
    \ (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i\
    \ < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i]\
    \ + l[j] === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === l[i - 1] && l[i]\
    \ === l[i + 1]) {\n      return false;\n    }\n  }\n  return sum === 0;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  return sum === 0;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n \
    \ const [a, b, c] = l;\n  return a + b + c === 0;\n}\n", "  let sum = 0;\n  for\
    \ (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  if (sum === 0) {\n\
    \    return true;\n  }\n  return false;\n}\n", "  let sum = 0;\n  for (let i =\
    \ 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", " \
    \ if (l.length < 3) {\n    return false;\n  }\n  let sum = 0;\n  for (let i =\
    \ 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i < l.length;\
    \ i++) {\n    if (l[i] === 0 && sum === l[i - 1]) {\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i\
    \ < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i < l.length; i++)\
    \ {\n    if (l[i] === 0) return false;\n  }\n  return sum === 0;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return\
    \ sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n\
    \    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n  \
    \  return false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n\
    \    sum += l[i];\n  }\n  for (let i = 0; i < l.length; i++) {\n    for (let j\
    \ = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === sum) {\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++)\
    \ {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for\
    \ (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n\
    }\n", "  if (l.length < 3) {\n    return false;\n  }\n  let sum = 0;\n  for (let\
    \ i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  return sum === 0;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n \
    \ let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0 && l[i + 1] === 0\
    \ && l[i + 2] === 0) {\n      return true;\n    }\n  }\n  return false;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++)\
    \ {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n\
    \    return false;\n  }\n  const [a, b, c] = l;\n  return a + b + c === 0;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0 || l[i] === sum) {\n\
    \      return true;\n    }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for\
    \ (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i\
    \ < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i]\
    \ + l[j] === sum) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n  let sum = 0;\n \
    \ for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i =\
    \ 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n    \
    \  if (l[i] + l[j] === sum) {\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum\
    \ += l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n    return\
    \ false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum\
    \ += l[i];\n  }\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] !== 0 &&\
    \ l[i] !== sum) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return\
    \ sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n\
    \    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < l.length; i++) {\n    sum += l[i];\n    if (sum === 0) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return\
    \ sum === 0;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n  const set\
    \ = new Set<number>();\n  for (let i = 0; i < l.length; i++) {\n    if (set.has(l[i]\
    \ + l[i + 1] + l[i + 2])) {\n      return false;\n    }\n    set.add(l[i] + l[i\
    \ + 1] + l[i + 2]);\n  }\n  return true;\n}\n", "  if (l.length < 3) {\n    return\
    \ false;\n  }\n  const [a, b, c] = l;\n  return a + b + c === 0;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  for\
    \ (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++)\
    \ {\n      if (l[i] + l[j] === sum) {\n        return true;\n      }\n    }\n\
    \  }\n  return false;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length <\
    \ 3) {\n    return false;\n  }\n  const [a, b, c] = l;\n  return a + b + c ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i\
    \ < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i < l.length; i++)\
    \ {\n    if (sum - l[i] === 0) {\n      return true;\n    }\n  }\n  return false;\n\
    }\n", "  if (l.length < 3) {\n    return false;\n  }\n  let sum = 0;\n  for (let\
    \ i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j]\
    \ === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n",
  "  l.sort();\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n    if (sum === 0) {\n      return true;\n    }\n  }\n  return false;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0) return false;\n\
    \  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n    return false;\n \
    \ }\n  const [a, b, c] = l;\n  return a + b + c === 0;\n}\n", "  if (l.length\
    \ < 3) {\n    return false;\n  }\n  const [a, b, c] = l;\n  return a + b + c ===\
    \ 0;\n}\n", "  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j\
    \ < l.length; j++) {\n      for (let k = j + 1; k < l.length; k++) {\n       \
    \ if (l[i] + l[j] + l[k] == 0) {\n          return true;\n        }\n      }\n\
    \    }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n    return false;\n\
    \  }\n  const set = new Set<number>();\n  for (let i = 0; i < l.length; i++) {\n\
    \    if (set.has(l[i] + l[i + 1] + l[i + 2])) {\n      return false;\n    }\n\
    \    set.add(l[i] + l[i + 1] + l[i + 2]);\n  }\n  return true;\n}\n", "  let sum\
    \ = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return\
    \ sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n\
    \    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  if (sum === 0) {\n   \
    \ return true;\n  }\n  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n\
    \    if (l[i] === sum) {\n      count++;\n    }\n  }\n  if (count === 3) {\n \
    \   return true;\n  }\n  return false;\n}\n", "  if (l.length < 3) {\n    return\
    \ false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum\
    \ += l[i];\n  }\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i +\
    \ 1; j < l.length; j++) {\n      if (l[i] + l[j] === sum) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  if (l.length < 3) {\n    return\
    \ false;\n  }\n  const set = new Set<number>();\n  for (let i = 0; i < l.length;\
    \ i++) {\n    if (set.has(l[i] + l[i + 1] + l[i + 2])) {\n      return false;\n\
    \    }\n    set.add(l[i] + l[i + 1] + l[i + 2]);\n  }\n  return true;\n}\n", " \
    \ let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  if (sum === 0) {\n    return true;\n  }\n  let count = 0;\n  for (let i = 0;\
    \ i < l.length; i++) {\n    if (l[i] === sum) {\n      count++;\n    }\n  }\n\
    \  return count === 3;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n    if (sum === 0) {\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n\
    \  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === sum) {\n        return true;\n      }\n  \
    \  }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1;\
    \ j < l.length; j++) {\n      if (l[i] + l[j] === sum) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return\
    \ sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n\
    \    sum += l[i];\n  }\n  if (sum === 0) {\n    return true;\n  }\n  for (let\
    \ i = 0; i < l.length; i++) {\n    if (l[i] === l[i - 1] && l[i] === l[i + 1])\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length <\
    \ 3) {\n    return false;\n  }\n  const [a, b, c] = l;\n  return a + b + c ===\
    \ 0;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n  let sum = 0;\n \
    \ for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i =\
    \ 0; i < l.length; i++) {\n    if (l[i] != 0) {\n      if (sum - l[i] != 0) {\n\
    \        return false;\n      }\n    }\n  }\n  return true;\n}\n", "  for (var\
    \ i = 0; i < l.length; i++) {\n    for (var j = i + 1; j < l.length; j++) {\n\
    \      for (var k = j + 1; k < l.length; k++) {\n        if (l[i] + l[j] + l[k]\
    \ === 0) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n\
    }\n", "  if (l.length < 3) {\n    return false;\n  }\n  const set = new Set<number>();\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (set.has(l[i] + l[i + 1] + l[i\
    \ + 2])) {\n      return false;\n    }\n    set.add(l[i] + l[i + 1] + l[i + 2]);\n\
    \  }\n  return true;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++)\
    \ {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n\
    \    return false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++)\
    \ {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for\
    \ (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i\
    \ < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i]\
    \ + l[j] === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length <\
    \ 3) {\n    return false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i < l.length; i++) {\n    for\
    \ (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === sum) {\n   \
    \     return true;\n      }\n    }\n  }\n  return false;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i\
    \ < l.length; i++) {\n    sum += l[i];\n  }\n  if (sum === 0) {\n    return true;\n\
    \  }\n  let found = false;\n  for (let i = 0; i < l.length; i++) {\n    if (l[i]\
    \ === sum) {\n      found = true;\n      break;\n    }\n  }\n  return found;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n    if (sum === 0) return true;\n  }\n  return false;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  if (sum === 0) {\n    return true;\n  }\n \
    \ let found = false;\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] ===\
    \ sum) {\n      found = true;\n      break;\n    }\n  }\n  return found;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n    if\
    \ (sum === 0) {\n      return true;\n    }\n  }\n  return false;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return\
    \ sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n\
    \    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++)\
    \ {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n\
    \    return false;\n  }\n  const [a, b, c] = l;\n  return a + b + c === 0;\n}\n",
  "  if (l.length < 3) {\n    return false;\n  }\n  let sum = 0;\n  for (let i = 0;\
    \ i < l.length; i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i < l.length;\
    \ i++) {\n    if (sum - l[i] === 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum\
    \ += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return\
    \ sum === 0;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n  const zero\
    \ = l.filter((x: number) => x === 0);\n  const two = l.filter((x: number) => x\
    \ === 2);\n  const three = l.filter((x: number) => x === 3);\n  return zero.length\
    \ === 3 && two.length === 3 && three.length === 3;\n}\n", "  if (l.length < 3)\
    \ {\n    return false;\n  }\n  const [a, b, c] = l;\n  return a + b + c === 0;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n    return false;\n \
    \ }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === sum) {\n        return true;\n      }\n  \
    \  }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i\
    \ < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  const\
    \ n = l.length;\n  if (n < 3) {\n    return false;\n  }\n  let sum = 0;\n  for\
    \ (let i = 0; i < n; i++) {\n    sum += l[i];\n  }\n  for (let i = 0; i < n; i++)\
    \ {\n    for (let j = i + 1; j < n; j++) {\n      if (l[i] + l[j] === sum) {\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  let sum\
    \ = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n    if (sum\
    \ > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n", "  let sum =\
    \ 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  for (let\
    \ i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n\
    \      if (l[i] + l[j] === sum) {\n        return true;\n      }\n    }\n  }\n\
    \  return false;\n}\n", "  for (let i = 0; i < l.length; i++) {\n    for (let\
    \ j = i + 1; j < l.length; j++) {\n      for (let k = j + 1; k < l.length; k++)\
    \ {\n        if (l[i] + l[j] + l[k] === 0) {\n          return true;\n       \
    \ }\n      }\n    }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for (let i\
    \ = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++)\
    \ {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for\
    \ (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n\
    \  }\n  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "  const n = l.length;\n  if (n < 3)\
    \ {\n    return false;\n  }\n  const zeros = l.filter((x, i) => x === 0);\n  if\
    \ (zeros.length !== 3) {\n    return false;\n  }\n  const zeros_sum = zeros.reduce((a,\
    \ b) => a + b, 0);\n  return zeros_sum === 0;\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  return sum === 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++)\
    \ {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "  if (l.length < 3) {\n\
    \    return false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++)\
    \ {\n    sum += l[i];\n  }\n  for (let i = 0; i < l.length; i++) {\n    for (let\
    \ j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === sum) {\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n\
    \  return sum === 0;\n}\n", "  if (l.length < 3) {\n    return false;\n  }\n \
    \ const set = new Set<number>();\n  for (let i = 0; i < l.length; i++) {\n   \
    \ if (set.has(l[i] + l[i + 1] + l[i + 2])) {\n      return false;\n    }\n   \
    \ set.add(l[i] + l[i + 1] + l[i + 2]);\n  }\n  return true;\n}\n", "  if (l.length\
    \ < 3) {\n    return false;\n  }\n  const [a, b, c] = l;\n  return a + b + c ===\
    \ 0;\n}\n", "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_15_string_sequence
language: ts
prompt: "//Return a string containing space-delimited numbers starting from 0 upto\
  \ n inclusive.\nfunction string_sequence(n: number): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
  0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
  0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
completions: ["  return Array(n + 1).join(0).split('').map(i => i + 1).join('');\n\
    }\n", "  return Array.from(Array(n).keys()).map(i => String(i)).join(' ');\n}\n",
  "  return Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n", "  let s\
    \ = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n",
  "  return '0123456789'.slice(0, n);\n}\n", "  return Array.from(Array(n).keys()).map(i\
    \ => String(i)).join(' ');\n}\n", "  return Array(1 + n).fill(0).map((_, i) =>\
    \ i).join('');\n}\n", "    var result = \"\";\n    for (var i = 0; i <= n; i++)\
    \ {\n        result += i + \" \";\n    }\n    return result;\n}\n", "    let str\
    \ = '';\n    for (let i = 0; i < n; i++) {\n        str += i;\n    }\n    return\
    \ str;\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n\
    \  }\n  return s;\n}\n", "  return '0123456789'.split('').slice(0, n).join('');\n\
    }\n", "  return Array(n + 1).join(0).split('');\n}\n", "  let s = \"\";\n  for\
    \ (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "  let s = \"\
    \";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", " \
    \ return Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n", "  return\
    \ Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n", "  const result:\
    \ string[] = [];\n  for (let i = 0; i < n; i++) {\n    result.push(String(i));\n\
    \  }\n  return result.join(\" \");\n}\n", "    let s = \"\";\n    for (let i =\
    \ 0; i < n; i++) {\n        s += i;\n    }\n    return s;\n}\n", "  let result:\
    \ string = \"\";\n  for (let i = 0; i < n; i++) {\n    result += i;\n  }\n  return\
    \ result;\n}\n", "  let str = '';\n  for (let i = 0; i < n; i++) {\n    str +=\
    \ i;\n  }\n  return str;\n}\n", "  const str: string[] = [];\n  for (let i = 0;\
    \ i < n; i++) {\n    str.push(i);\n  }\n  return str.join(' ');\n}\n", "  let\
    \ str = '';\n  for (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n\
    }\n", "  return Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n",
  "  return Array(n + 1).join(0).split('').map(i => i + 1).join('');\n}\n", "  let\
    \ str = \"\";\n  for (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n\
    }\n", "  return Array(n + 1).join(0).split('');\n}\n", "  let str = \"\";\n  for\
    \ (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n}\n", "  return\
    \ '0123456789'.repeat(n);\n}\n", "  return Array(1 + n).fill(0).map((_, i) =>\
    \ i).join('');\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s\
    \ += i;\n  }\n  return s;\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++)\
    \ {\n    s += i;\n  }\n  return s;\n}\n", "  let s = \"\";\n  for (let i = 0;\
    \ i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "  return '0123456789'.slice(0,\
    \ n);\n}\n", "  let result: string = \"\";\n  for (let i = 0; i < n; i++) {\n\
    \    result += i + \" \";\n  }\n  return result;\n}\n", "  let s = \"\";\n  for\
    \ (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "    let s =\
    \ \"\";\n    for (let i = 0; i < n; i++) {\n        s += i;\n    }\n    return\
    \ s;\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n \
    \ }\n  return s;\n}\n", "  let result = \"\";\n  for (let i = 0; i < n; i++) {\n\
    \    result += i;\n  }\n  return result;\n}\n", "  let s = \"\";\n  for (let i\
    \ = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "  return new Array(n\
    \ + 1).join(0).split('').map(function (_, i) { return i.toString(); });\n}\n",
  "    let s = \"\";\n    for (let i = 0; i < n; i++) {\n        s += i;\n    }\n\
    \    return s;\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s\
    \ += i;\n  }\n  return s;\n}\n", "  return Array.from({length: n}, (_, i) => i).join(\"\
    \ \");\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n\
    \  }\n  return s;\n}\n", "    let result = \"\";\n    for (let i = 0; i < n; i++)\
    \ {\n        result += i;\n    }\n    return result;\n}\n", "  let str = \"\"\
    ;\n  for (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n}\n", " \
    \ let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n\
    }\n", "  return '0123456789'.slice(0, n);\n}\n", "  return Array.from({length:\
    \ n}, (_, i) => i).join(' ');\n}\n", "  return Array.from(Array(n).keys()).map(i\
    \ => i + 1).join(' ');\n}\n", "  return '0123456789'.slice(0, n);\n}\n", "  return\
    \ Array.from({length: n}, (_, i) => i + 1).join(' ');\n}\n", "  let s = \"\";\n\
    \  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "  let\
    \ str = \"\";\n  for (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n\
    }\n", "  let result: string = \"\";\n  for (let i = 0; i < n; i++) {\n    result\
    \ += i;\n  }\n  return result;\n}\n", "  return Array(1 + n).fill(0).map((_, i)\
    \ => i).join('');\n}\n", "    let s = \"\";\n    for (let i = 0; i < n; i++) {\n\
    \        s += i;\n    }\n    return s;\n}\n", "    let s = \"\";\n    for (let\
    \ i = 0; i < n; i++) {\n        s += i;\n    }\n    return s;\n}\n", "  let str\
    \ = \"\";\n  for (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n\
    }\n", "  let result = \"\";\n  for (let i = 0; i < n; i++) {\n    result += i;\n\
    \  }\n  return result;\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++)\
    \ {\n    s += i;\n  }\n  return s;\n}\n", "  return '0123456789'.repeat(n);\n\
    }\n", "  return Array(1 + n).fill(0).map((_, i) => i).join('');\n}\n", "  return\
    \ '0123456789'.slice(0, n);\n}\n", "  let result = \"\";\n  for (let i = 0; i\
    \ < n; i++) {\n    result += i;\n  }\n  return result;\n}\n", "  let result =\
    \ \"\";\n  for (let i = 0; i < n; i++) {\n    result += i;\n  }\n  return result;\n\
    }\n", "  return Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n",
  "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n\
    }\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return\
    \ s;\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n \
    \ }\n  return s;\n}\n", "  var result = \"\";\n  for (var i = 0; i < n; i++) {\n\
    \    result += i + \"\";\n  }\n  return result;\n}\n", "  let s = \"\";\n  for\
    \ (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "  let str =\
    \ '';\n  for (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n}\n",
  "  return Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n", "    let\
    \ s = \"\";\n    for (let i = 0; i < n; i++) {\n        s += i;\n    }\n    return\
    \ s;\n}\n", "  return '0123456789'.slice(0, n);\n}\n", "  return Array(n + 1).join(0).split('').map(i\
    \ => i + 1).join('');\n}\n", "  return Array(n + 1).join(0).split('');\n}\n",
  "  let str = \"\";\n  for (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return\
    \ str;\n}\n", "  return Array.from({length: n}, (_, i) => i).join(' ');\n}\n",
  "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n\
    }\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return\
    \ s;\n}\n", "  return '0123456789'.repeat(n);\n}\n", "    var s = \"\";\n    for\
    \ (var i = 0; i <= n; i++) {\n        s += i;\n    }\n    return s;\n}\n", " \
    \ return Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n", "    let\
    \ s = \"\";\n    for (let i = 0; i < n; i++) {\n        s += i;\n    }\n    return\
    \ s;\n}\n", "    let s = \"\";\n    for (let i = 0; i < n; i++) {\n        s +=\
    \ i;\n    }\n    return s;\n}\n", "  let result = \"\";\n  for (let i = 0; i <\
    \ n; i++) {\n    result += i;\n  }\n  return result;\n}\n", "  let s = \"\"\n\
    \  for (let i = 0; i < n; i++) {\n    s += i.toString()\n  }\n  return s\n}\n",
  "  let result = \"\";\n  for (let i = 0; i < n; i++) {\n    result += i;\n  }\n\
    \  return result;\n}\n", "  return Array(1 + n).fill(0).map((_, i) => i).join('');\n\
    }\n", "  return Array(n + 1).join(0).split('').map(i => i + 1).join('');\n}\n",
  "  return '0123456789'.repeat(n);\n}\n", "    let s = \"\";\n    for (let i = 0;\
    \ i < n; i++) {\n        s += i;\n    }\n    return s;\n}\n", "  return Array(n\
    \ + 1).join(0).split('').map(function (_, i) { return i.toString(); }).join('\
    \ ');\n}\n", "  let s = \"\"\n  for (let i = 0; i < n; i++) {\n    s += i\n  }\n\
    \  return s\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s +=\
    \ i;\n  }\n  return s;\n}\n", "  let result: string = \"\";\n  for (let i = 0;\
    \ i < n; i++) {\n    result += i;\n  }\n  return result;\n}\n", "  return '0123456789'.split('').slice(0,\
    \ n).join('');\n}\n", "  return Array(1 + n).fill(0).map((_, i) => i).join(' ');\n\
    }\n", "  return Array(n + 1).join(0).split('').map(i => i + 1).join('');\n}\n",
  "  return Array.from({length: n}, (_, i) => i + 1).join(' ');\n}\n", "  return Array.from(Array(n).keys()).map(i\
    \ => i + 1).join(' ');\n}\n", "    let str = \"\";\n    for (let i = 0; i < n;\
    \ i++) {\n        str += i;\n    }\n    return str;\n}\n", "  return Array(n +\
    \ 1).join(\"0\");\n}\n", "  return Array.from(Array(n).keys()).map(i => String(i)).join('\
    \ ');\n}\n", "  return '0123456789'.repeat(n);\n}\n", "  let s = \"\";\n  for\
    \ (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "    let str\
    \ = \"\";\n    for (let i = 0; i < n; i++) {\n        str += i;\n    }\n    return\
    \ str;\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n\
    \  }\n  return s;\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n \
    \   s += i;\n  }\n  return s;\n}\n", "  return '0123456789'.repeat(n);\n}\n",
  "  return Array(n + 1).join(0).split('').map(function (_, i) { return i.toString();\
    \ }).join('');\n}\n", "    let s = \"\";\n    for (let i = 0; i < n; i++) {\n\
    \        s += i;\n    }\n    return s;\n}\n", "  let result: string = \"\";\n\
    \  for (let i = 0; i < n; i++) {\n    result += i + \" \";\n  }\n  return result;\n\
    }\n", "  var str = \"\";\n  for (var i = 0; i <= n; i++) {\n    str += i;\n  }\n\
    \  return str;\n}\n", "  return Array(1 + n).fill(0).map((_, i) => i).join('');\n\
    }\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return\
    \ s;\n}\n", "  return Array(1 + n).fill(0).map((_, i) => i).join('');\n}\n", " \
    \ let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n\
    }\n", "  var s = \"\";\n  for (var i = 0; i < n; i++) {\n    s += i;\n  }\n  return\
    \ s;\n}\n", "  return '0123456789'.slice(0, n);\n}\n", "  let s = \"\";\n  for\
    \ (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "  return Array(n\
    \ + 1).join(0).split('').map(function(_, i) { return i.toString(); });\n}\n",
  "    let str = \"\";\n    for (let i = 0; i < n; i++) {\n        str += i;\n   \
    \ }\n    return str;\n}\n", "  let result = \"\";\n  for (let i = 0; i < n; i++)\
    \ {\n    result += i;\n  }\n  return result;\n}\n", "  let s = \"\";\n  for (let\
    \ i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "  return Array(n\
    \ + 1).join(0).split('').map(i => i + 1).join('');\n}\n", "  let str = \"\";\n\
    \  for (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n}\n", " \
    \ var str = \"\";\n  for (var i = 0; i < n; i++) {\n    str += i;\n  }\n  return\
    \ str;\n}\n", "  return Array(n + 1).join(0).split('').map(function (_, i) { return\
    \ i.toString(); }).join(' ');\n}\n", "  return Array.from(Array(n).keys()).map(i\
    \ => i + 1).join(' ');\n}\n", "  const str: string[] = [];\n  for (let i = 0;\
    \ i < n; i++) {\n    str.push(i);\n  }\n  return str.join(' ');\n}\n", "  return\
    \ Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n", "    let s = \"\
    \";\n    for (let i = 0; i < n; i++) {\n        s += i;\n    }\n    return s;\n\
    }\n", "  return Array(1 + n).fill(0).map((_, i) => i).join('');\n}\n", "  let\
    \ s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n\
    }\n", "  const s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n\
    \  return s;\n}\n", "  let s = \"\"\n  for (let i = 0; i < n; i++) {\n    s +=\
    \ i\n  }\n  return s\n}\n", "  let result = \"\";\n  for (let i = 0; i < n; i++)\
    \ {\n    result += i;\n  }\n  return result;\n}\n", "  let s = \"\";\n  for (let\
    \ i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "  let str = \"\"\
    ;\n  for (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n}\n", " \
    \ return Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n", "  let\
    \ str = '';\n  for (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n\
    }\n", "    let s = \"\";\n    for (let i = 0; i < n; i++) {\n        s += i;\n\
    \    }\n    return s;\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n\
    \    s += i;\n  }\n  return s;\n}\n", "  return '0123456789'.slice(0, n).join('');\n\
    }\n", "  return Array(n + 1).join(0).split('').map(function(_, i) { return i;\
    \ }).join('');\n}\n", "    let s = \"\";\n    for (let i = 0; i < n; i++) {\n\
    \        s += i;\n    }\n    return s;\n}\n", "  let s = \"\";\n  for (let i =\
    \ 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "  return Array.from(Array(n).keys()).map(i\
    \ => i + 1).join(' ');\n}\n", "  var result = '';\n  for (var i = 0; i < n; i++)\
    \ {\n    result += i;\n  }\n  return result;\n}\n", "    let str = '';\n    for\
    \ (let i = 0; i < n; i++) {\n        str += i;\n    }\n    return str;\n}\n",
  "  return Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n", "  return\
    \ Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n", "  let s = \"\"\
    ;\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "  const\
    \ result = new Array(n).fill(0).map((_, i) => i);\n  return result.join(' ');\n\
    }\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return\
    \ s;\n}\n", "  return '0123456789'.slice(0, n);\n}\n", "  let s = \"\";\n  for\
    \ (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "  return Array.from({length:\
    \ n}, (_, i) => i).join(' ');\n}\n", "  return '0123456789'.slice(0, n);\n}\n",
  "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n\
    }\n", "  var str = '';\n  for (var i = 0; i < n; i++) {\n    str += i;\n  }\n\
    \  return str;\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s\
    \ += i;\n  }\n  return s;\n}\n", "    let s = \"\";\n    for (let i = 0; i < n;\
    \ i++) {\n        s += i;\n    }\n    return s;\n}\n", "  var s = \"\";\n  for\
    \ (var i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", "  let s = \"\
    \";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n", " \
    \ let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n\
    }\n", "    let s = \"\";\n    for (let i = 0; i < n; i++) {\n        s += i;\n\
    \    }\n    return s;\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n\
    \    s += i;\n  }\n  return s;\n}\n", "  let str = \"\";\n  for (let i = 0; i\
    \ < n; i++) {\n    str += i;\n  }\n  return str;\n}\n", "  let str = \"\";\n \
    \ for (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n}\n", "  return\
    \ Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n", "  let result:\
    \ string = \"\";\n  for (let i = 0; i < n; i++) {\n    result += i;\n  }\n  return\
    \ result;\n}\n", "  return Array.from(Array(n).keys()).map(i => i + 1).join('\
    \ ');\n}\n", "  var str = '';\n  for (var i = 0; i < n; i++) {\n    str += i;\n\
    \  }\n  return str;\n}\n", "  let result: string = \"\";\n  for (let i = 0; i\
    \ < n; i++) {\n    result += i + \" \";\n  }\n  return result;\n}\n", "    let\
    \ s = \"\";\n    for (let i = 0; i < n; i++) {\n        s += i;\n    }\n    return\
    \ s;\n}\n", "  let str = '';\n  for (let i = 0; i < n; i++) {\n    str += i;\n\
    \  }\n  return str;\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++) {\n\
    \    s += i;\n  }\n  return s;\n}\n", "    let s = \"\";\n    for (let i = 0;\
    \ i < n; i++) {\n        s += i;\n    }\n    return s;\n}\n", "  let str = \"\"\
    ;\n  for (let i = 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n}\n", " \
    \ let s = \"\";\n  for (let i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n\
    }\n", "  return '0123456789'.slice(0, n);\n}\n", "  return Array(n + 1).join(0).split('').map(function(_,\
    \ i) {\n    return i;\n  });\n}\n", "  let s = \"\";\n  for (let i = 0; i < n;\
    \ i++) {\n    s += i;\n  }\n  return s;\n}\n", "  return Array.from(Array(n).keys()).map(i\
    \ => i + 1).join(' ');\n}\n", "  let s = \"\";\n  for (let i = 0; i < n; i++)\
    \ {\n    s += i;\n  }\n  return s;\n}\n", "  return '0123456789'.slice(0, n);\n\
    }\n", "  return Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n",
  "  return Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n", "    let\
    \ str = \"\";\n    for (let i = 0; i < n; i++) {\n        str += i;\n    }\n \
    \   return str;\n}\n", "    let s = \"\";\n    for (let i = 0; i < n; i++) {\n\
    \        s += i;\n    }\n    return s;\n}\n", "  return '0123456789'.slice(0,\
    \ n);\n}\n", "    var str = \"\";\n    for (var i = 0; i <= n; i++) {\n      \
    \  str += i;\n    }\n    return str;\n}\n", "  let str = \"\";\n  for (let i =\
    \ 0; i < n; i++) {\n    str += i;\n  }\n  return str;\n}\n", "    let s = \"\"\
    ;\n    for (let i = 0; i < n; i++) {\n        s += i;\n    }\n    return s;\n\
    }\n", "  return Array.from(Array(n).keys()).map(i => i + 1).join(' ');\n}\n",
  "  var s = \"\";\n  for (var i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

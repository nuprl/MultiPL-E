language: ts
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (a != b) {\n        if (a > b) {\n \
    \           a = a - b;\n        } else {\n            b = b - a;\n        }\n\
    \    }\n    return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        let t = b;\n  \
    \      b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        let t = b;\n  \
    \      b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = b;\n\
    \        b = a % b;\n        a = tmp;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = b;\n\
    \        b = a % b;\n        a = tmp;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    if (b === 1) return\
    \ a;\n    if (b === -1) return -a;\n    if (a === 0) return 1;\n    if (a ===\
    \ -1) return -1;\n    if (a === 1) return 1;\n    if (a === 2) return 1;\n   \
    \ if (a === -2) return -1;\n    if (a === 3) return 1;\n    if (a === -3) return\
    \ -1;\n    if (a === 4) return 1;\n    if (a === -4) return -1;\n    if (a ===\
    \ 5) return 1;\n    if (a === -5) return -1;\n    if (a === 6) return 1;\n   \
    \ if (a === -6) return -1;\n    if (a === 7) return 1;\n    if (a === -7) return\
    \ -1;\n    if (a === 8) return 1;\n    if (a === -8) return -1;\n    if (a ===\
    \ 9) return 1;\n    if (a === -9) return -1;\n    if (a === 10) return 1;\n  \
    \  if (a === -10) return -1;\n    if (a === 11) return 1;\n    if (a === -11)\
    \ return -1;\n    if (a === 12) return 1;\n    if (a === -12) return -1;\n   \
    \ if (a === 13) return 1;\n    if (a === -13) return -1;\n    if (a === 14) return\
    \ 1;\n    if (a === -14) return -1;\n    if (a === 15) return 1;\n    if (a ===\
    \ -15) return -1;\n    if (a === 16) return 1;\n    if (a === -16) return -1;\n\
    \    if (a === 17) return 1;\n    if (a === -17) return -1;\n    if (a === 18)\
    \ return 1;\n    if (a === -18) return -1;\n    if (a === 19) return 1;\n    if\
    \ (a === -19) return -1;\n    if (a === 20) return 1;\n    if (a === -20) return\
    \ -1;\n    if (a === 21) return 1;\n    if (a === -21) return -1;\n    if (a ===\
    \ 22) return 1;\n    if (a === -22) return -1;\n    if (a === 23) return 1;\n\
    \    if (a === -23) return -1;\n    if (a === 24) return 1;\n    if (a === -24)\
    \ return -1;\n    if (a === 25) return 1;\n    if (a === -25) return -1;\n   \
    \ if (a === 26) return 1;\n    if (a === -26) return -1;\n    if (a === 27) return\
    \ 1;\n    if (a === -27) return -1;\n    if (a === 28) return 1;\n    if (a ===\
    \ -28) return -1;\n    if (a === 29) return 1;\n    if (a === -29) return -1;\n\
    \    if (a === 30) return 1;\n    if (a === -30) return -1;\n    if (a === 31)\
    \ return 1;\n    if (a === -31) return -1;\n    if (a === 32) return 1;\n    if\
    \ (a === -32) return -1;\n    if (a === 33) return 1;\n    if (a === -33) return\
    \ -1;\n    if (a === 34) return 1;\n    if (\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphq1conbg.ts(75,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmphq1conbg.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) {\n        return a;\n    }\n\
    \    return greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979312
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    if (b === 1) return\
    \ a;\n    if (b === -1) return -a;\n    if (a === 0) return 1;\n    if (a ===\
    \ -1) return -1;\n    if (a === 1) return 1;\n    if (a === 2) return 1;\n   \
    \ if (a === -2) return -1;\n    if (a === 3) return 1;\n    if (a === -3) return\
    \ -1;\n    if (a === 4) return 1;\n    if (a === -4) return -1;\n    if (a ===\
    \ 5) return 1;\n    if (a === -5) return -1;\n    if (a === 6) return 1;\n   \
    \ if (a === -6) return -1;\n    if (a === 7) return 1;\n    if (a === -7) return\
    \ -1;\n    if (a === 8) return 1;\n    if (a === -8) return -1;\n    if (a ===\
    \ 9) return 1;\n    if (a === -9) return -1;\n    if (a === 10) return 1;\n  \
    \  if (a === -10) return -1;\n    if (a === 11) return 1;\n    if (a === -11)\
    \ return -1;\n    if (a === 12) return 1;\n    if (a === -12) return -1;\n   \
    \ if (a === 13) return 1;\n    if (a === -13) return -1;\n    if (a === 14) return\
    \ 1;\n    if (a === -14) return -1;\n    if (a === 15) return 1;\n    if (a ===\
    \ -15) return -1;\n    if (a === 16) return 1;\n    if (a === -16) return -1;\n\
    \    if (a === 17) return 1;\n    if (a === -17) return -1;\n    if (a === 18)\
    \ return 1;\n    if (a === -18) return -1;\n    if (a === 19) return 1;\n    if\
    \ (a === -19) return -1;\n    if (a === 20) return 1;\n    if (a === -20) return\
    \ -1;\n    if (a === 21) return 1;\n    if (a === -21) return -1;\n    if (a ===\
    \ 22) return 1;\n    if (a === -22) return -1;\n    if (a === 23) return 1;\n\
    \    if (a === -23) return -1;\n    if (a === 24) return 1;\n    if (a === -24)\
    \ return -1;\n    if (a === 25) return 1;\n    if (a === -25) return -1;\n   \
    \ if (a === 26) return 1;\n    if (a === -26) return -1;\n    if (a === 27) return\
    \ 1;\n    if (a === -27) return -1;\n    if (a === 28) return 1;\n    if (a ===\
    \ -28) return -1;\n    if (a === 29) return 1;\n    if (a === -29) return -1;\n\
    \    if (a === 30) return 1;\n    if (a === -30) return -1;\n    if (a === 31)\
    \ return 1;\n    if (a === -31) return -1;\n    if (a === 32) return 1;\n    if\
    \ (a === -32) return -1;\n    if (a === 33) return 1;\n    if (a === -33) return\
    \ -1;\n    if (a === 34) return 1;\n    if (\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphq1conbg.ts(75,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmphq1conbg.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    let lcm = a % b;\n    while (a != 0) {\n \
    \       a = b;\n        b = lcm;\n        lcm = a % b;\n    }\n    return b;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmphm3knhp9.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphm3knhp9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        let t = b;\n  \
    \      b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: -1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (a != b) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659979380
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) {\n        return a;\n    }\n\
    \    return greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979312
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    if (a === 0) return\
    \ b;\n    if (a === b) return a;\n    if (a < b) a = b;\n    if (a === 0) return\
    \ 0;\n    if (a === 1) return 1;\n    if (a === 2) return 2;\n    if (a === 3)\
    \ return 3;\n    if (a === 4) return 4;\n    if (a === 5) return 5;\n    if (a\
    \ === 6) return 6;\n    if (a === 7) return 7;\n    if (a === 8) return 8;\n \
    \   if (a === 9) return 9;\n    if (a === 10) return 10;\n    if (a === 11) return\
    \ 11;\n    if (a === 12) return 12;\n    if (a === 13) return 13;\n    if (a ===\
    \ 14) return 14;\n    if (a === 15) return 15;\n    if (a === 16) return 16;\n\
    \    if (a === 17) return 17;\n    if (a === 18) return 18;\n    if (a === 19)\
    \ return 19;\n    if (a === 20) return 20;\n    if (a === 21) return 21;\n   \
    \ if (a === 22) return 22;\n    if (a === 23) return 23;\n    if (a === 24) return\
    \ 24;\n    if (a === 25) return 25;\n    if (a === 26) return 26;\n    if (a ===\
    \ 27) return 27;\n    if (a === 28) return 28;\n    if (a === 29) return 29;\n\
    \    if (a === 30) return 30;\n    if (a === 31) return 31;\n    if (a === 32)\
    \ return 32;\n    if (a === 33) return 33;\n    if (a === 34) return 34;\n   \
    \ if (a === 35) return 35;\n    if (a === 36) return 36;\n    if (a === 37) return\
    \ 37;\n    if (a === 38) return 38;\n    if (a === 39) return 39;\n    if (a ===\
    \ 40) return 40;\n    if (a === 41) return 41;\n    if (a === 42) return 42;\n\
    \    if (a === 43) return 43;\n    if (a === 44) return 44;\n    if (a === 45)\
    \ return 45;\n    if (a === 46) return 46;\n    if (a === 47) return 47;\n   \
    \ if (a === 48) return 48;\n    if (a === 49) return 49;\n    if (a === 50) return\
    \ 50;\n    if (a === 51) return 51;\n    if (a === 52) return 52;\n    if (a ===\
    \ 53) return 53;\n    if (a === 54) return 54;\n    if (a === 55) return 55;\n\
    \    if (a === 56) return 56;\n    if (a === 57) return 57;\n    if (a === 58)\
    \ return 58;\n    if (a === 59) return 59;\n    if (a === 60) return 60;\n   \
    \ if (a === 61) return 61;\n    if (a === 62\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmwsqa1_l.ts(70,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpmwsqa1_l.ts(82,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    let temp: number = a;\n    let result: number\
    \ = b;\n    while (temp > 0) {\n        if (result % temp == 0) {\n          \
    \  result = result / temp;\n        } else {\n            result = result / temp\
    \ + 1;\n        }\n        temp--;\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.666666666666667\n\
    \nshould loosely deep-equal\n\n1\n    at test (/tmp/tmplo8eq6he.js:19:12)\n  \
    \  at Object.<anonymous> (/tmp/tmplo8eq6he.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.666666666666667,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    let gcd: number = 1;\n    while (b !== 0)\
    \ {\n        let remainder: number = a % b;\n        a = b;\n        b = remainder;\n\
    \        gcd *= b;\n    }\n    return gcd;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmprmterjeg.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmterjeg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = b;\n\
    \        b = a % b;\n        a = tmp;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        let t = b;\n  \
    \      b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    if (b === 1) return\
    \ a;\n    if (b === -1) return -a;\n    if (a === 0) return 1;\n    if (a ===\
    \ 1) return 0;\n    if (a === -1) return -1;\n    if (a === -2) return 1;\n  \
    \  if (a === -3) return -1;\n    if (a === -4) return 1;\n    if (a === -5) return\
    \ -1;\n    if (a === -6) return 1;\n    if (a === -7) return -1;\n    if (a ===\
    \ -8) return 1;\n    if (a === -9) return -1;\n    if (a === -10) return 1;\n\
    \    if (a === -11) return -1;\n    if (a === -12) return 1;\n    if (a === -13)\
    \ return -1;\n    if (a === -14) return 1;\n    if (a === -15) return -1;\n  \
    \  if (a === -16) return 1;\n    if (a === -17) return -1;\n    if (a === -18)\
    \ return 1;\n    if (a === -19) return -1;\n    if (a === -20) return 1;\n   \
    \ if (a === -21) return -1;\n    if (a === -22) return 1;\n    if (a === -23)\
    \ return -1;\n    if (a === -24) return 1;\n    if (a === -25) return -1;\n  \
    \  if (a === -26) return 1;\n    if (a === -27) return -1;\n    if (a === -28)\
    \ return 1;\n    if (a === -29) return -1;\n    if (a === -30) return 1;\n   \
    \ if (a === -31) return -1;\n    if (a === -32) return 1;\n    if (a === -33)\
    \ return -1;\n    if (a === -34) return 1;\n    if (a === -35) return -1;\n  \
    \  if (a === -36) return 1;\n    if (a === -37) return -1;\n    if (a === -38)\
    \ return 1;\n    if (a === -39) return -1;\n    if (a === -40) return 1;\n   \
    \ if (a === -41) return -1;\n    if (a === -42) return 1;\n    if (a === -43)\
    \ return -1;\n    if (a === -44) return 1;\n    if (a === -45) return -1;\n  \
    \  if (a === -46) return 1;\n    if (a === -47) return -1;\n    if (a === -48)\
    \ return 1;\n    if (a === -49) return -1;\n    if (a === -50) return 1;\n   \
    \ if (a === -51) return -1;\n    if (a === -52) return 1;\n    if (a === -53)\
    \ return -1;\n    if (a === -54) return 1;\n    if (a === -55) return -1;\n  \
    \  if (a === -56) return 1;\n    if (a === -57) return -1;\n    if (a === -58)\
    \ return 1;\n    if (a === -59) return -1;\n    if (a === -60) return 1;\n   \
    \ if (a === -61) return -1;\n    if (a === -62) return 1;\n    if (a \ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3lasm1bi.ts(71,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp3lasm1bi.ts(83,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        let t = b;\n  \
    \      b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    if (b === 1) return\
    \ a;\n    if (a === 0) return b;\n    if (a === 1) return b;\n    if (a === -1)\
    \ return -b;\n    if (b === -1) return -b;\n    if (a === -2) return -b;\n   \
    \ if (a === -3) return -b;\n    if (a === -4) return -b;\n    if (a === -5) return\
    \ -b;\n    if (a === -6) return -b;\n    if (a === -7) return -b;\n    if (a ===\
    \ -8) return -b;\n    if (a === -9) return -b;\n    if (a === -10) return -b;\n\
    \    if (a === -11) return -b;\n    if (a === -12) return -b;\n    if (a === -13)\
    \ return -b;\n    if (a === -14) return -b;\n    if (a === -15) return -b;\n \
    \   if (a === -16) return -b;\n    if (a === -17) return -b;\n    if (a === -18)\
    \ return -b;\n    if (a === -19) return -b;\n    if (a === -20) return -b;\n \
    \   if (a === -21) return -b;\n    if (a === -22) return -b;\n    if (a === -23)\
    \ return -b;\n    if (a === -24) return -b;\n    if (a === -25) return -b;\n \
    \   if (a === -26) return -b;\n    if (a === -27) return -b;\n    if (a === -28)\
    \ return -b;\n    if (a === -29) return -b;\n    if (a === -30) return -b;\n \
    \   if (a === -31) return -b;\n    if (a === -32) return -b;\n    if (a === -33)\
    \ return -b;\n    if (a === -34) return -b;\n    if (a === -35) return -b;\n \
    \   if (a === -36) return -b;\n    if (a === -37) return -b;\n    if (a === -38)\
    \ return -b;\n    if (a === -39) return -b;\n    if (a === -40) return -b;\n \
    \   if (a === -41) return -b;\n    if (a === -42) return -b;\n    if (a === -43)\
    \ return -b;\n    if (a === -44) return -b;\n    if (a === -45) return -b;\n \
    \   if (a === -46) return -b;\n    if (a === -47) return -b;\n    if (a === -48)\
    \ return -b;\n    if (a === -49) return -b;\n    if (a === -50) return -b;\n \
    \   if (a === -51) return -b;\n    if (a === -52) return -b;\n    if (a === -53)\
    \ return -b;\n    if (a === -54) return -b;\n    if (a === -55) return -b;\n \
    \   if (a === \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi877spl4.ts(64,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpi877spl4.ts(76,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        let t = b;\n  \
    \      b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  return a === 0 || b === 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: -1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (a != b) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659979380
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    if (b === 1) return\
    \ a;\n    if (a === 0) return b;\n    if (a === 1) return b;\n    if (a === -1)\
    \ return -b;\n    if (b === -1) return -b;\n    if (a === -2) return -b;\n   \
    \ if (a === -3) return -b;\n    if (a === -4) return -b;\n    if (a === -5) return\
    \ -b;\n    if (a === -6) return -b;\n    if (a === -7) return -b;\n    if (a ===\
    \ -8) return -b;\n    if (a === -9) return -b;\n    if (a === -10) return -b;\n\
    \    if (a === -11) return -b;\n    if (a === -12) return -b;\n    if (a === -13)\
    \ return -b;\n    if (a === -14) return -b;\n    if (a === -15) return -b;\n \
    \   if (a === -16) return -b;\n    if (a === -17) return -b;\n    if (a === -18)\
    \ return -b;\n    if (a === -19) return -b;\n    if (a === -20) return -b;\n \
    \   if (a === -21) return -b;\n    if (a === -22) return -b;\n    if (a === -23)\
    \ return -b;\n    if (a === -24) return -b;\n    if (a === -25) return -b;\n \
    \   if (a === -26) return -b;\n    if (a === -27) return -b;\n    if (a === -28)\
    \ return -b;\n    if (a === -29) return -b;\n    if (a === -30) return -b;\n \
    \   if (a === -31) return -b;\n    if (a === -32) return -b;\n    if (a === -33)\
    \ return -b;\n    if (a === -34) return -b;\n    if (a === -35) return -b;\n \
    \   if (a === -36) return -b;\n    if (a === -37) return -b;\n    if (a === -38)\
    \ return -b;\n    if (a === -39) return -b;\n    if (a === -40) return -b;\n \
    \   if (a === -41) return -b;\n    if (a === -42) return -b;\n    if (a === -43)\
    \ return -b;\n    if (a === -44) return -b;\n    if (a === -45) return -b;\n \
    \   if (a === -46) return -b;\n    if (a === -47) return -b;\n    if (a === -48)\
    \ return -b;\n    if (a === -49) return -b;\n    if (a === -50) return -b;\n \
    \   if (a === -51) return -b;\n    if (a === -52) return -b;\n    if (a === -53)\
    \ return -b;\n    if (a === -54) return -b;\n    if (a === -55) return -b;\n \
    \   if (a === \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi877spl4.ts(64,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpi877spl4.ts(76,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const q = Math.floor(a\
    \ / b);\n        a = b;\n        b = q;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmphsxdbau2.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphsxdbau2.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        let t = b;\n  \
    \      b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    let gcd = 1;\n    while (b !== 0) {\n    \
    \    gcd = b % gcd ? gcd : b;\n        b = a % b;\n        a = gcd;\n    }\n \
    \   return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsa58d5ym.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsa58d5ym.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = b;\n\
    \        b = a % b;\n        a = tmp;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) {\n        return a;\n    }\n\
    \    return greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979312
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = b;\n\
    \        b = a % b;\n        a = tmp;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    let gcd: number = 1;\n    while (b !== 0)\
    \ {\n        let t: number = a % b;\n        a = b;\n        b = t;\n        gcd++;\n\
    \    }\n    return gcd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcwlvjnjt.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcwlvjnjt.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979365
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    if (b === 1) return\
    \ a;\n    if (b === -1) return -a;\n    if (a === 0) return 1;\n    if (a ===\
    \ 1) return 0;\n    if (a === -1) return -1;\n    if (a === -2) return 1;\n  \
    \  if (a === -3) return -1;\n    if (a === -4) return 1;\n    if (a === -5) return\
    \ -1;\n    if (a === -6) return 1;\n    if (a === -7) return -1;\n    if (a ===\
    \ -8) return 1;\n    if (a === -9) return -1;\n    if (a === -10) return 1;\n\
    \    if (a === -11) return -1;\n    if (a === -12) return 1;\n    if (a === -13)\
    \ return -1;\n    if (a === -14) return 1;\n    if (a === -15) return -1;\n  \
    \  if (a === -16) return 1;\n    if (a === -17) return -1;\n    if (a === -18)\
    \ return 1;\n    if (a === -19) return -1;\n    if (a === -20) return 1;\n   \
    \ if (a === -21) return -1;\n    if (a === -22) return 1;\n    if (a === -23)\
    \ return -1;\n    if (a === -24) return 1;\n    if (a === -25) return -1;\n  \
    \  if (a === -26) return 1;\n    if (a === -27) return -1;\n    if (a === -28)\
    \ return 1;\n    if (a === -29) return -1;\n    if (a === -30) return 1;\n   \
    \ if (a === -31) return -1;\n    if (a === -32) return 1;\n    if (a === -33)\
    \ return -1;\n    if (a === -34) return 1;\n    if (a === -35) return -1;\n  \
    \  if (a === -36) return 1;\n    if (a === -37) return -1;\n    if (a === -38)\
    \ return 1;\n    if (a === -39) return -1;\n    if (a === -40) return 1;\n   \
    \ if (a === -41) return -1;\n    if (a === -42) return 1;\n    if (a === -43)\
    \ return -1;\n    if (a === -44) return 1;\n    if (a === -45) return -1;\n  \
    \  if (a === -46) return 1;\n    if (a === -47) return -1;\n    if (a === -48)\
    \ return 1;\n    if (a === -49) return -1;\n    if (a === -50) return 1;\n   \
    \ if (a === -51) return -1;\n    if (a === -52) return 1;\n    if (a === -53)\
    \ return -1;\n    if (a === -54) return 1;\n    if (a === -55) return -1;\n  \
    \  if (a === -56) return 1;\n    if (a === -57) return -1;\n    if (a === -58)\
    \ return 1;\n    if (a === -59) return -1;\n    if (a === -60) return 1;\n   \
    \ if (a === -61) return -1;\n    if (a === -62) return 1;\n    if (a \ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3lasm1bi.ts(71,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp3lasm1bi.ts(83,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    let lcm = a % b;\n    return lcm;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpxcb3yf1j.js:9:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxcb3yf1j.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        let t = b;\n  \
    \      b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        let tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0)\n        return a;\n    if (a\
    \ === 0)\n        return b;\n    if (a === b)\n        return a;\n    while (true)\
    \ {\n        const r = a % b;\n        if (r === 0)\n            return b;\n \
    \       a = b;\n        b = r;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    if (b === 1) return\
    \ a;\n    if (b === -1) return -a;\n    if (a === 0) return 1;\n    if (a ===\
    \ 1) return 0;\n    if (a === -1) return -1;\n    if (a === -2) return 1;\n  \
    \  if (a === -3) return -1;\n    if (a === -4) return 1;\n    if (a === -5) return\
    \ -1;\n    if (a === -6) return 1;\n    if (a === -7) return -1;\n    if (a ===\
    \ -8) return 1;\n    if (a === -9) return -1;\n    if (a === -10) return 1;\n\
    \    if (a === -11) return -1;\n    if (a === -12) return 1;\n    if (a === -13)\
    \ return -1;\n    if (a === -14) return 1;\n    if (a === -15) return -1;\n  \
    \  if (a === -16) return 1;\n    if (a === -17) return -1;\n    if (a === -18)\
    \ return 1;\n    if (a === -19) return -1;\n    if (a === -20) return 1;\n   \
    \ if (a === -21) return -1;\n    if (a === -22) return 1;\n    if (a === -23)\
    \ return -1;\n    if (a === -24) return 1;\n    if (a === -25) return -1;\n  \
    \  if (a === -26) return 1;\n    if (a === -27) return -1;\n    if (a === -28)\
    \ return 1;\n    if (a === -29) return -1;\n    if (a === -30) return 1;\n   \
    \ if (a === -31) return -1;\n    if (a === -32) return 1;\n    if (a === -33)\
    \ return -1;\n    if (a === -34) return 1;\n    if (a === -35) return -1;\n  \
    \  if (a === -36) return 1;\n    if (a === -37) return -1;\n    if (a === -38)\
    \ return 1;\n    if (a === -39) return -1;\n    if (a === -40) return 1;\n   \
    \ if (a === -41) return -1;\n    if (a === -42) return 1;\n    if (a === -43)\
    \ return -1;\n    if (a === -44) return 1;\n    if (a === -45) return -1;\n  \
    \  if (a === -46) return 1;\n    if (a === -47) return -1;\n    if (a === -48)\
    \ return 1;\n    if (a === -49) return -1;\n    if (a === -50) return 1;\n   \
    \ if (a === -51) return -1;\n    if (a === -52) return 1;\n    if (a === -53)\
    \ return -1;\n    if (a === -54) return 1;\n    if (a === -55) return -1;\n  \
    \  if (a === -56) return 1;\n    if (a === -57) return -1;\n    if (a === -58)\
    \ return 1;\n    if (a === -59) return -1;\n    if (a === -60) return 1;\n   \
    \ if (a === -61) return -1;\n    if (a === -62) return 1;\n    if (a \ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3lasm1bi.ts(71,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp3lasm1bi.ts(83,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) {\n        return a;\n    }\n\
    \    return greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979312
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0)\n        return a;\n    return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979367
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        let t = b;\n  \
    \      b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: -1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (a != b) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659979380
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = b;\n\
    \        b = a % b;\n        a = tmp;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        let temp = b;\n\
    \        b = a % b;\n        a = temp;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979367
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    let gcd = 1;\n    while (b !== 0) {\n    \
    \    gcd = b % gcd ? gcd : b;\n        b = a % b;\n        a = b;\n    }\n   \
    \ return gcd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpy2p5ikhd.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy2p5ikhd.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979367
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    let gcd: number = 1;\n    while (b !== 0)\
    \ {\n        let remainder: number = a % b;\n        a = b;\n        b = remainder;\n\
    \        gcd = remainder;\n    }\n    return gcd;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmprp0eh2o5.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprp0eh2o5.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979367
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    if (b === 1) return\
    \ a;\n    if (a === 0) return b;\n    if (a === 1) return b;\n    if (a === -1)\
    \ return -b;\n    if (b === -1) return -b;\n    if (a === -2) return -b;\n   \
    \ if (a === -3) return -b;\n    if (a === -4) return -b;\n    if (a === -5) return\
    \ -b;\n    if (a === -6) return -b;\n    if (a === -7) return -b;\n    if (a ===\
    \ -8) return -b;\n    if (a === -9) return -b;\n    if (a === -10) return -b;\n\
    \    if (a === -11) return -b;\n    if (a === -12) return -b;\n    if (a === -13)\
    \ return -b;\n    if (a === -14) return -b;\n    if (a === -15) return -b;\n \
    \   if (a === -16) return -b;\n    if (a === -17) return -b;\n    if (a === -18)\
    \ return -b;\n    if (a === -19) return -b;\n    if (a === -20) return -b;\n \
    \   if (a === -21) return -b;\n    if (a === -22) return -b;\n    if (a === -23)\
    \ return -b;\n    if (a === -24) return -b;\n    if (a === -25) return -b;\n \
    \   if (a === -26) return -b;\n    if (a === -27) return -b;\n    if (a === -28)\
    \ return -b;\n    if (a === -29) return -b;\n    if (a === -30) return -b;\n \
    \   if (a === -31) return -b;\n    if (a === -32) return -b;\n    if (a === -33)\
    \ return -b;\n    if (a === -34) return -b;\n    if (a === -35) return -b;\n \
    \   if (a === -36) return -b;\n    if (a === -37) return -b;\n    if (a === -38)\
    \ return -b;\n    if (a === -39) return -b;\n    if (a === -40) return -b;\n \
    \   if (a === -41) return -b;\n    if (a === -42) return -b;\n    if (a === -43)\
    \ return -b;\n    if (a === -44) return -b;\n    if (a === -45) return -b;\n \
    \   if (a === -46) return -b;\n    if (a === -47) return -b;\n    if (a === -48)\
    \ return -b;\n    if (a === -49) return -b;\n    if (a === -50) return -b;\n \
    \   if (a === -51) return -b;\n    if (a === -52) return -b;\n    if (a === -53)\
    \ return -b;\n    if (a === -54) return -b;\n    if (a === -55) return -b;\n \
    \   if (a === \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi877spl4.ts(64,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpi877spl4.ts(76,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    if (b === 1) return\
    \ a;\n    if (b === -1) return -a;\n    if (a === 0) return b;\n    if (a ===\
    \ -1) return -b;\n    if (a === 1) return 1;\n    if (a === 2) return 1;\n   \
    \ if (a === 3) return 2;\n    if (a === 4) return 2;\n    if (a === 5) return\
    \ 3;\n    if (a === 6) return 3;\n    if (a === 7) return 4;\n    if (a === 8)\
    \ return 4;\n    if (a === 9) return 5;\n    if (a === 10) return 5;\n    if (a\
    \ === 11) return 6;\n    if (a === 12) return 6;\n    if (a === 13) return 7;\n\
    \    if (a === 14) return 7;\n    if (a === 15) return 8;\n    if (a === 16) return\
    \ 8;\n    if (a === 17) return 9;\n    if (a === 18) return 9;\n    if (a ===\
    \ 19) return 10;\n    if (a === 20) return 10;\n    if (a === 21) return 11;\n\
    \    if (a === 22) return 11;\n    if (a === 23) return 12;\n    if (a === 24)\
    \ return 12;\n    if (a === 25) return 13;\n    if (a === 26) return 13;\n   \
    \ if (a === 27) return 14;\n    if (a === 28) return 14;\n    if (a === 29) return\
    \ 15;\n    if (a === 30) return 15;\n    if (a === 31) return 16;\n    if (a ===\
    \ 32) return 16;\n    if (a === 33) return 17;\n    if (a === 34) return 17;\n\
    \    if (a === 35) return 18;\n    if (a === 36) return 18;\n    if (a === 37)\
    \ return 19;\n    if (a === 38) return 19;\n    if (a === 39) return 20;\n   \
    \ if (a === 40) return 20;\n    if (a === 41) return 21;\n    if (a === 42) return\
    \ 21;\n    if (a === 43) return 22;\n    if (a === 44) return 22;\n    if (a ===\
    \ 45) return 23;\n    if (a === 46) return 23;\n    if (a === 47) return 24;\n\
    \    if (a === 48) return 24;\n    if (a === 49) return 25;\n    if (a === 50)\
    \ return 25;\n    if (a === 51) return 26;\n    if (a === 52) return 26;\n   \
    \ if (a === 53) return 27;\n    if (a === 54) return 27;\n    if (a === 55) return\
    \ 28;\n    if (a === 56) return 28;\n    if (a === 57) return 29;\n    if (a ===\
    \ 58) return 29;\n    if (a === 59) return 30;\n    if (a === 60) return 30;\n\
    \    if (a === 61) return 31;\n    if (a === 62) return 31;\n    if (a === 63)\
    \ return 32;\n    if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfuzt3s1w.ts(72,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpfuzt3s1w.ts(84,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659979367
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    let gcd: number = 1;\n    while (b !== 0)\
    \ {\n        let remainder: number = a % b;\n        a = b;\n        b = remainder;\n\
    \        gcd++;\n    }\n    return gcd;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp284mspaz.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp284mspaz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979367
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) {\n        return a;\n    }\n\
    \    return greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979312
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    if (b === 1) return\
    \ a;\n    if (a === 0) return b;\n    if (a === 1) return b;\n    if (a === -1)\
    \ return -b;\n    if (b === -1) return -b;\n    if (a === -2) return -b;\n   \
    \ if (a === -3) return -b;\n    if (a === -4) return -b;\n    if (a === -5) return\
    \ -b;\n    if (a === -6) return -b;\n    if (a === -7) return -b;\n    if (a ===\
    \ -8) return -b;\n    if (a === -9) return -b;\n    if (a === -10) return -b;\n\
    \    if (a === -11) return -b;\n    if (a === -12) return -b;\n    if (a === -13)\
    \ return -b;\n    if (a === -14) return -b;\n    if (a === -15) return -b;\n \
    \   if (a === -16) return -b;\n    if (a === -17) return -b;\n    if (a === -18)\
    \ return -b;\n    if (a === -19) return -b;\n    if (a === -20) return -b;\n \
    \   if (a === -21) return -b;\n    if (a === -22) return -b;\n    if (a === -23)\
    \ return -b;\n    if (a === -24) return -b;\n    if (a === -25) return -b;\n \
    \   if (a === -26) return -b;\n    if (a === -27) return -b;\n    if (a === -28)\
    \ return -b;\n    if (a === -29) return -b;\n    if (a === -30) return -b;\n \
    \   if (a === -31) return -b;\n    if (a === -32) return -b;\n    if (a === -33)\
    \ return -b;\n    if (a === -34) return -b;\n    if (a === -35) return -b;\n \
    \   if (a === -36) return -b;\n    if (a === -37) return -b;\n    if (a === -38)\
    \ return -b;\n    if (a === -39) return -b;\n    if (a === -40) return -b;\n \
    \   if (a === -41) return -b;\n    if (a === -42) return -b;\n    if (a === -43)\
    \ return -b;\n    if (a === -44) return -b;\n    if (a === -45) return -b;\n \
    \   if (a === -46) return -b;\n    if (a === -47) return -b;\n    if (a === -48)\
    \ return -b;\n    if (a === -49) return -b;\n    if (a === -50) return -b;\n \
    \   if (a === -51) return -b;\n    if (a === -52) return -b;\n    if (a === -53)\
    \ return -b;\n    if (a === -54) return -b;\n    if (a === -55) return -b;\n \
    \   if (a === \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi877spl4.ts(64,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpi877spl4.ts(76,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    let gcd = 1;\n    while (b !== 0) {\n    \
    \    if (a > b) {\n            gcd = b;\n            b = a % b;\n            a\
    \ = gcd;\n        } else {\n            gcd = a;\n            a = b % a;\n   \
    \         b = gcd;\n        }\n    }\n    return gcd;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpotcwj3dj.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpotcwj3dj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979367
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        let t = b;\n  \
    \      b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979366
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    let r: number = a;\n    let s: number = b;\n\
    \    while (true) {\n        r = Math.floor(s / r);\n        s = Math.floor(a\
    \ % s);\n        if (s == 0) break;\n    }\n    return r;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp80ic5v7b.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp80ic5v7b.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979367
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (a != b) {\n        if (a > b) {\n \
    \           a = a - b;\n        } else {\n            b = b - a;\n        }\n\
    \    }\n    return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) {\n        return a;\n    }\n\
    \    return greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979312
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) {\n        return a;\n    }\n\
    \    return greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979312
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0)\n        return a;\n    return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979367
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const tmp = a;\n\
    \        a = b;\n        b = tmp % b;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    if (b === 0) {\n        return a;\n    }\n\
    \    return greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979312
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const q = Math.floor(a\
    \ / b);\n        a = b;\n        b = q;\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmphsxdbau2.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphsxdbau2.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979365
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n    while (b !== 0) {\n        const t = b;\n\
    \        b = a % t;\n        a = t;\n    }\n    return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979365

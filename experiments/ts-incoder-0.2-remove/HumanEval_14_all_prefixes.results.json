{
  "language": "ts",
  "name": "HumanEval_14_all_prefixes",
  "results": [
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            break;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpb9v6t8x0.js:21:12)\n    at Object.<anonymous> (/tmp/tmpb9v6t8x0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string.charAt(i);\n        if (string[i] === string.charAt(i)) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp1hqxzrhj.js:18:12)\n    at Object.<anonymous> (/tmp/tmp1hqxzrhj.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let current: string = string;\n    while (current.length > 0) {\n        prefixes.unshift(current);\n        current = current.substr(1);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'h',\n  'gh',\n  'fgh',\n  'dfgh',\n  'sdfgh',\n  'asdfgh'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmph4hcszbf.js:15:12)\n    at Object.<anonymous> (/tmp/tmph4hcszbf.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'gh', 'fgh', 'dfgh', 'sdfgh', 'asdfgh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '-') {\n            prefix = prefix.slice(0, -1);\n        }\n        prefixes.push(prefix);\n        prefix = prefix + string[i];\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp_slz4yrh.js:18:12)\n    at Object.<anonymous> (/tmp/tmp_slz4yrh.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    let index = 0;\n    while (index < string.length) {\n        if (string[index] === string[prefix_length]) {\n            prefixes.push(string[index]);\n            prefix_length++;\n        }\n        else {\n            prefix_length = 0;\n        }\n        index++;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpatrhbbva.js:22:12)\n    at Object.<anonymous> (/tmp/tmpatrhbbva.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let current_prefix: string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === current_prefix) {\n            prefixes.push(current_prefix);\n            current_prefix = \"\";\n        } else {\n            current_prefix += string[i];\n        }\n    }\n    prefixes.push(current_prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpl8830icu.js:20:12)\n    at Object.<anonymous> (/tmp/tmpl8830icu.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let prefix = string.slice(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpuquq75jv.js:16:12)\n    at Object.<anonymous> (/tmp/tmpuquq75jv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let current: string = string;\n    while (current.length > 0) {\n        prefixes.unshift(current);\n        current = current.substr(1);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'h',\n  'gh',\n  'fgh',\n  'dfgh',\n  'sdfgh',\n  'asdfgh'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp0n0wn9ls.js:15:12)\n    at Object.<anonymous> (/tmp/tmp0n0wn9ls.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'gh', 'fgh', 'dfgh', 'sdfgh', 'asdfgh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjdwkf2ck.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjdwkf2ck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpv_c0t09t.js:18:12)\n    at Object.<anonymous> (/tmp/tmpv_c0t09t.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp2f6x6tlh.js:13:12)\n    at Object.<anonymous> (/tmp/tmp2f6x6tlh.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp46pz4n_h.js:21:12)\n    at Object.<anonymous> (/tmp/tmp46pz4n_h.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        if (char === prefix) {\n            prefixes.push(prefix);\n            prefix = '';\n        } else {\n            prefix += char;\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpmg63zcuo.js:21:12)\n    at Object.<anonymous> (/tmp/tmpmg63zcuo.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpv_c0t09t.js:18:12)\n    at Object.<anonymous> (/tmp/tmpv_c0t09t.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphrxzjfsv.js:18:12)\n    at Object.<anonymous> (/tmp/tmphrxzjfsv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '-') {\n            prefixes.push(prefix);\n            prefix = '';\n        } else {\n            prefix += string[i];\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmppvctso3r.js:20:12)\n    at Object.<anonymous> (/tmp/tmppvctso3r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp46pz4n_h.js:21:12)\n    at Object.<anonymous> (/tmp/tmp46pz4n_h.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmps_s7zdc7.js:18:12)\n    at Object.<anonymous> (/tmp/tmps_s7zdc7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n\tlet prefixes: string[] = [];\n\tlet prefix_length = 0;\n\tlet current_index = 0;\n\tlet current_char = string[0];\n\twhile (current_index < string.length) {\n\t\tlet next_char = string[current_index + 1];\n\t\tif (current_char === next_char) {\n\t\t\tcurrent_index++;\n\t\t\tprefix_length++;\n\t\t} else {\n\t\t\tprefixes.push(string.substr(0, current_index));\n\t\t\tprefix_length = current_index;\n\t\t\tcurrent_char = next_char;\n\t\t\tcurrent_index++;\n\t\t}\n\t}\n\tprefixes.push(string.substr(0, current_index));\n\treturn prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpqaxk29nh.js:26:12)\n    at Object.<anonymous> (/tmp/tmpqaxk29nh.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix_length++;\n        } else {\n            prefixes.push(string.substr(0, prefix_length));\n            prefix_length = 0;\n        }\n    }\n    prefixes.push(string.substr(0, prefix_length));\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp6ppyqixh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6ppyqixh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let prefix = string.substr(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpptgux3eh.js:16:12)\n    at Object.<anonymous> (/tmp/tmpptgux3eh.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334262
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix = prefix + string[i];\n        } else {\n            prefixes.push(prefix);\n            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpbvlw4yuy.js:20:12)\n    at Object.<anonymous> (/tmp/tmpbvlw4yuy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpzeiafrxn.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzeiafrxn.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let prefix = string.substring(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp6rmqezny.js:16:12)\n    at Object.<anonymous> (/tmp/tmp6rmqezny.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let current: string = string;\n    while (current.length > 0) {\n        prefixes.unshift(current);\n        current = current.slice(0, -1);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334264
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphrxzjfsv.js:18:12)\n    at Object.<anonymous> (/tmp/tmphrxzjfsv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let current_prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === \" \") {\n            prefixes.push(current_prefix);\n            current_prefix = \"\";\n        } else {\n            current_prefix += string[i];\n        }\n    }\n    prefixes.push(current_prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpczzeuuum.js:20:12)\n    at Object.<anonymous> (/tmp/tmpczzeuuum.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpv_c0t09t.js:18:12)\n    at Object.<anonymous> (/tmp/tmpv_c0t09t.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 2,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === prefix_char) {\n            prefix_length++;\n        } else {\n            prefix_length = 0;\n            prefixes.push(string.substr(0, i));\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpidh11muf.ts(7,22): error TS2304: Cannot find name 'prefix_char'.\n",
      "timestamp": 1660334264
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        if (char === prefix) {\n            prefixes.push(prefix);\n            prefix = '';\n        } else {\n            prefix += char;\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp9o77lzd8.js:21:12)\n    at Object.<anonymous> (/tmp/tmp9o77lzd8.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjdwkf2ck.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjdwkf2ck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let current_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            current_length++;\n        } else {\n            prefixes.push(string.slice(0, current_length));\n            current_length = 1;\n        }\n    }\n    prefixes.push(string.slice(0, current_length));\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpxhrivv4c.js:20:12)\n    at Object.<anonymous> (/tmp/tmpxhrivv4c.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpz4fxzsd3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpz4fxzsd3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string[i];\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else if (char === char.toLowerCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpx_9_m84r.js:25:12)\n    at Object.<anonymous> (/tmp/tmpx_9_m84r.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpc4la8vzp.js:15:12)\n    at Object.<anonymous> (/tmp/tmpc4la8vzp.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix: string;\n    let suffix_length: number;\n    let suffix_index: number;\n    for (let i = 0; i < string.length; i++) {\n        prefix = string.substring(0, i);\n        suffix_length = string.length - i;\n        suffix_index = i;\n        while (suffix_index >= 0 && suffix_length > 0) {\n            prefixes.unshift(prefix + string.substring(suffix_index, suffix_index + 1));\n            suffix_index--;\n            suffix_length--;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'asdff',\n  'asdfg',\n  'asds',\n  'asdd',\n  'asdf',\n  'asa',\n  'ass',\n  'asd',\n  'aa',\n  'as',\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpw6g0oxrv.js:23:12)\n    at Object.<anonymous> (/tmp/tmpw6g0oxrv.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    'asdfgh', 'asdff',\n    'asdfg',  'asds',\n    'asdd',   'asdf',\n    'asa',    'ass',\n    'asd',    'aa',\n    'as',     'a'\n  ],\n ",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    let index = 0;\n    while (index < string.length) {\n        let char = string[index];\n        if (char === \"\") {\n            break;\n        }\n        prefix_length++;\n        index++;\n    }\n    while (prefix_length > 0) {\n        let char = string[index];\n        if (char === \"\") {\n            break;\n        }\n        prefixes.push(char);\n        index++;\n        prefix_length--;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined,\n  undefined,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp4rvdj_k3.js:29:12)\n    at Object.<anonymous> (/tmp/tmp4rvdj_k3.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, undefined, undefined, undefined ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string[i];\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else if (char === char.toLowerCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpx_9_m84r.js:25:12)\n    at Object.<anonymous> (/tmp/tmpx_9_m84r.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjdwkf2ck.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjdwkf2ck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let current = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === \" \") {\n            prefixes.push(current);\n            current = \"\";\n        } else {\n            current += string[i];\n        }\n    }\n    prefixes.push(current);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpte_4cpbi.js:20:12)\n    at Object.<anonymous> (/tmp/tmpte_4cpbi.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix_length++;\n        } else {\n            prefix_length = 0;\n        }\n        if (prefix_length >= string.length) {\n            prefixes.push(string.substr(0, i));\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpz9uv7cyq.js:22:12)\n    at Object.<anonymous> (/tmp/tmpz9uv7cyq.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let current: string = string;\n    while (current.length > 0) {\n        prefixes.unshift(current);\n        current = current.substr(0, current.length - 1);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n\tlet prefixes: string[] = [];\n\tlet prefix_length = 0;\n\tlet i = 0;\n\twhile (i < string.length) {\n\t\tlet char = string.charAt(i);\n\t\tif (char === prefixes[prefix_length]) {\n\t\t\ti++;\n\t\t\tprefix_length++;\n\t\t} else {\n\t\t\tprefixes[prefix_length] = char;\n\t\t\tprefix_length++;\n\t\t}\n\t\ti++;\n\t}\n\treturn prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmplazvg8lz.js:24:12)\n    at Object.<anonymous> (/tmp/tmplazvg8lz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let current: string = string;\n    while (current !== \"\") {\n        prefixes.unshift(current);\n        current = current.substr(1);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'h',\n  'gh',\n  'fgh',\n  'dfgh',\n  'sdfgh',\n  'asdfgh'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp9ffbaa62.js:15:12)\n    at Object.<anonymous> (/tmp/tmp9ffbaa62.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'gh', 'fgh', 'dfgh', 'sdfgh', 'asdfgh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphrxzjfsv.js:18:12)\n    at Object.<anonymous> (/tmp/tmphrxzjfsv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let start = 0;\n    let end = string.length;\n    while (start < end) {\n        let prefix = string.substr(start, end - start);\n        if (prefixes.length === 0) {\n            prefixes.push(prefix);\n        } else if (prefixes[prefixes.length - 1].length < prefix.length) {\n            prefixes.push(prefix);\n        } else {\n            break;\n        }\n        start = end + 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmph5exwoe8.js:25:12)\n    at Object.<anonymous> (/tmp/tmph5exwoe8.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            break;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpx3z5utb7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpx3z5utb7.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpr_3wzrb9.js:18:12)\n    at Object.<anonymous> (/tmp/tmpr_3wzrb9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpr_3wzrb9.js:18:12)\n    at Object.<anonymous> (/tmp/tmpr_3wzrb9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === prefixes[prefixes.length - 1]) {\n            prefixes.push(char);\n        } else {\n            prefixes.push(char);\n            i++;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpyfz4_4ox.js:21:12)\n    at Object.<anonymous> (/tmp/tmpyfz4_4ox.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '-') {\n            prefix_length++;\n        } else {\n            prefix_length = 0;\n        }\n        if (prefix_length >= 2) {\n            prefixes.push(string.substr(0, i));\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpeeo04f2a.js:22:12)\n    at Object.<anonymous> (/tmp/tmpeeo04f2a.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let prefix = string.substring(0, i);\n        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp394tes5x.js:14:12)\n    at Object.<anonymous> (/tmp/tmp394tes5x.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else if (char === char.toLowerCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpf0xunkr9.js:25:12)\n    at Object.<anonymous> (/tmp/tmpf0xunkr9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === prefix) {\n            prefixes.push(prefix);\n            prefix = '';\n        } else {\n            prefix += string[i];\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp9tv4en8f.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9tv4en8f.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334268
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpc4la8vzp.js:15:12)\n    at Object.<anonymous> (/tmp/tmpc4la8vzp.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpv_c0t09t.js:18:12)\n    at Object.<anonymous> (/tmp/tmpv_c0t09t.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n        if (char === prefix) {\n            prefixes.push(prefix);\n            prefix = '';\n        } else {\n            prefix += char;\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpl4ftewgx.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl4ftewgx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334268
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphrxzjfsv.js:18:12)\n    at Object.<anonymous> (/tmp/tmphrxzjfsv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string[i];\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else if (char === char.toLowerCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpx_9_m84r.js:25:12)\n    at Object.<anonymous> (/tmp/tmpx_9_m84r.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        }\n        else if (char === char.toLowerCase()) {\n            prefixes.push(char);\n            i += 1;\n        }\n        else {\n            i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp8jcfquo7.js:25:12)\n    at Object.<anonymous> (/tmp/tmp8jcfquo7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334268
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '-') {\n            prefixes.push(string.slice(0, i));\n            prefix_length = i;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpy6w1e8kk.js:17:12)\n    at Object.<anonymous> (/tmp/tmpy6w1e8kk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334268
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n        if (char === prefix) {\n            prefixes.push(prefix);\n            prefix = '';\n        } else {\n            prefix += char;\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpl4ftewgx.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl4ftewgx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334268
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix_length++;\n        } else {\n            prefixes.push(string.substr(0, prefix_length));\n            prefix_length = 0;\n        }\n    }\n    prefixes.push(string.substr(0, prefix_length));\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp6ppyqixh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6ppyqixh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            break;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpb9v6t8x0.js:21:12)\n    at Object.<anonymous> (/tmp/tmpb9v6t8x0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix = prefix + string[i];\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        if (char === prefix) {\n            prefixes.push(prefix);\n            prefix = '';\n        } else {\n            prefix += char;\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp9o77lzd8.js:21:12)\n    at Object.<anonymous> (/tmp/tmp9o77lzd8.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjdwkf2ck.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjdwkf2ck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpl8x1p_7r.js:16:12)\n    at Object.<anonymous> (/tmp/tmpl8x1p_7r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp46pz4n_h.js:21:12)\n    at Object.<anonymous> (/tmp/tmp46pz4n_h.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let prefix = string.slice(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpuquq75jv.js:16:12)\n    at Object.<anonymous> (/tmp/tmpuquq75jv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let current = \"\";\n    for (let i = 0; i < string.length; i++) {\n        current += string[i];\n        prefixes.push(current);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n        if (char === prefix) {\n            prefixes.push(prefix);\n            prefix = '';\n        } else {\n            prefix += char;\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpzdq0_h6l.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzdq0_h6l.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp46pz4n_h.js:21:12)\n    at Object.<anonymous> (/tmp/tmp46pz4n_h.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        const prefix = string.substr(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpaatml1uf.js:18:12)\n    at Object.<anonymous> (/tmp/tmpaatml1uf.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpc4la8vzp.js:15:12)\n    at Object.<anonymous> (/tmp/tmpc4la8vzp.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let current = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === \".\") {\n            prefixes.push(current);\n            current = \"\";\n        } else {\n            current += string[i];\n        }\n    }\n    prefixes.push(current);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmplk5cntvh.js:20:12)\n    at Object.<anonymous> (/tmp/tmplk5cntvh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpz4fxzsd3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpz4fxzsd3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphrxzjfsv.js:18:12)\n    at Object.<anonymous> (/tmp/tmphrxzjfsv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let prefix = string.substring(0, i);\n        if (prefixes.indexOf(prefix) == -1) {\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpurvxii4k.js:16:12)\n    at Object.<anonymous> (/tmp/tmpurvxii4k.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let prefix = string.slice(0, i);\n        if (prefixes.indexOf(prefix) == -1) {\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpia3dyjf8.js:16:12)\n    at Object.<anonymous> (/tmp/tmpia3dyjf8.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let current: string = string;\n    while (current.length > 0) {\n        prefixes.unshift(current);\n        current = current.substr(0, current.length - 1);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmps_s7zdc7.js:18:12)\n    at Object.<anonymous> (/tmp/tmps_s7zdc7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            break;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpb9v6t8x0.js:21:12)\n    at Object.<anonymous> (/tmp/tmpb9v6t8x0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            break;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpb9v6t8x0.js:21:12)\n    at Object.<anonymous> (/tmp/tmpb9v6t8x0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix = prefix + string[i];\n        } else {\n            prefixes.push(prefix);\n            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmplq3migce.js:20:12)\n    at Object.<anonymous> (/tmp/tmplq3migce.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        let c = string.charAt(i);\n        if (c === prefix) {\n            prefixes.push(prefix);\n            prefix = '';\n        } else {\n            prefix += c;\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpbtthrso1.js:21:12)\n    at Object.<anonymous> (/tmp/tmpbtthrso1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix = prefix + string[i];\n        } else {\n            prefixes.push(prefix);\n            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpaazfdvel.js:20:12)\n    at Object.<anonymous> (/tmp/tmpaazfdvel.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjdwkf2ck.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjdwkf2ck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    let current_prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n        if (char === current_prefix) {\n            prefix_length++;\n        } else {\n            prefix_length = 1;\n            current_prefix = char;\n        }\n        if (prefix_length >= string.length + 1) {\n            prefixes.push(current_prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp5mj9x3rk.js:25:12)\n    at Object.<anonymous> (/tmp/tmp5mj9x3rk.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpz4fxzsd3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpz4fxzsd3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix_length++;\n        } else {\n            prefixes.push(string.substr(0, prefix_length));\n            prefix_length = 0;\n        }\n    }\n    prefixes.push(string.substr(0, prefix_length));\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp6ppyqixh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6ppyqixh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmps_s7zdc7.js:18:12)\n    at Object.<anonymous> (/tmp/tmps_s7zdc7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpv_c0t09t.js:18:12)\n    at Object.<anonymous> (/tmp/tmpv_c0t09t.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        let j = i;\n        while (j < string.length && string[j] === string[i]) {\n            j++;\n        }\n        if (j - i > 1) {\n            prefixes.push(string.substr(i, j));\n        }\n        i = j;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpsd66we85.js:21:12)\n    at Object.<anonymous> (/tmp/tmpsd66we85.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmps_s7zdc7.js:18:12)\n    at Object.<anonymous> (/tmp/tmps_s7zdc7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n\tlet prefixes: string[] = [];\n\tlet prefix = '';\n\tlet i = 0;\n\twhile (i < string.length) {\n\t\tlet char = string.charAt(i);\n\t\tif (char === prefix) {\n\t\t\tprefixes.push(prefix);\n\t\t\ti++;\n\t\t\tprefix = '';\n\t\t} else {\n\t\t\tprefix += char;\n\t\t}\n\t\ti++;\n\t}\n\treturn prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp1bojgvod.js:24:12)\n    at Object.<anonymous> (/tmp/tmp1bojgvod.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        }\n        else if (char === char.toLowerCase()) {\n            prefixes.push(char);\n            i += 1;\n        }\n        else {\n            i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp1lpgqmc5.js:25:12)\n    at Object.<anonymous> (/tmp/tmp1lpgqmc5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpc4la8vzp.js:15:12)\n    at Object.<anonymous> (/tmp/tmpc4la8vzp.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            break;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpb9v6t8x0.js:21:12)\n    at Object.<anonymous> (/tmp/tmpb9v6t8x0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphrxzjfsv.js:18:12)\n    at Object.<anonymous> (/tmp/tmphrxzjfsv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 2,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n\tlet prefixes: string[] = [];\n\tlet prefix_length = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet char = string[i];\n\t\tfor (let j = 0; j < prefix_length; j++) {\n\t\t\tif (char === prefixes[j]) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (j === prefix_length) {\n\t\t\tprefixes.push(char);\n\t\t\tprefix_length++;\n\t\t}\n\t}\n\treturn prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpv9fk9cih.ts(12,7): error TS2304: Cannot find name 'j'.\n",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpz4fxzsd3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpz4fxzsd3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let current = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === current) {\n            prefixes.push(current);\n            current = '';\n        } else {\n            current += string[i];\n        }\n    }\n    prefixes.push(current);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpt44flee5.js:20:12)\n    at Object.<anonymous> (/tmp/tmpt44flee5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix_length++;\n        } else {\n            prefixes.push(string.substr(0, prefix_length));\n            prefix_length = 0;\n        }\n    }\n    prefixes.push(string.substr(0, prefix_length));\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp6ppyqixh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6ppyqixh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] !== string[0]) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpiflalb0l.js:18:12)\n    at Object.<anonymous> (/tmp/tmpiflalb0l.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    var prefixes = [];\n    var prefix_length = 0;\n    var i = 0;\n    while (i < string.length) {\n        prefix_length = prefix_length * 2 + 1;\n        prefixes.push(string.substr(i, prefix_length));\n        i += prefix_length;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'sdf',\n  'gh'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmph3c_vtf9.js:17:12)\n    at Object.<anonymous> (/tmp/tmph3c_vtf9.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'sdf', 'gh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334271
    },
    {
      "exit_code": 2,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        let char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefix_length++;\n        } else {\n            prefix_length = 0;\n        }\n        if (prefix_length >= prefix_max) {\n            break;\n        }\n        prefixes.push(char);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp50f7g9_4.ts(12,30): error TS2304: Cannot find name 'prefix_max'.\n",
      "timestamp": 1660334271
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        const prefix = string.substr(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpvl5f9szc.js:19:12)\n    at Object.<anonymous> (/tmp/tmpvl5f9szc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334272
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmps_s7zdc7.js:18:12)\n    at Object.<anonymous> (/tmp/tmps_s7zdc7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        prefixes.push(string.substring(0, i));\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpehqv8paq.js:13:12)\n    at Object.<anonymous> (/tmp/tmpehqv8paq.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334272
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmprs6lgk0k.js:16:12)\n    at Object.<anonymous> (/tmp/tmprs6lgk0k.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334272
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix = prefix + string[i];\n        } else {\n            prefixes.push(prefix);\n            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmplq3migce.js:20:12)\n    at Object.<anonymous> (/tmp/tmplq3migce.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": -1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let current: string = string;\n    while (current.length > 0) {\n        const index = current.lastIndexOf('');\n        if (index === -1) {\n            break;\n        }\n        current = current.slice(0, index);\n        prefixes.unshift(current);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "Timeout",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334288
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmps_s7zdc7.js:18:12)\n    at Object.<anonymous> (/tmp/tmps_s7zdc7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpz4fxzsd3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpz4fxzsd3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let current: string = string;\n    while (current !== \"\") {\n        current = current.substr(1);\n        prefixes.unshift(current);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'h',\n  'gh',\n  'fgh',\n  'dfgh',\n  'sdfgh'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphtvybe28.js:15:12)\n    at Object.<anonymous> (/tmp/tmphtvybe28.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'h', 'gh', 'fgh', 'dfgh', 'sdfgh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334272
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjdwkf2ck.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjdwkf2ck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 2,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix: string;\n    let suffix: string;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let length: string = string.length;\n    while (i < length) {\n        prefix = string.substr(i, 1);\n        suffix = string.substr(i + 1, 1);\n        if (prefix === suffix) {\n            prefixes[j] = prefix;\n            i += 1;\n            j += 1;\n        } else {\n            prefixes[j] = prefix;\n            i += 1;\n            k += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp570t7l2w.ts(9,9): error TS2322: Type 'number' is not assignable to type 'string'.\n../../../../tmp/tmp570t7l2w.ts(10,12): error TS2365: Operator '<' cannot be applied to types 'number' and 'string'.\n",
      "timestamp": 1660334272
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n        const prefix = string.slice(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpa1ykqok4.js:16:12)\n    at Object.<anonymous> (/tmp/tmpa1ykqok4.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpr_3wzrb9.js:18:12)\n    at Object.<anonymous> (/tmp/tmpr_3wzrb9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        let j = i;\n        while (j < string.length && string[j] === string[i]) {\n            j++;\n        }\n        prefixes.push(string.substring(i, j));\n        i = j;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmppuvr9msg.js:19:12)\n    at Object.<anonymous> (/tmp/tmppuvr9msg.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        prefix_length += string[i].length;\n        if (prefix_length > prefix_length) {\n            prefixes = [];\n            prefix_length = string[i].length;\n        }\n        prefixes.push(string[i]);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpeajs_cpa.js:19:12)\n    at Object.<anonymous> (/tmp/tmpeajs_cpa.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjdwkf2ck.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjdwkf2ck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmps_s7zdc7.js:18:12)\n    at Object.<anonymous> (/tmp/tmps_s7zdc7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    let i = 0;\n    while (i < string.length) {\n        let char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefix_length++;\n        } else {\n            prefix_length = 0;\n        }\n        if (prefix_length >= 2) {\n            prefixes.push(string.substring(0, i));\n        }\n        i++;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp_i843oh4.js:25:12)\n    at Object.<anonymous> (/tmp/tmp_i843oh4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix_length++;\n        } else {\n            prefixes.push(string.substr(0, prefix_length));\n            prefix_length = 0;\n        }\n    }\n    prefixes.push(string.substr(0, prefix_length));\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp6ppyqixh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6ppyqixh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let current_prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        current_prefix += string[i];\n        if (current_prefix.length > 0) {\n            prefixes.push(current_prefix);\n            current_prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmplfp14p4g.js:18:12)\n    at Object.<anonymous> (/tmp/tmplfp14p4g.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix = prefix + string[i];\n        } else {\n            prefixes.push(prefix);\n            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmplq3migce.js:20:12)\n    at Object.<anonymous> (/tmp/tmplq3migce.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let current = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '-') {\n            prefixes.push(current);\n            current = '';\n        } else {\n            current += string[i];\n        }\n    }\n    prefixes.push(current);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpeemqkpgd.js:20:12)\n    at Object.<anonymous> (/tmp/tmpeemqkpgd.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpc4la8vzp.js:15:12)\n    at Object.<anonymous> (/tmp/tmpc4la8vzp.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix = prefix + string[i];\n        if (prefixes.length === 0) {\n            prefixes.push(prefix);\n        } else {\n            for (let j = 0; j < prefixes.length; j++) {\n                if (prefixes[j].startsWith(prefix)) {\n                    prefixes.push(prefix);\n                    break;\n                }\n            }\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpo5dff79l.js:25:12)\n    at Object.<anonymous> (/tmp/tmpo5dff79l.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        let j = i;\n        while (j < string.length && string[j] === string[i]) {\n            j++;\n        }\n        prefixes.push(string.substring(i, j));\n        i = j;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmppuvr9msg.js:19:12)\n    at Object.<anonymous> (/tmp/tmppuvr9msg.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        prefix_length += string[i].length;\n        if (prefix_length > prefix_length) {\n            prefixes.push(string.substring(0, i));\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp0ylchw22.js:17:12)\n    at Object.<anonymous> (/tmp/tmp0ylchw22.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjdwkf2ck.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjdwkf2ck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        let j = i;\n        while (j < string.length && string[j] == string[i]) {\n            j++;\n        }\n        prefixes.push(string.substr(i, j));\n        i = j;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'sd',\n  'dfg',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpa992mje_.js:19:12)\n    at Object.<anonymous> (/tmp/tmpa992mje_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'sd', 'dfg', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix = prefix + string[i];\n        } else {\n            prefixes.push(prefix);\n            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmplq3migce.js:20:12)\n    at Object.<anonymous> (/tmp/tmplq3migce.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '-') {\n            prefix = string[i];\n            prefixes.push(prefix);\n        } else {\n            prefix += string[i];\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpqhhkxez3.js:20:12)\n    at Object.<anonymous> (/tmp/tmpqhhkxez3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpddk6iqgv.js:21:12)\n    at Object.<anonymous> (/tmp/tmpddk6iqgv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpz4fxzsd3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpz4fxzsd3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix_length++;\n        } else {\n            prefixes.push(string.substr(0, prefix_length));\n            prefix_length = 0;\n        }\n    }\n    prefixes.push(string.substr(0, prefix_length));\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp6ppyqixh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6ppyqixh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphrxzjfsv.js:18:12)\n    at Object.<anonymous> (/tmp/tmphrxzjfsv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i = i + 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpy3q42y23.js:15:12)\n    at Object.<anonymous> (/tmp/tmpy3q42y23.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        prefix_length = prefix_length + string[i].length;\n        if (prefix_length < string.length) {\n            prefixes.push(string.substr(0, i));\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphvfnt2dn.js:17:12)\n    at Object.<anonymous> (/tmp/tmphvfnt2dn.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substring(0, i));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp1upiq1xz.js:15:12)\n    at Object.<anonymous> (/tmp/tmp1upiq1xz.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpr_3wzrb9.js:18:12)\n    at Object.<anonymous> (/tmp/tmpr_3wzrb9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    let index = 0;\n    while (index < string.length) {\n        prefix_length = prefix_length + string[index].length;\n        prefixes.push(string.substr(index, prefix_length));\n        index = index + prefix_length;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'sd',\n  'fgh'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpi8b1hivx.js:17:12)\n    at Object.<anonymous> (/tmp/tmpi8b1hivx.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'sd', 'fgh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334275
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let current_prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        current_prefix += string[i];\n        if (current_prefix.length > 0) {\n            prefixes.push(current_prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334274
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix = prefix + string[i];\n        } else {\n            prefixes.push(prefix);\n            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpaazfdvel.js:20:12)\n    at Object.<anonymous> (/tmp/tmpaazfdvel.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let current: string = string;\n    while (current.length > 0) {\n        prefixes.unshift(current);\n        current = current.slice(0, -1);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334264
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix_length++;\n        } else {\n            prefixes.push(string.substr(0, prefix_length));\n            prefix_length = 0;\n        }\n    }\n    prefixes.push(string.substr(0, prefix_length));\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp6ppyqixh.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6ppyqixh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 2,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n\tlet prefixes: string[] = [];\n\tlet prefix_length = 0;\n\tlet i = 0;\n\twhile (i < string.length) {\n\t\tlet char = string.charAt(i);\n\t\tlet next_char = string.charAt(i + 1);\n\t\tif (char === next_char) {\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (prefix_length + 1 === string.length) {\n\t\t\tprefixes.push(string.substr(0, i));\n\t\t\tprefix_length = 0;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (char === string.charAt(prefix_length + 1)) {\n\t\t\tprefix_length++;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (prefix_length + 2 === string.length) {\n\t\t\tprefixes.push(string.substr(0, i));\n\t\t\tprefix_length = 0;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (char === string.charAt(prefix_length + 2)) {\n\t\t\tprefix_length++;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (prefix_length + 3 === string.length) {\n\t\t\tprefixes.push(string.substr(0, i));\n\t\t\tprefix_length = 0;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (char === string.charAt(prefix_length + 3)) {\n\t\t\tprefix_length++;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (prefix_length + 4 === string.length) {\n\t\t\tprefixes.push(string.substr(0, i));\n\t\t\tprefix_length = 0;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (char === string.charAt(prefix_length + 4)) {\n\t\t\tprefix_length++;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (prefix_length + 5 === string.length) {\n\t\t\tprefixes.push(string.substr(0, i));\n\t\t\tprefix_length = 0;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (char === string.charAt(prefix_length + 5)) {\n\t\t\tprefix_length++;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (prefix_length + 6 === string.length) {\n\t\t\tprefixes.push(string.substr(0, i));\n\t\t\tprefix_length = 0;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (char === string.charAt(prefix_length + 6)) {\n\t\t\tprefix_length++;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (prefix_length + 7 === string.length) {\n\t\t\tprefixes.push(string.substr(0, i));\n\t\t\tprefix_length = 0;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (char === string.charAt(prefix_length + 7)) {\n\t\t\tprefix_length++;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (prefix_length + 8 === string.length) {\n\t\t\tprefixes.push(string.substr(0, i));\n\t\t\tprefix_length = 0;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (char === string.charAt(prefix_length + 8)) {\n\t\t\tprefix_length++;\n\t\t\t\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpo__33ntr.ts(110,8): error TS1005: '}' expected.\n",
      "timestamp": 1660334275
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmprs6lgk0k.js:16:12)\n    at Object.<anonymous> (/tmp/tmprs6lgk0k.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334272
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        let j = i;\n        while (j < string.length && string[j] === string[i]) {\n            j++;\n        }\n        prefixes.push(string.substring(i, j));\n        i = j;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmppuvr9msg.js:19:12)\n    at Object.<anonymous> (/tmp/tmppuvr9msg.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphrxzjfsv.js:18:12)\n    at Object.<anonymous> (/tmp/tmphrxzjfsv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpr_3wzrb9.js:18:12)\n    at Object.<anonymous> (/tmp/tmpr_3wzrb9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let current: string = string;\n    while (current.length > 0) {\n        prefixes.unshift(current);\n        current = current.slice(0, current.length - 1);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334275
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '-') {\n            prefix_length++;\n        } else {\n            prefixes.push(string.substr(0, prefix_length));\n            prefix_length = 0;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  '',\n  '',\n  '',\n  '',\n  ''\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpen1rz5ls.js:20:12)\n    at Object.<anonymous> (/tmp/tmpen1rz5ls.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', '', '', '', '', '' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334275
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let current = '';\n    for (let i = 0; i < string.length; i++) {\n        const char = string[i];\n        if (char === current) {\n            prefixes.push(current);\n            current = '';\n        } else {\n            current += char;\n        }\n    }\n    prefixes.push(current);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpu8jerw7s.js:21:12)\n    at Object.<anonymous> (/tmp/tmpu8jerw7s.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334275
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            break;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpb9v6t8x0.js:21:12)\n    at Object.<anonymous> (/tmp/tmpb9v6t8x0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        let j = i;\n        while (j < string.length && string[j] == string[i]) {\n            j++;\n        }\n        prefixes.push(string.substring(i, j));\n        i = j;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpqm8cyo__.js:19:12)\n    at Object.<anonymous> (/tmp/tmpqm8cyo__.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            break;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpb9v6t8x0.js:21:12)\n    at Object.<anonymous> (/tmp/tmpb9v6t8x0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjdwkf2ck.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjdwkf2ck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let current = \"\";\n    for (let i = 0; i < string.length; i++) {\n        current += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(current);\n            current = \"\";\n        }\n    }\n    prefixes.push(current);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp2nbsrwrn.js:18:12)\n    at Object.<anonymous> (/tmp/tmp2nbsrwrn.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n\tlet prefixes: string[] = [];\n\tlet prefix_length = 0;\n\tlet i = 0;\n\twhile (i < string.length) {\n\t\tlet j = i;\n\t\twhile (j < string.length && string[j] === string[i]) {\n\t\t\tj++;\n\t\t}\n\t\tprefixes.push(string.substring(i, j));\n\t\tprefix_length = Math.max(prefix_length, j - i);\n\t\ti = j;\n\t}\n\treturn prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp2irc5gqz.js:21:12)\n    at Object.<anonymous> (/tmp/tmp2irc5gqz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '-') {\n            prefix_length++;\n        } else {\n            prefix_length = 0;\n        }\n        if (prefix_length >= 2) {\n            prefixes.push(string.substr(0, i));\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpeeo04f2a.js:22:12)\n    at Object.<anonymous> (/tmp/tmpeeo04f2a.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let current = '';\n    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n        if (char === current) {\n            prefixes.push(current);\n            current = '';\n        } else {\n            current += char;\n        }\n    }\n    prefixes.push(current);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpfpdbfngr.js:21:12)\n    at Object.<anonymous> (/tmp/tmpfpdbfngr.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix: string;\n    for (let i = 0; i < string.length; i++) {\n        prefix = string.substring(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpdqn_bhe8.js:17:12)\n    at Object.<anonymous> (/tmp/tmpdqn_bhe8.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n            i += 1;\n        } else {\n            i += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpddk6iqgv.js:21:12)\n    at Object.<anonymous> (/tmp/tmpddk6iqgv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjdwkf2ck.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjdwkf2ck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n        if (char === prefix) {\n            prefixes.push(prefix);\n            prefix = '';\n        } else {\n            prefix += char;\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpzdq0_h6l.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzdq0_h6l.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix = prefix + string[i];\n        } else {\n            prefixes.push(prefix);\n            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpaazfdvel.js:20:12)\n    at Object.<anonymous> (/tmp/tmpaazfdvel.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        const prefix = string.substr(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpaatml1uf.js:18:12)\n    at Object.<anonymous> (/tmp/tmpaatml1uf.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334269
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === prefix) {\n            prefixes.push(prefix);\n            prefix = \"\";\n        } else {\n            prefix += string[i];\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpx_1bbahy.js:20:12)\n    at Object.<anonymous> (/tmp/tmpx_1bbahy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '-') {\n            prefix_length++;\n        } else {\n            prefix_length = 0;\n        }\n        if (prefix_length >= 2) {\n            prefixes.push(string.substr(0, i));\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpeeo04f2a.js:22:12)\n    at Object.<anonymous> (/tmp/tmpeeo04f2a.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphrxzjfsv.js:18:12)\n    at Object.<anonymous> (/tmp/tmphrxzjfsv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix += string[i];\n        } else {\n            prefixes.push(prefix);\n            prefix = string[i];\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpyszw41fv.js:20:12)\n    at Object.<anonymous> (/tmp/tmpyszw41fv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[0]) {\n            prefix_length++;\n        } else {\n            prefix_length = 0;\n        }\n        if (prefix_length >= string.length) {\n            prefixes.push(string.substr(0, i));\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpz9uv7cyq.js:22:12)\n    at Object.<anonymous> (/tmp/tmpz9uv7cyq.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let i = 0;\n    while (i < string.length) {\n        prefixes.push(string.substr(i, string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpc4la8vzp.js:15:12)\n    at Object.<anonymous> (/tmp/tmpc4la8vzp.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let current = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === \".\") {\n            prefixes.push(current);\n            current = \"\";\n        } else {\n            current += string[i];\n        }\n    }\n    prefixes.push(current);\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpw7il4rzc.js:20:12)\n    at Object.<anonymous> (/tmp/tmpw7il4rzc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n        const char = string.charAt(i);\n        if (char === char.toUpperCase()) {\n            prefixes.push(char);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpzeiafrxn.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzeiafrxn.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmps_s7zdc7.js:18:12)\n    at Object.<anonymous> (/tmp/tmps_s7zdc7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '-') {\n            prefixes.push(string.substring(0, i));\n            prefix_length = i;\n        }\n    }\n    if (prefix_length > 0) {\n        prefixes.push(string.substring(0, prefix_length));\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp8rnzbycd.js:20:12)\n    at Object.<anonymous> (/tmp/tmp8rnzbycd.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        prefix_length = prefix_length + string[i].length;\n        if (prefix_length < string.length) {\n            prefixes.push(string.substr(0, i));\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphvfnt2dn.js:17:12)\n    at Object.<anonymous> (/tmp/tmphvfnt2dn.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let current_prefix: string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        current_prefix += string[i];\n        if (current_prefix.length > 0) {\n            prefixes.push(current_prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    let current: string = string;\n    while (current.length > 0) {\n        prefixes.unshift(current);\n        current = current.slice(0, -1);\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334264
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjdwkf2ck.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjdwkf2ck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 0,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        prefix_length += string[i].length;\n        prefixes.push(string.substr(0, prefix_length));\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    var prefixes: string[] = [];\n    for (var i = 1; i < string.length; i++) {\n        prefixes.push(string.substring(0, i));\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp05w63qvv.js:13:12)\n    at Object.<anonymous> (/tmp/tmp05w63qvv.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let prefix = '';\n    for (let i = 0; i < string.length; i++) {\n        prefix += string[i];\n        if (string[i] === string[0]) {\n            prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjdwkf2ck.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjdwkf2ck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    let prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let prefix = string.slice(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpuquq75jv.js:16:12)\n    at Object.<anonymous> (/tmp/tmpuquq75jv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334261
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        const char = string.substr(i, 1);\n        if (prefixes.indexOf(char) === -1) {\n            prefixes.push(char);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpv0nxjw3s.js:16:12)\n    at Object.<anonymous> (/tmp/tmpv0nxjw3s.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334276
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    for (let i = 0; i < string.length; i++) {\n        const prefix = string.slice(0, i);\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpa1ykqok4.js:16:12)\n    at Object.<anonymous> (/tmp/tmpa1ykqok4.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334273
    },
    {
      "exit_code": 1,
      "program": "//Return list of all prefixes from shortest to longest of the input string\nfunction all_prefixes(string: string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i < string.length) {\n        const char = string.charAt(i);\n        if (char === prefixes[prefixes.length - 1]) {\n            prefixes.push(char);\n        } else {\n            prefixes.push(char);\n            i++;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpyfz4_4ox.js:21:12)\n    at Object.<anonymous> (/tmp/tmpyfz4_4ox.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334265
    }
  ]
}
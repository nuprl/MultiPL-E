language: ts
name: HumanEval_58_common
results:
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var i: number;\n    var j: number;\n\
    \    var result: number[] = [];\n    for (i = 0; i < l1.length; i++) {\n     \
    \   for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n  \
    \              result.push(l1[i]);\n                break;\n            }\n  \
    \      }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    This doesn't work if there are duplicates in the lists.\n<|/ c |>\n<| c |>\nYes,\
    \ it does. I added a note to the answer.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ if there are duplicates in the lists.\n<|/ c |>\n<| c |>\nYes, it does. I added\
    \ a note to the answer.\n<|/ c |>\n<| c |>\nThis doesn't work if there are duplicates\
    \ in the lists.\n<|/ c |>\n<| a tags=arrays,javascript,sorting |>\n<code>\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp252e4s6j.ts(16,2): error TS1110: Type expected.

    ../../../../tmp/tmp252e4s6j.ts(16,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp252e4s6j.ts(17,2): error TS1109: Expression expected.

    ../../../../tmp/tmp252e4s6j.ts(17,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp252e4s6j.ts(18,2): error TS1109: Expression expected.

    ../../../../tmp/tmp252e4s6j.ts(18,7): error TS1109: Expression expected.

    ../../../../tmp/tmp252e4s6j.ts(19,6): error TS1005: '';'' expected.

    ../../../../tmp/tmp252e4s6j.ts(19,6): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp252e4s6j.ts(19,56): error TS1002: Unterminated string literal.

    ../../../../tmp/tmp252e4s6j.ts(20,2): error TS1109: Expression expected.

    ../../../../tmp/tmp252e4s6j.ts(20,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp252e4s6j.ts(21,2): error TS1109: Expression expected.

    ../../../../tmp/tmp252e4s6j.ts(21,7): error TS1109: Expression expected.

    ../../../../tmp/tmp252e4s6j.ts(22,9): error TS1005: '';'' expected.

    ../../../../tmp/tmp252e4s6j.ts(22,17): error TS1005: '';'' expected.

    ../../../../tmp/tmp252e4s6j.ts(22,23): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp252e4s6j.ts(22,25): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp252e4s6j.ts(22,30): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp252e4s6j.ts(22,33): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp252e4s6j.ts(23,1): error TS1003: Identifier expected.

    ../../../../tmp/tmp252e4s6j.ts(23,2): error TS1109: Expression expected.

    ../../../../tmp/tmp252e4s6j.ts(23,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp252e4s6j.ts(24,2): error TS1109: Expression expected.

    ../../../../tmp/tmp252e4s6j.ts(24,7): error TS1109: Expression expected.

    ../../../../tmp/tmp252e4s6j.ts(25,6): error TS1005: '';'' expected.

    ../../../../tmp/tmp252e4s6j.ts(25,6): error TS1434: Unexpected keyword or identifier.

    ../../../../'
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  let lLen\
    \ = l1.length;\n  let rLen = l2.length;\n  for (let i = 0; i < lLen; i++) {\n\
    \    for (let j = 0; j < rLen; j++) {\n      if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpkz_5tfit.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmpkz_5tfit.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    let found = false;\n    for (let j = 0; j\
    \ < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        found = true;\n \
    \       break;\n      }\n    }\n    if (!found) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpu9ebi8_i.js:21:12)\n    at Object.<anonymous> (/tmp/tmpu9ebi8_i.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l: number[] = [];\n    for (let\
    \ i = 0; i < l1.length; i++) {\n        if (l2.indexOf(l1[i]) === -1) {\n    \
    \        l.push(l1[i]);\n        }\n    }\n    return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpbkwuccow.js:14:12)\n    at Object.<anonymous> (/tmp/tmpbkwuccow.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=arrays,javascript |>\n<| a dscore=0 |>\n<code>\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9pmhindy.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmp9pmhindy.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp9pmhindy.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmp9pmhindy.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp9pmhindy.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmp9pmhindy.ts(16,6): error TS1005: '';'' expected.

    ../../../../tmp/tmp9pmhindy.ts(16,16): error TS1109: Expression expected.

    ../../../../tmp/tmp9pmhindy.ts(18,9): error TS1005: '';'' expected.

    '
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp09sc8qy4.js:14:12)\n    at Object.<anonymous> (/tmp/tmp09sc8qy4.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var i: number;\n    var j: number;\n\
    \    var result: number[] = [];\n    for (i = 0; i < l1.length; i++) {\n     \
    \   for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n  \
    \              result.push(l1[i]);\n                break;\n            }\n  \
    \      }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmppcjy0567.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmppcjy0567.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis is not the most efficient solution.\
    \ `O(n^2)` complexity is needed here.\n<|/ c |>\n<| c |>\nYes, I agree with you.\
    \ But the OP asked for \"most efficient\" solution. So, I gave him an efficient\
    \ solution. :)\n<|/ c |>\n<| c |>\nI agree with you. But the OP asked for \"most\
    \ efficient\" solution. So, I gave him an efficient solution. :)\n<|/ c |>\n<|\
    \ c |>\nI agree with you. But the OP asked for \"most efficient\" solution. So,\
    \ I gave him an efficient solution. :)\n<|/ c |>\n<| a tags=arrays,javascript,algorithm\
    \ |>\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpyhkt3sb5.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmpyhkt3sb5.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpyhkt3sb5.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmpyhkt3sb5.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpyhkt3sb5.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmpyhkt3sb5.ts(16,7): error TS1109: Expression expected.

    ../../../../tmp/tmpyhkt3sb5.ts(17,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpyhkt3sb5.ts(17,9): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpyhkt3sb5.ts(17,13): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpyhkt3sb5.ts(17,17): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpyhkt3sb5.ts(17,22): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpyhkt3sb5.ts(17,42): error TS1003: Identifier expected.

    ../../../../tmp/tmpyhkt3sb5.ts(17,51): error TS1434: Unexpected k'
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let l: number[] = [];\n  for (let i =\
    \ 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmprlti_2ig.js:14:12)\n    at Object.<anonymous> (/tmp/tmprlti_2ig.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=javascript,arrays |>\n<| c |>\nThis doesn't work if there\
    \ are duplicates in the lists.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before\
    \ posting it. The OP didn't specify what should happen if there are duplicates.\n\
    <|/ c |>\n<| c |>\nI tested it and it doesn't work. Try it with `[1, 1, 2, 3]`\
    \ and `[1, 1, 2, 3]`.\n<|/ c |>\n<| c |>\nI tested it and it works. I added a\
    \ test case to my answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added\
    \ a test case to my answer.\n<|/ c |>\n<| a tags=javascript,arrays |>\n<code>\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp5v5_r1tp.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmp5v5_r1tp.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp5v5_r1tp.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmp5v5_r1tp.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp5v5_r1tp.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmp5v5_r1tp.ts(16,7): error TS1109: Expression expected.

    ../../../../tmp/tmp5v5_r1tp.ts(17,6): error TS1005: '';'' expected.

    ../../../../tmp/tmp5v5_r1tp.ts(17,6): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp5v5_r1tp.ts(17,56): error TS1002: Unterminated string literal.

    ../../../../tmp/tmp5v5_r1tp.ts(18,2): error TS1109: Expression expected.

    ../../../../tmp/tmp5v5_r1tp.ts(18,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp5v5_r1tp.ts(19,2): error TS1109: Expression expected.

    ../../../../tmp/tmp5v5_r1tp.ts(19,7): error TS1109: Expression expected.

    ../../../../tmp/tmp5v5_r1tp.ts(20,9): error TS1005: '';'' expected.

    ../../../../tmp/tmp5v5_r1tp.ts(20,17): error TS1005: '';'' expected.

    ../../../../tmp/tmp5v5_r1tp.ts(20,24): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp5v5_r1tp.ts(20,27): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp5v5_r1tp.ts(20,34): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp5v5_r1tp.ts(20,50): error TS1005: '';'' expected.

    ../../../../tmp/tmp5v5_r1tp.ts(20,53): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp5v5_r1tp.ts(20,111): error TS1002: Unterminated string literal.

    ../../../../tmp/tmp5v5_r1tp.ts(21,2): error TS1109: Expression expected.

    ../../../../tmp/tmp5v5_r1tp.ts(21,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp5v5_r1tp.ts(22,2): error TS1109: Expression expected.

    ../../../../tmp/tmp5v5_r1tp.ts(22,7): error TS1109: Expression expected.

    ../../../../tmp/tmp5v5_r1tp.ts(23,3): error TS1005: '';'' expected.

    ../../../../tmp/tmp5v'
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  var result: number[] = [];\n  for (var\
    \ i = 0; i < l1.length; i++) {\n    for (var j = 0; j < l2.length; j++) {\n  \
    \    if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpz_c2n9mz.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpz_c2n9mz.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l: number[] = [];\n    let i: number;\n\
    \    let j: number;\n    let k: number;\n    let l1: number;\n    let l2: number;\n\
    \    let commonCount: number;\n    let commonElement: number;\n    let commonArray:\
    \ number[] = [];\n    let commonArray1: number[] = [];\n    let commonArray2:\
    \ number[] = [];\n    let commonArray3: number[] = [];\n    let commonArray4:\
    \ number[] = [];\n    let commonArray5: number[] = [];\n    let commonArray6:\
    \ number[] = [];\n    let commonArray7: number[] = [];\n    let commonArray8:\
    \ number[] = [];\n    let commonArray9: number[] = [];\n    let commonArray10:\
    \ number[] = [];\n    let commonArray11: number[] = [];\n    let commonArray12:\
    \ number[] = [];\n    let commonArray13: number[] = [];\n    let commonArray14:\
    \ number[] = [];\n    let commonArray15: number[] = [];\n    let commonArray16:\
    \ number[] = [];\n    let commonArray17: number[] = [];\n    let commonArray18:\
    \ number[] = [];\n    let commonArray19: number[] = [];\n    let commonArray20:\
    \ number[] = [];\n    let commonArray21: number[] = [];\n    let commonArray22:\
    \ number[] = [];\n    let commonArray23: number[] = [];\n    let commonArray24:\
    \ number[] = [];\n    let commonArray25: number[] = [];\n    let commonArray26:\
    \ number[] = [];\n    let commonArray27: number[] = [];\n    let commonArray28:\
    \ number[] = [];\n    let commonArray29: number[] = [];\n    let commonArray30:\
    \ number[] = [];\n    let commonArray31: number[] = [];\n    let commonArray32:\
    \ number[] = [];\n    let commonArray33: number[] = [];\n    let commonArray34:\
    \ number[] = [];\n    let commonArray35: number[] = [];\n    let commonArray36:\
    \ number[] = [];\n    let commonArray37: number[] = [];\n    let commonArray38:\
    \ number[] = [];\n    let commonArray39: number[] = [];\n    let commonArray40:\
    \ number[] = [];\n    let commonArray41: number[] = [];\n    let commonArray42:\
    \ number[] = [];\n    let commonArray43: number[] = [];\n    let commonArray44:\
    \ number[] = [];\n    let commonArray45: number[] = [];\n    let commonArray46:\
    \ number[] = [];\n    let commonArray47: number[] = [];\n    let commonArray48:\
    \ number[] = [];\n    let commonArray49: number[] = [];\n    let commonArray50:\
    \ number[] = [];\n    let commonArray51: number[] = [];\n    let commonArray52:\
    \ number[] = [];\n    let common\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_18d1hvz.ts(77,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpijykkogl.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpijykkogl.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const result: number[] = [];\n    const\
    \ hashMap = new Map<number, boolean>();\n    for (let i = 0; i < l1.length; i++)\
    \ {\n        const val = l1[i];\n        if (hashMap.has(val)) {\n           \
    \ continue;\n        }\n        hashMap.set(val, true);\n        result.push(val);\n\
    \    }\n    for (let i = 0; i < l2.length; i++) {\n        const val = l2[i];\n\
    \        if (hashMap.has(val)) {\n            continue;\n        }\n        hashMap.set(val,\
    \ true);\n        result.push(val);\n    }\n    return result;\n}\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5,\n  7,\n  9,\n  121\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpzy5_neeb.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzy5_neeb.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3, 34, 653,\n    2, 5, 7,  9, 121\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    var\
    \ i: number;\n    var j: number;\n    for (i = 0; i < l1.length; i++) {\n    \
    \    for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n \
    \               result.push(l1[i]);\n                break;\n            }\n \
    \       }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8lwwuwad.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8lwwuwad.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript,sorting |>\n<code>\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpbr5awp0f.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmpbr5awp0f.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpbr5awp0f.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmpbr5awp0f.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpbr5awp0f.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmpbr5awp0f.ts(16,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpbr5awp0f.ts(16,38): error TS1109: Expression expected.

    ../../../../tmp/tmpbr5awp0f.ts(18,9): error TS1005: '';'' expected.

    '
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result = [];\n    for (let i =\
    \ 0; i < l1.length; i++) {\n        let found = false;\n        for (let j = 0;\
    \ j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n                found\
    \ = true;\n                break;\n            }\n        }\n        if (!found)\
    \ {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp7p4pdpub.js:21:12)\n    at Object.<anonymous> (/tmp/tmp7p4pdpub.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332846
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    let found = false;\n    for (let j = 0; j\
    \ < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        found = true;\n \
    \       break;\n      }\n    }\n    if (!found) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpu9ebi8_i.js:21:12)\n    at Object.<anonymous> (/tmp/tmpu9ebi8_i.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    var\
    \ i: number;\n    var j: number;\n    for (i = 0; i < l1.length; i++) {\n    \
    \    for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n \
    \               result.push(l1[i]);\n                break;\n            }\n \
    \       }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8lwwuwad.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8lwwuwad.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp09sc8qy4.js:14:12)\n    at Object.<anonymous> (/tmp/tmp09sc8qy4.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    var\
    \ i: number;\n    var j: number;\n    for (i = 0; i < l1.length; i++) {\n    \
    \    for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n \
    \               result.push(l1[i]);\n                break;\n            }\n \
    \       }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8lwwuwad.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8lwwuwad.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    let\
    \ lLen = l1.length;\n    let ljLen = l2.length;\n    let i = 0;\n    let j = 0;\n\
    \    while (i < lLen && j < ljLen) {\n        if (l1[i] === l2[j]) {\n       \
    \     result.push(l1[i]);\n            i++;\n            j++;\n        } else\
    \ if (l1[i] < l2[j]) {\n            i++;\n        } else {\n            j++;\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8styjirc.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8styjirc.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    let found = false;\n    for (let j = 0; j\
    \ < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        found = true;\n \
    \       break;\n      }\n    }\n    if (!found) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpu9ebi8_i.js:21:12)\n    at Object.<anonymous> (/tmp/tmpu9ebi8_i.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if there are duplicates in either\
    \ list.\n<|/ c |>\n<| c |>\nIt does. I tested it before posting. What are you\
    \ talking about?\n<|/ c |>\n<| c |>\nI tested it before posting too. Try it yourself\
    \ with two lists containing duplicates. You'll see that it doesn't work.\n<|/\
    \ c |>\n<| c |>\nI tested it before posting too. Try it yourself with two lists\
    \ containing duplicates. You'll see that it doesn't work.\n<|/ c |>\n<| c |>\n\
    I tested it before posting too. Try it yourself with two lists containing duplicates.\
    \ You'll see that it doesn't work.\n<|/ c |>\n<| a tags=arrays,javascript |>\n\
    <code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpkofc4mbe.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmpkofc4mbe.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpkofc4mbe.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmpkofc4mbe.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpkofc4mbe.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmpkofc4mbe.ts(16,7): error TS1109: Expression expected.

    ../../../../tmp/tmpkofc4mbe.ts(17,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpkofc4mbe.ts(17,6): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpkofc4mbe.ts(17,58): error TS1002: Unterminated string literal.

    ../../../../tmp/tmpkofc4mbe.ts(18,2): error TS1109: Expression expected.

    ../../../../tmp/tmpkofc4mbe.ts(18,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpkofc4mbe.ts(19,2): error TS1109: Expression expected.

    ../../../../tmp/tmpkofc4mbe.ts(19,7): error TS1109: Expression expected.

    ../../'
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const result = [];\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpfn02r9jc.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfn02r9jc.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332846
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var i: number;\n    var j: number;\n\
    \    var result: number[] = [];\n    for (i = 0; i < l1.length; i++) {\n     \
    \   for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n  \
    \              result.push(l1[i]);\n                break;\n            }\n  \
    \      }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmppcjy0567.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmppcjy0567.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nvar arr1 = [1,2,3,4,5,6,7,8,9,10];\n\
    var arr2 = [2,4,6,8,10];\n\nvar arr3 = arr1.filter(function(item){\n    return\
    \ arr2.indexOf(item) < 0;\n});\n\nconsole.log(arr3);\n</code>\n<|/ a tags=arrays,javascript\
    \ |>\n<| a dscore=1 |>\n<code>\nvar arr1 = [1,2,3,4,5,6,7,8,9,10];\nvar arr2 =\
    \ [2,4,6,8,10];\n\nvar arr3 = arr1.filter(function(item){\n    return arr2.indexOf(item)\
    \ < 0;\n});\n\nconsole.log(arr3);\n</code>\n<|/ a tags=arrays,javascript |>\n\
    <| a dscore=0 |>\n<code>\nvar arr1 = [1,2,3,4,5,6,7,8,9,10];\nvar arr2 = [2,4,6,8,10];\n\
    \nvar arr3 = arr1.filter(function(item){\n    return arr2.indexOf(item) < 0;\n\
    });\n\nconsole.log(arr3);\n</code>\n<|/ a tags=arrays,javascript |>\n<| a tags=arrays,javascript\
    \ |>\n<code>\nvar arr1 = [1,2,3,4,5,6,7,8,9,10];\nvar arr2 = [2,4,6,8,10];\n\n\
    var arr3 = arr1.filter(function(item){\n    return arr2.indexOf(item) < 0;\n});\n\
    \nconsole.log(arr3);\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript\
    \ |>\n<code>\nvar arr1 = [1,2,3,4,5,6,7,8,9,10];\nvar arr2 = [2,4,6,8,10];\n\n\
    var arr3 = arr1.filter(function(item){\n    return arr2.indexOf(item) < 0;\n});\n\
    \nconsole.log(arr3);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nvar\
    \ arr1 = [1,2,3,4,5,6,7,8,9,10];\nvar arr2 = [2,4,6,8,10];\n\nvar arr3 = arr1.filter(function(item){\n\
    \    return arr2.indexOf(item) < 0;\n});\n\nconsole.log(arr3);\n</code>\n<|/ a\
    \ tags=arrays,javascript |>\n<| a dscore=0 |>\n<code>\nvar arr1 = [1,2,3,4,5,6,7,8,9,10];\n\
    var arr2 = [2,4,6,8,10];\n\nvar arr3 = arr1.filter(function(item){\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_9zem7j1.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmp_9zem7j1.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp_9zem7j1.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmp_9zem7j1.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp_9zem7j1.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmp_9zem7j1.ts(16,6): error TS1005: '';'' expected.

    ../../../../tmp/tmp_9zem7j1.ts(16,16): error TS1109: Expression expected.

    ../../../../tmp/tmp_9zem7j1.ts(18,1): error TS1109: Expression expected.

    ../../../../tmp/tmp_9zem7j1.ts(26,2): error TS1110: Type expected.

    ../../../../tmp/tmp_9zem7j1.ts(26,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp_9zem7j1.ts(27,2): error TS1109: Expression expected.

    ../../../../tmp/tmp_9zem7j1.ts(27,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp_9zem7j1.ts(28,2): error TS1109: Expression expected.

    ../../../../t'
  timestamp: 1660332848
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  var result = [];\n  for (var i = 0; i\
    \ < l1.length; i++) {\n    for (var j = 0; j < l2.length; j++) {\n      if (l1[i]\
    \ === l2[j]) {\n        result.push(l1[i]);\n        break;\n      }\n    }\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpii5mm62q.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpii5mm62q.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  var result = [];\n  for (var i = 0; i\
    \ < l1.length; i++) {\n    for (var j = 0; j < l2.length; j++) {\n      if (l1[i]\
    \ === l2[j]) {\n        result.push(l1[i]);\n        break;\n      }\n    }\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpii5mm62q.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpii5mm62q.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const result = [];\n    const hash1\
    \ = new Set();\n    const hash2 = new Set();\n    l1.forEach((item) => {\n   \
    \     hash1.add(item);\n    });\n    l2.forEach((item) => {\n        hash2.add(item);\n\
    \    });\n    hash1.forEach((item) => {\n        if (!hash2.has(item)) {\n   \
    \         result.push(item);\n        }\n    });\n    return result;\n}\n</code>\n\
    <|/ a tags=javascript,arrays,typescript |>\n<| c |>\nThis solution does not preserve\
    \ the order of the elements in the array. For example, `[1,2,3]` and `[3,2,1]`\
    \ will both return `[1,2,3]`.\n<|/ c |>\n<| c |>\nYes, that's true. But the OP\
    \ didn't specify that he wants to preserve the order. He just asked for a solution\
    \ that returns the same array as his example. He didn't specify that he wants\
    \ to preserve the order of the elements in the array. He just asked for a solution\
    \ that returns the same array as his example. He didn't specify that he wants\
    \ to preserve the order of the elements in the array. He just asked for a solution\
    \ that returns the same array as his example. He didn't specify that he wants\
    \ to preserve the order of the elements in the array. He just asked for a solution\
    \ that returns the same array as his example. He didn't specify that he wants\
    \ to preserve the order of the elements in the array. He just asked for a solution\
    \ that returns the same array as his example. He didn't specify that he wants\
    \ to preserve the order of the elements in the array. He just asked for a solution\
    \ that returns the same array as his example. He didn't specify that he wants\
    \ to preserve the order of the elements in the array. He just asked for a solution\
    \ that returns the same array as his example. He didn't specify that he wants\
    \ to preserve the order of the elements in the array. He just asked for a solution\
    \ that returns the same array as his example. He didn't specify that he wants\
    \ to preserve the order of the elements in the array. He just asked for a solution\
    \ that returns the same array as his example. He didn't specify that he wants\
    \ to preserve the order of the elements in the array. He just asked for a solution\
    \ that returns the same array as his example. He didn't specify that he wants\
    \ to preserve the order of the elements in the array. He just asked for a solution\
    \ that returns the same array as his example. He didn't specify that he wants\
    \ to preserve the order of the elements in the array. He just asked for a solution\
    \ that returns the same array as his example. \ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmprmyp1_v4.ts(19,2): error TS1110: Type expected.

    ../../../../tmp/tmprmyp1_v4.ts(19,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmprmyp1_v4.ts(20,2): error TS1109: Expression expected.

    ../../../../tmp/tmprmyp1_v4.ts(20,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmprmyp1_v4.ts(21,2): error TS1109: Expression expected.

    ../../../../tmp/tmprmyp1_v4.ts(21,7): error TS1109: Expression expected.

    ../../../../tmp/tmprmyp1_v4.ts(22,6): error TS1005: '';'' expected.

    ../../../../tmp/tmprmyp1_v4.ts(22,15): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprmyp1_v4.ts(22,20): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprmyp1_v4.ts(22,24): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprmyp1_v4.ts(22,33): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprmyp1_v4.ts(22,37): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprmyp1_v4.ts(22,43): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprmyp1_v4.ts(22,46): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprmyp1_v4.ts(22,66): error TS1005: '';'' expected.

    ../../../../tmp/tmprmyp1_v4.ts(22,77): error TS1005: '';'' expected.

    ../../../../tmp/tmprmyp1_v4.ts(22,96): error TS1005: '';'' expected.

    ../../../../tmp/tmprmyp1_v4.ts(22,100): error TS1443: Module declaration names
    may only use '' or " quoted strings.

    ../../../../tmp/tmprmyp1_v4.ts(22,110): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprmyp1_v4.ts(22,115): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmprmyp1_v4.ts(23,1): error TS1003: Identifier expected.

    ../../../../tmp/tmprmyp1_v4.ts(23,2): error TS1109: Expression expected.

    ../../../../tmp/tmprmyp1_v4.ts(23,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmprmyp1_v4.ts(24,2): error TS1109: Expression expected.

    ../../../../tmp/tmprmyp1_v4.ts(24,7): error TS1109: Expression expected.

    ../../../../tmp/tmprmyp1'
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpijykkogl.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpijykkogl.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l: number[] = [];\n    let j =\
    \ 0;\n    for (let i = 0; i < l1.length; i++) {\n        if (l2.indexOf(l1[i])\
    \ === -1) {\n            l[j] = l1[i];\n            j++;\n        }\n    }\n \
    \   return l;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis code is not working\
    \ as expected. `common([1,2,3], [1,2,4,5])` returns `[1,2,3]` instead of `[1,2,4,5]`\n\
    <|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<|\
    \ a tags=arrays,javascript,sorting |>\n<code>\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpn_ngprca.ts(13,2): error TS1110: Type expected.

    ../../../../tmp/tmpn_ngprca.ts(13,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpn_ngprca.ts(14,2): error TS1109: Expression expected.

    ../../../../tmp/tmpn_ngprca.ts(14,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpn_ngprca.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmpn_ngprca.ts(15,7): error TS1109: Expression expected.

    ../../../../tmp/tmpn_ngprca.ts(16,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpn_ngprca.ts(16,11): error TS1228: A type predicate is only
    allowed in return type position for functions and methods.

    ../../../../tmp/tmpn_ngprca.ts(16,14): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpn_ngprca.ts(16,39): error TS1003: Identifier expected.

    ../../../../tmp/tmpn_ngprca.ts(16,68): error TS1005: '';'' expected.

    ../../../../tmp/tmpn_ngprca.ts(16,76): error TS1443: Module declaration names
    may only use '' or " quoted strings.

    ../../.'
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result = [];\n    for (let i =\
    \ 0; i < l1.length; i++) {\n        for (let j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \       }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp_o43bm6l.js:16:12)\n    at Object.<anonymous> (/tmp/tmp_o43bm6l.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5, 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const result = [];\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpfn02r9jc.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfn02r9jc.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332846
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        if (l2.indexOf(l1[i]) === -1) {\n        \
    \    result.push(l1[i]);\n        }\n    }\n    return result;\n}\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpotz2ovn6.js:14:12)\n    at Object.<anonymous> (/tmp/tmpotz2ovn6.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const result: number[] = [];\n    const\
    \ hashMap = new Map<number, number>();\n    l1.forEach((item) => {\n        if\
    \ (hashMap.has(item)) {\n            return;\n        }\n        hashMap.set(item,\
    \ 1);\n    });\n    l2.forEach((item) => {\n        if (hashMap.has(item)) {\n\
    \            return;\n        }\n        hashMap.set(item, 1);\n    });\n    hashMap.forEach((value,\
    \ key) => {\n        if (value === 1) {\n            result.push(key);\n     \
    \   }\n    });\n    return result;\n}\n</code>\n<|/ a tags=arrays,algorithm,javascript,sorting\
    \ |>\n<| a tags=arrays,algorithm,javascript,sorting |>\n<code>\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp4kbq292o.ts(24,2): error TS1110: Type expected.

    ../../../../tmp/tmp4kbq292o.ts(24,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp4kbq292o.ts(25,2): error TS1109: Expression expected.

    ../../../../tmp/tmp4kbq292o.ts(25,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp4kbq292o.ts(26,2): error TS1109: Expression expected.

    ../../../../tmp/tmp4kbq292o.ts(26,6): error TS1005: '';'' expected.

    ../../../../tmp/tmp4kbq292o.ts(26,48): error TS1109: Expression expected.

    ../../../../tmp/tmp4kbq292o.ts(28,9): error TS1005: '';'' expected.

    '
  timestamp: 1660332849
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        const found: boolean = false;\n \
    \       for (let j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j])\
    \ {\n                found = true;\n                break;\n            }\n  \
    \      }\n        if (!found) {\n            result.push(l1[i]);\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpjbn6e41n.ts(8,17): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with the input\
    \ `[1,2,3,4,5]` and `[2,4,6,8,10]`.\n<|/ c |>\n<| c |>\nI see what you mean. I've\
    \ updated my answer to include a more efficient solution.\n<|/ c |>\n<| c |>\n\
    This still doesn't work. Try it with the input `[1,2,3,4,5]` and `[2,4,6,8,10]`.\n\
    <|/ c |>\n<| c |>\nI see what you mean. I've updated my answer to include a more\
    \ efficient solution.\n<|/ c |>\n<| c |>\nThis still doesn't work. Try it with\
    \ the input `[1,2,3,4,5]` and `[2,4,6,8,10]`.\n<|/ c |>\n<| a tags=javascript,arrays\
    \ |>\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpy6wdbuii.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmpy6wdbuii.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpy6wdbuii.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmpy6wdbuii.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpy6wdbuii.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmpy6wdbuii.ts(16,7): error TS1109: Expression expected.

    ../../../../tmp/tmpy6wdbuii.ts(17,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpy6wdbuii.ts(17,6): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpy6wdbuii.ts(17,75): error TS1002: Unterminated string literal.

    ../../../../tmp/tmpy6wdbuii.ts(18,2): error TS1109: Expression expected.

    ../../../../tmp/tmpy6wdbuii.ts(18,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpy6wdbuii.ts(19,2): error TS1109: Expression expected.

    ../../../../tmp/tmpy6wdbuii.ts(19,7): error TS1109: Expression expected.

    ../../../../tmp/tmpy6wdbuii.ts(20,3): error TS1005: '';'' expected.

    ../../../../tmp/tmpy6wdbuii.ts(20,7): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpy6wdbuii.ts(20,12): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpy6wdbuii.ts(20,23): error TS1005: '';'' expected.

    ../../../../tmp/tmpy6wdbuii.ts(20,82): error TS1002: Unterminated string literal.

    ../../../../tmp/tmpy6wdbuii.ts(21,2): error TS1109: Expression expected.

    ../../../../tmp/tmpy6wdbuii.ts(21,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpy6wdbuii.ts(22,2): error TS1109: Expression expected.

    ../../../../tmp/tmpy6wdbuii.ts(22,7): error TS1109: Expression expected.

    ../../../../tmp/tmpy6wdbuii.ts(23,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpy6wdbuii.ts(23,12): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpy6wdbuii.ts(23,81): error TS1002: Unterminated string literal.

    ../../../../tmp/tmpy6wdbuii.ts(24,2): error TS1109: Expression expected.

    ../../../../tmp/tmpy6w'
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpijykkogl.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpijykkogl.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=arrays,javascript,algorithm |>\n<| a tags=arrays,javascript,algorithm\
    \ |>\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpjl7zh28n.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmpjl7zh28n.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpjl7zh28n.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmpjl7zh28n.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpjl7zh28n.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmpjl7zh28n.ts(16,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpjl7zh28n.ts(16,40): error TS1109: Expression expected.

    ../../../../tmp/tmpjl7zh28n.ts(18,9): error TS1005: '';'' expected.

    '
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const result: number[] = [];\n    const\
    \ map = new Map();\n    l1.forEach((item) => {\n        if (!map.has(item)) {\n\
    \            map.set(item, true);\n            result.push(item);\n        }\n\
    \    });\n    l2.forEach((item) => {\n        if (!map.has(item)) {\n        \
    \    map.set(item, true);\n            result.push(item);\n        }\n    });\n\
    \    return result.sort();\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27859423)\n\
    <|/ c |>\n<| c |>\nThis does provide an answer to the question. He asked how to\
    \ find the common elements in two arrays. I provided a solution that does exactly\
    \ that. He didn't ask for an algorithm to find the common elements. He asked for\
    \ help with his code. He provided a solution that does exactly that. He didn't\
    \ ask for an algorithm to find the common elements. He asked for help with his\
    \ code. He provided a solution that does exactly that. He didn't ask for an algorithm\
    \ to find the common elements. He asked for help with his code. He provided a\
    \ solution that does exactly that. He didn't ask for an algorithm to find the\
    \ common elements. He asked for help with his code. He provided a solution that\
    \ does exactly that. He didn't ask for an algorithm to find the common elements.\
    \ He asked for help with his code. He provided a solution that does exactly that.\
    \ He didn't ask for an algorithm to find the common elements.\n<|/ c |>\n<| c\
    \ |>\nHe asked for help with his code. He provided a solution that does exactly\
    \ that. He didn't ask for an algorithm to find the common elements. He asked for\
    \ help with his code. He provided a solution that does exactly that. He didn't\
    \ ask for an algorithm to find the common elements. He asked for help with his\
    \ code. He provided a solution that does exactly that. He didn't ask for an algorithm\
    \ to find the common elements. He asked for help with his code. He provided a\
    \ solution that does exactly that. He didn't ask for an algorithm to find the\
    \ common elements. He asked for help with his code. He provided a solution that\
    \ does exactly that. He didn't ask for an \ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpznki3zr_.ts(19,2): error TS1110: Type expected.

    ../../../../tmp/tmpznki3zr_.ts(19,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpznki3zr_.ts(20,2): error TS1109: Expression expected.

    ../../../../tmp/tmpznki3zr_.ts(20,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpznki3zr_.ts(21,2): error TS1109: Expression expected.

    ../../../../tmp/tmpznki3zr_.ts(21,7): error TS1109: Expression expected.

    ../../../../tmp/tmpznki3zr_.ts(22,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpznki3zr_.ts(22,11): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpznki3zr_.ts(22,15): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpznki3zr_.ts(22,23): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpznki3zr_.ts(22,26): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpznki3zr_.ts(22,33): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpznki3zr_.ts(22,36): error TS1434'
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const result = [];\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpfn02r9jc.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfn02r9jc.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332846
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var i: number;\n    var j: number;\n\
    \    var result: number[] = [];\n    for (i = 0; i < l1.length; i++) {\n     \
    \   for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n  \
    \              result.push(l1[i]);\n                break;\n            }\n  \
    \      }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmppcjy0567.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmppcjy0567.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l: number[] = [];\n    let i: number;\n\
    \    let j: number;\n    let k: number;\n    let l1: number;\n    let l2: number;\n\
    \    let max: number;\n    let min: number;\n    let temp: number;\n    let commonCount:\
    \ number;\n    let commonElements: number[] = [];\n    let commonLength: number;\n\
    \    let commonMax: number;\n    let commonMin: number;\n    let commonSum: number;\n\
    \    let commonProduct: number;\n    let commonProductMax: number;\n    let commonProductMin:\
    \ number;\n    let commonProductSum: number;\n    let commonProductSumMax: number;\n\
    \    let commonProductSumMin: number;\n    let commonProductSumSum: number;\n\
    \    let commonProductSumSumMax: number;\n    let commonProductSumSumMin: number;\n\
    \    let commonProductSumSumSum: number;\n    let commonProductSumSumSumMax: number;\n\
    \    let commonProductSumSumSumMin: number;\n    let commonProductSumSumSumSum:\
    \ number;\n    let commonProductSumSumSumSumMax: number;\n    let commonProductSumSumSumSumMin:\
    \ number;\n    let commonProductSumSumSumSumSum: number;\n    let commonProductSumSumSumSumSumMax:\
    \ number;\n    let commonProductSumSumSumSumSumMin: number;\n    let commonProductSumSumSumSumSumSum:\
    \ number;\n    let commonProductSumSumSumSumSumSumMax: number;\n    let commonProductSumSumSumSumSumSumMin:\
    \ number;\n    let commonProductSumSumSumSumSumSumSum: number;\n    let commonProductSumSumSumSumSumSumSumMax:\
    \ number;\n    let commonProductSumSumSumSumSumSumSumMin: number;\n    let commonProductSumSumSumSumSumSumSumSum:\
    \ number;\n    let commonProductSumSumSumSumSumSumSumSumMax: number;\n    let\
    \ commonProductSumSumSumSumSumSumSumSumMin: number;\n    let commonProductSumSumSumSumSumSumSumSum:\
    \ number;\n    let commonProductSumSumSumSumSumSumSumSumMax: number;\n    let\
    \ commonProductSumSumSumSumSumSumSumSumMin: number;\n    let commonProductSumSumSumSumSumSumSumSumSum:\
    \ number;\n    let commonProductSumSumSumSumSumSumSumSumSumMax: number;\n    let\
    \ commonProductSumSumSumSumSumSumSumSumSumMin: number;\n    let commonProductSumSumSumSumSumSumSumSumSum:\
    \ number;\n    let commonProductSumSumSumSumSumSumSumSumSumMax: number;\n    let\
    \ commonProductSumSumSumSumSumSumSumSumSumMin: number;\n    let commonProductSumSumSumSumSumSumSumSumSumSum:\
    \ number;\n    let commonProductSumSumSumSumSumSumSumSumSumSumMax: number;\n \
    \   let commonProductSumSumSumSumSumSumSumSumSumSumMin: number;\n    let \ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9_3ax2c5.ts(58,9): error TS1005: '','' expected.

    ../../../../tmp/tmp9_3ax2c5.ts(70,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let l: number[] = [];\n  let i: number;\n\
    \  let j: number;\n  let k: number;\n  for (i = 0; i < l1.length; i++) {\n   \
    \ for (j = 0; j < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        l.push(l1[i]);\n\
    \      }\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp93p1_n8q.js:19:12)\n    at Object.<anonymous> (/tmp/tmp93p1_n8q.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5, 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work. Try it with `[1,2,3]`\
    \ and `[2,3,4]`.\n<|/ c |>\n<| c |>\nI see what you mean. I've updated the answer\
    \ to include a more robust solution.\n<|/ c |>\n<| c |>\nThis doesn't work. Try\
    \ it with `[1,2,3]` and `[2,3,4]`.\n<|/ c |>\n<| c |>\nI see what you mean. I've\
    \ updated the answer to include a more robust solution.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work. Try it with `[1,2,3]` and `[2,3,4]`.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpfza52nym.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmpfza52nym.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpfza52nym.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmpfza52nym.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpfza52nym.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmpfza52nym.ts(16,7): error TS1109: Expression expected.

    ../../../../tmp/tmpfza52nym.ts(17,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpfza52nym.ts(17,6): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpfza52nym.ts(17,56): error TS1002: Unterminated string literal.

    ../../../../tmp/tmpfza52nym.ts(18,2): error TS1109: Expression expected.

    ../../../../tmp/tmpfza52nym.ts(18,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpfza52nym.ts(19,2): error TS1109: Expression expected.

    ../../../../tmp/tmpfza52nym.ts(19,7): error TS1109: Expression expected.

    ../../'
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let l: number[] = [];\n  for (let i =\
    \ 0; i < l1.length; i++) {\n    for (let j = 0; j < l2.length; j++) {\n      if\
    \ (l1[i] === l2[j]) {\n        l.push(l1[i]);\n      }\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpj3mvt8k3.js:16:12)\n    at Object.<anonymous> (/tmp/tmpj3mvt8k3.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5, 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result = [];\n  for (let i = 0; i\
    \ < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp773bvmnp.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmp773bvmnp.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    for (let j = 0; j < l2.length; j++) {\n  \
    \    if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpsogmg7xa.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpsogmg7xa.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=arrays,javascript,sorting |>\n<code>\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpkd0fi837.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmpkd0fi837.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpkd0fi837.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmpkd0fi837.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpkd0fi837.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmpkd0fi837.ts(16,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpkd0fi837.ts(16,38): error TS1109: Expression expected.

    ../../../../tmp/tmpkd0fi837.ts(18,9): error TS1005: '';'' expected.

    '
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var i: number;\n    var j: number;\n\
    \    var k: number;\n    var l: number[];\n    var m: number[];\n    var n: number[];\n\
    \    var o: number[];\n    var p: number[];\n    var q: number[];\n    var s:\
    \ number[];\n    var t: number[];\n    var u: number[];\n    var v: number[];\n\
    \    var w: number[];\n    var x: number[];\n    var y: number[];\n    var z:\
    \ number[];\n    var a: number[];\n    var b: number[];\n    var c: number[];\n\
    \    var d: number[];\n    var e: number[];\n    var f: number[];\n    var g:\
    \ number[];\n    var h: number[];\n    var i: number[];\n    var j: number[];\n\
    \    var k: number[];\n    var l: number[];\n    var m: number[];\n    var n:\
    \ number[];\n    var o: number[];\n    var p: number[];\n    var q: number[];\n\
    \    var s: number[];\n    var t: number[];\n    var u: number[];\n    var v:\
    \ number[];\n    var w: number[];\n    var x: number[];\n    var y: number[];\n\
    \    var z: number[];\n    var a: number[];\n    var b: number[];\n    var c:\
    \ number[];\n    var d: number[];\n    var e: number[];\n    var f: number[];\n\
    \    var g: number[];\n    var h: number[];\n    var i: number[];\n    var j:\
    \ number[];\n    var k: number[];\n    var l: number[];\n    var m: number[];\n\
    \    var n: number[];\n    var o: number[];\n    var p: number[];\n    var q:\
    \ number[];\n    var s: number[];\n    var t: number[];\n    var u: number[];\n\
    \    var v: number[];\n    var w: number[];\n    var x: number[];\n    var y:\
    \ number[];\n    var z: number[];\n    var a: number[];\n    var b: number[];\n\
    \    var c: number[];\n    var d: number[];\n    var e: number[];\n    var f:\
    \ number[];\n    var g: number[];\n    var h: number[];\n    var i: number[];\n\
    \    var j: number[];\n    var k: number[];\n    var l: number[];\n    var m:\
    \ number[];\n    var n: number[];\n    var o: number[];\n    var p: number[];\n\
    \    var q: number[];\n    var s: number[];\n    var t: number[];\n    var u:\
    \ number[];\n    var v: number[];\n    var w: number[];\n    var x: number[];\n\
    \    var y: number[];\n    var z: number[];\n    var a: number[];\n    var b:\
    \ number[];\n    var c: number[];\n    var d: number[];\n    var e: number[];\n\
    \    var f: number\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpw73_i4fm.ts(113,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        if (l2.indexOf(l1[i]) != -1) {\n         \
    \   result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpf9hl_w7e.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf9hl_w7e.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const result = [];\n  for (let i = 0;\
    \ i < Math.min(l1.length, l2.length); i++) {\n    if (l1[i] === l2[i]) {\n   \
    \   result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpuuwg75m4.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuuwg75m4.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const result = [];\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpfn02r9jc.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfn02r9jc.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332846
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  let j =\
    \ 0;\n  for (let i = 0; i < l1.length; i++) {\n    while (j < l2.length && l2[j]\
    \ === l1[i]) {\n      j++;\n    }\n    if (j === l2.length) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp7kr5pqeb.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7kr5pqeb.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332850
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const result = [];\n    let i = 0;\n\
    \    let j = 0;\n    while (i < l1.length && j < l2.length) {\n        if (l1[i]\
    \ === l2[j]) {\n            result.push(l1[i]);\n            i++;\n          \
    \  j++;\n        } else if (l1[i] > l2[j]) {\n            result.push(l1[i]);\n\
    \            i++;\n        } else {\n            result.push(l2[j]);\n       \
    \     j++;\n        }\n    }\n    while (i < l1.length) {\n        result.push(l1[i]);\n\
    \        i++;\n    }\n    while (j < l2.length) {\n        result.push(l2[j]);\n\
    \        j++;\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  7,\n\
    \  1,\n  5,\n  9,\n  653,\n  121,\n  4,\n  3,\n  34,\n  653,\n  2,\n  5\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbafpa_lx.js:34:12)\n\
    \    at Object.<anonymous> (/tmp/tmpbafpa_lx.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      5,\
    \ 7, 1,  5,   9, 653,\n    121, 4, 3, 34, 653,   2,\n      5\n  ],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp09sc8qy4.js:14:12)\n    at Object.<anonymous> (/tmp/tmp09sc8qy4.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l: number[] = [];\n    for (let\
    \ i = 0; i < l1.length; i++) {\n        if (l2.indexOf(l1[i]) === -1) {\n    \
    \        l.push(l1[i]);\n        }\n    }\n    return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpbkwuccow.js:14:12)\n    at Object.<anonymous> (/tmp/tmpbkwuccow.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var i: number;\n    var j: number;\n\
    \    var result: number[] = [];\n    for (i = 0; i < l1.length; i++) {\n     \
    \   for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n  \
    \              result.push(l1[i]);\n                break;\n            }\n  \
    \      }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmppcjy0567.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmppcjy0567.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  var result: number[] = [];\n  var i:\
    \ number;\n  var j: number;\n  for (i = 0; i < l1.length; i++) {\n    for (j =\
    \ 0; j < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpyrfyeeqd.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyrfyeeqd.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332851
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l: number[] = [];\n    for (let\
    \ i = 0; i < l1.length; i++) {\n        if (l2.indexOf(l1[i]) === -1) {\n    \
    \        l.push(l1[i]);\n        }\n    }\n    return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpbkwuccow.js:14:12)\n    at Object.<anonymous> (/tmp/tmpbkwuccow.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const result = [];\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpi132cjgx.js:14:12)\n    at Object.<anonymous> (/tmp/tmpi132cjgx.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332852
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const result = [];\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpi132cjgx.js:14:12)\n    at Object.<anonymous> (/tmp/tmpi132cjgx.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332852
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l: number[] = [];\n    for (let\
    \ i = 0; i < l1.length; i++) {\n        if (l2.indexOf(l1[i]) === -1) {\n    \
    \        l.push(l1[i]);\n        }\n    }\n    return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpbkwuccow.js:14:12)\n    at Object.<anonymous> (/tmp/tmpbkwuccow.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  var result: number[] = [];\n  for (var\
    \ i = 0; i < l1.length; i++) {\n    for (var j = 0; j < l2.length; j++) {\n  \
    \    if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpz_c2n9mz.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpz_c2n9mz.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l1.indexOf(l2[i]) === -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpjp_0gwio.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjp_0gwio.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332852
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let l: number[] = [];\n  for (let i =\
    \ 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmprlti_2ig.js:14:12)\n    at Object.<anonymous> (/tmp/tmprlti_2ig.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result = [];\n    for (let i =\
    \ 0; i < l1.length; i++) {\n        for (let j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp_5otspn1.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_5otspn1.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332852
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    var\
    \ i: number;\n    var j: number;\n    for (i = 0; i < l1.length; i++) {\n    \
    \    for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n \
    \               result.push(l1[i]);\n                break;\n            }\n \
    \       }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    Thanks for your answer. Your solution is very close to mine, but I cannot use\
    \ any library functions. I edited my question to clarify this.\n<|/ c |>\n<| c\
    \ |>\nI edited my answer to include a solution that does not use any library functions.\
    \ I hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. Your solution is\
    \ very close to mine, but I cannot use any library functions. I edited my question\
    \ to clarify this.\n<|/ c |>\n<| c |>\nI edited my answer to include a solution\
    \ that does not use any library functions. I hope it helps.\n<|/ c |>\n<| a |>\n\
    I finally found a solution that does not use any library functions. I hope it\
    \ helps someone.\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi0k4awr0.ts(16,2): error TS1110: Type expected.

    ../../../../tmp/tmpi0k4awr0.ts(16,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpi0k4awr0.ts(17,2): error TS1109: Expression expected.

    ../../../../tmp/tmpi0k4awr0.ts(17,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpi0k4awr0.ts(18,2): error TS1109: Expression expected.

    ../../../../tmp/tmpi0k4awr0.ts(18,7): error TS1109: Expression expected.

    ../../../../tmp/tmpi0k4awr0.ts(19,8): error TS1005: '';'' expected.

    ../../../../tmp/tmpi0k4awr0.ts(19,12): error TS1005: ''('' expected.

    ../../../../tmp/tmpi0k4awr0.ts(19,17): error TS1005: '';'' expected.

    ../../../../tmp/tmpi0k4awr0.ts(19,30): error TS1005: '';'' expected.

    ../../../../tmp/tmpi0k4awr0.ts(19,39): error TS1005: '')'' expected.

    ../../../../tmp/tmpi0k4awr0.ts(19,42): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpi0k4awr0.ts(19,47): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpi0k4awr0.ts(19,53): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpi0k4awr0.ts(19,66): error TS1005: '';'' expected.

    ../../../../tmp/tmpi0k4awr0.ts(19,68): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpi0k4awr0.ts(19,75): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpi0k4awr0.ts(19,79): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpi0k4awr0.ts(19,83): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpi0k4awr0.ts(19,104): error TS1005: '';'' expected.

    ../../../../tmp/tmpi0k4awr0.ts(19,111): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpi0k4awr0.ts(19,114): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpi0k4awr0.ts(19,123): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpi0k4awr0.ts(19,126): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpi0k4awr0.ts(20,1): error TS1003: Identifier expected.

    ../../../../tmp/tmpi0k4awr0.ts(20,2): error TS1109: Expression expected.

    '
  timestamp: 1660332852
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  var result: number[] = [];\n  for (var\
    \ i = 0; i < l1.length; i++) {\n    for (var j = 0; j < l2.length; j++) {\n  \
    \    if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpz_c2n9mz.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpz_c2n9mz.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  var result = [];\n  for (var i = 0; i\
    \ < l1.length; i++) {\n    for (var j = 0; j < l2.length; j++) {\n      if (l1[i]\
    \ === l2[j]) {\n        result.push(l1[i]);\n        break;\n      }\n    }\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpii5mm62q.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpii5mm62q.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    var\
    \ i: number;\n    var j: number;\n    for (i = 0; i < l1.length; i++) {\n    \
    \    for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n \
    \               result.push(l1[i]);\n                break;\n            }\n \
    \       }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8lwwuwad.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8lwwuwad.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    let found = false;\n    for (let j = 0; j\
    \ < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        found = true;\n \
    \       break;\n      }\n    }\n    if (!found) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpu9ebi8_i.js:21:12)\n    at Object.<anonymous> (/tmp/tmpu9ebi8_i.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpa68pfwz1.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa68pfwz1.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332852
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const result = [];\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpfn02r9jc.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfn02r9jc.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332846
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l1.indexOf(l2[i]) === -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpjp_0gwio.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjp_0gwio.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332852
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  let lLen\
    \ = l1.length;\n  let ljLen = l2.length;\n  for (let i = 0; i < lLen; i++) {\n\
    \    for (let j = 0; j < ljLen; j++) {\n      if (l1[i] === l2[j]) {\n       \
    \ result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpo9gm2j09.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmpo9gm2j09.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    let\
    \ lLen = l1.length;\n    let ljLen = l2.length;\n    let i = 0;\n    let j = 0;\n\
    \    while (i < lLen && j < ljLen) {\n        if (l1[i] === l2[j]) {\n       \
    \     result.push(l1[i]);\n            i++;\n            j++;\n        } else\
    \ if (l1[i] < l2[j]) {\n            i++;\n        } else {\n            j++;\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8styjirc.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8styjirc.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp09sc8qy4.js:14:12)\n    at Object.<anonymous> (/tmp/tmp09sc8qy4.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const result = [];\n    const hash1\
    \ = new Set();\n    const hash2 = new Set();\n    l1.forEach((item) => {\n   \
    \     hash1.add(item);\n    });\n    l2.forEach((item) => {\n        hash2.add(item);\n\
    \    });\n    hash1.forEach((item) => {\n        if (hash2.has(item)) {\n    \
    \        result.push(item);\n        }\n    });\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmponbvzlgu.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmponbvzlgu.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332852
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const result = [];\n    const hashMap\
    \ = new Map();\n    l1.forEach((item) => {\n        if (!hashMap.has(item)) {\n\
    \            hashMap.set(item, true);\n            result.push(item);\n      \
    \  }\n    });\n    l2.forEach((item) => {\n        if (!hashMap.has(item)) {\n\
    \            hashMap.set(item, true);\n            result.push(item);\n      \
    \  }\n    });\n    return result;\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5,\n  7,\n  9,\n  121\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp0zva9t35.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0zva9t35.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3, 34, 653,\n    2, 5, 7,  9, 121\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332852
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l1.indexOf(l2[i]) === -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpjp_0gwio.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjp_0gwio.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332852
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const result = [];\n    const hash1\
    \ = new Set();\n    const hash2 = new Set();\n    l1.forEach((item) => {\n   \
    \     hash1.add(item);\n    });\n    l2.forEach((item) => {\n        hash2.add(item);\n\
    \    });\n    hash1.forEach((item) => {\n        if (!hash2.has(item)) {\n   \
    \         result.push(item);\n        }\n    });\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpfjbfe76y.js:22:12)\n    at Object.<anonymous> (/tmp/tmpfjbfe76y.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpns9r110f.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpns9r110f.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332853
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        const found: boolean = false;\n \
    \       for (let j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j])\
    \ {\n                found = true;\n                break;\n            }\n  \
    \      }\n        if (!found) {\n            result.push(l1[i]);\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=arrays,algorithm,sorting,javascript\
    \ |>\n<| c |>\nThis doesn't work if there are duplicate numbers in both lists.\n\
    <|/ c |>\n<| c |>\nYes, it does. I tested it and it works. I added a test case\
    \ to my answer.\n<|/ c |>\n<| c |>\nThis doesn't work if there are duplicate numbers\
    \ in both lists.\n<|/ c |>\n<| c |>\nI added a test case to my answer. Do you\
    \ see a case where it fails?\n<|/ c |>\n<| c |>\nYes, I see a case where it fails.\
    \ Try it with this array: `[1, 1, 2, 2, 3, 3]`\n<|/ c |>\n<| a tags=arrays,algorithm,sorting,javascript\
    \ |>\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpwley98v8.ts(18,2): error TS1110: Type expected.

    ../../../../tmp/tmpwley98v8.ts(18,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpwley98v8.ts(19,2): error TS1109: Expression expected.

    ../../../../tmp/tmpwley98v8.ts(19,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpwley98v8.ts(20,2): error TS1109: Expression expected.

    ../../../../tmp/tmpwley98v8.ts(20,7): error TS1109: Expression expected.

    ../../../../tmp/tmpwley98v8.ts(21,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpwley98v8.ts(21,6): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpwley98v8.ts(21,64): error TS1002: Unterminated string literal.

    ../../../../tmp/tmpwley98v8.ts(22,2): error TS1109: Expression expected.

    ../../../../tmp/tmpwley98v8.ts(22,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpwley98v8.ts(23,2): error TS1109: Expression expected.

    ../../../../tmp/tmpwley98v8.ts(23,7): error TS1109: Expression expected.

    ../../'
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const l: number[] = [];\n  for (let i\
    \ = 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpn1ue3nxu.js:14:12)\n    at Object.<anonymous> (/tmp/tmpn1ue3nxu.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let l: number[] = [];\n  for (let i =\
    \ 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmprlti_2ig.js:14:12)\n    at Object.<anonymous> (/tmp/tmprlti_2ig.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    let found = false;\n    for (let j = 0; j\
    \ < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        found = true;\n \
    \       break;\n      }\n    }\n    if (!found) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpu9ebi8_i.js:21:12)\n    at Object.<anonymous> (/tmp/tmpu9ebi8_i.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  var result: number[] = [];\n  for (var\
    \ i = 0; i < l1.length; i++) {\n    for (var j = 0; j < l2.length; j++) {\n  \
    \    if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpz_c2n9mz.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpz_c2n9mz.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    let\
    \ lLen = l1.length;\n    let ljLen = l2.length;\n    let i = 0;\n    let j = 0;\n\
    \    while (i < lLen && j < ljLen) {\n        if (l1[i] === l2[j]) {\n       \
    \     result.push(l1[i]);\n            i++;\n            j++;\n        } else\
    \ if (l1[i] < l2[j]) {\n            i++;\n        } else {\n            j++;\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8styjirc.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8styjirc.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp09sc8qy4.js:14:12)\n    at Object.<anonymous> (/tmp/tmp09sc8qy4.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    for (let j = 0; j < l2.length; j++) {\n  \
    \    if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpsogmg7xa.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpsogmg7xa.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var i: number;\n    var j: number;\n\
    \    var result: number[] = [];\n    for (i = 0; i < l1.length; i++) {\n     \
    \   for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n  \
    \              result.push(l1[i]);\n                break;\n            }\n  \
    \      }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmppcjy0567.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmppcjy0567.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let l: number[] = [];\n  for (let i =\
    \ 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmprlti_2ig.js:14:12)\n    at Object.<anonymous> (/tmp/tmprlti_2ig.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    var\
    \ i: number;\n    var j: number;\n    for (i = 0; i < l1.length; i++) {\n    \
    \    for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n \
    \               result.push(l1[i]);\n                break;\n            }\n \
    \       }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8lwwuwad.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8lwwuwad.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const result = [];\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpfn02r9jc.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfn02r9jc.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332846
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var i: number;\n    var j: number;\n\
    \    var k: number;\n    var l: number[];\n    var m: number[];\n    var n: number[];\n\
    \    var o: number[];\n    var p: number[];\n    var q: number[];\n    var s:\
    \ number[];\n    var t: number[];\n    var u: number[];\n    var v: number[];\n\
    \    var w: number[];\n    var x: number[];\n    var y: number[];\n    var z:\
    \ number[];\n    var a: number[];\n    var b: number[];\n    var c: number[];\n\
    \    var d: number[];\n    var e: number[];\n    var f: number[];\n    var g:\
    \ number[];\n    var h: number[];\n    var i: number[];\n    var j: number[];\n\
    \    var k: number[];\n    var l: number[];\n    var m: number[];\n    var n:\
    \ number[];\n    var o: number[];\n    var p: number[];\n    var q: number[];\n\
    \    var s: number[];\n    var t: number[];\n    var u: number[];\n    var v:\
    \ number[];\n    var w: number[];\n    var x: number[];\n    var y: number[];\n\
    \    var z: number[];\n    var a: number[];\n    var b: number[];\n    var c:\
    \ number[];\n    var d: number[];\n    var e: number[];\n    var f: number[];\n\
    \    var g: number[];\n    var h: number[];\n    var i: number[];\n    var j:\
    \ number[];\n    var k: number[];\n    var l: number[];\n    var m: number[];\n\
    \    var n: number[];\n    var o: number[];\n    var p: number[];\n    var q:\
    \ number[];\n    var s: number[];\n    var t: number[];\n    var u: number[];\n\
    \    var v: number[];\n    var w: number[];\n    var x: number[];\n    var y:\
    \ number[];\n    var z: number[];\n    var a: number[];\n    var b: number[];\n\
    \    var c: number[];\n    var d: number[];\n    var e: number[];\n    var f:\
    \ number[];\n    var g: number[];\n    var h: number[];\n    var i: number[];\n\
    \    var j: number[];\n    var k: number[];\n    var l: number[];\n    var m:\
    \ number[];\n    var n: number[];\n    var o: number[];\n    var p: number[];\n\
    \    var q: number[];\n    var s: number[];\n    var t: number[];\n    var u:\
    \ number[];\n    var v: number[];\n    var w: number[];\n    var x: number[];\n\
    \    var y: number[];\n    var z: number[];\n    var a: number[];\n    var b:\
    \ number[];\n    var c: number[];\n    var d: number[];\n    var e: number[];\n\
    \    var f: number\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpw73_i4fm.ts(113,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332849
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result = [];\n    let lLen = l1.length;\n\
    \    let ljLen = l2.length;\n    let i = 0;\n    let j = 0;\n    while (i < lLen\
    \ && j < ljLen) {\n        if (l1[i] === l2[j]) {\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        } else if (l1[i] < l2[j]) {\n   \
    \         i++;\n        } else {\n            j++;\n        }\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=arrays,javascript,sorting |>\n<| c |>\nThis\
    \ doesn't work. Try it with `[2,3,1]` and `[2,1,3]`.\n<|/ c |>\n<| c |>\nYes,\
    \ it does. Try it with `[2,3,1]` and `[2,1,3]`.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work. Try it with `[2,3,1]` and `[2,1,3]`.\n<|/ c |>\n<| c |>\nIt does. Try\
    \ it with `[2,3,1]` and `[2,1,3]`.\n<|/ c |>\n<| c |>\nIt does. Try it with `[2,3,1]`\
    \ and `[2,1,3]`.\n<|/ c |>\n<| a |>\n<code>\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpnnsj53gk.ts(21,2): error TS1110: Type expected.

    ../../../../tmp/tmpnnsj53gk.ts(21,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpnnsj53gk.ts(22,2): error TS1109: Expression expected.

    ../../../../tmp/tmpnnsj53gk.ts(22,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpnnsj53gk.ts(23,2): error TS1109: Expression expected.

    ../../../../tmp/tmpnnsj53gk.ts(23,7): error TS1109: Expression expected.

    ../../../../tmp/tmpnnsj53gk.ts(24,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpnnsj53gk.ts(24,6): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpnnsj53gk.ts(24,56): error TS1002: Unterminated string literal.

    ../../../../tmp/tmpnnsj53gk.ts(25,2): error TS1109: Expression expected.

    ../../../../tmp/tmpnnsj53gk.ts(25,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpnnsj53gk.ts(26,2): error TS1109: Expression expected.

    ../../../../tmp/tmpnnsj53gk.ts(26,7): error TS1109: Expression expected.

    ../../'
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let l: number[] = [];\n  let i: number;\n\
    \  let j: number;\n  let k: number;\n  for (i = 0; i < l1.length; i++) {\n   \
    \ for (j = 0; j < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        l.push(l1[i]);\n\
    \      }\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp93p1_n8q.js:19:12)\n    at Object.<anonymous> (/tmp/tmp93p1_n8q.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5, 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=arrays,javascript,algorithm |>\n<| c |>\nThis doesn't work.\
    \ Try it with `[1,2,3,4,5,6,7,8,9,10]` and `[1,2,3,4,5,6,7,8,9,10,11]`\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work. Try it with `[1,2,3,4,5,6,7,8,9,10]` and `[1,2,3,4,5,6,7,8,9,10,11]`\n\
    <|/ c |>\n<| c |>\nThis doesn't work. Try it with `[1,2,3,4,5,6,7,8,9,10]` and\
    \ `[1,2,3,4,5,6,7,8,9,10,11]`\n<|/ c |>\n<| c |>\nThis doesn't work. Try it with\
    \ `[1,2,3,4,5,6,7,8,9,10]` and `[1,2,3,4,5,6,7,8,9,10,11]`\n<|/ c |>\n<| c |>\n\
    This doesn't work. Try it with `[1,2,3,4,5,6,7,8,9,10]` and `[1,2,3,4,5,6,7,8,9,10,11]`\n\
    <|/ c |>\n<| a dscore=5 tags=arrays,javascript,algorithm |>\n<code>\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp65yxkrnd.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmp65yxkrnd.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp65yxkrnd.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmp65yxkrnd.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp65yxkrnd.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmp65yxkrnd.ts(16,7): error TS1109: Expression expected.

    ../../../../tmp/tmp65yxkrnd.ts(17,6): error TS1005: '';'' expected.

    ../../../../tmp/tmp65yxkrnd.ts(17,6): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp65yxkrnd.ts(17,88): error TS1002: Unterminated string literal.

    ../../../../tmp/tmp65yxkrnd.ts(18,2): error TS1109: Expression expected.

    ../../../../tmp/tmp65yxkrnd.ts(18,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp65yxkrnd.ts(19,2): error TS1109: Expression expected.

    ../../../../tmp/tmp65yxkrnd.ts(19,7): error TS1109: Expression expected.

    ../../'
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let l: number[] = [];\n  for (let i =\
    \ 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmprlti_2ig.js:14:12)\n    at Object.<anonymous> (/tmp/tmprlti_2ig.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  let lLen\
    \ = l1.length;\n  let rLen = l2.length;\n  for (let i = 0; i < lLen; i++) {\n\
    \    for (let j = 0; j < rLen; j++) {\n      if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpkz_5tfit.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmpkz_5tfit.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    let\
    \ hashMap = new Map<number, boolean>();\n    for (let i = 0; i < l1.length; i++)\
    \ {\n        let val = l1[i];\n        if (hashMap.has(val)) {\n            continue;\n\
    \        }\n        hashMap.set(val, true);\n        result.push(val);\n    }\n\
    \    for (let i = 0; i < l2.length; i++) {\n        let val = l2[i];\n       \
    \ if (hashMap.has(val)) {\n            continue;\n        }\n        hashMap.set(val,\
    \ true);\n        result.push(val);\n    }\n    return result;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=javascript,arrays |>\n<code>\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp6c3ner5w.ts(23,2): error TS1110: Type expected.

    ../../../../tmp/tmp6c3ner5w.ts(23,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp6c3ner5w.ts(24,2): error TS1109: Expression expected.

    ../../../../tmp/tmp6c3ner5w.ts(24,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp6c3ner5w.ts(25,2): error TS1109: Expression expected.

    ../../../../tmp/tmp6c3ner5w.ts(25,6): error TS1005: '';'' expected.

    ../../../../tmp/tmp6c3ner5w.ts(25,30): error TS1109: Expression expected.

    ../../../../tmp/tmp6c3ner5w.ts(27,9): error TS1005: '';'' expected.

    '
  timestamp: 1660332852
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var i: number;\n    var j: number;\n\
    \    var result: number[] = [];\n    for (i = 0; i < l1.length; i++) {\n     \
    \   for (j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n  \
    \              result.push(l1[i]);\n                break;\n            }\n  \
    \      }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmppcjy0567.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmppcjy0567.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  var result = [];\n  for (var i = 0; i\
    \ < l1.length; i++) {\n    for (var j = 0; j < l2.length; j++) {\n      if (l1[i]\
    \ === l2[j]) {\n        result.push(l1[i]);\n        break;\n      }\n    }\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpii5mm62q.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpii5mm62q.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpt9qmrkte.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmpt9qmrkte.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpt9qmrkte.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmpt9qmrkte.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpt9qmrkte.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmpt9qmrkte.ts(16,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpt9qmrkte.ts(16,16): error TS1109: Expression expected.

    ../../../../tmp/tmpt9qmrkte.ts(18,9): error TS1005: '';'' expected.

    '
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let l: number[] = [];\n  for (let i =\
    \ 0; i < l1.length; i++) {\n    for (let j = 0; j < l2.length; j++) {\n      if\
    \ (l1[i] === l2[j]) {\n        l.push(l1[i]);\n      }\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpj3mvt8k3.js:16:12)\n    at Object.<anonymous> (/tmp/tmpj3mvt8k3.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5, 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332849
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=arrays,javascript,typescript |>\n<| c |>\nThis\
    \ solution does not work for me. `common([1,2,3], [1,2,4])` returns `[1,2,3]`\
    \ instead of `[2,3]`\n<|/ c |>\n<| c |>\nIt works fine for me. `common([1,2,3],\
    \ [1,2,4])` returns `[2,3]`\n<|/ c |>\n<| c |>\nOh I see what happened. I was\
    \ using your `common` function but my array was `[1,2,3]` instead of `[1,2,3]`.\
    \ Sorry about that.\n<|/ c |>\n<| c |>\nNo worries, glad you figured it out!\n\
    <|/ c |>\n<| a tags=arrays,javascript,typescript |>\n<code>\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp0q3bd9n0.ts(18,2): error TS1110: Type expected.

    ../../../../tmp/tmp0q3bd9n0.ts(18,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp0q3bd9n0.ts(19,2): error TS1109: Expression expected.

    ../../../../tmp/tmp0q3bd9n0.ts(19,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmp0q3bd9n0.ts(20,2): error TS1109: Expression expected.

    ../../../../tmp/tmp0q3bd9n0.ts(20,7): error TS1109: Expression expected.

    ../../../../tmp/tmp0q3bd9n0.ts(21,6): error TS1005: '';'' expected.

    ../../../../tmp/tmp0q3bd9n0.ts(21,15): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp0q3bd9n0.ts(21,20): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp0q3bd9n0.ts(21,24): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmp0q3bd9n0.ts(21,33): error TS1005: ''('' expected.

    ../../../../tmp/tmp0q3bd9n0.ts(21,37): error TS1003: Identifier expected.

    ../../../../tmp/tmp0q3bd9n0.ts(21,64): error TS1005: '';'' expected.

    ../../../../tmp/t'
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  let i:\
    \ number;\n  let j: number;\n  for (i = 0; i < l1.length; i++) {\n    for (j =\
    \ 0; j < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpc6rqquyr.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmpc6rqquyr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  var result: number[] = [];\n  for (var\
    \ i = 0; i < l1.length; i++) {\n    for (var j = 0; j < l2.length; j++) {\n  \
    \    if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpz_c2n9mz.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpz_c2n9mz.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const result: number[] = [];\n  for (let\
    \ i = 0; i < Math.min(l1.length, l2.length); i++) {\n    if (l1[i] === l2[i])\
    \ {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmps8l9nja4.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmps8l9nja4.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l: number[] = [];\n    for (let\
    \ i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let j\
    \ = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n           \
    \     found = true;\n                break;\n            }\n        }\n      \
    \  if (!found) {\n            l.push(l1[i]);\n        }\n    }\n    return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpxjyn6lzq.js:21:12)\n    at Object.<anonymous> (/tmp/tmpxjyn6lzq.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332853
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=arrays,javascript,sorting |>\n<| c |>\nThis doesn't work\
    \ if there are duplicates in the lists.\n<|/ c |>\n<| c |>\nIt does work if there\
    \ are duplicates in the lists. I tested it before posting it.\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work if there are duplicates in the lists. I tested it before\
    \ posting it.\n<|/ c |>\n<| c |>\nIt doesn't work if there are duplicates in the\
    \ lists. I tested it before posting it.\n<|/ c |>\n<| c |>\nIt doesn't work if\
    \ there are duplicates in the lists. I tested it before posting it.\n<|/ c |>\n\
    <| a |>\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpfn_6_n_r.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmpfn_6_n_r.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpfn_6_n_r.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmpfn_6_n_r.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpfn_6_n_r.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmpfn_6_n_r.ts(16,7): error TS1109: Expression expected.

    ../../../../tmp/tmpfn_6_n_r.ts(17,6): error TS1005: '';'' expected.

    ../../../../tmp/tmpfn_6_n_r.ts(17,6): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpfn_6_n_r.ts(17,56): error TS1002: Unterminated string literal.

    ../../../../tmp/tmpfn_6_n_r.ts(18,2): error TS1109: Expression expected.

    ../../../../tmp/tmpfn_6_n_r.ts(18,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpfn_6_n_r.ts(19,2): error TS1109: Expression expected.

    ../../../../tmp/tmpfn_6_n_r.ts(19,7): error TS1109: Expression expected.

    ../../../../tmp/tmpfn_6_n_r.ts(20,4): error TS1005: '';'' expected.

    ../../../../tmp/tmpfn_6_n_r.ts(20,9): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpfn_6_n_r.ts(20,17): error TS1005: ''('' expected.

    ../../../../tmp/tmpfn_6_n_r.ts(20,23): error TS1005: '')'' expected.

    ../../../../tmp/tmpfn_6_n_r.ts(20,45): error TS1005: '';'' expected.

    ../../../../tmp/tmpfn_6_n_r.ts(20,54): error TS1005: '';'' expected.

    ../../../../tmp/tmpfn_6_n_r.ts(20,61): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpfn_6_n_r.ts(20,64): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpfn_6_n_r.ts(20,71): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpfn_6_n_r.ts(21,1): error TS1003: Identifier expected.

    ../../../../tmp/tmpfn_6_n_r.ts(21,2): error TS1109: Expression expected.

    ../../../../tmp/tmpfn_6_n_r.ts(21,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpfn_6_n_r.ts(22,2): error TS1109: Expression expected.

    ../../../../tmp/tmpfn_6_n_r.ts(22,7):'
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpa68pfwz1.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa68pfwz1.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332852
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        const found: boolean = false;\n \
    \       for (let j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j])\
    \ {\n                found = true;\n                break;\n            }\n  \
    \      }\n        if (!found) {\n            result.push(l1[i]);\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpjbn6e41n.ts(8,17): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332849
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result = [];\n    for (var i =\
    \ 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++) {\n  \
    \          if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp45va2w83.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmp45va2w83.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  let i:\
    \ number;\n  let j: number;\n  for (i = 0; i < l1.length; i++) {\n    for (j =\
    \ 0; j < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpc6rqquyr.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmpc6rqquyr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_ri1py5.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_ri1py5.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=arrays,javascript,typescript |>\n<| a tags=arrays,javascript,typescript\
    \ |>\n<code>\nvar arr1 = [1,2,3,4,5,6,7,8,9,10];\nvar arr2 = [1,2,3,4,5,6,7,8,9,10];\n\
    \nvar arr3 = arr1.filter(function(item){\n    return arr2.indexOf(item) == -1;\n\
    });\n\nconsole.log(arr3);\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis solution\
    \ doesn't work if `arr2` contains duplicates.\n<|/ c |>\n<| c |>\nYes, it does.\
    \ `indexOf` returns the index of the first occurrence of the item in the array.\
    \ `-1` means it isn't in the array. `filter` returns all items that return `true`\
    \ from the function passed to it.\n<|/ c |>\n<| c |>\nThis solution doesn't work\
    \ if `arr2` contains duplicates.\n<|/ c |>\n<| a dscore=3 |>\n<code>\nvar arr1\
    \ = [1,2,3,4,5,6,7,8,9,10];\nvar arr2 = [1,2,3,4,5,6,7,8,9,10];\n\nvar arr3 =\
    \ arr1.filter(function(item){\n    return arr2.indexOf(item) == -1;\n});\n\nconsole.log(arr3);\n\
    </code>\n<|/ a tags=arrays,javascript,typescript |>\n<| c |>\nThis solution doesn't\
    \ work if `arr2` contains duplicates.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nvar\
    \ arr1 = [1,2,3,4,5,6,7,8,9,10];\nvar arr2 = [1,2,3,4,5,6,7,8,9,10];\n\nvar arr3\
    \ = arr1.filter(function(item){\n    return arr2.indexOf(item) == -1;\n});\n\n\
    console.log(arr3);\n</code>\n<|/ a tags=arrays,javascript,typescript |>\n<| c\
    \ |>\nThis solution doesn't work if `arr2` contains duplicates.\n<|/ c |>\n<|\
    \ a dscore=2 |>\n<code>\nvar arr1 = [1,2,3,4,5,6,7,8,9,10];\nvar arr2 = [1,2,3,4,5,6,7,8,9,10];\n\
    \nvar arr3 = arr1.filter(function(item){\n    return arr2.indexOf(item) == -1;\n\
    });\n\nconsole.log(arr3);\n</code>\n<|/ a tags=arrays,javascript,typescript |>\n\
    <| a tags=arrays,javascript,type\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmplkmtf4gv.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmplkmtf4gv.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmplkmtf4gv.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmplkmtf4gv.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmplkmtf4gv.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmplkmtf4gv.ts(16,6): error TS1005: '';'' expected.

    ../../../../tmp/tmplkmtf4gv.ts(16,41): error TS1109: Expression expected.

    ../../../../tmp/tmplkmtf4gv.ts(18,1): error TS1109: Expression expected.

    ../../../../tmp/tmplkmtf4gv.ts(26,2): error TS1110: Type expected.

    ../../../../tmp/tmplkmtf4gv.ts(26,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmplkmtf4gv.ts(27,2): error TS1109: Expression expected.

    ../../../../tmp/tmplkmtf4gv.ts(27,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmplkmtf4gv.ts(28,2): error TS1109: Expression expected.

    ../../../../t'
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpa68pfwz1.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa68pfwz1.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332852
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  let result: number[] = [];\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpijykkogl.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpijykkogl.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  const l: number[] = [];\n  for (let i\
    \ = 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpn1ue3nxu.js:14:12)\n    at Object.<anonymous> (/tmp/tmpn1ue3nxu.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332853
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        let found = false;\n        for (let\
    \ j = 0; j < l2.length; j++) {\n            if (l1[i] === l2[j]) {\n         \
    \       found = true;\n                break;\n            }\n        }\n    \
    \    if (!found) {\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpl_ukexd7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl_ukexd7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332845

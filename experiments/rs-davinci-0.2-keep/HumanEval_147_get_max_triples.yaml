name: HumanEval_147_get_max_triples
language: rust
prompt: "/// You are given a positive integer n. You have to create an integer array\
  \ a of length n.\n/// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
  \ i - i + 1.\n/// Return the number of triples (a[i], a[j], a[k]) of a where i <\
  \ j < k, \n/// and a[i] + a[j] + a[k] is a multiple of 3.\n/// Example :\n/// Input:\
  \ n = 5\n/// Output: 1\n/// Explanation: \n/// a = [1, 3, 7, 13, 21]\n/// The only\
  \ valid triple is (1, 7, 13).\nfn get_max_triples(n: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = get_max_triples;\n    assert_eq!(candidate(5),\
  \ 1);\n    assert_eq!(candidate(6), 4);\n    assert_eq!(candidate(10), 36);\n  \
  \  assert_eq!(candidate(100), 53361);\n}\n"
completions: ["    let mut count = 0;\n    for i in 1..n {\n        for j in (i +\
    \ 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i +\
    \ 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n       \
    \     for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1\
    \ + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n             \
    \   }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    let mut a = vec![0; n as usize];\n    for i in 0..n {\n        a[i as usize]\
    \ = i * i - i + 1;\n    }\n    for i in 0..n {\n        for j in i+1..n {\n  \
    \          for k in j+1..n {\n                if (a[i as usize] + a[j as usize]\
    \ + a[k as usize]) % 3 == 0 {\n                    count += 1;\n             \
    \   }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in (j +\
    \ 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in i+1..n {\n            for k in j+1..n {\n              \
    \  if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                 \
    \   count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n  \
    \          for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n       \
    \         }\n            }\n        }\n    }\n    count", "    let mut count =\
    \ 0;\n    for i in 1..n {\n        let a = i * i - i + 1;\n        for j in (i\
    \ + 1)..n {\n            let b = j * j - j + 1;\n            for k in (j + 1)..n\
    \ {\n                let c = k * k - k + 1;\n                if (a + b + c) %\
    \ 3 == 0 {\n                    count += 1;\n                }\n            }\n\
    \        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n\
    \        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n          \
    \      if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n       \
    \             count += 1;\n                }\n            }\n        }\n    }\n\
    \    count", "    let mut count = 0;\n    for i in 1..n {\n        for j in (i\
    \ + 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n           \
    \ for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k - k +\
    \ 1) % 3 == 0 {\n                    count += 1;\n                }\n        \
    \    }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n      \
    \          if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    let mut a: Vec<isize> = Vec::new();\n\
    \    for i in 1..=n {\n        a.push(i * i - i + 1);\n    }\n    for i in 0..n\
    \ {\n        for j in i + 1..n {\n            for k in j + 1..n {\n          \
    \      if (a[i] + a[j] + a[k]) % 3 == 0 {\n                    count += 1;\n \
    \               }\n            }\n        }\n    }\n    count", "    let mut count\
    \ = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n            for k\
    \ in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0 {\n                    count += 1;\n                }\n    \
    \        }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in\
    \ 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n         \
    \       if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n            \
    \        count += 1;\n                }\n            }\n        }\n    }\n   \
    \ count", "    let mut count = 0;\n    for i in 1..n {\n        for j in (i +\
    \ 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i +\
    \ 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    let mut a = vec![0; n as usize];\n    for i in 0..n {\n\
    \        a[i as usize] = i * i - i + 1;\n    }\n    for i in 0..n - 2 {\n    \
    \    for j in i + 1..n - 1 {\n            for k in j + 1..n {\n              \
    \  if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 == 0 {\n           \
    \         count += 1;\n                }\n            }\n        }\n    }\n  \
    \  count", "    let mut a = vec![0; n as usize];\n    for i in 0..n {\n      \
    \  a[i as usize] = i * i - i + 1;\n    }\n    let mut count = 0;\n    for i in\
    \ 0..n {\n        for j in i+1..n {\n            for k in j+1..n {\n         \
    \       if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 == 0 {\n      \
    \              count += 1;\n                }\n            }\n        }\n    }\n\
    \    count", "    let mut count = 0;\n    for i in 1..n {\n        for j in i+1..n\
    \ {\n            for k in j+1..n {\n                if (i*i - i + 1 + j*j - j\
    \ + 1 + k*k - k + 1) % 3 == 0 {\n                    count += 1;\n           \
    \     }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in (j +\
    \ 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut count = 0;\n    let mut a = vec![0;\
    \ n as usize];\n    for i in 0..n {\n        a[i as usize] = i * i - i + 1;\n\
    \    }\n    for i in 0..n - 2 {\n        for j in i + 1..n - 1 {\n           \
    \ for k in j + 1..n {\n                if (a[i as usize] + a[j as usize] + a[k\
    \ as usize]) % 3 == 0 {\n                    count += 1;\n                }\n\
    \            }\n        }\n    }\n    count", "    let mut count = 0;\n    for\
    \ i in 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n    \
    \            if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n       \
    \             count += 1;\n                }\n            }\n        }\n    }\n\
    \    count", "    let mut count = 0;\n    for i in 1..n {\n        for j in i\
    \ + 1..n {\n            for k in j + 1..n {\n                if (i * i - i + 1\
    \ + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n\
    \                }\n            }\n        }\n    }\n    count", "    let mut\
    \ count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n           \
    \ for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0 {\n                    count += 1;\n                }\n\
    \            }\n        }\n    }\n    count", "    let mut count = 0;\n    for\
    \ i in 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n    \
    \            if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n       \
    \             count += 1;\n                }\n            }\n        }\n    }\n\
    \    count", "    let mut count = 0;\n    for i in 1..n {\n        for j in (i\
    \ + 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    let mut a = vec![0; n as usize];\n    for i in 0..n {\n\
    \        a[i as usize] = i * i - i + 1;\n    }\n    for i in 0..n - 2 {\n    \
    \    for j in i + 1..n - 1 {\n            for k in j + 1..n {\n              \
    \  if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 == 0 {\n           \
    \         count += 1;\n                }\n            }\n        }\n    }\n  \
    \  count", "    let mut count = 0;\n    let mut a = vec![0; n as usize];\n   \
    \ for i in 0..n {\n        a[i as usize] = i * i - i + 1;\n    }\n    for i in\
    \ 0..n {\n        for j in i+1..n {\n            for k in j+1..n {\n         \
    \       if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 == 0 {\n      \
    \              count += 1;\n                }\n            }\n        }\n    }\n\
    \    count", "    let mut count = 0;\n    for i in 1..n {\n        for j in (i\
    \ + 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n           \
    \ for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k - k +\
    \ 1) % 3 == 0 {\n                    count += 1;\n                }\n        \
    \    }\n        }\n    }\n    count", "    let mut a = Vec::new();\n    for i\
    \ in 1..=n {\n        a.push(i * i - i + 1);\n    }\n    let mut count = 0;\n\
    \    for i in 0..n - 2 {\n        for j in i + 1..n - 1 {\n            for k in\
    \ j + 1..n {\n                if (a[i] + a[j] + a[k]) % 3 == 0 {\n           \
    \         count += 1;\n                }\n            }\n        }\n    }\n  \
    \  count", "    let mut count = 0;\n    for i in 1..n {\n        for j in (i +\
    \ 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i +\
    \ 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    for i in 1..n {\n        for j in i + 1..n {\n         \
    \   for k in j + 1..n {\n                if (i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0 {\n                    count += 1;\n                }\n\
    \            }\n        }\n    }\n    count", "    let mut count = 0;\n    for\
    \ i in 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n    \
    \            if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n       \
    \             count += 1;\n                }\n            }\n        }\n    }\n\
    \    count", "    let mut a = vec![0; n as usize];\n    for i in 0..n {\n    \
    \    a[i as usize] = i * i - i + 1;\n    }\n    let mut count = 0;\n    for i\
    \ in 0..n {\n        for j in i+1..n {\n            for k in j+1..n {\n      \
    \          if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut count = 0;\n    for i in 1..n {\n        for j in i + 1..n {\n     \
    \       for k in j + 1..n {\n                if (i * i - i + 1 + j * j - j + 1\
    \ + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n             \
    \   }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n\
    \                if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in i+1..n {\n            for k in j+1..n {\n                if (i*i - i + 1\
    \ + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                    count += 1;\n \
    \               }\n            }\n        }\n    }\n    count", "    let mut count\
    \ = 0;\n    for i in 1..n {\n        for j in i+1..n {\n            for k in j+1..n\
    \ {\n                if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in i+1..n {\n            for k in j+1..n {\n                if (i*i - i +\
    \ 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                    count += 1;\n\
    \                }\n            }\n        }\n    }\n    count", "    let mut\
    \ count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n           \
    \ for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0 {\n                    count += 1;\n                }\n\
    \            }\n        }\n    }\n    count", "    let mut count = 0;\n    for\
    \ i in 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n    \
    \            if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n       \
    \             count += 1;\n                }\n            }\n        }\n    }\n\
    \    count", "    let mut count = 0;\n    for i in 1..n {\n        for j in (i\
    \ + 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n       \
    \     for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1\
    \ + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n             \
    \   }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n\
    \                if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n       \
    \     for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k -\
    \ k + 1) % 3 == 0 {\n                    count += 1;\n                }\n    \
    \        }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in\
    \ 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n \
    \               if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                  \
    \  count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n  \
    \          for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n       \
    \         }\n            }\n        }\n    }\n    count", "    let mut count =\
    \ 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in\
    \ (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0 {\n                    count += 1;\n                }\n      \
    \      }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in\
    \ 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n         \
    \       if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n            \
    \        count += 1;\n                }\n            }\n        }\n    }\n   \
    \ count", "    let mut count = 0;\n    for i in 1..n {\n        for j in i+1..n\
    \ {\n            for k in j+1..n {\n                if (i*i - i + 1 + j*j - j\
    \ + 1 + k*k - k + 1) % 3 == 0 {\n                    count += 1;\n           \
    \     }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in (j +\
    \ 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n      \
    \          if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in i + 1..n {\n            for k in j + 1..n {\n                if (i * i -\
    \ i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n   \
    \         for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n         \
    \       }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n\
    \                if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n   \
    \         for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n         \
    \       }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in (j +\
    \ 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n      \
    \          if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in i+1..n {\n            for k in j+1..n {\n                if (i*i - i + 1\
    \ + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                    count += 1;\n \
    \               }\n            }\n        }\n    }\n    count", "    let mut count\
    \ = 0;\n    for i in 1..n {\n        for j in i+1..n {\n            for k in j+1..n\
    \ {\n                if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                  \
    \  count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut a = vec![0; n as usize];\n    for i in 0..n {\n        a[i as usize]\
    \ = i * i - i + 1;\n    }\n    let mut count = 0;\n    for i in 0..n - 2 {\n \
    \       for j in i + 1..n - 1 {\n            for k in j + 1..n {\n           \
    \     if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 == 0 {\n        \
    \            count += 1;\n                }\n            }\n        }\n    }\n\
    \    count", "    let mut count = 0;\n    for i in 1..n {\n        for j in i+1..n\
    \ {\n            for k in j+1..n {\n                if (i*i - i + 1 + j*j - j\
    \ + 1 + k*k - k + 1) % 3 == 0 {\n                    count += 1;\n           \
    \     }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in (j +\
    \ 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut a = vec![0; n as usize];\n   \
    \ for i in 0..n {\n        a[i as usize] = i * i - i + 1;\n    }\n    let mut\
    \ count = 0;\n    for i in 0..n {\n        for j in i+1..n {\n            for\
    \ k in j+1..n {\n                if (a[i as usize] + a[j as usize] + a[k as usize])\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in i+1..n {\n            for k in j+1..n {\n              \
    \  if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                 \
    \   count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n      \
    \      for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k\
    \ - k + 1) % 3 == 0 {\n                    count += 1;\n                }\n  \
    \          }\n        }\n    }\n    count", "    let mut count = 0;\n    for i\
    \ in 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n\
    \                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                  \
    \  count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n  \
    \          for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n       \
    \         }\n            }\n        }\n    }\n    count", "    let mut count =\
    \ 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in\
    \ (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0 {\n                    count += 1;\n                }\n      \
    \      }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in\
    \ 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n \
    \               if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                  \
    \  count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n      \
    \      for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k\
    \ - k + 1) % 3 == 0 {\n                    count += 1;\n                }\n  \
    \          }\n        }\n    }\n    count", "    let mut count = 0;\n    let mut\
    \ a: Vec<isize> = Vec::new();\n    for i in 1..=n {\n        a.push(i * i - i\
    \ + 1);\n    }\n    for i in 0..n - 2 {\n        for j in i + 1..n - 1 {\n   \
    \         for k in j + 1..n {\n                if (a[i] + a[j] + a[k]) % 3 ==\
    \ 0 {\n                    count += 1;\n                }\n            }\n   \
    \     }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n   \
    \     for j in (i + 1)..n {\n            for k in (j + 1)..n {\n             \
    \   if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n          \
    \          count += 1;\n                }\n            }\n        }\n    }\n \
    \   count", "    let mut count = 0;\n    for i in 1..n {\n        for j in (i\
    \ + 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    let mut a: Vec<isize> = Vec::new();\n    for i in 1..n+1\
    \ {\n        a.push(i*i - i + 1);\n    }\n    for i in 0..n-2 {\n        for j\
    \ in i+1..n-1 {\n            for k in j+1..n {\n                if (a[i] + a[j]\
    \ + a[k]) % 3 == 0 {\n                    count += 1;\n                }\n   \
    \         }\n        }\n    }\n    count", "    let mut count = 0;\n    for i\
    \ in 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n\
    \                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    let mut a = vec![0; n as usize];\n\
    \    for i in 0..n {\n        a[i as usize] = i * i - i + 1;\n    }\n    for i\
    \ in 0..n {\n        for j in i+1..n {\n            for k in j+1..n {\n      \
    \          if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n       \
    \     for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k -\
    \ k + 1) % 3 == 0 {\n                    count += 1;\n                }\n    \
    \        }\n        }\n    }\n    count", "    let mut triples = 0;\n    for i\
    \ in 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n\
    \                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n\
    \                    triples += 1;\n                }\n            }\n       \
    \ }\n    }\n    triples", "    let mut a = vec![0; n as usize];\n    for i in\
    \ 0..n {\n        a[i as usize] = i * i - i + 1;\n    }\n    let mut count = 0;\n\
    \    for i in 0..n - 2 {\n        for j in i + 1..n - 1 {\n            for k in\
    \ j + 1..n {\n                if (a[i as usize] + a[j as usize] + a[k as usize])\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in i+1..n {\n            for k in j+1..n {\n              \
    \  if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                 \
    \   count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    let mut a = vec![];\n    for i in 1..=n {\n       \
    \ a.push(i * i - i + 1);\n    }\n    for i in 0..n - 2 {\n        for j in i +\
    \ 1..n - 1 {\n            for k in j + 1..n {\n                if (a[i] + a[j]\
    \ + a[k]) % 3 == 0 {\n                    count += 1;\n                }\n   \
    \         }\n        }\n    }\n    count", "    let mut count = 0;\n    let mut\
    \ a = vec![0; n as usize];\n    for i in 0..n {\n        a[i as usize] = i * i\
    \ - i + 1;\n    }\n    for i in 0..n {\n        for j in i+1..n {\n          \
    \  for k in j+1..n {\n                if (a[i as usize] + a[j as usize] + a[k\
    \ as usize]) % 3 == 0 {\n                    count += 1;\n                }\n\
    \            }\n        }\n    }\n    count", "    let mut count = 0;\n    let\
    \ mut a: Vec<isize> = vec![0; n as usize];\n    for i in 1..n {\n        a[i as\
    \ usize] = i * i - i + 1;\n        for j in 1..i {\n            for k in 1..j\
    \ {\n                if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 ==\
    \ 0 {\n                    count += 1;\n                }\n            }\n   \
    \     }\n    }\n    count", "    let mut a = Vec::new();\n    for i in 1..=n {\n\
    \        a.push(i * i - i + 1);\n    }\n    let mut count = 0;\n    for i in 0..n\
    \ - 2 {\n        for j in i + 1..n - 1 {\n            for k in j + 1..n {\n  \
    \              if (a[i] + a[j] + a[k]) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    for i in 1..n {\n        for j in i + 1..n {\n         \
    \   for k in j + 1..n {\n                if (i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0 {\n                    count += 1;\n                }\n\
    \            }\n        }\n    }\n    count", "    let mut count = 0;\n    for\
    \ i in 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n\
    \ {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0 {\n                    count += 1;\n                }\n            }\n   \
    \     }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n   \
    \     for j in i+1..n {\n            for k in j+1..n {\n                if (i*i\
    \ - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    let mut a = vec![0; n as usize];\n    for i in 0..n {\n\
    \        a[i as usize] = i * i - i + 1;\n    }\n    for i in 0..n {\n        for\
    \ j in i+1..n {\n            for k in j+1..n {\n                if (a[i as usize]\
    \ + a[j as usize] + a[k as usize]) % 3 == 0 {\n                    count += 1;\n\
    \                }\n            }\n        }\n    }\n    count", "    let mut\
    \ count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n           \
    \ for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0 {\n                    count += 1;\n                }\n\
    \            }\n        }\n    }\n    count", "    let mut count = 0;\n    for\
    \ i in 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n\
    \ {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0 {\n                    count += 1;\n                }\n            }\n   \
    \     }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n   \
    \     for j in (i + 1)..n {\n            for k in (j + 1)..n {\n             \
    \   if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n          \
    \          count += 1;\n                }\n            }\n        }\n    }\n \
    \   count", "    let mut count = 0;\n    for i in 1..n {\n        for j in i +\
    \ 1..n {\n            for k in j + 1..n {\n                if (i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n\
    \                }\n            }\n        }\n    }\n    count", "    let mut\
    \ count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n           \
    \ for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0 {\n                    count += 1;\n                }\n\
    \            }\n        }\n    }\n    count", "    let mut a = vec![0; n as usize];\n\
    \    for i in 0..n {\n        a[i as usize] = i * i - i + 1;\n    }\n    let mut\
    \ count = 0;\n    for i in 0..n {\n        for j in i+1..n {\n            for\
    \ k in j+1..n {\n                if (a[i as usize] + a[j as usize] + a[k as usize])\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n      \
    \          if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n       \
    \     for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k -\
    \ k + 1) % 3 == 0 {\n                    count += 1;\n                }\n    \
    \        }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in\
    \ 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n \
    \               if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                  \
    \  count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut a = vec![0; n as usize];\n    for i in 0..n {\n        a[i as usize]\
    \ = i * i - i + 1;\n    }\n    let mut count = 0;\n    for i in 0..n - 2 {\n \
    \       for j in i + 1..n - 1 {\n            for k in j + 1..n {\n           \
    \     if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 == 0 {\n        \
    \            count += 1;\n                }\n            }\n        }\n    }\n\
    \    count", "    let mut a = Vec::new();\n    for i in 1..=n {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let mut count = 0;\n    for i in 0..n - 2 {\n    \
    \    for j in i + 1..n - 1 {\n            for k in j + 1..n {\n              \
    \  if (a[i] + a[j] + a[k]) % 3 == 0 {\n                    count += 1;\n     \
    \           }\n            }\n        }\n    }\n    count", "    let mut count\
    \ = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n            for k\
    \ in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0 {\n                    count += 1;\n                }\n    \
    \        }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in\
    \ 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n         \
    \       if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n            \
    \        count += 1;\n                }\n            }\n        }\n    }\n   \
    \ count", "    let mut count = 0;\n    for i in 1..n {\n        for j in (i +\
    \ 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i +\
    \ 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n           \
    \ for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k - k +\
    \ 1) % 3 == 0 {\n                    count += 1;\n                }\n        \
    \    }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n      \
    \          if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n       \
    \     for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k -\
    \ k + 1) % 3 == 0 {\n                    count += 1;\n                }\n    \
    \        }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in\
    \ 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n \
    \               if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in i+1..n {\n            for k in j+1..n {\n                if (i*i - i +\
    \ 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                    count += 1;\n\
    \                }\n            }\n        }\n    }\n    count", "    let mut\
    \ count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n           \
    \ for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0 {\n                    count += 1;\n                }\n\
    \            }\n        }\n    }\n    count", "    let mut count = 0;\n    for\
    \ i in 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n\
    \ {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0 {\n                    count += 1;\n                }\n            }\n   \
    \     }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n   \
    \     for j in (i + 1)..n {\n            for k in (j + 1)..n {\n             \
    \   if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n          \
    \          count += 1;\n                }\n            }\n        }\n    }\n \
    \   count", "    let mut count = 0;\n    for i in 1..n {\n        for j in (i\
    \ + 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n           \
    \ for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k - k +\
    \ 1) % 3 == 0 {\n                    count += 1;\n                }\n        \
    \    }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n      \
    \          if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n   \
    \         for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n         \
    \       }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    let mut a = vec![0; n as usize];\n    for i in 0..n {\n        a[i as usize]\
    \ = i * i - i + 1;\n    }\n    for i in 0..n - 2 {\n        for j in i + 1..n\
    \ - 1 {\n            for k in j + 1..n {\n                if (a[i as usize] +\
    \ a[j as usize] + a[k as usize]) % 3 == 0 {\n                    count += 1;\n\
    \                }\n            }\n        }\n    }\n    count", "    let mut\
    \ count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n            for\
    \ k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1)\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n      \
    \          if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut a = vec![0; n as usize];\n    for i in 0..n {\n\
    \        a[i as usize] = i * i - i + 1;\n    }\n    let mut count = 0;\n    for\
    \ i in 0..n - 2 {\n        for j in i + 1..n - 1 {\n            for k in j + 1..n\
    \ {\n                if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 ==\
    \ 0 {\n                    count += 1;\n                }\n            }\n   \
    \     }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n   \
    \     for j in i+1..n {\n            for k in j+1..n {\n                if (i*i\
    \ - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n       \
    \     for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1\
    \ + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n             \
    \   }\n            }\n        }\n    }\n    count", "    let mut a = Vec::new();\n\
    \    for i in 1..=n {\n        a.push(i * i - i + 1);\n    }\n    let mut count\
    \ = 0;\n    for i in 0..n - 2 {\n        for j in i + 1..n - 1 {\n           \
    \ for k in j + 1..n {\n                if (a[i] + a[j] + a[k]) % 3 == 0 {\n  \
    \                  count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut a = vec![0; n as usize];\n    for i in 0..n {\n\
    \        a[i as usize] = i * i - i + 1;\n    }\n    let mut count = 0;\n    for\
    \ i in 0..n {\n        for j in i+1..n {\n            for k in j+1..n {\n    \
    \            if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 == 0 {\n \
    \                   count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                  \
    \  count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n      \
    \      for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k\
    \ - k + 1) % 3 == 0 {\n                    count += 1;\n                }\n  \
    \          }\n        }\n    }\n    count", "    let mut count = 0;\n    for i\
    \ in 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n      \
    \          if (i*i-i+1 + j*j-j+1 + k*k-k+1) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut a = vec![];\n    for i in 1..n+1 {\n        a.push(i*i - i + 1);\n \
    \   }\n    let mut count = 0;\n    for i in 0..n-2 {\n        for j in i+1..n-1\
    \ {\n            for k in j+1..n {\n                if (a[i] + a[j] + a[k]) %\
    \ 3 == 0 {\n                    count += 1;\n                }\n            }\n\
    \        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n\
    \        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n          \
    \      if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n       \
    \             count += 1;\n                }\n            }\n        }\n    }\n\
    \    count", "    let mut a = vec![0; n as usize];\n    for i in 0..n {\n    \
    \    a[i as usize] = i * i - i + 1;\n    }\n    let mut count = 0;\n    for i\
    \ in 0..n - 2 {\n        for j in i + 1..n - 1 {\n            for k in j + 1..n\
    \ {\n                if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 ==\
    \ 0 {\n                    count += 1;\n                }\n            }\n   \
    \     }\n    }\n    count", "    let mut count = 0;\n    let mut a = vec![0; n\
    \ as usize];\n    for i in 0..n {\n        a[i as usize] = i * i - i + 1;\n  \
    \  }\n    for i in 0..n - 2 {\n        for j in i + 1..n - 1 {\n            for\
    \ k in j + 1..n {\n                if (a[i as usize] + a[j as usize] + a[k as\
    \ usize]) % 3 == 0 {\n                    count += 1;\n                }\n   \
    \         }\n        }\n    }\n    count", "    let mut count = 0;\n    for i\
    \ in 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n\
    \                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in i+1..n {\n            for k in j+1..n {\n                if (i*i - i +\
    \ 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                    count += 1;\n\
    \                }\n            }\n        }\n    }\n    count", "    let mut\
    \ count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n           \
    \ for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0 {\n                    count += 1;\n                }\n\
    \            }\n        }\n    }\n    count", "    let mut a = vec![0; n as usize];\n\
    \    for i in 0..n {\n        a[i as usize] = i * i - i + 1;\n    }\n    let mut\
    \ count = 0;\n    for i in 0..n - 2 {\n        for j in i + 1..n - 1 {\n     \
    \       for k in j + 1..n {\n                if (a[i as usize] + a[j as usize]\
    \ + a[k as usize]) % 3 == 0 {\n                    count += 1;\n             \
    \   }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in i + 1..n {\n            for k in j + 1..n\
    \ {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0 {\n                    count += 1;\n                }\n            }\n   \
    \     }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n   \
    \     for j in (i + 1)..n {\n            for k in (j + 1)..n {\n             \
    \   if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n          \
    \          count += 1;\n                }\n            }\n        }\n    }\n \
    \   count", "    let mut a = vec![0; n as usize];\n    for i in 0..n {\n     \
    \   a[i as usize] = i * i - i + 1;\n    }\n    let mut count = 0;\n    for i in\
    \ 0..n {\n        for j in i+1..n {\n            for k in j+1..n {\n         \
    \       if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 == 0 {\n      \
    \              count += 1;\n                }\n            }\n        }\n    }\n\
    \    count", "    let mut count = 0;\n    for i in 1..n {\n        for j in (i\
    \ + 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut a = vec![0; n as usize];\n    for i in 0..n {\n        a[i as usize] = i\
    \ * i - i + 1;\n    }\n    let mut count = 0;\n    for i in 0..n {\n        for\
    \ j in i + 1..n {\n            for k in j + 1..n {\n                if (a[i as\
    \ usize] + a[j as usize] + a[k as usize]) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n   \
    \         for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n         \
    \       }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n\
    \                if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n       \
    \     for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k -\
    \ k + 1) % 3 == 0 {\n                    count += 1;\n                }\n    \
    \        }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in\
    \ 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n \
    \               if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                  \
    \  count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n  \
    \          for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n       \
    \         }\n            }\n        }\n    }\n    count", "    let mut count =\
    \ 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in\
    \ (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0 {\n                    count += 1;\n                }\n      \
    \      }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in\
    \ 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n \
    \               if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                  \
    \  count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n  \
    \          for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n       \
    \         }\n            }\n        }\n    }\n    count", "    let mut count =\
    \ 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in\
    \ (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0 {\n                    count += 1;\n                }\n      \
    \      }\n        }\n    }\n    count", "    let mut count = 0;\n    let mut i\
    \ = 1;\n    let mut j = 2;\n    let mut k = 3;\n    while i < n {\n        while\
    \ j < n {\n            while k < n {\n                let a = i * i - i + 1;\n\
    \                let b = j * j - j + 1;\n                let c = k * k - k + 1;\n\
    \                if (a + b + c) % 3 == 0 {\n                    count += 1;\n\
    \                }\n                k += 1;\n            }\n            j += 1;\n\
    \            k = j + 1;\n        }\n        i += 1;\n        j = i + 1;\n    \
    \    k = j + 1;\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in i+1..n {\n            for k in j+1..n {\n              \
    \  if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                 \
    \   count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n  \
    \          for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n       \
    \         }\n            }\n        }\n    }\n    count", "    let mut count =\
    \ 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in\
    \ (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0 {\n                    count += 1;\n                }\n      \
    \      }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in\
    \ 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n \
    \               if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                  \
    \  count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n  \
    \          for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n       \
    \         }\n            }\n        }\n    }\n    count", "    let mut count =\
    \ 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in\
    \ (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0 {\n                    count += 1;\n                }\n      \
    \      }\n        }\n    }\n    count", "    let mut count = 0;\n    let mut a\
    \ = vec![0; n as usize];\n    for i in 0..n {\n        a[i as usize] = i * i -\
    \ i + 1;\n    }\n    for i in 0..n - 2 {\n        for j in i + 1..n - 1 {\n  \
    \          for k in j + 1..n {\n                if (a[i as usize] + a[j as usize]\
    \ + a[k as usize]) % 3 == 0 {\n                    count += 1;\n             \
    \   }\n            }\n        }\n    }\n    count", "    let mut a = vec![0; n\
    \ as usize];\n    for i in 0..n {\n        a[i as usize] = i * i - i + 1;\n  \
    \  }\n    let mut count = 0;\n    for i in 0..n - 2 {\n        for j in i + 1..n\
    \ - 1 {\n            for k in j + 1..n {\n                if (a[i as usize] +\
    \ a[j as usize] + a[k as usize]) % 3 == 0 {\n                    count += 1;\n\
    \                }\n            }\n        }\n    }\n    count", "    let mut\
    \ count = 0;\n    for i in 1..n {\n        for j in i + 1..n {\n            for\
    \ k in j + 1..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0 {\n                    count += 1;\n                }\n    \
    \        }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in\
    \ 1..n {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n \
    \               if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut a = vec![0; n as usize];\n    for i in 0..n {\n\
    \        a[i as usize] = i * i - i + 1;\n    }\n    let mut count = 0;\n    for\
    \ i in 0..n {\n        for j in i + 1..n {\n            for k in j + 1..n {\n\
    \                if (a[i as usize] + a[j as usize] + a[k as usize]) % 3 == 0 {\n\
    \                    count += 1;\n                }\n            }\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for\
    \ j in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                  \
    \  count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n  \
    \          for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n       \
    \         }\n            }\n        }\n    }\n    count", "    let mut count =\
    \ 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in\
    \ (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0 {\n                    count += 1;\n                }\n      \
    \      }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in\
    \ 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n         \
    \       if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n            \
    \        count += 1;\n                }\n            }\n        }\n    }\n   \
    \ count", "    let mut count = 0;\n    for i in 1..n {\n        for j in (i +\
    \ 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i +\
    \ 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n       \
    \     for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1\
    \ + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n             \
    \   }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in (j +\
    \ 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut a = vec![0; n as usize];\n   \
    \ for i in 0..n {\n        a[i as usize] = i * i - i + 1;\n    }\n    let mut\
    \ count = 0;\n    for i in 0..n - 2 {\n        for j in i + 1..n - 1 {\n     \
    \       for k in j + 1..n {\n                if (a[i as usize] + a[j as usize]\
    \ + a[k as usize]) % 3 == 0 {\n                    count += 1;\n             \
    \   }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    let mut a = Vec::new();\n    for i in 1..n+1 {\n        a.push(i*i - i +\
    \ 1);\n    }\n    for i in 0..n-2 {\n        for j in i+1..n-1 {\n           \
    \ for k in j+1..n {\n                if (a[i] + a[j] + a[k]) % 3 == 0 {\n    \
    \                count += 1;\n                }\n            }\n        }\n  \
    \  }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut count = 0;\n    for i in 1..n {\n        for j in i + 1..n {\n     \
    \       for k in j + 1..n {\n                if (i * i - i + 1 + j * j - j + 1\
    \ + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n             \
    \   }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in (j +\
    \ 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in i+1..n {\n            for k in j+1..n {\n              \
    \  if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                 \
    \   count += 1;\n                }\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for i in 1..n {\n        for j in i+1..n {\n      \
    \      for k in j+1..n {\n                if (i*i - i + 1 + j*j - j + 1 + k*k\
    \ - k + 1) % 3 == 0 {\n                    count += 1;\n                }\n  \
    \          }\n        }\n    }\n    count", "    let mut count = 0;\n    for i\
    \ in 1..n {\n        for j in i+1..n {\n            for k in j+1..n {\n      \
    \          if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n         \
    \           count += 1;\n                }\n            }\n        }\n    }\n\
    \    count", "    let mut count = 0;\n    for i in 1..n {\n        for j in (i\
    \ + 1)..n {\n            for k in (j + 1)..n {\n                if (i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n       \
    \     for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j + 1\
    \ + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n             \
    \   }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in (j +\
    \ 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in (i + 1)..n {\n            for k in (j + 1)..n {\n      \
    \          if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n   \
    \                 count += 1;\n                }\n            }\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for i in 1..n {\n        for j\
    \ in (i + 1)..n {\n            for k in (j + 1)..n {\n                if (i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count", "   \
    \ let mut count = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n   \
    \         for k in (j + 1)..n {\n                if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0 {\n                    count += 1;\n         \
    \       }\n            }\n        }\n    }\n    count", "    let mut a = vec![0;\
    \ n as usize];\n    for i in 0..n {\n        a[i as usize] = i * i - i + 1;\n\
    \    }\n    let mut count = 0;\n    for i in 0..n {\n        for j in i+1..n {\n\
    \            for k in j+1..n {\n                if (a[i as usize] + a[j as usize]\
    \ + a[k as usize]) % 3 == 0 {\n                    count += 1;\n             \
    \   }\n            }\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for i in 1..n {\n        for j in (i + 1)..n {\n            for k in (j +\
    \ 1)..n {\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0 {\n                    count += 1;\n                }\n           \
    \ }\n        }\n    }\n    count", "    let mut count = 0;\n    for i in 1..n\
    \ {\n        for j in i+1..n {\n            for k in j+1..n {\n              \
    \  if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0 {\n                 \
    \   count += 1;\n                }\n            }\n        }\n    }\n    count"]
stop_tokens:
- "\n}"

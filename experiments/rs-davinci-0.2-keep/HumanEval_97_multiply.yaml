name: HumanEval_97_multiply
language: rust
prompt: "/// Complete the function that takes two integers and returns \n/// the product\
  \ of their unit digits.\n/// Assume the input is always valid.\n/// Examples:\n\
  /// multiply(148, 412) should return 16.\n/// multiply(19, 28) should return 72.\n\
  /// multiply(2020, 1851) should return 0.\n/// multiply(14,-15) should return 20.\n\
  fn multiply(a: isize, b: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = multiply;\n    assert_eq!(candidate(148,\
  \ 412), 16);\n    assert_eq!(candidate(19, 28), 72);\n    assert_eq!(candidate(2020,\
  \ 1851), 0);\n    assert_eq!(candidate(14, -15), 20);\n    assert_eq!(candidate(76,\
  \ 67), 42);\n    assert_eq!(candidate(17, 27), 49);\n    assert_eq!(candidate(0,\
  \ 1), 0);\n    assert_eq!(candidate(0, 0), 0);\n}\n"
completions: ['    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10)
    * (b % 10)', "    let a = a % 10;\n    let b = b % 10;\n    a * b", "    let mut\
    \ a = a;\n    let mut b = b;\n    if a < 0 {\n        a = -a;\n    }\n    if b\
    \ < 0 {\n        b = -b;\n    }\n    (a % 10) * (b % 10)", '    (a % 10) * (b
    % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) *
    (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10)
    * (b % 10)', "    let mut a = a;\n    let mut b = b;\n    if a < 0 {\n       \
    \ a = -a;\n    }\n    if b < 0 {\n        b = -b;\n    }\n    (a % 10) * (b %\
    \ 10)", '    (a % 10) * (b % 10)', "    let a = a.abs();\n    let b = b.abs();\n\
    \    (a % 10) * (b % 10)", '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)',
  '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', "    let a_unit = a % 10;\n\
    \    let b_unit = b % 10;\n    a_unit * b_unit", "    let a = a.abs();\n    let\
    \ b = b.abs();\n    (a % 10) * (b % 10)", '    (a.abs() % 10) * (b.abs() % 10)',
  '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', "    let a = a.abs();\n  \
    \  let b = b.abs();\n    (a % 10) * (b % 10)", '    (a % 10) * (b % 10)', "  \
    \  let a = a.abs();\n    let b = b.abs();\n    (a % 10) * (b % 10)", "    let\
    \ mut a = a;\n    let mut b = b;\n    if a < 0 {\n        a = -a;\n    }\n   \
    \ if b < 0 {\n        b = -b;\n    }\n    (a % 10) * (b % 10)", '    (a % 10)
    * (b % 10)', "    let a = a.abs();\n    let b = b.abs();\n    (a % 10) * (b %\
    \ 10)", '    (a % 10) * (b % 10)', "    let a = a.abs();\n    let b = b.abs();\n\
    \    (a % 10) * (b % 10)", "    let a = a.abs();\n    let b = b.abs();\n    (a\
    \ % 10) * (b % 10)", '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a
    % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a
    % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a
    % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a
    % 10) * (b % 10)', "    let a = a.abs();\n    let b = b.abs();\n    (a % 10) *\
    \ (b % 10)", '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10)
    * (b % 10)', "    let a = a.abs();\n    let b = b.abs();\n    (a % 10) * (b %\
    \ 10)", '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) *
    (b % 10)', "    let a = a.abs();\n    let b = b.abs();\n    (a % 10) * (b % 10)",
  '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', "    let a = a.abs();\n  \
    \  let b = b.abs();\n    (a % 10) * (b % 10)", '    (a % 10) * (b % 10)', '    (a
    % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a
    % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', "   \
    \ let a = a.abs();\n    let b = b.abs();\n    (a % 10) * (b % 10)", '    (a %
    10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a.abs() % 10) * (b.abs() % 10)',
  '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)',
  '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)',
  '    (a % 10) * (b % 10)', '    (a.abs() % 10) * (b.abs() % 10)', '    (a % 10)
    * (b % 10)', '    (a % 10) * (b % 10)', "    let mut a = a;\n    let mut b = b;\n\
    \    if a < 0 {\n        a = -a;\n    }\n    if b < 0 {\n        b = -b;\n   \
    \ }\n    (a % 10) * (b % 10)", '    (a % 10) * (b % 10)', '    (a % 10) * (b %
    10)', '    (a % 10) * (b % 10)', "    let a = a % 10;\n    let b = b % 10;\n \
    \   a * b", '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10)
    * (b % 10)', '    (a % 10) * (b % 10)', "    let a = a.abs();\n    let b = b.abs();\n\
    \    (a % 10) * (b % 10)", '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)',
  '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)',
  '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)',
  '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', "    let mut a = a;\n    let\
    \ mut b = b;\n    if a < 0 {\n        a = -a;\n    }\n    if b < 0 {\n       \
    \ b = -b;\n    }\n    (a % 10) * (b % 10)", '    (a % 10) * (b % 10)', "    let\
    \ a = a.abs();\n    let b = b.abs();\n    (a % 10) * (b % 10)", '    (a % 10)
    * (b % 10)', "    let a = a.abs();\n    let b = b.abs();\n    (a % 10) * (b %\
    \ 10)", '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) *
    (b % 10)', "    let mut a = a;\n    let mut b = b;\n    if a < 0 {\n        a\
    \ = -a;\n    }\n    if b < 0 {\n        b = -b;\n    }\n    (a % 10) * (b % 10)",
  '    (a % 10) * (b % 10)', "    let a = a.abs();\n    let b = b.abs();\n    (a %\
    \ 10) * (b % 10)", '    (a % 10) * (b % 10)', "    let a = a.abs();\n    let b\
    \ = b.abs();\n    (a % 10) * (b % 10)", "    let a = a.abs();\n    let b = b.abs();\n\
    \    (a % 10) * (b % 10)", "    let a = a.abs();\n    let b = b.abs();\n    (a\
    \ % 10) * (b % 10)", "    let mut a = a;\n    let mut b = b;\n    if a < 0 {\n\
    \        a = -a;\n    }\n    if b < 0 {\n        b = -b;\n    }\n    (a % 10)\
    \ * (b % 10)", '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a %
    10) * (b % 10)', '    (a % 10) * (b % 10)', "    let a = a.abs();\n    let b =\
    \ b.abs();\n    (a % 10) * (b % 10)", '    (a % 10) * (b % 10)', '    (a % 10)
    * (b % 10)', "    let mut a = a;\n    let mut b = b;\n    if a < 0 {\n       \
    \ a = -a;\n    }\n    if b < 0 {\n        b = -b;\n    }\n    (a % 10) * (b %\
    \ 10)", "    let a = a.abs();\n    let b = b.abs();\n    (a % 10) * (b % 10)",
  '    (a.abs() % 10) * (b.abs() % 10)', "    let a = a.abs();\n    let b = b.abs();\n\
    \    (a % 10) * (b % 10)", '    (a % 10) * (b % 10)', "    let a = a.abs();\n\
    \    let b = b.abs();\n    (a % 10) * (b % 10)", "    let mut a = a;\n    let\
    \ mut b = b;\n    if a < 0 {\n        a = -a;\n    }\n    if b < 0 {\n       \
    \ b = -b;\n    }\n    (a % 10) * (b % 10)", "    let a = a.abs();\n    let b =\
    \ b.abs();\n    (a % 10) * (b % 10)", '    (a % 10) * (b % 10)', "    let mut\
    \ a = a;\n    let mut b = b;\n    if a < 0 {\n        a = -a;\n    }\n    if b\
    \ < 0 {\n        b = -b;\n    }\n    (a % 10) * (b % 10)", '    (a % 10) * (b
    % 10)', '    (a % 10) * (b % 10)', "    let mut a = a;\n    let mut b = b;\n \
    \   if a < 0 {\n        a = -a;\n    }\n    if b < 0 {\n        b = -b;\n    }\n\
    \    (a % 10) * (b % 10)", "    let mut a = a;\n    let mut b = b;\n    if a <\
    \ 0 {\n        a = -a;\n    }\n    if b < 0 {\n        b = -b;\n    }\n    (a\
    \ % 10) * (b % 10)", "    let a = a.abs();\n    let b = b.abs();\n    (a % 10)\
    \ * (b % 10)", "    let mut a = a;\n    let mut b = b;\n    if a < 0 {\n     \
    \   a = -a;\n    }\n    if b < 0 {\n        b = -b;\n    }\n    (a % 10) * (b\
    \ % 10)", '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', "    let mut a\
    \ = a;\n    let mut b = b;\n    if a < 0 {\n        a = -a;\n    }\n    if b <\
    \ 0 {\n        b = -b;\n    }\n    (a % 10) * (b % 10)", '    (a % 10) * (b %
    10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b
    % 10)', "    let a = a.abs();\n    let b = b.abs();\n    (a % 10) * (b % 10)",
  '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)',
  "    let mut a = a.abs();\n    let mut b = b.abs();\n    let mut result = 0;\n \
    \   while a > 0 {\n        result += b % 10;\n        a /= 10;\n    }\n    result",
  '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)',
  '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', "    let a = a.abs();\n  \
    \  let b = b.abs();\n    (a % 10) * (b % 10)", "    let a = a.abs();\n    let\
    \ b = b.abs();\n    (a % 10) * (b % 10)", '    (a % 10) * (b % 10)', "    let\
    \ mut a = a;\n    let mut b = b;\n    if a < 0 {\n        a = -a;\n    }\n   \
    \ if b < 0 {\n        b = -b;\n    }\n    (a % 10) * (b % 10)", "    let mut a\
    \ = a;\n    let mut b = b;\n    if a < 0 {\n        a = -a;\n    }\n    if b <\
    \ 0 {\n        b = -b;\n    }\n    (a % 10) * (b % 10)", '    (a % 10) * (b %
    10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b
    % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', "    let a = a.abs();\n\
    \    let b = b.abs();\n    (a % 10) * (b % 10)", "    let mut a = a;\n    let\
    \ mut b = b;\n    if a < 0 {\n        a = -a;\n    }\n    if b < 0 {\n       \
    \ b = -b;\n    }\n    (a % 10) * (b % 10)", '    (a % 10) * (b % 10)', "    let\
    \ a = a.abs();\n    let b = b.abs();\n    (a % 10) * (b % 10)", '    (a % 10)
    * (b % 10)', "    let mut a = a;\n    let mut b = b;\n    if a < 0 {\n       \
    \ a = -a;\n    }\n    if b < 0 {\n        b = -b;\n    }\n    (a % 10) * (b %\
    \ 10)", '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) *
    (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', "    let a =\
    \ a.abs();\n    let b = b.abs();\n    (a % 10) * (b % 10)", '    (a % 10) * (b
    % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) *
    (b % 10)', "    let a = a.abs();\n    let b = b.abs();\n    (a % 10) * (b % 10)",
  '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)',
  "    let a = a.abs();\n    let b = b.abs();\n    (a % 10) * (b % 10)", '    (a %
    10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a
    % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a
    % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a % 10) * (b % 10)', '    (a
    % 10) * (b % 10)', '    (a % 10) * (b % 10)', "    let mut a = a;\n    let mut\
    \ b = b;\n    if a < 0 {\n        a = -a;\n    }\n    if b < 0 {\n        b =\
    \ -b;\n    }\n    (a % 10) * (b % 10)", '    (a % 10) * (b % 10)', '    (a % 10)
    * (b % 10)']
stop_tokens:
- "\n}"

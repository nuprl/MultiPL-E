name: HumanEval_96_count_up_to
language: rust
results:
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpfz5zpkp7.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpzjfi01y8.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp14rjxppl.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpkb191vhc.rs:14:16\n\
    \   |\n14 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpb5b97_0v.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_0175a3t.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmplqjp2cku.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmputayf1kf.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    if n <= 1 {\n        return\
    \ result;\n    }\n    let mut i = 2;\n    while i < n {\n        if is_prime(i)\
    \ {\n            result.push(i);\n        }\n        i += 1;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp09vdetdi.rs:17:12\n\
    \   |\n17 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpkuza6rjn.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    if n <= 1 {\n        return\
    \ result;\n    }\n    for i in 2..n {\n        if is_prime(i) {\n            result.push(i);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp4omy08h3.rs:16:12\n\
    \   |\n16 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp3hfkiqra.rs:14:16\n\
    \   |\n14 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    for i in 2..n\
    \ {\n        if is_prime(i) {\n            result.push(i);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp09unicej.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpt2fnjmsm.rs:14:16\n\
    \   |\n14 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \        i += 1;\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp5de1wp3x.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpkyhx3gx1.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmphr85f9lx.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpp77fnznb.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    if n <= 1 {\n        return vec![];\n    }\n    let mut result\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            result.push(i);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp9pzg97fh.rs:16:12\n\
    \   |\n16 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp4x_7kn5m.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n <= 1 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        let mut is_prime\
    \ = true;\n        for j in 2..i {\n            if i % j == 0 {\n            \
    \    is_prime = false;\n                break;\n            }\n        }\n   \
    \     if is_prime {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmprb9kqbxg.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp6p3w4l94.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpwmg5m2cm.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpjacfid2o.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp1x5cd_x3.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpy0gfkdh8.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvoielo_0.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            vec.push(i);\n        }\n    }\n    vec\n}\n\nfn\
    \ main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2,\
    \ 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpo7624d5e.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmphe6sin5b.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp9dl0zou6.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpp88fn_9v.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpdn5lcabr.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_afft2vw.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n <= 1 {\n        return\
    \ primes;\n    }\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp4u1kf4fa.rs:16:12\n\
    \   |\n16 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp671cg6se.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpxhu36js2.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpk60svq36.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp5aqdmtoj.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpnc47zu9g.rs:16:12\n\
    \   |\n16 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp74mlc59j.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpc2vizmkj.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            vec.push(i);\n        }\n    }\n    vec\n}\n\nfn\
    \ main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2,\
    \ 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpoqfy14r0.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        let mut is_prime\
    \ = true;\n        for j in 2..i {\n            if i % j == 0 {\n            \
    \    is_prime = false;\n                break;\n            }\n        }\n   \
    \     if is_prime {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpxd4pzulk.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp109fpc2l.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp9wdxzx76.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    let mut i = 3;\n    while i < n {\n\
    \        let mut is_prime = true;\n        for p in &primes {\n            if\
    \ i % p == 0 {\n                is_prime = false;\n                break;\n  \
    \          }\n        }\n        if is_prime {\n            primes.push(i);\n\
    \        }\n        i += 2;\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpoelm9vjj.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpc7su14qf.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    if n <= 1 {\n\
    \        return result;\n    }\n    result.push(2);\n    for i in 3..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpfpp6_3jc.rs:17:12\n\
    \   |\n17 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmppu9p2w0r.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmprje2feeb.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpoyriaeck.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n <= 1 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    primes\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp0v39ounh.rs:17:12\n\
    \   |\n17 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_uacpe3a.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_5ut25ca.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpfnf1s2b5.rs:14:16\n\
    \   |\n14 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \        i += 1;\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpbfqam7p_.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    if n < 2 {\n\
    \        return result;\n    }\n    result.push(2);\n    for i in 3..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpgr_vy3v5.rs:17:12\n\
    \   |\n17 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpyofuf6hm.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpzpdm0fir.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpm463jnjs.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp0wg6cm_u.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp1rubycos.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpew46d36v.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpd2zvqaox.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp2rg0qgfk.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmplfgldqzq.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \        i += 1;\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp9b80je2t.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpgoxdt94z.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            result.push(i);\n        }\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpukdc6uf_.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp25ivvr87.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut i =\
    \ 2;\n    while i < n {\n        if is_prime(i) {\n            result.push(i);\n\
    \        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp91okqqhq.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    if n <= 1 {\n\
    \        return result;\n    }\n    for i in 2..n {\n        if is_prime(i) {\n\
    \            result.push(i);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp00455mjq.rs:16:12\n\
    \   |\n16 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpxbidguz5.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpn9stxwpd.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpqnp0t5_3.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpoluwxlto.rs:14:16\n\
    \   |\n14 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpl_o3_k28.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpo892jahw.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpz84km4ud.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp9rpxrfw_.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp6_hf01sm.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpa8bk49_u.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpkq6ixddc.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    if n < 2 {\n        return\
    \ result;\n    }\n    result.push(2);\n    for i in 3..n {\n        if is_prime(i)\
    \ {\n            result.push(i);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpmz_h45lw.rs:17:12\n\
    \   |\n17 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    if n < 2 {\n\
    \        return result;\n    }\n    result.push(2);\n    for i in 3..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpfxfylasm.rs:17:12\n\
    \   |\n17 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                result.push(i);\n\
    \            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpu2h2b370.rs:14:16\n\
    \   |\n14 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpbj6tn0r_.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        let mut is_prime\
    \ = true;\n        for j in 2..i {\n            if i % j == 0 {\n            \
    \    is_prime = false;\n                break;\n            }\n        }\n   \
    \     if is_prime {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmppz8oos3s.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpy0ijiuvf.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    if n < 3 {\n        return primes;\n\
    \    }\n    primes.push(3);\n    if n < 5 {\n        return primes;\n    }\n \
    \   let mut i = 5;\n    while i < n {\n        let mut is_prime = true;\n    \
    \    for j in &primes {\n            if i % j == 0 {\n                is_prime\
    \ = false;\n                break;\n            }\n        }\n        if is_prime\
    \ {\n            primes.push(i);\n        }\n        i += 2;\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_yiz4fut.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpg9hucnn4.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpdu6vteyp.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    if n > 1 {\n\
    \        for i in 2..n {\n            if is_prime(i) {\n                result.push(i);\n\
    \            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp2txp8_w5.rs:14:16\n\
    \   |\n14 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n <= 1 {\n        return\
    \ primes;\n    }\n    let mut is_prime = vec![true; n as usize];\n    is_prime[0]\
    \ = false;\n    is_prime[1] = false;\n    let mut i = 2;\n    while i < n {\n\
    \        if is_prime[i as usize] {\n            primes.push(i);\n            let\
    \ mut j = i + i;\n            while j < n {\n                is_prime[j as usize]\
    \ = false;\n                j += i;\n            }\n        }\n        i += 1;\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpdd_2aa6x.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpsv41dy89.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpk0kvy9ti.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \        i += 1;\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp11twnobd.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if is_prime(i)\
    \ {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main() {\n    let\
    \ candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp6x8a1ar_.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpzz2ku9m9.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpo1dx2sv3.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmplmi906bp.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmppom88bb0.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_my70i6h.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp62pqvmh2.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut i =\
    \ 2;\n    while i < n {\n        if is_prime(i) {\n            result.push(i);\n\
    \        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpit75pfnv.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            result.push(i);\n        }\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp27xufo02.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpgv9jk2wp.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpdry9_ons.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp7q3qbowv.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp7istgame.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpcgqd3kzt.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpf1uk_7ao.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    if n < 2 {\n        return\
    \ result;\n    }\n    let mut i = 2;\n    while i < n {\n        if is_prime(i)\
    \ {\n            result.push(i);\n        }\n        i += 1;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpqg3p6343.rs:17:12\n\
    \   |\n17 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut i =\
    \ 2;\n    while i < n {\n        if is_prime(i) {\n            result.push(i);\n\
    \        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpecp44uqi.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    let mut i = 2;\n    while i < n {\n        let mut is_prime\
    \ = true;\n        for j in 2..i {\n            if i % j == 0 {\n            \
    \    is_prime = false;\n                break;\n            }\n        }\n   \
    \     if is_prime {\n            primes.push(i);\n        }\n        i += 1;\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            vec.push(i);\n        }\n    }\n    vec\n}\n\nfn\
    \ main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2,\
    \ 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpxcnfqedy.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp9x4c_yiq.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpwm6vp8yx.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmps_u3co0p.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if is_prime(i)\
    \ {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main() {\n    let\
    \ candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvj3gj8br.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp545as_2a.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if is_prime(i)\
    \ {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main() {\n    let\
    \ candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpm7hezeug.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpa2jmjb8o.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpo3p2i2tk.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpkhemed5a.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmphzsa7bhq.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp71y25ku0.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut i =\
    \ 2;\n    while i < n {\n        if is_prime(i) {\n            result.push(i);\n\
    \        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpsnbsocwu.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpyd8z0amr.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpf_vnztg5.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpqhkvmy5z.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp7t64k_c9.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp7_98vlim.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpj5p8zwj6.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp2e7kdcua.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpwvylcpq4.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \        i += 1;\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmprj7rp7jc.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpt3cpodzn.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpfj0b1k3_.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmppus1thdc.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    if n < 2 {\n        return\
    \ result;\n    }\n    for i in 2..n {\n        if is_prime(i) {\n            result.push(i);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp86t91gsm.rs:16:12\n\
    \   |\n16 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    let mut is_prime = vec![true; n as usize];\n    for i in\
    \ 2..n {\n        if is_prime[i as usize] {\n            primes.push(i);\n   \
    \         let mut j = i * i;\n            while j < n {\n                is_prime[j\
    \ as usize] = false;\n                j += i;\n            }\n        }\n    }\n\
    \    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \        i += 1;\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpq75bbifv.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp563jv5uk.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpm9xz1lsc.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpe3ozibxp.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp5ai9ll5p.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp5diuzh38.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        let mut is_prime\
    \ = true;\n        for prime in &primes {\n            if i % prime == 0 {\n \
    \               is_prime = false;\n                break;\n            }\n   \
    \     }\n        if is_prime {\n            primes.push(i);\n        }\n    }\n\
    \    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    if n < 2 {\n        return\
    \ result;\n    }\n    result.push(2);\n    for i in 3..n {\n        if is_prime(i)\
    \ {\n            result.push(i);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpcbqjzu5u.rs:17:12\n\
    \   |\n17 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  let mut is_prime = true;\n        for j in 2..i {\n            if i % j ==\
    \ 0 {\n                is_prime = false;\n                break;\n           \
    \ }\n        }\n        if is_prime {\n            primes.push(i);\n        }\n\
    \    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpbshg161l.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    for i in 2..n\
    \ {\n        if is_prime(i) {\n            result.push(i);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpf0785dlz.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    for i in 2..n\
    \ {\n        if is_prime(i) {\n            result.push(i);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmptzkdczd_.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpt0tppnij.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_vhby9lz.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpz546zwn8.rs:14:16\n\
    \   |\n14 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if is_prime(i)\
    \ {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main() {\n    let\
    \ candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpd45hj_mx.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        let mut is_prime\
    \ = true;\n        for j in 2..i {\n            if i % j == 0 {\n            \
    \    is_prime = false;\n                break;\n            }\n        }\n   \
    \     if is_prime {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n <= 1 {\n        return\
    \ primes;\n    }\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpfkxzvirs.rs:16:12\n\
    \   |\n16 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpfjd_8458.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpll5bw0zq.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpu_x3w2qd.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_50t4ata.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    primes\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmprxgkjedh.rs:17:12\n\
    \   |\n17 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            result.push(i);\n        }\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpaax4fqy2.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpufqyce20.rs:14:16\n\
    \   |\n14 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpy7dw2ym1.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpjhpun5qh.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmptta35pfo.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        let mut is_prime\
    \ = true;\n        for j in 2..i {\n            if i % j == 0 {\n            \
    \    is_prime = false;\n                break;\n            }\n        }\n   \
    \     if is_prime {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpl4ov_4u_.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpbw9lr6_u.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut vec: Vec<isize> = Vec::new();\n    let mut i = 2;\n\
    \    while i < n {\n        if is_prime(i) {\n            vec.push(i);\n     \
    \   }\n        i += 1;\n    }\n    vec\n}\n\nfn main() {\n    let candidate =\
    \ count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp8ksos9sw.rs:14:12\n\
    \   |\n14 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp8ej93zih.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp0ts9lwn7.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpapdj9e82.rs:14:16\n\
    \   |\n14 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// count_up_to(5) => [2,3]\n/// count_up_to(11) => [2,3,5,7]\n\
    /// count_up_to(0) => []\n/// count_up_to(20) => [2,3,5,7,11,13,17,19]\n/// count_up_to(1)\
    \ => []\n/// count_up_to(18) => [2,3,5,7,11,13,17]\nfn count_up_to(n: isize) ->\
    \ Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_orfubbr.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_156_int_to_mini_roman
language: rust
prompt: "/// Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  /// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n/// Examples:\n\
  /// >>> int_to_mini_roman(19) == 'xix'\n/// >>> int_to_mini_roman(152) == 'clii'\n\
  /// >>> int_to_mini_roman(426) == 'cdxxvi'\nfn int_to_mini_roman(number: isize)\
  \ -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!(candidate(19),\
  \ String::from(\"xix\"));\n    assert_eq!(candidate(152), String::from(\"clii\"\
  ));\n    assert_eq!(candidate(251), String::from(\"ccli\"));\n    assert_eq!(candidate(426),\
  \ String::from(\"cdxxvi\"));\n    assert_eq!(candidate(500), String::from(\"d\"\
  ));\n    assert_eq!(candidate(1), String::from(\"i\"));\n    assert_eq!(candidate(4),\
  \ String::from(\"iv\"));\n    assert_eq!(candidate(43), String::from(\"xliii\"));\n\
  \    assert_eq!(candidate(90), String::from(\"xc\"));\n    assert_eq!(candidate(94),\
  \ String::from(\"xciv\"));\n    assert_eq!(candidate(532), String::from(\"dxxxii\"\
  ));\n    assert_eq!(candidate(900), String::from(\"cm\"));\n    assert_eq!(candidate(994),\
  \ String::from(\"cmxciv\"));\n    assert_eq!(candidate(1000), String::from(\"m\"\
  ));\n}\n"
completions: ["    let mut result = String::new();\n    let mut num = number;\n  \
    \  let mut i = 0;\n    while num > 0 {\n        let digit = num % 10;\n      \
    \  num /= 10;\n        result = mini_roman_digit(digit, i) + &result;\n      \
    \  i += 1;\n    }\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let roman_numerals = vec![\n        (\"m\", 1000),\n \
    \       (\"cm\", 900),\n        (\"d\", 500),\n        (\"cd\", 400),\n      \
    \  (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n        (\"xl\"\
    , 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n    \
    \    (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    for (numeral, value) in roman_numerals\
    \ {\n        while number >= *value {\n            result.push_str(numeral);\n\
    \            number -= value;\n        }\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    while number > 0 {\n   \
    \     if number >= 1000 {\n            result.push('m');\n            number -=\
    \ 1000;\n        } else if number >= 900 {\n            result.push_str(\"cm\"\
    );\n            number -= 900;\n        } else if number >= 500 {\n          \
    \  result.push('d');\n            number -= 500;\n        } else if number >=\
    \ 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n  \
    \      } else if number >= 100 {\n            result.push('c');\n            number\
    \ -= 100;\n        } else if number >= 90 {\n            result.push_str(\"xc\"\
    );\n            number -= 90;\n        } else if number >= 50 {\n            result.push('l');\n\
    \            number -= 50;\n        } else if number >= 40 {\n            result.push_str(\"\
    xl\");\n            number -= 40;\n        } else if number >= 10 {\n        \
    \    result.push('x');\n            number -= 10;\n        } else if number >=\
    \ 9 {\n            result.push_str(\"ix\");\n            number -= 9;\n      \
    \  } else if number >= 5 {\n            result.push('v');\n            number\
    \ -= 5;\n        } else if number >= 4 {\n            result.push_str(\"iv\");\n\
    \            number -= 4;\n        } else if number >= 1 {\n            result.push('i');\n\
    \            number -= 1;\n        }\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    let mut i = 0;\n    while num\
    \ > 0 {\n        let digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut i = 0;\n    while number > 0 {\n  \
    \      let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            0 => \"\",\n            1 => \"i\",\n         \
    \   2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n      \
    \      5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n    \
    \        8 => \"viii\",\n            9 => \"ix\",\n            _ => panic!(\"\
    Invalid digit: {}\", digit),\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        i += 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    while number > 0 {\n        if number\
    \ >= 1000 {\n            result.push('m');\n            number -= 1000;\n    \
    \    } else if number >= 900 {\n            result.push_str(\"cm\");\n       \
    \     number -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n    \
    \        result.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n     \
    \   } else if num >= 500 {\n            result.push('d');\n            num -=\
    \ 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\");\n\
    \            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result = match digit {\n    \
    \        1 => format!(\"{}{}\", ROMAN_DIGITS[i][0], result),\n            2 =>\
    \ format!(\"{}{}\", ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0]),\n            3 =>\
    \ format!(\"{}{}{}\", ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0]),\n\
    \            4 => format!(\"{}{}\", ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][1]),\n\
    \            5 => format!(\"{}\", ROMAN_DIGITS[i][1]),\n            6 => format!(\"\
    {}{}\", ROMAN_DIGITS[i][1], ROMAN_DIGITS[i][0]),\n            7 => format!(\"\
    {}{}{}\", ROMAN_DIGITS[i][1], ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0]),\n     \
    \       8 => format!(\"{}{}{}{}\", ROMAN_DIGITS[i][1], ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0],\
    \ ROMAN_DIGITS[i][0]),\n            9 => format!(\"{}{}\", ROMAN_DIGITS[i][0],\
    \ ROMAN_DIGITS[i][2]),\n            _ => String::new(),\n        };\n        i\
    \ += 1;\n    }\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let mut i = 0;\n    while number > 0 {\n        let digit\
    \ = number % 10;\n        number /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    while number >= 1000 {\n\
    \        result.push('m');\n        number -= 1000;\n    }\n    if number >= 900\
    \ {\n        result.push_str(\"cm\");\n        number -= 900;\n    }\n    if number\
    \ >= 500 {\n        result.push('d');\n        number -= 500;\n    }\n    if number\
    \ >= 400 {\n        result.push_str(\"cd\");\n        number -= 400;\n    }\n\
    \    while number >= 100 {\n        result.push('c');\n        number -= 100;\n\
    \    }\n    if number >= 90 {\n        result.push_str(\"xc\");\n        number\
    \ -= 90;\n    }\n    if number >= 50 {\n        result.push('l');\n        number\
    \ -= 50;\n    }\n    if number >= 40 {\n        result.push_str(\"xl\");\n   \
    \     number -= 40;\n    }\n    while number >= 10 {\n        result.push('x');\n\
    \        number -= 10;\n    }\n    if number >= 9 {\n        result.push_str(\"\
    ix\");\n        number -= 9;\n    }\n    if number >= 5 {\n        result.push('v');\n\
    \        number -= 5;\n    }\n    if number >= 4 {\n        result.push_str(\"\
    iv\");\n        number -= 4;\n    }\n    while number >= 1 {\n        result.push('i');\n\
    \        number -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        let roman_digit = match digit {\n            1 =>\
    \ \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n            4 =>\
    \ \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n            7 =>\
    \ \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n           \
    \ _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit, result);\n\
    \        num /= 10;\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    let mut digit = 0;\n   \
    \ while number > 0 {\n        let ones = number % 10;\n        number /= 10;\n\
    \        let tens = number % 10;\n        number /= 10;\n        let hundreds\
    \ = number % 10;\n        number /= 10;\n        let thousands = number % 10;\n\
    \        number /= 10;\n        if digit == 0 {\n            result = format!(\"\
    {}{}\", result, ones_to_mini_roman(ones));\n        } else if digit == 1 {\n \
    \           result = format!(\"{}{}\", result, tens_to_mini_roman(tens));\n  \
    \      } else if digit == 2 {\n            result = format!(\"{}{}\", result,\
    \ hundreds_to_mini_roman(hundreds));\n        } else if digit == 3 {\n       \
    \     result = format!(\"{}{}\", result, thousands_to_mini_roman(thousands));\n\
    \        }\n        digit += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n    \
    \        result.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n     \
    \   } else if num >= 500 {\n            result.push('d');\n            num -=\
    \ 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\");\n\
    \            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut digit = 0;\n    let mut digit_value\
    \ = 1;\n    while number > 0 {\n        digit = number % 10;\n        number /=\
    \ 10;\n        if digit == 4 {\n            result.insert(0, 'i');\n         \
    \   result.insert(0, 'v');\n        } else if digit == 9 {\n            result.insert(0,\
    \ 'i');\n            result.insert(0, 'x');\n        } else {\n            if\
    \ digit >= 5 {\n                result.insert(0, 'v');\n                digit\
    \ -= 5;\n            }\n            for _ in 0..digit {\n                result.insert(0,\
    \ 'i');\n            }\n        }\n        if digit_value == 10 {\n          \
    \  result = result.replace(\"iiiii\", \"v\");\n            result = result.replace(\"\
    vv\", \"x\");\n            result = result.replace(\"iiii\", \"iv\");\n      \
    \      result = result.replace(\"viv\", \"ix\");\n        } else if digit_value\
    \ == 100 {\n            result = result.replace(\"iiiiiiiii\", \"ix\");\n    \
    \        result = result.replace(\"xxxxxxxxx\", \"c\");\n            result =\
    \ result.replace(\"iiiiiiii\", \"viii\");\n            result = result.replace(\"\
    xxxxxxxx\", \"lxxx\");\n            result = result.replace(\"iiiiiii\", \"vii\"\
    );\n            result = result.replace(\"xxxxxxx\", \"lxx\");\n            result\
    \ = result.replace(\"iiiiii\", \"vi\");\n            result = result.replace(\"\
    xxxxxx\", \"lx\");\n            result = result.replace(\"iiiii\", \"v\");\n \
    \           result = result.replace(\"xxxxx\", \"l\");\n            result = result.replace(\"\
    iiii\", \"iv\");\n            result = result.replace(\"xxxx\", \"xl\");\n   \
    \         result = result.replace(\"iii\", \"iii\");\n            result = result.replace(\"\
    xxx\", \"xxx\");\n            result = result.replace(\"ii\", \"ii\");\n     \
    \       result = result.replace(\"xx\", \"xx\");\n            result = result.replace(\"\
    i\", \"i\");\n            result = result.replace(\"x\", \"x\");\n        }\n\
    \       ", "    let mut result = String::new();\n    let mut number = number;\n\
    \    while number > 0 {\n        if number >= 1000 {\n            result.push('m');\n\
    \            number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut result = String::new();\n    let mut number = number;\n    while number\
    \ > 0 {\n        if number >= 1000 {\n            result.push('m');\n        \
    \    number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        if digit ==\
    \ 9 {\n            result.push_str(&MINI_ROMAN_DIGITS[i + 1]);\n            result.push_str(&MINI_ROMAN_DIGITS[i]);\n\
    \        } else if digit == 4 {\n            result.push_str(&MINI_ROMAN_DIGITS[i\
    \ + 1]);\n            result.push_str(&MINI_ROMAN_DIGITS[i]);\n        } else\
    \ if digit >= 5 {\n            result.push_str(&MINI_ROMAN_DIGITS[i + 1]);\n \
    \           for _ in 0..digit - 5 {\n                result.push_str(&MINI_ROMAN_DIGITS[i]);\n\
    \            }\n        } else {\n            for _ in 0..digit {\n          \
    \      result.push_str(&MINI_ROMAN_DIGITS[i]);\n            }\n        }\n   \
    \     num /= 10;\n        i += 2;\n    }\n    result.chars().rev().collect()",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ roman_numerals = vec![\n        (\"m\", 1000),\n        (\"cm\", 900),\n   \
    \     (\"d\", 500),\n        (\"cd\", 400),\n        (\"c\", 100),\n        (\"\
    xc\", 90),\n        (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n\
    \        (\"ix\", 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n        (\"\
    i\", 1),\n    ];\n    while number > 0 {\n        let (numeral, value) = roman_numerals.pop().unwrap();\n\
    \        while number >= value {\n            result.push_str(numeral);\n    \
    \        number -= value;\n        }\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut i = 0;\n    while\
    \ number > 0 {\n        let digit = number % 10;\n        if digit == 4 {\n  \
    \          result.insert(0, ROMAN_DIGITS[i + 1]);\n            result.insert(0,\
    \ ROMAN_DIGITS[i]);\n        } else if digit == 9 {\n            result.insert(0,\
    \ ROMAN_DIGITS[i + 2]);\n            result.insert(0, ROMAN_DIGITS[i]);\n    \
    \    } else if digit >= 5 {\n            result.insert(0, ROMAN_DIGITS[i + 1]);\n\
    \            for _ in 0..digit - 5 {\n                result.insert(0, ROMAN_DIGITS[i]);\n\
    \            }\n        } else {\n            for _ in 0..digit {\n          \
    \      result.insert(0, ROMAN_DIGITS[i]);\n            }\n        }\n        number\
    \ /= 10;\n        i += 2;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        if digit == 0 {\n           \
    \ i += 1;\n            continue;\n        }\n        let mut roman = String::new();\n\
    \        match i {\n            0 => {\n                if digit <= 3 {\n    \
    \                roman.push_str(&\"i\".repeat(digit as usize));\n            \
    \    } else if digit == 4 {\n                    roman.push_str(\"iv\");\n   \
    \             } else if digit == 5 {\n                    roman.push_str(\"v\"\
    );\n                } else if digit <= 8 {\n                    roman.push_str(\"\
    v\");\n                    roman.push_str(&\"i\".repeat((digit - 5) as usize));\n\
    \                } else {\n                    roman.push_str(\"ix\");\n     \
    \           }\n            }\n            1 => {\n                if digit <=\
    \ 3 {\n                    roman.push_str(&\"x\".repeat(digit as usize));\n  \
    \              } else if digit == 4 {\n                    roman.push_str(\"xl\"\
    );\n                } else if digit == 5 {\n                    roman.push_str(\"\
    l\");\n                } else if digit <= 8 {\n                    roman.push_str(\"\
    l\");\n                    roman.push_str(&\"x\".repeat((digit - 5) as usize));\n\
    \                } else {\n                    roman.push_str(\"xc\");\n     \
    \           }\n            }\n            2 => {\n                if digit <=\
    \ 3 {\n                    roman.push_str(&\"c\".repeat(digit as usize));\n  \
    \              } else if digit == 4 {\n                    roman.push_str(\"cd\"\
    );\n                } else if digit == 5 {\n                    roman.push_str(\"\
    d\");\n                } else if digit <= 8 {\n                    roman.push_str(\"\
    d\");\n                    roman.push_str(&\"c\".repeat((digit - 5) as usize));\n\
    \                } else {\n                    roman.push_str(\"cm\");\n     \
    \           }\n            }\n            3 => {\n                roman.push_str(&\"\
    m\".repeat(digit as", "    let mut result = String::new();\n    let mut number\
    \ = number;\n    while number > 0 {\n        if number >= 1000 {\n           \
    \ result.push('m');\n            number -= 1000;\n        } else if number >=\
    \ 900 {\n            result.push_str(\"cm\");\n            number -= 900;\n  \
    \      } else if number >= 500 {\n            result.push('d');\n            number\
    \ -= 500;\n        } else if number >= 400 {\n            result.push_str(\"cd\"\
    );\n            number -= 400;\n        } else if number >= 100 {\n          \
    \  result.push('c');\n            number -= 100;\n        } else if number >=\
    \ 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n    \
    \    } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num >= 1000 {\n        result.push('m');\n\
    \        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut i = 0;\n    while number > 0 {\n      \
    \  let digit = number % 10;\n        number /= 10;\n        if digit > 0 {\n \
    \           result = mini_roman_digit(digit, i) + &result;\n        }\n      \
    \  i += 1;\n    }\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let mut i = 0;\n    while number > 0 {\n        let digit\
    \ = number % 10;\n        number /= 10;\n        result = format!(\"{}{}\", mini_roman_digit(digit,\
    \ i), result);\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n    \
    \        result.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n     \
    \   } else if num >= 500 {\n            result.push('d');\n            num -=\
    \ 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\");\n\
    \            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut numeral_pairs = vec![\n        (1000,\
    \ 'm'),\n        (900, 'c'),\n        (500, 'd'),\n        (400, 'c'),\n     \
    \   (100, 'c'),\n        (90, 'x'),\n        (50, 'l'),\n        (40, 'x'),\n\
    \        (10, 'x'),\n        (9, 'i'),\n        (5, 'v'),\n        (4, 'i'),\n\
    \        (1, 'i'),\n    ];\n    while number > 0 {\n        for (value, numeral)\
    \ in numeral_pairs.iter_mut() {\n            if number >= *value {\n         \
    \       result.push(*numeral);\n                number -= *value;\n          \
    \      break;\n            }\n        }\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        let roman_digit = match digit {\n\
    \            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n\
    \            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n\
    \            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\"\
    ,\n            _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        number /= 10;\n        i += 1;\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut number = number;\n    while number\
    \ > 0 {\n        if number >= 1000 {\n            result.push('m');\n        \
    \    number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ symbols = vec![\n        (1000, 'm'),\n        (900, 'c'),\n        (500, 'd'),\n\
    \        (400, 'c'),\n        (100, 'c'),\n        (90, 'x'),\n        (50, 'l'),\n\
    \        (40, 'x'),\n        (10, 'x'),\n        (9, 'i'),\n        (5, 'v'),\n\
    \        (4, 'i'),\n        (1, 'i'),\n    ];\n    while number > 0 {\n      \
    \  for (value, symbol) in symbols.iter() {\n            if number >= *value {\n\
    \                number -= *value;\n                result.push(*symbol);\n  \
    \              break;\n            }\n        }\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut number = number;\n    while number\
    \ > 0 {\n        if number >= 1000 {\n            result.push('m');\n        \
    \    number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        result = mini_roman_digit(digit, i) + &result;\n        i += 1;\n   \
    \ }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut numeral = 0;\n    let mut numeral_value\
    \ = 0;\n    while number > 0 {\n        numeral = number % 10;\n        numeral_value\
    \ = numeral * 10_isize.pow(result.len() as u32);\n        result = format!(\"\
    {}{}\", mini_roman_numeral(numeral_value), result);\n        number /= 10;\n \
    \   }\n    result", "    let mut result = String::new();\n    let mut number =\
    \ number;\n    while number > 0 {\n        if number >= 1000 {\n            result.push('m');\n\
    \            number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut result = String::new();\n    let mut number = number;\n    let mut\
    \ num_digits = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        number /= 10;\n        num_digits += 1;\n        result = match digit\
    \ {\n            1 => format!(\"i{}\", result),\n            2 => format!(\"ii{}\"\
    , result),\n            3 => format!(\"iii{}\", result),\n            4 => format!(\"\
    iv{}\", result),\n            5 => format!(\"v{}\", result),\n            6 =>\
    \ format!(\"vi{}\", result),\n            7 => format!(\"vii{}\", result),\n \
    \           8 => format!(\"viii{}\", result),\n            9 => format!(\"ix{}\"\
    , result),\n            _ => result,\n        };\n    }\n    match num_digits\
    \ {\n        2 => result = format!(\"x{}\", result),\n        3 => result = format!(\"\
    c{}\", result),\n        4 => result = format!(\"m{}\", result),\n        _ =>\
    \ (),\n    }\n    result", "    let mut number = number;\n    let mut result =\
    \ String::new();\n    while number > 0 {\n        if number >= 1000 {\n      \
    \      result.push('m');\n            number -= 1000;\n        } else if number\
    \ >= 900 {\n            result.push_str(\"cm\");\n            number -= 900;\n\
    \        } else if number >= 500 {\n            result.push('d');\n          \
    \  number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut i = 0;\n    while number > 0 {\n      \
    \  let digit = number % 10;\n        number /= 10;\n        let roman_digit =\
    \ match digit {\n            1 => \"i\",\n            2 => \"ii\",\n         \
    \   3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n       \
    \     6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n  \
    \          9 => \"ix\",\n            _ => \"\",\n        };\n        result =\
    \ format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut number = number;\n    while number\
    \ > 0 {\n        if number >= 1000 {\n            result.push('m');\n        \
    \    number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ roman_numerals = vec![\n        (\"m\", 1000),\n        (\"d\", 500),\n    \
    \    (\"c\", 100),\n        (\"l\", 50),\n        (\"x\", 10),\n        (\"v\"\
    , 5),\n        (\"i\", 1),\n    ];\n\n    while number > 0 {\n        let mut\
    \ current_numeral = roman_numerals.pop().unwrap();\n        let (numeral, value)\
    \ = (current_numeral.0, current_numeral.1);\n\n        while number >= value {\n\
    \            result.push_str(numeral);\n            number -= value;\n       \
    \ }\n\n        if number >= value - roman_numerals.last().unwrap().1 {\n     \
    \       result.push_str(roman_numerals.last().unwrap().0);\n            result.push_str(numeral);\n\
    \            number -= value - roman_numerals.last().unwrap().1;\n        }\n\
    \    }\n\n    result", "    let mut result = String::new();\n    let mut num =\
    \ number;\n    while num >= 1000 {\n        result.push('m');\n        num -=\
    \ 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"cm\");\n      \
    \  num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n      \
    \  num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\");\n\
    \        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut number = number;\n    let\
    \ mut result = String::new();\n    let mut i = 0;\n    while number > 0 {\n  \
    \      let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut remaining = number;\n    let mut current_digit = 0;\n    let mut\
    \ current_value = 1000;\n    while remaining > 0 {\n        let digit = remaining\
    \ / current_value;\n        remaining = remaining % current_value;\n        current_digit\
    \ += 1;\n        if digit > 0 {\n            result.push_str(&mini_roman_digit(digit,\
    \ current_digit));\n        }\n        current_value /= 10;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        if digit ==\
    \ 4 {\n            result.insert(0, ROMAN_NUMERALS[i + 1]);\n            result.insert(0,\
    \ ROMAN_NUMERALS[i]);\n        } else if digit == 9 {\n            result.insert(0,\
    \ ROMAN_NUMERALS[i + 2]);\n            result.insert(0, ROMAN_NUMERALS[i]);\n\
    \        } else if digit >= 5 {\n            result.insert(0, ROMAN_NUMERALS[i\
    \ + 1]);\n            for _ in 0..digit - 5 {\n                result.insert(0,\
    \ ROMAN_NUMERALS[i]);\n            }\n        } else {\n            for _ in 0..digit\
    \ {\n                result.insert(0, ROMAN_NUMERALS[i]);\n            }\n   \
    \     }\n        num /= 10;\n        i += 2;\n    }\n    result", "    let mut\
    \ result = String::new();\n    let mut number = number;\n    while number > 0\
    \ {\n        if number >= 1000 {\n            result.push('m');\n            number\
    \ -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let roman_digit = match digit {\n            0 => \"\",\n           \
    \ 1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n         \
    \   4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n        \
    \    7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n   \
    \         _ => panic!(\"Invalid digit: {}\", digit),\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut number = number;\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        let roman_digit = match digit {\n            1 => \"i\",\n \
    \           2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n\
    \            5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n\
    \            8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n\
    \        };\n        result = format!(\"{}{}\", roman_digit, result);\n      \
    \  i += 1;\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit\
    \ = num % 10;\n        num /= 10;\n        if digit == 0 {\n            i += 1;\n\
    \            continue;\n        }\n        let mut digit_str = String::new();\n\
    \        if digit <= 3 {\n            digit_str.push_str(&\"i\".repeat(digit as\
    \ usize));\n        } else if digit == 4 {\n            digit_str.push_str(\"\
    iv\");\n        } else if digit <= 8 {\n            digit_str.push_str(\"v\");\n\
    \            digit_str.push_str(&\"i\".repeat((digit - 5) as usize));\n      \
    \  } else {\n            digit_str.push_str(\"ix\");\n        }\n        result.insert_str(0,\
    \ &digit_str);\n        i += 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ symbols = vec![\n        ('m', 1000),\n        ('d', 500),\n        ('c', 100),\n\
    \        ('l', 50),\n        ('x', 10),\n        ('v', 5),\n        ('i', 1),\n\
    \    ];\n    while number > 0 {\n        let (symbol, value) = symbols.pop().unwrap();\n\
    \        let count = number / value;\n        number = number % value;\n     \
    \   result.push_str(&symbol.to_string().repeat(count as usize));\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let symbols\
    \ = vec![\n        (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n\
    \        (\"cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n      \
    \  (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\"\
    , 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n\
    \    for (symbol, value) in symbols {\n        while number >= value {\n     \
    \       result.push_str(symbol);\n            number -= value;\n        }\n  \
    \  }\n    result", "    let mut roman = String::new();\n    let mut num = number;\n\
    \    while num >= 1000 {\n        roman.push('m');\n        num -= 1000;\n   \
    \ }\n    if num >= 900 {\n        roman.push_str(\"cm\");\n        num -= 900;\n\
    \    }\n    if num >= 500 {\n        roman.push('d');\n        num -= 500;\n \
    \   }\n    if num >= 400 {\n        roman.push_str(\"cd\");\n        num -= 400;\n\
    \    }\n    while num >= 100 {\n        roman.push('c');\n        num -= 100;\n\
    \    }\n    if num >= 90 {\n        roman.push_str(\"xc\");\n        num -= 90;\n\
    \    }\n    if num >= 50 {\n        roman.push('l');\n        num -= 50;\n   \
    \ }\n    if num >= 40 {\n        roman.push_str(\"xl\");\n        num -= 40;\n\
    \    }\n    while num >= 10 {\n        roman.push('x');\n        num -= 10;\n\
    \    }\n    if num >= 9 {\n        roman.push_str(\"ix\");\n        num -= 9;\n\
    \    }\n    if num >= 5 {\n        roman.push('v');\n        num -= 5;\n    }\n\
    \    if num >= 4 {\n        roman.push_str(\"iv\");\n        num -= 4;\n    }\n\
    \    while num >= 1 {\n        roman.push('i');\n        num -= 1;\n    }\n  \
    \  roman", "    let mut number = number;\n    let mut roman = String::new();\n\
    \    let mut numeral_values = vec![\n        (1000, \"m\"),\n        (900, \"\
    cm\"),\n        (500, \"d\"),\n        (400, \"cd\"),\n        (100, \"c\"),\n\
    \        (90, \"xc\"),\n        (50, \"l\"),\n        (40, \"xl\"),\n        (10,\
    \ \"x\"),\n        (9, \"ix\"),\n        (5, \"v\"),\n        (4, \"iv\"),\n \
    \       (1, \"i\"),\n    ];\n    while number > 0 {\n        for (value, numeral)\
    \ in numeral_values.iter() {\n            if number >= *value {\n            \
    \    roman.push_str(numeral);\n                number -= *value;\n           \
    \     break;\n            }\n        }\n    }\n    roman", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    while number > 0 {\n   \
    \     if number >= 1000 {\n            result.push('m');\n            number -=\
    \ 1000;\n        } else if number >= 900 {\n            result.push_str(\"cm\"\
    );\n            number -= 900;\n        } else if number >= 500 {\n          \
    \  result.push('d');\n            number -= 500;\n        } else if number >=\
    \ 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n  \
    \      } else if number >= 100 {\n            result.push('c');\n            number\
    \ -= 100;\n        } else if number >= 90 {\n            result.push_str(\"xc\"\
    );\n            number -= 90;\n        } else if number >= 50 {\n            result.push('l');\n\
    \            number -= 50;\n        } else if number >= 40 {\n            result.push_str(\"\
    xl\");\n            number -= 40;\n        } else if number >= 10 {\n        \
    \    result.push('x');\n            number -= 10;\n        } else if number >=\
    \ 9 {\n            result.push_str(\"ix\");\n            number -= 9;\n      \
    \  } else if number >= 5 {\n            result.push('v');\n            number\
    \ -= 5;\n        } else if number >= 4 {\n            result.push_str(\"iv\");\n\
    \            number -= 4;\n        } else if number >= 1 {\n            result.push('i');\n\
    \            number -= 1;\n        }\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut numeral_map = vec![\n\
    \        (\"m\", 1000),\n        (\"d\", 500),\n        (\"c\", 100),\n      \
    \  (\"l\", 50),\n        (\"x\", 10),\n        (\"v\", 5),\n        (\"i\", 1),\n\
    \    ];\n    while number > 0 {\n        let (numeral, value) = numeral_map.pop().unwrap();\n\
    \        let mut count = number / value;\n        number = number % value;\n \
    \       if count == 4 {\n            result.push_str(numeral);\n            result.push_str(&numeral_map.last().unwrap().0);\n\
    \        } else {\n            for _ in 0..count {\n                result.push_str(numeral);\n\
    \            }\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push('m');\n\
    \        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut num_to_roman = |num, roman|\
    \ {\n        while number >= num {\n            result.push_str(roman);\n    \
    \        number -= num;\n        }\n    };\n    num_to_roman(1000, \"m\");\n \
    \   num_to_roman(900, \"cm\");\n    num_to_roman(500, \"d\");\n    num_to_roman(400,\
    \ \"cd\");\n    num_to_roman(100, \"c\");\n    num_to_roman(90, \"xc\");\n   \
    \ num_to_roman(50, \"l\");\n    num_to_roman(40, \"xl\");\n    num_to_roman(10,\
    \ \"x\");\n    num_to_roman(9, \"ix\");\n    num_to_roman(5, \"v\");\n    num_to_roman(4,\
    \ \"iv\");\n    num_to_roman(1, \"i\");\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut roman_numerals = vec![\n   \
    \     (\"m\", 1000),\n        (\"d\", 500),\n        (\"c\", 100),\n        (\"\
    l\", 50),\n        (\"x\", 10),\n        (\"v\", 5),\n        (\"i\", 1),\n  \
    \  ];\n\n    while number > 0 {\n        let (numeral, value) = roman_numerals.pop().unwrap();\n\
    \        let mut count = number / value;\n        number %= value;\n\n       \
    \ if count == 4 && !result.is_empty() {\n            let last_char = result.pop().unwrap();\n\
    \            result.push_str(numeral);\n            result.push(match last_char\
    \ {\n                'i' => 'v',\n                'x' => 'l',\n              \
    \  'c' => 'd',\n                _ => last_char,\n            });\n        } else\
    \ {\n            while count > 0 {\n                result.push_str(numeral);\n\
    \                count -= 1;\n            }\n        }\n    }\n\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ num_to_roman = |num, roman| {\n        while number >= num {\n            result.push_str(roman);\n\
    \            number -= num;\n        }\n    };\n    num_to_roman(1000, \"m\");\n\
    \    num_to_roman(900, \"cm\");\n    num_to_roman(500, \"d\");\n    num_to_roman(400,\
    \ \"cd\");\n    num_to_roman(100, \"c\");\n    num_to_roman(90, \"xc\");\n   \
    \ num_to_roman(50, \"l\");\n    num_to_roman(40, \"xl\");\n    num_to_roman(10,\
    \ \"x\");\n    num_to_roman(9, \"ix\");\n    num_to_roman(5, \"v\");\n    num_to_roman(4,\
    \ \"iv\");\n    num_to_roman(1, \"i\");\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\"\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number >= 1000 {\n        result.push('m');\n\
    \        number -= 1000;\n    }\n    if number >= 900 {\n        result.push_str(\"\
    cm\");\n        number -= 900;\n    }\n    if number >= 500 {\n        result.push('d');\n\
    \        number -= 500;\n    }\n    if number >= 400 {\n        result.push_str(\"\
    cd\");\n        number -= 400;\n    }\n    while number >= 100 {\n        result.push('c');\n\
    \        number -= 100;\n    }\n    if number >= 90 {\n        result.push_str(\"\
    xc\");\n        number -= 90;\n    }\n    if number >= 50 {\n        result.push('l');\n\
    \        number -= 50;\n    }\n    if number >= 40 {\n        result.push_str(\"\
    xl\");\n        number -= 40;\n    }\n    while number >= 10 {\n        result.push('x');\n\
    \        number -= 10;\n    }\n    if number >= 9 {\n        result.push_str(\"\
    ix\");\n        number -= 9;\n    }\n    if number >= 5 {\n        result.push('v');\n\
    \        number -= 5;\n    }\n    if number >= 4 {\n        result.push_str(\"\
    iv\");\n        number -= 4;\n    }\n    while number >= 1 {\n        result.push('i');\n\
    \        number -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut i = 0;\n    while number > 0 {\n  \
    \      let digit = number % 10;\n        number /= 10;\n        match digit {\n\
    \            1 => result.push_str(ROMAN_DIGITS[i][0]),\n            2 => result.push_str(ROMAN_DIGITS[i][0]),\n\
    \            3 => result.push_str(ROMAN_DIGITS[i][0]),\n            4 => result.push_str(ROMAN_DIGITS[i][1]),\n\
    \            5 => result.push_str(ROMAN_DIGITS[i][2]),\n            6 => result.push_str(ROMAN_DIGITS[i][2]),\n\
    \            7 => result.push_str(ROMAN_DIGITS[i][2]),\n            8 => result.push_str(ROMAN_DIGITS[i][2]),\n\
    \            9 => result.push_str(ROMAN_DIGITS[i][3]),\n            _ => (),\n\
    \        }\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        if digit == 0 {\n           \
    \ i += 1;\n            continue;\n        }\n        let roman_digit = match i\
    \ {\n            0 => match digit {\n                1 => 'i',\n             \
    \   2 => 'ii',\n                3 => 'iii',\n                4 => 'iv',\n    \
    \            5 => 'v',\n                6 => 'vi',\n                7 => 'vii',\n\
    \                8 => 'viii',\n                9 => 'ix',\n                _ =>\
    \ '',\n            },\n            1 => match digit {\n                1 => 'x',\n\
    \                2 => 'xx',\n                3 => 'xxx',\n                4 =>\
    \ 'xl',\n                5 => 'l',\n                6 => 'lx',\n             \
    \   7 => 'lxx',\n                8 => 'lxxx',\n                9 => 'xc',\n  \
    \              _ => '',\n            },\n            2 => match digit {\n    \
    \            1 => 'c',\n                2 => 'cc',\n                3 => 'ccc',\n\
    \                4 => 'cd',\n                5 => 'd',\n                6 => 'dc',\n\
    \                7 => 'dcc',\n                8 => 'dccc',\n                9\
    \ => 'cm',\n                _ => '',\n            },\n            3 => match digit\
    \ {\n                1 => 'm',\n                2 => 'mm',\n                3\
    \ => 'mmm',\n                _ => '',\n            },\n            _ => '',\n\
    \        };\n        result.push(roman_digit);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut number = number;\n    while number\
    \ > 0 {\n        if number >= 1000 {\n            result.push('m');\n        \
    \    number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut i = 0;\n    while number > 0 {\n  \
    \      let digit = number % 10;\n        number /= 10;\n        result = match\
    \ digit {\n            0 => result,\n            1 => format!(\"{}{}\", ROMAN_DIGITS[i][0],\
    \ result),\n            2 => format!(\"{}{}\", ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0]),\n\
    \            3 => format!(\"{}{}{}\", ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0],\
    \ ROMAN_DIGITS[i][0]),\n            4 => format!(\"{}{}\", ROMAN_DIGITS[i][0],\
    \ ROMAN_DIGITS[i][1]),\n            5 => format!(\"{}\", ROMAN_DIGITS[i][1]),\n\
    \            6 => format!(\"{}{}\", ROMAN_DIGITS[i][1], ROMAN_DIGITS[i][0]),\n\
    \            7 => format!(\"{}{}{}\", ROMAN_DIGITS[i][1], ROMAN_DIGITS[i][0],\
    \ ROMAN_DIGITS[i][0]),\n            8 => format!(\"{}{}{}{}\", ROMAN_DIGITS[i][1],\
    \ ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0]),\n            9\
    \ => format!(\"{}{}\", ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][2]),\n            _\
    \ => panic!(\"Invalid digit: {}\", digit),\n        };\n        i += 1;\n    }\n\
    \    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num >= 1000 {\n        result.push('m');\n        num -= 1000;\n  \
    \  }\n    if num >= 900 {\n        result.push_str(\"cm\");\n        num -= 900;\n\
    \    }\n    if num >= 500 {\n        result.push('d');\n        num -= 500;\n\
    \    }\n    if num >= 400 {\n        result.push_str(\"cd\");\n        num -=\
    \ 400;\n    }\n    while num >= 100 {\n        result.push('c');\n        num\
    \ -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\");\n     \
    \   num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n       \
    \ num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\");\n  \
    \      num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n \
    \       num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\");\n\
    \        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n    \
    \    num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n \
    \       num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n  \
    \      num -= 1;\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut roman_numerals = vec![\n        (\"m\"\
    , 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n        (\"cd\", 400),\n\
    \        (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n        (\"\
    xl\", 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n\
    \        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    while number > 0 {\n \
    \       let (numeral, value) = roman_numerals.pop().unwrap();\n        while number\
    \ >= value {\n            result.push_str(numeral);\n            number -= value;\n\
    \        }\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit\
    \ = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit, i)\
    \ + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        if digit == 0 {\n           \
    \ i += 1;\n            continue;\n        }\n        let roman_digit = match i\
    \ {\n            0 => match digit {\n                1 => \"i\",\n           \
    \     2 => \"ii\",\n                3 => \"iii\",\n                4 => \"iv\"\
    ,\n                5 => \"v\",\n                6 => \"vi\",\n               \
    \ 7 => \"vii\",\n                8 => \"viii\",\n                9 => \"ix\",\n\
    \                _ => \"\",\n            },\n            1 => match digit {\n\
    \                1 => \"x\",\n                2 => \"xx\",\n                3\
    \ => \"xxx\",\n                4 => \"xl\",\n                5 => \"l\",\n   \
    \             6 => \"lx\",\n                7 => \"lxx\",\n                8 =>\
    \ \"lxxx\",\n                9 => \"xc\",\n                _ => \"\",\n      \
    \      },\n            2 => match digit {\n                1 => \"c\",\n     \
    \           2 => \"cc\",\n                3 => \"ccc\",\n                4 =>\
    \ \"cd\",\n                5 => \"d\",\n                6 => \"dc\",\n       \
    \         7 => \"dcc\",\n                8 => \"dccc\",\n                9 =>\
    \ \"cm\",\n                _ => \"\",\n            },\n            3 => match\
    \ digit {\n                1 => \"m\",\n                2 => \"mm\",\n       \
    \         3 => \"mmm\",\n                _ => \"\",\n            },\n        \
    \    _ => \"\",\n        };\n        result.insert_str(0, roman_digit);\n    \
    \    i += 1;\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    while num >= 1000 {\n        result.push('m');\n    \
    \    num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"cm\"\
    );\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        if digit == 4 {\n            result.insert(0,\
    \ ROMAN_NUMERALS[i + 1]);\n            result.insert(0, ROMAN_NUMERALS[i]);\n\
    \        } else if digit == 9 {\n            result.insert(0, ROMAN_NUMERALS[i\
    \ + 2]);\n            result.insert(0, ROMAN_NUMERALS[i]);\n        } else if\
    \ digit < 4 {\n            for _ in 0..digit {\n                result.insert(0,\
    \ ROMAN_NUMERALS[i]);\n            }\n        } else {\n            result.insert(0,\
    \ ROMAN_NUMERALS[i + 1]);\n            for _ in 0..(digit - 5) {\n           \
    \     result.insert(0, ROMAN_NUMERALS[i]);\n            }\n        }\n       \
    \ number /= 10;\n        i += 2;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        result = mini_roman_digit(digit, i) + &result;\n        i += 1;\n   \
    \ }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push('m');\n\
    \        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push('m');\n\
    \        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut num = number;\n    let mut result\
    \ = String::new();\n    let roman_numerals = vec![\n        (\"m\", 1000),\n \
    \       (\"cm\", 900),\n        (\"d\", 500),\n        (\"cd\", 400),\n      \
    \  (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n        (\"xl\"\
    , 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n    \
    \    (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    for (roman, arabic) in roman_numerals\
    \ {\n        while num >= arabic {\n            result.push_str(roman);\n    \
    \        num -= arabic;\n        }\n    }\n    result", "    let mut number =\
    \ number;\n    let mut result = String::new();\n    let mut numeral_map = vec![\n\
    \        (\"m\", 1000),\n        (\"d\", 500),\n        (\"c\", 100),\n      \
    \  (\"l\", 50),\n        (\"x\", 10),\n        (\"v\", 5),\n        (\"i\", 1),\n\
    \    ];\n    while number > 0 {\n        let (numeral, value) = numeral_map.pop().unwrap();\n\
    \        let mut count = number / value;\n        number %= value;\n        if\
    \ count == 4 {\n            result.push_str(numeral);\n            result.push_str(&numeral_map.last().unwrap().0);\n\
    \        } else {\n            for _ in 0..count {\n                result.push_str(numeral);\n\
    \            }\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        result =\
    \ mini_roman_digit(digit, i) + &result;\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push('m');\n\
    \        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        if digit == 9 {\n            result.push_str(&MINI_ROMAN_DIGITS[i\
    \ + 1]);\n            result.push_str(&MINI_ROMAN_DIGITS[i]);\n        } else\
    \ if digit == 4 {\n            result.push_str(&MINI_ROMAN_DIGITS[i + 1]);\n \
    \           result.push_str(&MINI_ROMAN_DIGITS[i]);\n        } else if digit >=\
    \ 5 {\n            result.push_str(&MINI_ROMAN_DIGITS[i + 1]);\n            for\
    \ _ in 0..digit - 5 {\n                result.push_str(&MINI_ROMAN_DIGITS[i]);\n\
    \            }\n        } else {\n            for _ in 0..digit {\n          \
    \      result.push_str(&MINI_ROMAN_DIGITS[i]);\n            }\n        }\n   \
    \     number /= 10;\n        i += 2;\n    }\n    result.chars().rev().collect()",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let roman_digit = match digit {\n            1 => \"i\",\n          \
    \  2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n       \
    \     5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n     \
    \       8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n   \
    \     };\n        result = format!(\"{}{}\", roman_digit, result);\n        i\
    \ += 1;\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ number = number;\n    while number > 0 {\n        if number >= 1000 {\n    \
    \        result.push('m');\n            number -= 1000;\n        } else if number\
    \ >= 900 {\n            result.push_str(\"cm\");\n            number -= 900;\n\
    \        } else if number >= 500 {\n            result.push('d');\n          \
    \  number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let (one, five, ten) = match\
    \ i {\n            0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n\
    \            2 => ('c', 'd', 'm'),\n            3 => ('m', 'v', 'x'),\n      \
    \      _ => panic!(\"number too large\"),\n        };\n        match digit {\n\
    \            1 => result.push(one),\n            2 => result.push_str(&[one, one].iter().collect::<String>()),\n\
    \            3 => result.push_str(&[one, one, one].iter().collect::<String>()),\n\
    \            4 => result.push_str(&[one, five].iter().collect::<String>()),\n\
    \            5 => result.push(five),\n            6 => result.push_str(&[five,\
    \ one].iter().collect::<String>()),\n            7 => result.push_str(&[five,\
    \ one, one].iter().collect::<String>()),\n            8 => result.push_str(&[five,\
    \ one, one, one].iter().collect::<String>()),\n            9 => result.push_str(&[one,\
    \ ten].iter().collect::<String>()),\n            _ => (),\n        }\n       \
    \ i += 1;\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ num = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit =\
    \ num % 10;\n        num /= 10;\n        let roman_digit = match digit {\n   \
    \         1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n \
    \           4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n\
    \            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\"\
    ,\n            _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number >= 1000 {\n        result.push('m');\n\
    \        number -= 1000;\n    }\n    if number >= 900 {\n        result.push_str(\"\
    cm\");\n        number -= 900;\n    }\n    if number >= 500 {\n        result.push('d');\n\
    \        number -= 500;\n    }\n    if number >= 400 {\n        result.push_str(\"\
    cd\");\n        number -= 400;\n    }\n    while number >= 100 {\n        result.push('c');\n\
    \        number -= 100;\n    }\n    if number >= 90 {\n        result.push_str(\"\
    xc\");\n        number -= 90;\n    }\n    if number >= 50 {\n        result.push('l');\n\
    \        number -= 50;\n    }\n    if number >= 40 {\n        result.push_str(\"\
    xl\");\n        number -= 40;\n    }\n    while number >= 10 {\n        result.push('x');\n\
    \        number -= 10;\n    }\n    if number >= 9 {\n        result.push_str(\"\
    ix\");\n        number -= 9;\n    }\n    if number >= 5 {\n        result.push('v');\n\
    \        number -= 5;\n    }\n    if number >= 4 {\n        result.push_str(\"\
    iv\");\n        number -= 4;\n    }\n    while number >= 1 {\n        result.push('i');\n\
    \        number -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut roman = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        roman =\
    \ roman_digit.to_string() + &roman;\n        i += 1;\n    }\n    roman", "   \
    \ let mut number = number;\n    let mut result = String::new();\n    while number\
    \ > 0 {\n        if number >= 1000 {\n            result.push('m');\n        \
    \    number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut result = String::new();\n    let mut number = number;\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        if\
    \ digit > 0 {\n            result.insert_str(0, &mini_roman_digit(digit, i));\n\
    \        }\n        number /= 10;\n        i += 1;\n    }\n    result", "    let\
    \ mut number = number;\n    let mut result = String::new();\n    let mut i = 0;\n\
    \    while number > 0 {\n        let digit = number % 10;\n        number /= 10;\n\
    \        result = mini_roman_digit(digit, i) + &result;\n        i += 1;\n   \
    \ }\n    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut symbols = vec![\n        (\"m\", 1000),\n        (\"d\", 500),\n\
    \        (\"c\", 100),\n        (\"l\", 50),\n        (\"x\", 10),\n        (\"\
    v\", 5),\n        (\"i\", 1),\n    ];\n    while number > 0 {\n        let (symbol,\
    \ value) = symbols.pop().unwrap();\n        let count = number / value;\n    \
    \    number %= value;\n        result.push_str(&symbol.repeat(count as usize));\n\
    \    }\n    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut numeral_pairs = vec![\n        (1000, \"m\"),\n        (900, \"cm\"\
    ),\n        (500, \"d\"),\n        (400, \"cd\"),\n        (100, \"c\"),\n   \
    \     (90, \"xc\"),\n        (50, \"l\"),\n        (40, \"xl\"),\n        (10,\
    \ \"x\"),\n        (9, \"ix\"),\n        (5, \"v\"),\n        (4, \"iv\"),\n \
    \       (1, \"i\"),\n    ];\n    while number > 0 {\n        let (numeral_value,\
    \ numeral_string) = numeral_pairs.pop().unwrap();\n        while number >= numeral_value\
    \ {\n            result.push_str(numeral_string);\n            number -= numeral_value;\n\
    \        }\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit\
    \ = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit, i)\
    \ + &result;\n        i += 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        result =\
    \ mini_roman_digit(digit, i) + &result;\n        i += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ digit = 0;\n    while number > 0 {\n        let digit_value = 10_isize.pow(digit);\n\
    \        let digit_char = match number / digit_value {\n            0 => ' ',\n\
    \            1 => 'i',\n            2 => 'x',\n            3 => 'c',\n       \
    \     4 => 'm',\n            _ => panic!(\"Invalid digit value: {}\", number /\
    \ digit_value),\n        };\n        let digit_count = number / digit_value;\n\
    \        if digit_count == 4 {\n            result.push(digit_char);\n       \
    \     result.push(match digit_char {\n                'i' => 'v',\n          \
    \      'x' => 'l',\n                'c' => 'd',\n                _ => panic!(\"\
    Invalid digit value: {}\", digit_char),\n            });\n        } else if digit_count\
    \ == 9 {\n            result.push(digit_char);\n            result.push(match\
    \ digit_char {\n                'i' => 'x',\n                'x' => 'c',\n   \
    \             'c' => 'm',\n                _ => panic!(\"Invalid digit value:\
    \ {}\", digit_char),\n            });\n        } else {\n            for _ in\
    \ 0..digit_count {\n                result.push(digit_char);\n            }\n\
    \        }\n        number %= digit_value;\n        digit += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let roman_numerals\
    \ = vec![\n        (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n\
    \        (\"cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n      \
    \  (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\"\
    , 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n\
    \    for (roman, arabic) in roman_numerals {\n        while number >= *arabic\
    \ {\n            result.push_str(roman);\n            number -= arabic;\n    \
    \    }\n    }\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let roman_numerals = [\n        (\"m\", 1000),\n     \
    \   (\"cm\", 900),\n        (\"d\", 500),\n        (\"cd\", 400),\n        (\"\
    c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n        (\"xl\", 40),\n\
    \        (\"x\", 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n        (\"\
    iv\", 4),\n        (\"i\", 1),\n    ];\n    for (numeral, value) in roman_numerals.iter()\
    \ {\n        while number >= *value {\n            result.push_str(numeral);\n\
    \            number -= *value;\n        }\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut i = 0;\n    while\
    \ number > 0 {\n        let digit = number % 10;\n        number /= 10;\n    \
    \    result = mini_roman_digit(digit, i) + &result;\n        i += 1;\n    }\n\
    \    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num >= 1000 {\n        result.push('m');\n        num -= 1000;\n  \
    \  }\n    if num >= 900 {\n        result.push_str(\"cm\");\n        num -= 900;\n\
    \    }\n    if num >= 500 {\n        result.push('d');\n        num -= 500;\n\
    \    }\n    if num >= 400 {\n        result.push_str(\"cd\");\n        num -=\
    \ 400;\n    }\n    while num >= 100 {\n        result.push('c');\n        num\
    \ -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\");\n     \
    \   num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n       \
    \ num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\");\n  \
    \      num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n \
    \       num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\");\n\
    \        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n    \
    \    num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n \
    \       num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n  \
    \      num -= 1;\n    }\n    result", "    let mut result = String::new();\n \
    \   let mut num = number;\n    while num >= 1000 {\n        result.push('m');\n\
    \        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num >= 1000 {\n        result.push('m');\n\
    \        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let (one, five, ten) = match\
    \ i {\n            0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n\
    \            2 => ('c', 'd', 'm'),\n            3 => ('m', '?', '?'),\n      \
    \      _ => panic!(\"Number too large\"),\n        };\n        if digit == 9 {\n\
    \            result.push(ten);\n            result.push(one);\n        } else\
    \ if digit >= 5 {\n            result.push(five);\n            for _ in 0..(digit\
    \ - 5) {\n                result.push(one);\n            }\n        } else if\
    \ digit == 4 {\n            result.push(one);\n            result.push(five);\n\
    \        } else {\n            for _ in 0..digit {\n                result.push(one);\n\
    \            }\n        }\n        i += 1;\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let roman_numerals = [\n\
    \        (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n     \
    \   (\"cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n        (\"\
    l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n\
    \        (\"v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    for\
    \ (numeral, value) in roman_numerals.iter() {\n        while number >= *value\
    \ {\n            result.push_str(numeral);\n            number -= *value;\n  \
    \      }\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ num = number;\n    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        if digit == 0 {\n           \
    \ i += 1;\n            continue;\n        }\n        let roman_digit = match i\
    \ {\n            0 => match digit {\n                1 => \"i\",\n           \
    \     2 => \"ii\",\n                3 => \"iii\",\n                4 => \"iv\"\
    ,\n                5 => \"v\",\n                6 => \"vi\",\n               \
    \ 7 => \"vii\",\n                8 => \"viii\",\n                9 => \"ix\",\n\
    \                _ => \"\",\n            },\n            1 => match digit {\n\
    \                1 => \"x\",\n                2 => \"xx\",\n                3\
    \ => \"xxx\",\n                4 => \"xl\",\n                5 => \"l\",\n   \
    \             6 => \"lx\",\n                7 => \"lxx\",\n                8 =>\
    \ \"lxxx\",\n                9 => \"xc\",\n                _ => \"\",\n      \
    \      },\n            2 => match digit {\n                1 => \"c\",\n     \
    \           2 => \"cc\",\n                3 => \"ccc\",\n                4 =>\
    \ \"cd\",\n                5 => \"d\",\n                6 => \"dc\",\n       \
    \         7 => \"dcc\",\n                8 => \"dccc\",\n                9 =>\
    \ \"cm\",\n                _ => \"\",\n            },\n            3 => match\
    \ digit {\n                1 => \"m\",\n                2 => \"mm\",\n       \
    \         3 => \"mmm\",\n                _ => \"\",\n            },\n        \
    \    _ => \"\",\n        };\n        result.insert_str(0, roman_digit);\n    \
    \    i += 1;\n    }\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let symbols = vec![\n        (\"m\", 1000),\n        (\"\
    cm\", 900),\n        (\"d\", 500),\n        (\"cd\", 400),\n        (\"c\", 100),\n\
    \        (\"xc\", 90),\n        (\"l\", 50),\n        (\"xl\", 40),\n        (\"\
    x\", 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n \
    \       (\"i\", 1),\n    ];\n    for (symbol, value) in symbols {\n        while\
    \ number >= value {\n            result.push_str(symbol);\n            number\
    \ -= value;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num >= 1000 {\n        result.push('m');\n\
    \        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut roman = String::new();\n \
    \   let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n   \
    \         roman.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            roman.push_str(\"cm\");\n            num -= 900;\n      \
    \  } else if num >= 500 {\n            roman.push('d');\n            num -= 500;\n\
    \        } else if num >= 400 {\n            roman.push_str(\"cd\");\n       \
    \     num -= 400;\n        } else if num >= 100 {\n            roman.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            roman.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            roman.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            roman.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            roman.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            roman.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            roman.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            roman.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            roman.push('i');\n\
    \            num -= 1;\n        }\n    }\n    roman", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut digit = 0;\n    while number > 0 {\n\
    \        let digit_value = number % 10;\n        number /= 10;\n        digit\
    \ += 1;\n        result = match digit {\n            1 => mini_roman_digit(digit_value,\
    \ 'i', 'v', 'x'),\n            2 => mini_roman_digit(digit_value, 'x', 'l', 'c'),\n\
    \            3 => mini_roman_digit(digit_value, 'c', 'd', 'm'),\n            4\
    \ => mini_roman_digit(digit_value, 'm', 'm', 'm'),\n            _ => panic!(\"\
    number too large\"),\n        } + &result;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    while number > 0 {\n   \
    \     if number >= 1000 {\n            result.push('m');\n            number -=\
    \ 1000;\n        } else if number >= 900 {\n            result.push_str(\"cm\"\
    );\n            number -= 900;\n        } else if number >= 500 {\n          \
    \  result.push('d');\n            number -= 500;\n        } else if number >=\
    \ 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n  \
    \      } else if number >= 100 {\n            result.push('c');\n            number\
    \ -= 100;\n        } else if number >= 90 {\n            result.push_str(\"xc\"\
    );\n            number -= 90;\n        } else if number >= 50 {\n            result.push('l');\n\
    \            number -= 50;\n        } else if number >= 40 {\n            result.push_str(\"\
    xl\");\n            number -= 40;\n        } else if number >= 10 {\n        \
    \    result.push('x');\n            number -= 10;\n        } else if number >=\
    \ 9 {\n            result.push_str(\"ix\");\n            number -= 9;\n      \
    \  } else if number >= 5 {\n            result.push('v');\n            number\
    \ -= 5;\n        } else if number >= 4 {\n            result.push_str(\"iv\");\n\
    \            number -= 4;\n        } else if number >= 1 {\n            result.push('i');\n\
    \            number -= 1;\n        }\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    while number > 0 {\n   \
    \     if number >= 1000 {\n            result.push('m');\n            number -=\
    \ 1000;\n        } else if number >= 900 {\n            result.push_str(\"cm\"\
    );\n            number -= 900;\n        } else if number >= 500 {\n          \
    \  result.push('d');\n            number -= 500;\n        } else if number >=\
    \ 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n  \
    \      } else if number >= 100 {\n            result.push('c');\n            number\
    \ -= 100;\n        } else if number >= 90 {\n            result.push_str(\"xc\"\
    );\n            number -= 90;\n        } else if number >= 50 {\n            result.push('l');\n\
    \            number -= 50;\n        } else if number >= 40 {\n            result.push_str(\"\
    xl\");\n            number -= 40;\n        } else if number >= 10 {\n        \
    \    result.push('x');\n            number -= 10;\n        } else if number >=\
    \ 9 {\n            result.push_str(\"ix\");\n            number -= 9;\n      \
    \  } else if number >= 5 {\n            result.push('v');\n            number\
    \ -= 5;\n        } else if number >= 4 {\n            result.push_str(\"iv\");\n\
    \            number -= 4;\n        } else if number >= 1 {\n            result.push('i');\n\
    \            number -= 1;\n        }\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    let mut i = 0;\n    while num\
    \ > 0 {\n        let digit = num % 10;\n        num /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => 'i',\n            2 => 'ii',\n           \
    \ 3 => 'iii',\n            4 => 'iv',\n            5 => 'v',\n            6 =>\
    \ 'vi',\n            7 => 'vii',\n            8 => 'viii',\n            9 => 'ix',\n\
    \            _ => '',\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        i += 1;\n    }\n    result", "    let mut roman = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          roman.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            roman.push_str(\"cm\");\n            num -= 900;\n      \
    \  } else if num >= 500 {\n            roman.push('d');\n            num -= 500;\n\
    \        } else if num >= 400 {\n            roman.push_str(\"cd\");\n       \
    \     num -= 400;\n        } else if num >= 100 {\n            roman.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            roman.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            roman.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            roman.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            roman.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            roman.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            roman.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            roman.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            roman.push('i');\n\
    \            num -= 1;\n        }\n    }\n    roman", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    let mut i = 0;\n    while\
    \ number > 0 {\n        let digit = number % 10;\n        number /= 10;\n    \
    \    let roman_digit = match digit {\n            1 => \"i\",\n            2 =>\
    \ \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n            5\
    \ => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n           \
    \ 8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n        };\n\
    \        result = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n \
    \   }\n    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        number /= 10;\n        let roman_digit = match digit {\n            1\
    \ => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n           \
    \ 4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n          \
    \  7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n     \
    \       _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut roman_numerals = vec![\n        (\"m\"\
    , 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n        (\"cd\", 400),\n\
    \        (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n        (\"\
    xl\", 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n\
    \        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    while number > 0 {\n \
    \       for (numeral, value) in roman_numerals.iter() {\n            if number\
    \ >= *value {\n                result.push_str(numeral);\n                number\
    \ -= *value;\n                break;\n            }\n        }\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        result = mini_roman_digit(digit, i) + &result;\n        i += 1;\n   \
    \ }\n    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        if digit > 0 {\n            result.insert_str(0, &mini_roman_digit(digit,\
    \ i));\n        }\n        number /= 10;\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut number = number;\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        result = mini_roman_digit(digit, i) + &result;\n        i +=\
    \ 1;\n    }\n    result", "    let mut number = number;\n    let mut result =\
    \ String::new();\n    while number > 0 {\n        if number >= 1000 {\n      \
    \      result.push('m');\n            number -= 1000;\n        } else if number\
    \ >= 900 {\n            result.push_str(\"cm\");\n            number -= 900;\n\
    \        } else if number >= 500 {\n            result.push('d');\n          \
    \  number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num >= 1000 {\n        result.push('m');\n\
    \        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut i = 0;\n    while number > 0 {\n      \
    \  let digit = number % 10;\n        number /= 10;\n        let roman_digit =\
    \ match digit {\n            1 => \"i\",\n            2 => \"ii\",\n         \
    \   3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n       \
    \     6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n  \
    \          9 => \"ix\",\n            _ => \"\",\n        };\n        result =\
    \ format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >=\
    \ 1000 {\n        result.push('m');\n        num -= 1000;\n    }\n    if num >=\
    \ 900 {\n        result.push_str(\"cm\");\n        num -= 900;\n    }\n    if\
    \ num >= 500 {\n        result.push('d');\n        num -= 500;\n    }\n    if\
    \ num >= 400 {\n        result.push_str(\"cd\");\n        num -= 400;\n    }\n\
    \    while num >= 100 {\n        result.push('c');\n        num -= 100;\n    }\n\
    \    if num >= 90 {\n        result.push_str(\"xc\");\n        num -= 90;\n  \
    \  }\n    if num >= 50 {\n        result.push('l');\n        num -= 50;\n    }\n\
    \    if num >= 40 {\n        result.push_str(\"xl\");\n        num -= 40;\n  \
    \  }\n    while num >= 10 {\n        result.push('x');\n        num -= 10;\n \
    \   }\n    if num >= 9 {\n        result.push_str(\"ix\");\n        num -= 9;\n\
    \    }\n    if num >= 5 {\n        result.push('v');\n        num -= 5;\n    }\n\
    \    if num >= 4 {\n        result.push_str(\"iv\");\n        num -= 4;\n    }\n\
    \    while num >= 1 {\n        result.push('i');\n        num -= 1;\n    }\n \
    \   result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num >= 1000 {\n        result.push('m');\n        num -= 1000;\n  \
    \  }\n    if num >= 900 {\n        result.push_str(\"cm\");\n        num -= 900;\n\
    \    }\n    if num >= 500 {\n        result.push('d');\n        num -= 500;\n\
    \    }\n    if num >= 400 {\n        result.push_str(\"cd\");\n        num -=\
    \ 400;\n    }\n    while num >= 100 {\n        result.push('c');\n        num\
    \ -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\");\n     \
    \   num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n       \
    \ num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\");\n  \
    \      num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n \
    \       num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\");\n\
    \        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n    \
    \    num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n \
    \       num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n  \
    \      num -= 1;\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut i = 0;\n    while number > 0 {\n      \
    \  let digit = number % 10;\n        number /= 10;\n        let roman_digit =\
    \ match digit {\n            1 => \"i\",\n            2 => \"ii\",\n         \
    \   3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n       \
    \     6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n  \
    \          9 => \"ix\",\n            _ => \"\",\n        };\n        result =\
    \ format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >=\
    \ 1000 {\n        result.push('m');\n        num -= 1000;\n    }\n    if num >=\
    \ 900 {\n        result.push_str(\"cm\");\n        num -= 900;\n    }\n    if\
    \ num >= 500 {\n        result.push('d');\n        num -= 500;\n    }\n    if\
    \ num >= 400 {\n        result.push_str(\"cd\");\n        num -= 400;\n    }\n\
    \    while num >= 100 {\n        result.push('c');\n        num -= 100;\n    }\n\
    \    if num >= 90 {\n        result.push_str(\"xc\");\n        num -= 90;\n  \
    \  }\n    if num >= 50 {\n        result.push('l');\n        num -= 50;\n    }\n\
    \    if num >= 40 {\n        result.push_str(\"xl\");\n        num -= 40;\n  \
    \  }\n    while num >= 10 {\n        result.push('x');\n        num -= 10;\n \
    \   }\n    if num >= 9 {\n        result.push_str(\"ix\");\n        num -= 9;\n\
    \    }\n    if num >= 5 {\n        result.push('v');\n        num -= 5;\n    }\n\
    \    if num >= 4 {\n        result.push_str(\"iv\");\n        num -= 4;\n    }\n\
    \    while num >= 1 {\n        result.push('i');\n        num -= 1;\n    }\n \
    \   result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        number /= 10;\n        result = mini_roman_digit(digit, i) + &result;\n\
    \        i += 1;\n    }\n    result", "    let mut result = String::new();\n \
    \   let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        let roman_digit = match digit {\n            1 =>\
    \ \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n            4 =>\
    \ \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n            7 =>\
    \ \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n           \
    \ _ => \"\",\n        };\n        result = roman_digit.to_string() + &result;\n\
    \        num /= 10;\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    let mut index = 0;\n   \
    \ while number > 0 {\n        let digit = number % 10;\n        number /= 10;\n\
    \        let roman_digit = match digit {\n            1 => \"i\",\n          \
    \  2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n       \
    \     5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n     \
    \       8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n   \
    \     };\n        result = format!(\"{}{}\", roman_digit, result);\n        index\
    \ += 1;\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ number = number;\n    let mut digit = 0;\n    while number > 0 {\n        let\
    \ digit_value = number % 10;\n        number /= 10;\n        let mut digit_string\
    \ = String::new();\n        if digit_value == 9 {\n            digit_string.push(match\
    \ digit {\n                0 => 'i',\n                1 => 'x',\n            \
    \    2 => 'c',\n                3 => 'm',\n                _ => panic!(\"Invalid\
    \ digit: {}\", digit),\n            });\n            digit_string.push(match digit\
    \ {\n                0 => 'x',\n                1 => 'c',\n                2 =>\
    \ 'm',\n                3 => 'm',\n                _ => panic!(\"Invalid digit:\
    \ {}\", digit),\n            });\n        } else if digit_value == 4 {\n     \
    \       digit_string.push(match digit {\n                0 => 'i',\n         \
    \       1 => 'x',\n                2 => 'c',\n                3 => 'm',\n    \
    \            _ => panic!(\"Invalid digit: {}\", digit),\n            });\n   \
    \         digit_string.push(match digit {\n                0 => 'v',\n       \
    \         1 => 'l',\n                2 => 'd',\n                3 => 'm',\n  \
    \              _ => panic!(\"Invalid digit: {}\", digit),\n            });\n \
    \       } else {\n            if digit_value >= 5 {\n                digit_string.push(match\
    \ digit {\n                    0 => 'v',\n                    1 => 'l',\n    \
    \                2 => 'd',\n                    3 => 'm',\n                  \
    \  _ => panic!(\"Invalid digit: {}\", digit),\n                });\n         \
    \       digit_value -= 5;\n            }\n            for _ in 0..digit_value\
    \ {\n                digit_string.push(match digit {\n                    0 =>\
    \ 'i',\n                    1 => 'x',\n                    2 => 'c',\n       \
    \             3 => 'm',\n                    _ => panic!(\"Invalid digit: {}\"\
    , digit),\n                });\n            }\n        }\n        result = digit_string\
    \ + &result;\n        digit += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut digit = 0;\n    while number > 0 {\n\
    \        let digit_value = number % 10;\n        number /= 10;\n        match\
    \ digit {\n            0 => {\n                result = mini_roman_digit(digit_value,\
    \ 'i', 'v', 'x') + &result;\n            }\n            1 => {\n             \
    \   result = mini_roman_digit(digit_value, 'x', 'l', 'c') + &result;\n       \
    \     }\n            2 => {\n                result = mini_roman_digit(digit_value,\
    \ 'c', 'd', 'm') + &result;\n            }\n            3 => {\n             \
    \   result = mini_roman_digit(digit_value, 'm', 'v', 'x') + &result;\n       \
    \     }\n            _ => {}\n        }\n        digit += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        let roman_digit = match digit {\n            1 => \"i\",\n \
    \           2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n\
    \            5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n\
    \            8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n\
    \        };\n        result = format!(\"{}{}\", roman_digit, result);\n      \
    \  i += 1;\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut number = number;\n    let mut i = 0;\n    while number > 0 {\n        let\
    \ digit = number % 10;\n        number /= 10;\n        let roman_digit = match\
    \ digit {\n            1 => \"i\",\n            2 => \"ii\",\n            3 =>\
    \ \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n            6 =>\
    \ \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n           \
    \ 9 => \"ix\",\n            _ => \"\",\n        };\n        result = format!(\"\
    {}{}\", roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut\
    \ result = String::new();\n    let mut number = number;\n    let digits = vec![\n\
    \        (1000, 'm'),\n        (900, 'c'),\n        (500, 'd'),\n        (400,\
    \ 'c'),\n        (100, 'c'),\n        (90, 'x'),\n        (50, 'l'),\n       \
    \ (40, 'x'),\n        (10, 'x'),\n        (9, 'i'),\n        (5, 'v'),\n     \
    \   (4, 'i'),\n        (1, 'i'),\n    ];\n    for (digit, letter) in digits {\n\
    \        while number >= digit {\n            result.push(letter);\n         \
    \   number -= digit;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let (one,\
    \ five, ten) = match i {\n            0 => ('i', 'v', 'x'),\n            1 =>\
    \ ('x', 'l', 'c'),\n            2 => ('c', 'd', 'm'),\n            3 => ('m',\
    \ 'v', 'x'),\n            _ => panic!(\"Number too large\"),\n        };\n   \
    \     if digit == 4 {\n            result.push(one);\n            result.push(five);\n\
    \        } else if digit == 9 {\n            result.push(one);\n            result.push(ten);\n\
    \        } else {\n            if digit >= 5 {\n                result.push(five);\n\
    \                digit -= 5;\n            }\n            for _ in 0..digit {\n\
    \                result.push(one);\n            }\n        }\n        i += 1;\n\
    \    }\n    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut symbols = vec![\n        (1000, 'm'),\n        (900, 'c'),\n    \
    \    (500, 'd'),\n        (400, 'c'),\n        (100, 'c'),\n        (90, 'x'),\n\
    \        (50, 'l'),\n        (40, 'x'),\n        (10, 'x'),\n        (9, 'i'),\n\
    \        (5, 'v'),\n        (4, 'i'),\n        (1, 'i'),\n    ];\n    while number\
    \ > 0 {\n        let (value, symbol) = symbols.pop().unwrap();\n        if number\
    \ >= value {\n            number -= value;\n            result.push(symbol);\n\
    \        }\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut number = number;\n    let mut index = 0;\n    while number > 0 {\n     \
    \   let digit = number % 10;\n        number /= 10;\n        let roman_digit =\
    \ match digit {\n            1 => \"i\",\n            2 => \"ii\",\n         \
    \   3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n       \
    \     6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n  \
    \          9 => \"ix\",\n            _ => \"\",\n        };\n        result =\
    \ format!(\"{}{}\", roman_digit, result);\n        index += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut number = number;\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        result = mini_roman_digit(digit, i) + &result;\n        i +=\
    \ 1;\n    }\n    result", "    let mut number = number;\n    let mut result =\
    \ String::new();\n    let mut i = 0;\n    while number > 0 {\n        let digit\
    \ = number % 10;\n        number /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut numeral_pairs =\
    \ vec![\n        (1000, \"m\"),\n        (900, \"cm\"),\n        (500, \"d\"),\n\
    \        (400, \"cd\"),\n        (100, \"c\"),\n        (90, \"xc\"),\n      \
    \  (50, \"l\"),\n        (40, \"xl\"),\n        (10, \"x\"),\n        (9, \"ix\"\
    ),\n        (5, \"v\"),\n        (4, \"iv\"),\n        (1, \"i\"),\n    ];\n \
    \   while number > 0 {\n        for (int, numeral) in numeral_pairs.iter() {\n\
    \            if number >= *int {\n                result.push_str(numeral);\n\
    \                number -= *int;\n                break;\n            }\n    \
    \    }\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ number = number;\n    let symbols = [\n        (\"m\", 1000),\n        (\"d\"\
    , 500),\n        (\"c\", 100),\n        (\"l\", 50),\n        (\"x\", 10),\n \
    \       (\"v\", 5),\n        (\"i\", 1),\n    ];\n    for (symbol, value) in symbols.iter()\
    \ {\n        while number >= *value {\n            result.push_str(symbol);\n\
    \            number -= *value;\n        }\n    }\n    result", "    let mut num\
    \ = number;\n    let mut result = String::new();\n    let mut roman_numerals =\
    \ vec![\n        (\"m\", 1000),\n        (\"d\", 500),\n        (\"c\", 100),\n\
    \        (\"l\", 50),\n        (\"x\", 10),\n        (\"v\", 5),\n        (\"\
    i\", 1),\n    ];\n\n    for (rn, val) in roman_numerals.iter_mut() {\n       \
    \ while num >= *val {\n            result.push_str(rn);\n            num -= *val;\n\
    \        }\n    }\n\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let mut i = 0;\n    while number > 0 {\n        let digit\
    \ = number % 10;\n        number /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut numeral = String::new();\n\
    \    let mut digit = 0;\n    let mut digit_value = 0;\n    let mut next_digit_value\
    \ = 0;\n    let mut next_digit = 0;\n    let mut next_numeral = String::new();\n\
    \    let mut next_numeral_value = 0;\n    let mut numeral_value = 0;\n    let\
    \ mut numeral_index = 0;\n    let mut next_numeral_index = 0;\n    let mut next_numeral_index_value\
    \ = 0;\n    let mut numeral_index_value = 0;\n    let mut numeral_index_value_next\
    \ = 0;\n    let mut numeral_index_value_next_next = 0;\n    let mut numeral_index_value_next_next_next\
    \ = 0;\n    let mut numeral_index_value_next_next_next_next = 0;\n    let mut\
    \ numeral_index_value_next_next_next_next_next = 0;\n    let mut numeral_index_value_next_next_next_next_next_next\
    \ = 0;\n    let mut numeral_index_value_next_next_next_next_next_next_next = 0;\n\
    \    let mut numeral_index_value_next_next_next_next_next_next_next_next = 0;\n\
    \    let mut numeral_index_value_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut numeral_index_value_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut numeral_index_value_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut numeral_index_value_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut numeral_index_value_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        number /= 10;\n        result = match digit {\n            1 => format!(\"\
    i{}\", result),\n            2 => format!(\"ii{}\", result),\n            3 =>\
    \ format!(\"iii{}\", result),\n            4 => format!(\"iv{}\", result),\n \
    \           5 => format!(\"v{}\", result),\n            6 => format!(\"vi{}\"\
    , result),\n            7 => format!(\"vii{}\", result),\n            8 => format!(\"\
    viii{}\", result),\n            9 => format!(\"ix{}\", result),\n            _\
    \ => result,\n        };\n        i += 1;\n        if i == 2 {\n            result\
    \ = match number % 10 {\n                1 => format!(\"x{}\", result),\n    \
    \            2 => format!(\"xx{}\", result),\n                3 => format!(\"\
    xxx{}\", result),\n                4 => format!(\"xl{}\", result),\n         \
    \       5 => format!(\"l{}\", result),\n                6 => format!(\"lx{}\"\
    , result),\n                7 => format!(\"lxx{}\", result),\n               \
    \ 8 => format!(\"lxxx{}\", result),\n                9 => format!(\"xc{}\", result),\n\
    \                _ => result,\n            };\n            number /= 10;\n   \
    \     }\n        if i == 3 {\n            result = match number % 10 {\n     \
    \           1 => format!(\"c{}\", result),\n                2 => format!(\"cc{}\"\
    , result),\n                3 => format!(\"ccc{}\", result),\n               \
    \ 4 => format!(\"cd{}\", result),\n                5 => format!(\"d{}\", result),\n\
    \                6 => format!(\"dc{}\", result),\n                7 => format!(\"\
    dcc{}\", result),\n                8 => format!(\"dccc{}\", result),\n       \
    \         9 => format!(\"cm{}\", result),\n                _ => result,\n    \
    \        };\n            number /= 10;\n        }\n        if i == 4 {\n     \
    \       result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num >= 1000 {\n        result.push('m');\n        num -= 1000;\n  \
    \  }\n    if num >= 900 {\n        result.push_str(\"cm\");\n        num -= 900;\n\
    \    }\n    if num >= 500 {\n        result.push('d');\n        num -= 500;\n\
    \    }\n    if num >= 400 {\n        result.push_str(\"cd\");\n        num -=\
    \ 400;\n    }\n    while num >= 100 {\n        result.push('c');\n        num\
    \ -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\");\n     \
    \   num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n       \
    \ num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\");\n  \
    \      num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n \
    \       num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\");\n\
    \        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n    \
    \    num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n \
    \       num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n  \
    \      num -= 1;\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let roman_numerals = vec![\n        (\"m\", 1000),\n\
    \        (\"cm\", 900),\n        (\"d\", 500),\n        (\"cd\", 400),\n     \
    \   (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n        (\"xl\"\
    , 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n    \
    \    (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    for (numeral, value) in roman_numerals\
    \ {\n        while number >= *value {\n            result.push_str(numeral);\n\
    \            number -= value;\n        }\n    }\n    result", "    let mut number\
    \ = number;\n    let mut roman = String::new();\n    let mut i = 0;\n    while\
    \ number > 0 {\n        if number >= ROMAN_NUMERALS[i].0 {\n            roman.push_str(ROMAN_NUMERALS[i].1);\n\
    \            number -= ROMAN_NUMERALS[i].0;\n        } else {\n            i +=\
    \ 1;\n        }\n    }\n    roman", "    let mut result = String::new();\n   \
    \ let mut num = number;\n    while num >= 1000 {\n        result.push('m');\n\
    \        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push('m');\n\
    \        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push('v');\n \
    \       num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\");\n\
    \        num -= 4;\n    }\n    while num >= 1 {\n        result.push('i');\n \
    \       num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut numeral_map = vec![\n      \
    \  (\"m\", 1000),\n        (\"d\", 500),\n        (\"c\", 100),\n        (\"l\"\
    , 50),\n        (\"x\", 10),\n        (\"v\", 5),\n        (\"i\", 1),\n    ];\n\
    \    while number > 0 {\n        let mut found = false;\n        for (numeral,\
    \ value) in numeral_map.iter() {\n            if number >= *value {\n        \
    \        result.push_str(numeral);\n                number -= *value;\n      \
    \          found = true;\n                break;\n            }\n        }\n \
    \       if !found {\n            let mut last_numeral = numeral_map.pop().unwrap();\n\
    \            let mut last_value = last_numeral.1;\n            while number <\
    \ last_value {\n                last_numeral = numeral_map.pop().unwrap();\n \
    \               last_value = last_numeral.1;\n            }\n            result.push_str(last_numeral.0);\n\
    \            result.push_str(numeral_map.last().unwrap().0);\n            number\
    \ -= last_value - numeral_map.last().unwrap().1;\n        }\n    }\n    result",
  "    let mut result = String::new();\n    let mut number = number;\n    while number\
    \ > 0 {\n        if number >= 1000 {\n            result.push('m');\n        \
    \    number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let roman_numerals\
    \ = [\n        (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n\
    \        (\"cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n      \
    \  (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\"\
    , 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n\
    \    for (roman, arabic) in roman_numerals.iter() {\n        while number >= *arabic\
    \ {\n            result.push_str(roman);\n            number -= arabic;\n    \
    \    }\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ number = number;\n    while number > 0 {\n        if number >= 1000 {\n    \
    \        result.push('m');\n            number -= 1000;\n        } else if number\
    \ >= 900 {\n            result.push_str(\"cm\");\n            number -= 900;\n\
    \        } else if number >= 500 {\n            result.push('d');\n          \
    \  number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut roman = String::new();\n   \
    \ let mut num = number;\n    while num >= 1000 {\n        roman.push('m');\n \
    \       num -= 1000;\n    }\n    if num >= 900 {\n        roman.push_str(\"cm\"\
    );\n        num -= 900;\n    }\n    if num >= 500 {\n        roman.push('d');\n\
    \        num -= 500;\n    }\n    if num >= 400 {\n        roman.push_str(\"cd\"\
    );\n        num -= 400;\n    }\n    while num >= 100 {\n        roman.push('c');\n\
    \        num -= 100;\n    }\n    if num >= 90 {\n        roman.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    if num >= 50 {\n        roman.push('l');\n\
    \        num -= 50;\n    }\n    if num >= 40 {\n        roman.push_str(\"xl\"\
    );\n        num -= 40;\n    }\n    while num >= 10 {\n        roman.push('x');\n\
    \        num -= 10;\n    }\n    if num >= 9 {\n        roman.push_str(\"ix\");\n\
    \        num -= 9;\n    }\n    if num >= 5 {\n        roman.push('v');\n     \
    \   num -= 5;\n    }\n    if num >= 4 {\n        roman.push_str(\"iv\");\n   \
    \     num -= 4;\n    }\n    while num >= 1 {\n        roman.push('i');\n     \
    \   num -= 1;\n    }\n    roman", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let mut numeral_pairs = vec![\n        (1000, \"m\"),\n\
    \        (900, \"cm\"),\n        (500, \"d\"),\n        (400, \"cd\"),\n     \
    \   (100, \"c\"),\n        (90, \"xc\"),\n        (50, \"l\"),\n        (40, \"\
    xl\"),\n        (10, \"x\"),\n        (9, \"ix\"),\n        (5, \"v\"),\n    \
    \    (4, \"iv\"),\n        (1, \"i\"),\n    ];\n    while number > 0 {\n     \
    \   for (value, numeral) in numeral_pairs.iter() {\n            if number >= *value\
    \ {\n                result.push_str(numeral);\n                number -= *value;\n\
    \                break;\n            }\n        }\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut num = number;\n    while num > 0 {\n\
    \        if num >= 1000 {\n            result.push('m');\n            num -= 1000;\n\
    \        } else if num >= 900 {\n            result.push_str(\"cm\");\n      \
    \      num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let roman_numerals = vec![\n       \
    \ (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n        (\"cd\"\
    , 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n\
    \        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"\
    v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    for (numeral,\
    \ value) in roman_numerals {\n        while number >= *value {\n            result.push_str(numeral);\n\
    \            number -= value;\n        }\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    while number > 0 {\n   \
    \     if number >= 1000 {\n            result.push('m');\n            number -=\
    \ 1000;\n        } else if number >= 900 {\n            result.push_str(\"cm\"\
    );\n            number -= 900;\n        } else if number >= 500 {\n          \
    \  result.push('d');\n            number -= 500;\n        } else if number >=\
    \ 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n  \
    \      } else if number >= 100 {\n            result.push('c');\n            number\
    \ -= 100;\n        } else if number >= 90 {\n            result.push_str(\"xc\"\
    );\n            number -= 90;\n        } else if number >= 50 {\n            result.push('l');\n\
    \            number -= 50;\n        } else if number >= 40 {\n            result.push_str(\"\
    xl\");\n            number -= 40;\n        } else if number >= 10 {\n        \
    \    result.push('x');\n            number -= 10;\n        } else if number >=\
    \ 9 {\n            result.push_str(\"ix\");\n            number -= 9;\n      \
    \  } else if number >= 5 {\n            result.push('v');\n            number\
    \ -= 5;\n        } else if number >= 4 {\n            result.push_str(\"iv\");\n\
    \            number -= 4;\n        } else if number >= 1 {\n            result.push('i');\n\
    \            number -= 1;\n        }\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num >= 1000 {\n     \
    \   result.push('m');\n        num -= 1000;\n    }\n    if num >= 900 {\n    \
    \    result.push_str(\"cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n\
    \        result.push('d');\n        num -= 500;\n    }\n    if num >= 400 {\n\
    \        result.push_str(\"cd\");\n        num -= 400;\n    }\n    while num >=\
    \ 100 {\n        result.push('c');\n        num -= 100;\n    }\n    if num >=\
    \ 90 {\n        result.push_str(\"xc\");\n        num -= 90;\n    }\n    if num\
    \ >= 50 {\n        result.push('l');\n        num -= 50;\n    }\n    if num >=\
    \ 40 {\n        result.push_str(\"xl\");\n        num -= 40;\n    }\n    while\
    \ num >= 10 {\n        result.push('x');\n        num -= 10;\n    }\n    if num\
    \ >= 9 {\n        result.push_str(\"ix\");\n        num -= 9;\n    }\n    if num\
    \ >= 5 {\n        result.push('v');\n        num -= 5;\n    }\n    if num >= 4\
    \ {\n        result.push_str(\"iv\");\n        num -= 4;\n    }\n    while num\
    \ >= 1 {\n        result.push('i');\n        num -= 1;\n    }\n    result", " \
    \   let mut result = String::new();\n    let mut number = number;\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        if\
    \ digit == 9 {\n            result.push(ROMAN_DIGITS[i + 1]);\n            result.push(ROMAN_DIGITS[i\
    \ - 1]);\n        } else if digit >= 5 {\n            result.push(ROMAN_DIGITS[i]);\n\
    \            for _ in 0..digit - 5 {\n                result.push(ROMAN_DIGITS[i\
    \ - 1]);\n            }\n        } else if digit == 4 {\n            result.push(ROMAN_DIGITS[i\
    \ + 1]);\n            result.push(ROMAN_DIGITS[i - 1]);\n        } else {\n  \
    \          for _ in 0..digit {\n                result.push(ROMAN_DIGITS[i - 1]);\n\
    \            }\n        }\n        number /= 10;\n        i += 2;\n    }\n   \
    \ result.chars().rev().collect()"]
stop_tokens:
- "\n}"

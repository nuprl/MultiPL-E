language: cs
name: HumanEval_17_parse_music
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \                beats += 4;\n            } else if (c == '|') {\n           \
    \     result.Add(beats);\n                beats = 0;\n            } else if (c\
    \ == '.') {\n                beats += 1;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d601e67df8748ce9e9abff8c3a1e00b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d601e67df8748ce9e9abff8c3a1e00b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code here\n       \
    \ return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bf7597f01f13453ea2bdc9961df2d7f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bf7597f01f13453ea2bdc9961df2d7f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        long current_note = 0;\n  \
    \      for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                current_note += 4;\n            } else if (music_string[i]\
    \ == '|') {\n                result.Add(current_note);\n                current_note\
    \ = 0;\n            } else if (music_string[i] == '.') {\n                current_note\
    \ += 1;\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6e184cc2e8e94df693e6534a5941f967>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6e184cc2e8e94df693e6534a5941f967>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        long count = 0;\n        for\
    \ (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                count += 4;\n            } else if (music_string[i]\
    \ == '|') {\n                result.Add(count);\n                count = 0;\n\
    \            } else {\n                count += 1;\n            }\n        }\n\
    \        result.Add(count);\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4aa9b3aa411542ce8316799e922bef85>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4aa9b3aa411542ce8316799e922bef85>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return null;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <8fbbb25a34244145806c099be2ac5694>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <8fbbb25a34244145806c099be2ac5694>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                beats +=\
    \ 4;\n            } else if (c == '|') {\n                result.Add(beats);\n\
    \                beats = 0;\n            } else {\n                beats += 1;\n\
    \            }\n        }\n        result.Add(beats);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here.\n        // You can use any of the C# language features.\n\
    \        // You can use any of the .NET framework classes.\n        // You can\
    \ use any of the .NET framework methods.\n        // You can use any of the .NET\
    \ framework properties.\n        // You can use any of the .NET framework events.\n\
    \        // You can use any of the .NET framework delegates.\n        // You can\
    \ use any of the .NET framework enumerations.\n        // You can use any of the\
    \ .NET framework structures.\n        // You can use any of the .NET framework\
    \ generics.\n        // You can use any of the .NET framework interfaces.\n  \
    \      // You can use any of the .NET framework attributes.\n        // You can\
    \ use any of the .NET framework exceptions.\n        // You can use any of the\
    \ .NET framework preprocessor directives.\n        // You can use any of the .NET\
    \ framework compiler directives.\n        // You can use any of the .NET framework\
    \ compiler options.\n        // You can use any of the .NET framework compiler\
    \ warnings.\n        // You can use any of the .NET framework compiler errors.\n\
    \        // You can use any of the .NET framework compiler pragmas.\n        //\
    \ You can use any of the .NET framework compiler constants.\n        // You can\
    \ use any of the .NET framework compiler variables.\n        // You can use any\
    \ of the .NET framework compiler functions.\n        // You can use any of the\
    \ .NET framework compiler classes.\n        // You can use any of the .NET framework\
    \ compiler methods.\n        // You can use any of the .NET framework compiler\
    \ properties.\n        // You can use any of the .NET framework compiler events.\n\
    \        // You can use any of the .NET framework compiler delegates.\n      \
    \  // You can use any of the .NET framework compiler enumerations.\n        //\
    \ You can use any of the .NET framework compiler structures.\n        // You can\
    \ use any of the .NET framework compiler generics.\n        // You can use any\
    \ of the .NET framework compiler interfaces.\n        // You can use any of the\
    \ .NET framework compiler attributes.\n        // You can use any of the .NET\
    \ framework compiler exceptions.\n        // You can use any of the .NET framework\
    \ compiler preprocessor directives.\n        // You can use any of the .NET framework\
    \ compiler\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdne0fik2.cs(16,30): error CS0161: ''Problem.ParseMusic(string)'': not
    all code paths return a value

    '
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code goes here.\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \                beats += 4;\n            } else if (c == '|') {\n           \
    \     result.Add(beats);\n                beats = 0;\n            } else if (c\
    \ == '.') {\n                beats += 1;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d601e67df8748ce9e9abff8c3a1e00b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d601e67df8748ce9e9abff8c3a1e00b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c906507fd3ce47b892f5095b9c0d31b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c906507fd3ce47b892f5095b9c0d31b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                result.Add(4);\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \            } else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code goes here.\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                result.Add(4);\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \            } else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var current_note = 0;\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                result.Add(current_note);\n\
    \                current_note = 4;\n            } else if (c == '|') {\n     \
    \           current_note /= 2;\n            } else if (c == '.') {\n         \
    \       result.Add(current_note);\n                current_note = 0;\n       \
    \     }\n        }\n        result.Add(current_note);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ce7d3490b1b4b3fbdf7a5c449f24a95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ce7d3490b1b4b3fbdf7a5c449f24a95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return null;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <8fbbb25a34244145806c099be2ac5694>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <8fbbb25a34244145806c099be2ac5694>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        int count = 0;\n        for\
    \ (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                result.Add(4);\n                count++;\n      \
    \      }\n            else if (music_string[i] == '|') {\n                result[count\
    \ - 1] /= 2;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e5d4e7100d241a3b734d9105cdeabc8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e5d4e7100d241a3b734d9105cdeabc8>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here.\n        List<long> result = new List<long>();\n \
    \       long count = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                count += 4;\n\
    \            } else if (music_string[i] == '|') {\n                result.Add(count);\n\
    \                count = 0;\n            } else {\n                count += 1;\n\
    \            }\n        }\n        result.Add(count);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7052cbf782074e5691d41ab716e19081>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7052cbf782074e5691d41ab716e19081>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        int i = 0;\n        while (i\
    \ < music_string.Length) {\n            if (music_string[i] == 'o') {\n      \
    \          result.Add(4);\n                i++;\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i += 2;\n       \
    \     } else {\n                result.Add(2);\n                i += 2;\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91269e2c29314e0faefce6a9badc0142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91269e2c29314e0faefce6a9badc0142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3401d9d764e48048ca3d49266422a60>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3401d9d764e48048ca3d49266422a60>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function.\n        // Hint: You can use String.Split\
    \ function to split the string into an array of characters.\n        // Hint:\
    \ You can use String.Join function to join an array of characters into a string.\n\
    \        // Hint: You can use String.Trim function to remove trailing and leading\
    \ whitespaces.\n        // Hint: You can use String.Replace function to replace\
    \ all occurences of a substring with another substring.\n        // Hint: You\
    \ can use String.IndexOf function to find the index of a substring in a string.\n\
    \        // Hint: You can use String.Substring function to get a substring of\
    \ a string.\n        // Hint: You can use String.Length function to get the length\
    \ of a string.\n        // Hint: You can use List.Add function to add an element\
    \ to a list.\n        // Hint: You can use List.Count function to get the number\
    \ of elements in a list.\n        // Hint: You can use List.RemoveAt function\
    \ to remove an element from a list.\n        // Hint: You can use List.IndexOf\
    \ function to find the index of an element in a list.\n        // Hint: You can\
    \ use List.Contains function to check if a list contains an element.\n       \
    \ // Hint: You can use List.Clear function to remove all elements from a list.\n\
    \        // Hint: You can use List.Sort function to sort a list.\n        // Hint:\
    \ You can use List.Reverse function to reverse a list.\n        // Hint: You can\
    \ use List.Insert function to insert an element into a list.\n        // Hint:\
    \ You can use List.Remove function to remove an element from a list.\n       \
    \ // Hint: You can use List.ToArray function to convert a list to an array.\n\
    \        // Hint: You can use List.ToList function to convert an array to a list.\n\
    \        // Hint: You can use List.Concat function to concatenate two lists.\n\
    \        // Hint: You can use List.CopyTo function to copy a list to an array.\n\
    \        // Hint: You can use List.GetRange function to get a range of elements\
    \ from a list.\n        // Hint: You can use\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_00px4qc.cs(16,30): error CS0161: ''Problem.ParseMusic(string)'': not
    all code paths return a value

    '
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var res = new List<long>();\n        var beats = new List<long>();\n     \
    \   var notes = new List<char>();\n        var current_note = ' ';\n        var\
    \ current_beat = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o' || music_string[i] == '.') {\n       \
    \         current_note = music_string[i];\n                current_beat = 0;\n\
    \            }\n            if (music_string[i] == '|') {\n                current_beat++;\n\
    \            }\n            if (current_beat == 1) {\n                notes.Add(current_note);\n\
    \                beats.Add(current_beat);\n            }\n            if (current_beat\
    \ == 2) {\n                notes.Add(current_note);\n                beats.Add(current_beat);\n\
    \            }\n            if (current_beat == 3) {\n                notes.Add(current_note);\n\
    \                beats.Add(current_beat);\n            }\n        }\n        for\
    \ (int i = 0; i < notes.Count; i++) {\n            if (notes[i] == 'o') {\n  \
    \              res.Add(4);\n            }\n            if (notes[i] == '.') {\n\
    \                res.Add(1);\n            }\n        }\n        return res;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82d9f8e8aaa9493b920f724d8bcc727f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82d9f8e8aaa9493b920f724d8bcc727f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <da52d675e73a42c08c9820b0cba19f73>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <da52d675e73a42c08c9820b0cba19f73>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var current_beat = 0;\n        var\
    \ current_note = 0;\n        var current_note_length = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                current_note_length\
    \ = 4;\n            } else if (c == '|') {\n                current_note_length\
    \ /= 2;\n            } else if (c == '.') {\n                current_note_length\
    \ = 1;\n            } else if (c == ' ') {\n                current_beat += current_note_length;\n\
    \                current_note_length = 0;\n            } else if (c == '\\n')\
    \ {\n                current_beat = 0;\n                current_note++;\n    \
    \        }\n            result.Add(current_beat);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <887bdae8cf8c4f389d751373e38619da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <887bdae8cf8c4f389d751373e38619da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                beats +=\
    \ 4;\n            } else if (c == '|') {\n                result.Add(beats);\n\
    \                beats = 0;\n            } else {\n                beats += 1;\n\
    \            }\n        }\n        result.Add(beats);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = new List<long>();\n  \
    \      var notes = new List<string>();\n        var current_note = \"\";\n   \
    \     foreach (var c in music_string) {\n            if (c == '|') {\n       \
    \         notes.Add(current_note);\n                current_note = \"\";\n   \
    \         } else {\n                current_note += c;\n            }\n      \
    \  }\n        notes.Add(current_note);\n        foreach (var note in notes) {\n\
    \            if (note == \"o\") {\n                beats.Add(4);\n           \
    \ } else if (note == \"o|\") {\n                beats.Add(2);\n            } else\
    \ if (note == \".|\") {\n                beats.Add(1);\n            }\n      \
    \  }\n        return beats;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59b9fec269f044daa9fae5711c32c9eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59b9fec269f044daa9fae5711c32c9eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var music = music_string.Split(' ');\n\
    \        foreach (var note in music) {\n            if (note == \"o\") {\n   \
    \             result.Add(4);\n            } else if (note == \"o|\") {\n     \
    \           result.Add(2);\n            } else if (note == \".|\") {\n       \
    \         result.Add(1);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cef1433fd9ee45efa42f94f03382839f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cef1433fd9ee45efa42f94f03382839f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        long beats = 0;\n        for\
    \ (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                beats += 4;\n            } else if (music_string[i]\
    \ == '|') {\n                result.Add(beats);\n                beats = 0;\n\
    \            } else if (music_string[i] == '.') {\n                beats += 1;\n\
    \            }\n        }\n        result.Add(beats);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63baf2ecde554cb8811721e3ac2d59e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63baf2ecde554cb8811721e3ac2d59e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code goes here\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29de54e070fb4a288e65574fd6f6cf91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29de54e070fb4a288e65574fd6f6cf91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = new List<long>();\n  \
    \      var currentBeat = 0;\n        var currentNote = 0;\n        var currentNoteLength\
    \ = 0;\n        var currentNoteLengths = new List<long>();\n        var currentNoteLengthsIndex\
    \ = 0;\n        var currentNoteLengthsLength = 0;\n        var currentNoteLengthsLengths\
    \ = new List<long>();\n        var currentNoteLengthsLengthsIndex = 0;\n     \
    \   var currentNoteLengthsLengthsLength = 0;\n        var currentNoteLengthsLengthsLengths\
    \ = new List<long>();\n        var currentNoteLengthsLengthsLengthsIndex = 0;\n\
    \        var currentNoteLengthsLengthsLengthsLength = 0;\n        var currentNoteLengthsLengthsLengthsLengths\
    \ = new List<long>();\n        var currentNoteLengthsLengthsLengthsLengthsIndex\
    \ = 0;\n        var currentNoteLengthsLengthsLengthsLengthsLength = 0;\n     \
    \   var currentNoteLengthsLengthsLengthsLengthsLengths = new List<long>();\n \
    \       var currentNoteLengthsLengthsLengthsLengthsLengthsIndex = 0;\n       \
    \ var currentNoteLengthsLengthsLengthsLengthsLengthsLength = 0;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengths\
    \ = new List<long>();\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsIndex\
    \ = 0;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLength\
    \ = 0;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengths\
    \ = new List<long>();\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsIndex\
    \ = 0;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsLength\
    \ = 0;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsLengths\
    \ = new List<long>();\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsLengthsIndex\
    \ = 0;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsLengthsLength\
    \ = 0;\n        var currentNoteLengthsLengths\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwdot3uh3.cs(46,38): error CS1002: ; expected

    '
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var i = 0;\n        while (i < music_string.Length)\
    \ {\n            switch (music_string[i]) {\n                case 'o':\n     \
    \               result.Add(4);\n                    i++;\n                   \
    \ break;\n                case 'o':\n                    result.Add(2);\n    \
    \                i += 2;\n                    break;\n                case '.':\n\
    \                    result.Add(1);\n                    i += 2;\n           \
    \         break;\n                default:\n                    throw new Exception(\"\
    Invalid character\");\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzsnlxkkb.cs(25,17): error CS0152: The switch statement contains multiple
    cases with the label value ''o''

    '
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement your solution\
    \ here\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7b9f3e94c6c4cedb4aa35c3efe8b058>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7b9f3e94c6c4cedb4aa35c3efe8b058>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        var notes\
    \ = music_string.Split(new char[] { '|' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        foreach (var note in notes) {\n            if (note == \"o\") {\n   \
    \             result.Add(4);\n                beats += 4;\n            } else\
    \ if (note == \"o\") {\n                result.Add(2);\n                beats\
    \ += 2;\n            } else if (note == \".\") {\n                result.Add(1);\n\
    \                beats += 1;\n            } else {\n                throw new\
    \ Exception(\"Invalid note\");\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3a6180992cf045e08a2f07b5c9d5f2a6>:0 \n\nUnhandled Exception:\n\
    System.Exception: Invalid note\n  at Problem.ParseMusic (System.String music_string)\
    \ [0x00098] in <3a6180992cf045e08a2f07b5c9d5f2a6>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x0001b] in <3a6180992cf045e08a2f07b5c9d5f2a6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.Exception: Invalid note\n  at Problem.ParseMusic (System.String\
    \ music_string) [0x00098] in <3a6180992cf045e08a2f07b5c9d5f2a6>:0 \n  at Problem.Main\
    \ (System.String[] args) [0x0001b] in <3a6180992cf045e08a2f07b5c9d5f2a6>:0 \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        var i = 0;\n\
    \        while (i < music_string.Length) {\n            switch (music_string[i])\
    \ {\n                case 'o':\n                    beats += 4;\n            \
    \        i++;\n                    break;\n                case 'o':\n       \
    \             beats += 2;\n                    i += 2;\n                    break;\n\
    \                case '.':\n                    beats += 1;\n                \
    \    i += 2;\n                    break;\n                default:\n         \
    \           result.Add(beats);\n                    beats = 0;\n             \
    \       i++;\n                    break;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo8_a5th_.cs(26,17): error CS0152: The switch statement contains multiple
    cases with the label value ''o''

    '
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        long beats = 0;\n        for\
    \ (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                beats += 4;\n            } else if (music_string[i]\
    \ == '.') {\n                beats += 1;\n            } else if (music_string[i]\
    \ == '|') {\n                result.Add(beats);\n                beats = 0;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab6d5c50eff3458ba45ec5d757d60b1f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab6d5c50eff3458ba45ec5d757d60b1f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var beats = new List<long>();\n        foreach (var c in music_string) {\n\
    \            switch (c) {\n                case 'o':\n                    beats.Add(4);\n\
    \                    break;\n                case 'o':\n                    beats.Add(2);\n\
    \                    break;\n                case '.':\n                    beats.Add(1);\n\
    \                    break;\n            }\n        }\n        return beats;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvl_44ttv.cs(23,17): error CS0152: The switch statement contains multiple
    cases with the label value ''o''

    '
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <da52d675e73a42c08c9820b0cba19f73>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <da52d675e73a42c08c9820b0cba19f73>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var current = 0;\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \                current += 4;\n            } else if (c == '|') {\n         \
    \       result.Add(current);\n                current = 0;\n            } else\
    \ if (c == '.') {\n                current += 1;\n            }\n        }\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c4f5057edbe46a09540793417b4e40b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c4f5057edbe46a09540793417b4e40b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> beats = new List<long>();\n        // TODO: Implement this function\n\
    \        return beats;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d7a48b5381d4d5385baf3db6f87714d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d7a48b5381d4d5385baf3db6f87714d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code goes here.\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        string[] notes = music_string.Split('|');\n\
    \        foreach (string note in notes) {\n            if (note.Length == 1) {\n\
    \                result.Add(4);\n            } else if (note.Length == 2) {\n\
    \                result.Add(2);\n            } else {\n                result.Add(1);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0a97bf9523fa46a59047339213d8d5fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0a97bf9523fa46a59047339213d8d5fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        // Hint: You can use String.Split()\
    \ to split the string by '|' character.\n        // Hint: You can use String.Replace()\
    \ to replace all 'o' characters with 'o|'\n        // Hint: You can use String.Replace()\
    \ to replace all '.' characters with '.|'\n        // Hint: You can use String.Split()\
    \ to split the string by '|' character.\n        // Hint: You can use String.Replace()\
    \ to replace all 'o' characters with 'o|'\n        // Hint: You can use String.Replace()\
    \ to replace all '.' characters with '.|'\n        // Hint: You can use String.Split()\
    \ to split the string by '|' character.\n        // Hint: You can use String.Replace()\
    \ to replace all 'o' characters with 'o|'\n        // Hint: You can use String.Replace()\
    \ to replace all '.' characters with '.|'\n        // Hint: You can use String.Split()\
    \ to split the string by '|' character.\n        // Hint: You can use String.Replace()\
    \ to replace all 'o' characters with 'o|'\n        // Hint: You can use String.Replace()\
    \ to replace all '.' characters with '.|'\n        // Hint: You can use String.Split()\
    \ to split the string by '|' character.\n        // Hint: You can use String.Replace()\
    \ to replace all 'o' characters with 'o|'\n        // Hint: You can use String.Replace()\
    \ to replace all '.' characters with '.|'\n        // Hint: You can use String.Split()\
    \ to split the string by '|' character.\n        // Hint: You can use String.Replace()\
    \ to replace all 'o' characters with 'o|'\n        // Hint: You can use String.Replace()\
    \ to replace all '.' characters with '.|'\n        // Hint: You can use String.Split()\
    \ to split the string by '|' character.\n        // Hint: You can use String.Replace()\
    \ to replace all 'o' characters with 'o|'\n        // Hint: You can use String.Replace()\
    \ to replace\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpruyljr9a.cs(16,30): error CS0161: ''Problem.ParseMusic(string)'': not
    all code paths return a value

    '
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        int count = 0;\n        for\
    \ (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                count += 4;\n            } else if (music_string[i]\
    \ == '|') {\n                result.Add(count);\n                count = 0;\n\
    \            } else {\n                count += 1;\n            }\n        }\n\
    \        result.Add(count);\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5193dcefd60747d8b0df1c55171ce5b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5193dcefd60747d8b0df1c55171ce5b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = new List<long>();\n  \
    \      var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beats.Add(4);\n       \
    \     } else if (note == \"o|\") {\n                beats.Add(2);\n          \
    \  } else if (note == \".|\") {\n                beats.Add(1);\n            }\n\
    \        }\n        return beats;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5e82a5aa7764f0e9fe287c7a5341747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5e82a5aa7764f0e9fe287c7a5341747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: implement this function\n        return null;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <0603b0fd80e8469f86cb06b1d08d427f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <0603b0fd80e8469f86cb06b1d08d427f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \                beats += 4;\n            } else if (c == '|') {\n           \
    \     result.Add(beats);\n                beats = 0;\n            } else if (c\
    \ == '.') {\n                result.Add(1);\n                beats += 1;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca35870fe21a4421958ddccd400fb766>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca35870fe21a4421958ddccd400fb766>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        int i = 0;\n        while (i\
    \ < music_string.Length) {\n            if (music_string[i] == 'o') {\n      \
    \          result.Add(4);\n                i++;\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i += 2;\n       \
    \     } else {\n                result.Add(2);\n                i += 2;\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91269e2c29314e0faefce6a9badc0142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91269e2c29314e0faefce6a9badc0142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code goes here.\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: implement this function\n        return null;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <0603b0fd80e8469f86cb06b1d08d427f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <0603b0fd80e8469f86cb06b1d08d427f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        long beats = 0;\n        for\
    \ (int i = 0; i < music_string.Length; i++) {\n            switch (music_string[i])\
    \ {\n                case 'o':\n                    beats += 4;\n            \
    \        break;\n                case '|':\n                    result.Add(beats);\n\
    \                    beats = 0;\n                    break;\n                case\
    \ '.':\n                    beats += 1;\n                    break;\n        \
    \    }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <36863fecaca44b489a6a8825e240e8ef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <36863fecaca44b489a6a8825e240e8ef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: implement this function\n        List<long> result = new List<long>();\n\
    \        foreach (char c in music_string) {\n            if (c == 'o') {\n   \
    \             result.Add(4);\n            } else if (c == '|') {\n           \
    \     result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52207b1f48f549b7a4075994665c4c22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52207b1f48f549b7a4075994665c4c22>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here\n        var result = new List<long>();\n        var\
    \ notes = music_string.Split(' ');\n        foreach (var note in notes) {\n  \
    \          if (note == \"o\") {\n                result.Add(4);\n            }\
    \ else if (note == \"o|\") {\n                result.Add(2);\n            } else\
    \ if (note == \".|\") {\n                result.Add(1);\n            }\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f1631ec0e96c4358ba86313e8630be02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f1631ec0e96c4358ba86313e8630be02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4c8da2152d04f10989c676f4c3369ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4c8da2152d04f10989c676f4c3369ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        foreach (char c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ef2f6859af274b7abb77b0813fdbd117>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ef2f6859af274b7abb77b0813fdbd117>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                result.Add(4);\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \            } else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function.\n        return null;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <99e49b43ae274edbadb2afb595d21a1a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <99e49b43ae274edbadb2afb595d21a1a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        foreach (char c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ef2f6859af274b7abb77b0813fdbd117>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ef2f6859af274b7abb77b0813fdbd117>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \                beats += 4;\n            } else if (c == '|') {\n           \
    \     result.Add(beats);\n                beats = 0;\n            } else if (c\
    \ == '.') {\n                result.Add(1);\n                beats += 1;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca35870fe21a4421958ddccd400fb766>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca35870fe21a4421958ddccd400fb766>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(beats\
    \ + 4);\n                beats = 0;\n            } else if (c == '|') {\n    \
    \            beats++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <50ad4b3e757c4446911e2bd8c7d4acfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <50ad4b3e757c4446911e2bd8c7d4acfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var beats = new List<long>();\n        var note_lengths = new Dictionary<char,\
    \ long>();\n        note_lengths['o'] = 4;\n        note_lengths['|'] = 2;\n \
    \       note_lengths['.'] = 1;\n        var current_note = 0;\n        foreach\
    \ (var c in music_string) {\n            if (c == ' ') {\n                beats.Add(current_note);\n\
    \                current_note = 0;\n            } else {\n                current_note\
    \ += note_lengths[c];\n            }\n        }\n        beats.Add(current_note);\n\
    \        return beats;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy2v1obb5.cs(28,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <da52d675e73a42c08c9820b0cba19f73>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <da52d675e73a42c08c9820b0cba19f73>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        List<long> beats = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                beats.Add(4);\n                i\
    \ += 2;\n            } else if (music_string[i] == '.') {\n                beats.Add(1);\n\
    \                i += 2;\n            } else if (music_string[i] == 'o' && music_string[i\
    \ + 1] == '|') {\n                beats.Add(2);\n                i += 3;\n   \
    \         }\n        }\n        return beats;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <00137186a80142729536688109632f0f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <00137186a80142729536688109632f0f>:0 \n"
  stdout: None
  timestamp: 1659976638
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var notes = music_string.Split(new\
    \ char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n        foreach (var\
    \ note in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        } else {\n                throw new Exception(\"Invalid note\");\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f8d203a2654811818811cc2e7e59b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f8d203a2654811818811cc2e7e59b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var beats = new List<long>();\n        var current_beat = 0;\n        var\
    \ current_note = 0;\n        var current_note_length = 0;\n        var current_note_beats\
    \ = 0;\n        while (current_beat < music_string.Length) {\n            if (music_string[current_beat]\
    \ == 'o') {\n                current_note_length = 4;\n                current_note_beats\
    \ = 1;\n            } else if (music_string[current_beat] == '.') {\n        \
    \        current_note_length = 1;\n                current_note_beats = 1;\n \
    \           } else if (music_string[current_beat] == '|') {\n                current_note_length\
    \ = 0;\n                current_note_beats = 1;\n            } else {\n      \
    \          current_note_length = 0;\n                current_note_beats = 0;\n\
    \            }\n            if (current_note_beats > 0) {\n                if\
    \ (current_note >= beats.Count) {\n                    beats.Add(current_note_beats);\n\
    \                } else {\n                    beats[current_note] += current_note_beats;\n\
    \                }\n            }\n            current_beat += current_note_length\
    \ + 1;\n            current_note += 1;\n        }\n        return beats;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a9b46d98112475f9431047aee44d71f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a9b46d98112475f9431047aee44d71f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        long beats = 0;\n        for\
    \ (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                beats += 4;\n            } else if (music_string[i]\
    \ == '|') {\n                result.Add(beats);\n                beats = 0;\n\
    \            } else if (music_string[i] == '.') {\n                beats += 1;\n\
    \            }\n        }\n        result.Add(beats);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63baf2ecde554cb8811721e3ac2d59e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63baf2ecde554cb8811721e3ac2d59e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement me\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb5382d34ebe45a4b97588b94bc87e0c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb5382d34ebe45a4b97588b94bc87e0c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        long current_note = 0;\n  \
    \      for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                current_note += 4;\n            } else if (music_string[i]\
    \ == '|') {\n                result.Add(current_note);\n                current_note\
    \ = 0;\n            } else {\n                current_note += 1;\n           \
    \ }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <46b7976f3f7749daa6c1c35f6782b573>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <46b7976f3f7749daa6c1c35f6782b573>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        for (int i\
    \ = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                beats += 4;\n            } else if (music_string[i] == '|')\
    \ {\n                result.Add(beats);\n                beats = 0;\n        \
    \    } else if (music_string[i] == '.') {\n                beats += 1;\n     \
    \       }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b5ba4c89afd64c1f93be7fe5381738f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b5ba4c89afd64c1f93be7fe5381738f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var beats = new List<long>();\n        var notes = music_string.Split('|');\n\
    \        foreach (var note in notes) {\n            if (note == \"o\") {\n   \
    \             beats.Add(4);\n            } else if (note == \"o\") {\n       \
    \         beats.Add(2);\n            } else if (note == \".\") {\n           \
    \     beats.Add(1);\n            }\n        }\n        return beats;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <630640d4c3e0454cb3befe889bada893>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <630640d4c3e0454cb3befe889bada893>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code goes here.\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        int i = 0;\n        while (i\
    \ < music_string.Length) {\n            if (music_string[i] == 'o') {\n      \
    \          result.Add(4);\n                i++;\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i += 2;\n       \
    \     } else {\n                result.Add(2);\n                i += 2;\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91269e2c29314e0faefce6a9badc0142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91269e2c29314e0faefce6a9badc0142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        for (int i\
    \ = 0; i < music_string.Length; i++) {\n            switch (music_string[i]) {\n\
    \                case 'o':\n                    beats += 4;\n                \
    \    break;\n                case 'o':\n                    beats += 2;\n    \
    \                break;\n                case '.':\n                    beats\
    \ += 1;\n                    break;\n                case '|':\n             \
    \       result.Add(beats);\n                    beats = 0;\n                 \
    \   break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo2iuf0lr.cs(24,17): error CS0152: The switch statement contains multiple
    cases with the label value ''o''

    '
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here\n        List<long> result = new List<long>();\n  \
    \      long count = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                count += 4;\n\
    \            } else if (music_string[i] == '|') {\n                result.Add(count);\n\
    \                count = 0;\n            } else {\n                count += 1;\n\
    \            }\n        }\n        result.Add(count);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <448bb37d031b4ea78d7ab04af02d6559>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <448bb37d031b4ea78d7ab04af02d6559>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                result.Add(4);\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \            } else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code here\n       \
    \ return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bf7597f01f13453ea2bdc9961df2d7f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bf7597f01f13453ea2bdc9961df2d7f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                result.Add(4);\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \            } else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here\n        List<long> result = new List<long>();\n  \
    \      int i = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]\
    \ == 'o') {\n                result.Add(4);\n                i++;\n          \
    \  } else if (music_string[i] == '.') {\n                result.Add(1);\n    \
    \            i += 2;\n            } else {\n                result.Add(2);\n \
    \               i += 2;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <671b536b75284a108b01d1e7c0c937b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <671b536b75284a108b01d1e7c0c937b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \                beats += 4;\n            } else if (c == '|') {\n           \
    \     result.Add(beats);\n                beats = 0;\n            } else if (c\
    \ == '.') {\n                beats += 1;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d601e67df8748ce9e9abff8c3a1e00b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d601e67df8748ce9e9abff8c3a1e00b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var current_note = 0;\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \            } else if (c == '|') {\n                result[current_note] /= 2;\n\
    \            } else if (c == '.') {\n                result.Add(1);\n        \
    \        current_note++;\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <719734db20c947e28954929dd2a35b85>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <719734db20c947e28954929dd2a35b85>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659976633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var current_note = 0;\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \            } else if (c == '|') {\n                result[current_note] /= 2;\n\
    \            } else if (c == '.') {\n                result.Add(1);\n        \
    \        current_note++;\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <719734db20c947e28954929dd2a35b85>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <719734db20c947e28954929dd2a35b85>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            switch (c) {\n                case 'o':\n\
    \                    result.Add(4);\n                    beats += 4;\n       \
    \             break;\n                case '|':\n                    if (beats\
    \ % 2 == 0) {\n                        result.Add(2);\n                      \
    \  beats += 2;\n                    } else {\n                        result.Add(1);\n\
    \                        beats += 1;\n                    }\n                \
    \    break;\n                case '.':\n                    result.Add(1);\n \
    \                   beats += 1;\n                    break;\n                default:\n\
    \                    break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49f9137a587f4e6b8cf9a67aea35489f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49f9137a587f4e6b8cf9a67aea35489f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                beats +=\
    \ 4;\n            } else if (c == '|') {\n                result.Add(beats);\n\
    \                beats = 0;\n            } else {\n                beats += 1;\n\
    \            }\n        }\n        result.Add(beats);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                beats +=\
    \ 4;\n            } else if (c == '|') {\n                result.Add(beats);\n\
    \                beats = 0;\n            } else {\n                beats += 1;\n\
    \            }\n        }\n        result.Add(beats);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \                beats += 4;\n            } else if (c == '|') {\n           \
    \     result.Add(beats);\n                beats = 0;\n            } else if (c\
    \ == '.') {\n                result.Add(1);\n                beats += 1;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca35870fe21a4421958ddccd400fb766>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca35870fe21a4421958ddccd400fb766>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            switch (c) {\n                case 'o':\n                   \
    \ result.Add(4);\n                    break;\n                case '|':\n    \
    \                result[result.Count - 1] /= 2;\n                    break;\n\
    \                case '.':\n                    result.Add(1);\n             \
    \       break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8584230f10284e969d36284c9f3ab268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8584230f10284e969d36284c9f3ab268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function.\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <da64e14734c2436eaf9f0c5519925177>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <da64e14734c2436eaf9f0c5519925177>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function.\n        // Hint: You can use String.Split()\
    \ function to split the string into array of characters.\n        // Hint: You\
    \ can use List<T> class to store the result.\n        List<long> result = new\
    \ List<long>();\n        string[] notes = music_string.Split('|');\n        foreach\
    \ (string note in notes) {\n            if (note.Length == 1) {\n            \
    \    result.Add(4);\n            } else if (note.Length == 2) {\n            \
    \    result.Add(2);\n            } else {\n                result.Add(1);\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be2dfc63d40840cabbd58c9b82d0faff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be2dfc63d40840cabbd58c9b82d0faff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement your solution\
    \ here\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7b9f3e94c6c4cedb4aa35c3efe8b058>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7b9f3e94c6c4cedb4aa35c3efe8b058>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var notes = music_string.Split(' ');\n\
    \        foreach (var note in notes) {\n            if (note == \"o\") {\n   \
    \             result.Add(4);\n            } else if (note == \"o|\") {\n     \
    \           result.Add(2);\n            } else if (note == \".|\") {\n       \
    \         result.Add(1);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f048ce0dbe1d44638c39b80c7b722765>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f048ce0dbe1d44638c39b80c7b722765>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return null;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <8fbbb25a34244145806c099be2ac5694>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <8fbbb25a34244145806c099be2ac5694>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        int i = 0;\n        while (i\
    \ < music_string.Length) {\n            if (music_string[i] == 'o') {\n      \
    \          result.Add(4);\n                i++;\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i += 2;\n       \
    \     } else {\n                result.Add(2);\n                i += 2;\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91269e2c29314e0faefce6a9badc0142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91269e2c29314e0faefce6a9badc0142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code goes here\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29de54e070fb4a288e65574fd6f6cf91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29de54e070fb4a288e65574fd6f6cf91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                result.Add(4);\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \            } else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var music_string_array = music_string.Split('\
    \ ');\n        foreach (var note in music_string_array) {\n            switch\
    \ (note) {\n                case \"o\":\n                    result.Add(4);\n\
    \                    break;\n                case \"o|\":\n                  \
    \  result.Add(2);\n                    break;\n                case \".|\":\n\
    \                    result.Add(1);\n                    break;\n            \
    \    default:\n                    throw new Exception(\"Invalid note\");\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.Exception: Invalid note\n  at Problem.ParseMusic\
    \ (System.String music_string) [0x00077] in <3e8907e44f324f3798eb885bcbefe4ad>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <3e8907e44f324f3798eb885bcbefe4ad>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: Invalid note\n  at Problem.ParseMusic\
    \ (System.String music_string) [0x00077] in <3e8907e44f324f3798eb885bcbefe4ad>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <3e8907e44f324f3798eb885bcbefe4ad>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \                beats += 4;\n            } else if (c == '|') {\n           \
    \     result.Add(beats);\n                beats = 0;\n            } else if (c\
    \ == '.') {\n                beats += 1;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d601e67df8748ce9e9abff8c3a1e00b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d601e67df8748ce9e9abff8c3a1e00b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            switch (c) {\n                case 'o':\n\
    \                    result.Add(4);\n                    beats += 4;\n       \
    \             break;\n                case '|':\n                    if (beats\
    \ % 2 == 0) {\n                        result.Add(2);\n                      \
    \  beats += 2;\n                    } else {\n                        result.Add(1);\n\
    \                        beats += 1;\n                    }\n                \
    \    break;\n                case '.':\n                    result.Add(1);\n \
    \                   beats += 1;\n                    break;\n                default:\n\
    \                    throw new Exception(\"Invalid character in music string\"\
    );\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3253eab66521459fa08b77c11ac89514>:0 \n\nUnhandled Exception:\n\
    System.Exception: Invalid character in music string\n  at Problem.ParseMusic (System.String\
    \ music_string) [0x00089] in <3253eab66521459fa08b77c11ac89514>:0 \n  at Problem.Main\
    \ (System.String[] args) [0x0001b] in <3253eab66521459fa08b77c11ac89514>:0 \n\
    [ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: Invalid character in music\
    \ string\n  at Problem.ParseMusic (System.String music_string) [0x00089] in <3253eab66521459fa08b77c11ac89514>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001b] in <3253eab66521459fa08b77c11ac89514>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var beats = new List<long>();\n        // TODO: Implement this function\n\
    \        return beats;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ccdd8d57b454273bb9c41b31c151dcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ccdd8d57b454273bb9c41b31c151dcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here\n        List<long> result = new List<long>();\n  \
    \      int i = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]\
    \ == 'o') {\n                result.Add(4);\n                i++;\n          \
    \  } else if (music_string[i] == '.') {\n                result.Add(1);\n    \
    \            i += 2;\n            } else {\n                result.Add(2);\n \
    \               i += 2;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <671b536b75284a108b01d1e7c0c937b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <671b536b75284a108b01d1e7c0c937b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        for (int i\
    \ = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                beats += 4;\n            } else if (music_string[i] == '|')\
    \ {\n                result.Add(beats);\n                beats = 0;\n        \
    \    } else if (music_string[i] == '.') {\n                beats += 1;\n     \
    \       }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b5ba4c89afd64c1f93be7fe5381738f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b5ba4c89afd64c1f93be7fe5381738f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code goes here.\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your solution goes here\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b622ed6c5d7b49b98f4fcbd45f76e0f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b622ed6c5d7b49b98f4fcbd45f76e0f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                beats +=\
    \ 4;\n            } else if (c == '|') {\n                result.Add(beats);\n\
    \                beats = 0;\n            } else {\n                beats += 1;\n\
    \            }\n        }\n        result.Add(beats);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23c6a5515d934c7ab60b61f2b0da6e36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23c6a5515d934c7ab60b61f2b0da6e36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4c8da2152d04f10989c676f4c3369ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4c8da2152d04f10989c676f4c3369ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var beats = new List<long>();\n        var beat = 0L;\n        foreach (var\
    \ c in music_string) {\n            switch (c) {\n                case 'o':\n\
    \                    beats.Add(beat);\n                    beat = 4;\n       \
    \             break;\n                case 'o':\n                    beats.Add(beat);\n\
    \                    beat = 2;\n                    break;\n                case\
    \ '.':\n                    beats.Add(beat);\n                    beat = 1;\n\
    \                    break;\n                case '|':\n                    beat\
    \ = 0;\n                    break;\n            }\n        }\n        beats.Add(beat);\n\
    \        return beats;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd69x30ai.cs(25,17): error CS0152: The switch statement contains multiple
    cases with the label value ''o''

    '
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                beats +=\
    \ 4;\n            } else if (c == '|') {\n                result.Add(beats);\n\
    \                beats = 0;\n            } else {\n                beats += 1;\n\
    \            }\n        }\n        result.Add(beats);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23c6a5515d934c7ab60b61f2b0da6e36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23c6a5515d934c7ab60b61f2b0da6e36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here.\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <58ce3264847f4e5ebd093020a1eb3024>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <58ce3264847f4e5ebd093020a1eb3024>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976634
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function.\n        // You can use any language of\
    \ your choice.\n        // You can use any libraries of your choice.\n       \
    \ // You can use any IDE of your choice.\n        // You can use any operating\
    \ system of your choice.\n        // You can use any keyboard of your choice.\n\
    \        // You can use any mouse of your choice.\n        // You can use any\
    \ monitor of your choice.\n        // You can use any chair of your choice.\n\
    \        // You can use any desk of your choice.\n        // You can use any room\
    \ of your choice.\n        // You can use any building of your choice.\n     \
    \   // You can use any city of your choice.\n        // You can use any country\
    \ of your choice.\n        // You can use any planet of your choice.\n       \
    \ // You can use any star system of your choice.\n        // You can use any galaxy\
    \ of your choice.\n        // You can use any universe of your choice.\n     \
    \   // You can use any dimension of your choice.\n        // You can use any reality\
    \ of your choice.\n        // You can use any existence of your choice.\n    \
    \    // You can use any time of your choice.\n        // You can use any space\
    \ of your choice.\n        // You can use any nothingness of your choice.\n  \
    \      // You can use any everythingness of your choice.\n        // You can use\
    \ any nothing of your choice.\n        // You can use any everything of your choice.\n\
    \        // You can use any nothingness of your choice.\n        // You can use\
    \ any everythingness of your choice.\n        // You can use any nothing of your\
    \ choice.\n        // You can use any everything of your choice.\n        // You\
    \ can use any nothingness of your choice.\n        // You can use any everythingness\
    \ of your choice.\n        // You can use any nothing of your choice.\n      \
    \  // You can use any everything of your choice.\n        // You can use any nothingness\
    \ of your choice.\n        // You can use any everythingness of your choice.\n\
    \        // You can use any nothing of your choice.\n        // You can use any\
    \ everything of your choice.\n        // You can use any nothingness of your choice.\n\
    \        // You can use any everythingness of your choice.\n        // You can\
    \ use any nothing of your\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl1x5lcnb.cs(16,30): error CS0161: ''Problem.ParseMusic(string)'': not
    all code paths return a value

    '
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Write your code here\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45f4e3e870594609950b03ff33f5aee4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45f4e3e870594609950b03ff33f5aee4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976634
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return null;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <8fbbb25a34244145806c099be2ac5694>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <8fbbb25a34244145806c099be2ac5694>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                result.Add(4);\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \            } else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = new List<long>();\n  \
    \      var currentBeat = 0;\n        foreach (var c in music_string) {\n     \
    \       if (c == 'o') {\n                currentBeat += 4;\n            } else\
    \ if (c == '|') {\n                beats.Add(currentBeat);\n                currentBeat\
    \ = 0;\n            } else if (c == '.') {\n                currentBeat += 1;\n\
    \            }\n        }\n        beats.Add(currentBeat);\n        var maxBeat\
    \ = beats.Max();\n        foreach (var beat in beats) {\n            result.Add(maxBeat\
    \ - beat);\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cd33fba42d6c4897b8ad341a1a767d1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cd33fba42d6c4897b8ad341a1a767d1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        int i = 0;\n        while (i\
    \ < music_string.Length) {\n            if (music_string[i] == 'o') {\n      \
    \          result.Add(4);\n                i++;\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i += 2;\n       \
    \     } else {\n                result.Add(2);\n                i += 2;\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91269e2c29314e0faefce6a9badc0142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91269e2c29314e0faefce6a9badc0142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3401d9d764e48048ca3d49266422a60>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3401d9d764e48048ca3d49266422a60>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return null;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <8fbbb25a34244145806c099be2ac5694>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <8fbbb25a34244145806c099be2ac5694>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var current_note = 0;\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                result.Add(current_note);\n\
    \                current_note = 4;\n            } else if (c == '|') {\n     \
    \           current_note /= 2;\n            } else if (c == '.') {\n         \
    \       result.Add(current_note);\n                current_note = 0;\n       \
    \     }\n        }\n        result.Add(current_note);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ce7d3490b1b4b3fbdf7a5c449f24a95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ce7d3490b1b4b3fbdf7a5c449f24a95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var notes = music_string.Split(' ');\n\
    \        foreach (var note in notes) {\n            if (note == \"o\") {\n   \
    \             result.Add(4);\n            } else if (note == \"o|\") {\n     \
    \           result.Add(2);\n            } else if (note == \".|\") {\n       \
    \         result.Add(1);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f048ce0dbe1d44638c39b80c7b722765>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f048ce0dbe1d44638c39b80c7b722765>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code goes here.\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function.\n        // Hint: You can use String.Split(char[])\
    \ function to split string into an array of substrings.\n        // Hint: You\
    \ can use String.Trim(char[]) function to remove whitespace characters from the\
    \ beginning and end of a string.\n        // Hint: You can use String.ToCharArray()\
    \ function to convert string to an array of characters.\n        // Hint: You\
    \ can use String.IndexOf(char) function to find the index of a character in a\
    \ string.\n        // Hint: You can use String.Substring(int, int) function to\
    \ get a substring of a string.\n        // Hint: You can use String.Join(string,\
    \ string[]) function to join an array of strings into a single string.\n     \
    \   // Hint: You can use String.Compare(string, string) function to compare two\
    \ strings.\n        // Hint: You can use String.Compare(string, string, bool)\
    \ function to compare two strings ignoring case.\n        // Hint: You can use\
    \ String.Concat(string, string) function to concatenate two strings.\n       \
    \ // Hint: You can use String.Replace(string, string) function to replace all\
    \ occurences of a substring in a string.\n        // Hint: You can use String.Replace(string,\
    \ string, int, int) function to replace all occurences of a substring in a substring\
    \ of a string.\n        // Hint: You can use String.Insert(int, string) function\
    \ to insert a substring into a string.\n        // Hint: You can use String.Remove(int,\
    \ int) function to remove a substring from a string.\n        // Hint: You can\
    \ use String.LastIndexOf(char) function to find the last index of a character\
    \ in a string.\n        // Hint: You can use String.LastIndexOf(char, int) function\
    \ to find the last index of a character in a substring of a string.\n        //\
    \ Hint: You can use String.ToUpper() function to convert a string to upper case.\n\
    \        // Hint: You can use String.ToLower() function to convert a string to\
    \ lower case.\n        // Hint: You can use String.TrimStart(\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuqs_9fw6.cs(16,30): error CS0161: ''Problem.ParseMusic(string)'': not
    all code paths return a value

    '
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23c6a5515d934c7ab60b61f2b0da6e36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23c6a5515d934c7ab60b61f2b0da6e36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        // Your code goes here.\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0eb457dd6ad445fa33fe284f1062ae2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0eb457dd6ad445fa33fe284f1062ae2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement your solution\
    \ here\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7b9f3e94c6c4cedb4aa35c3efe8b058>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7b9f3e94c6c4cedb4aa35c3efe8b058>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here\n        List<long> result = new List<long>();\n  \
    \      string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92a052d8257844c7bc6e536b99628bdb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92a052d8257844c7bc6e536b99628bdb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        int i = 0;\n        while (i\
    \ < music_string.Length) {\n            if (music_string[i] == 'o') {\n      \
    \          result.Add(4);\n                i += 1;\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i += 2;\n       \
    \     } else {\n                result.Add(2);\n                i += 2;\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c71a9d7db34e3eafb692656ecf5127>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c71a9d7db34e3eafb692656ecf5127>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                result.Add(4);\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \            } else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e26491e5baa46c8bfeee1eade9a68a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here\n        List<long> result = new List<long>();\n  \
    \      long counter = 0;\n        foreach (char c in music_string) {\n       \
    \     if (c == 'o') {\n                result.Add(4);\n                counter\
    \ += 4;\n            }\n            else if (c == '|') {\n                result.Add(counter);\n\
    \                counter = 0;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e2a4db7e095f40ccb6fe33fa6f863329>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e2a4db7e095f40ccb6fe33fa6f863329>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var current = 0;\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \                current += 4;\n            } else if (c == '|') {\n         \
    \       result.Add(current);\n                current = 0;\n            } else\
    \ if (c == '.') {\n                current += 1;\n            }\n        }\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c4f5057edbe46a09540793417b4e40b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c4f5057edbe46a09540793417b4e40b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3401d9d764e48048ca3d49266422a60>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3401d9d764e48048ca3d49266422a60>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var notes = music_string.Split(' ');\n\
    \        foreach (var note in notes) {\n            if (note == \"o\") {\n   \
    \             result.Add(4);\n            } else if (note == \"o|\") {\n     \
    \           result.Add(2);\n            } else if (note == \".|\") {\n       \
    \         result.Add(1);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f048ce0dbe1d44638c39b80c7b722765>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f048ce0dbe1d44638c39b80c7b722765>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var beats = new List<long>();\n        // TODO: Implement this function\n\
    \        return beats;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ccdd8d57b454273bb9c41b31c151dcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ccdd8d57b454273bb9c41b31c151dcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function.\n        // Hint: You can use String.Split()\
    \ function to split the string into an array of characters.\n        // Hint:\
    \ You can use String.Join() function to join an array of characters into a string.\n\
    \        // Hint: You can use String.Trim() function to remove whitespace from\
    \ the beginning and the end of a string.\n        // Hint: You can use String.TrimEnd()\
    \ function to remove whitespace from the end of a string.\n        // Hint: You\
    \ can use String.TrimStart() function to remove whitespace from the beginning\
    \ of a string.\n        // Hint: You can use String.TrimEnd() function to remove\
    \ whitespace from the end of a string.\n        // Hint: You can use String.TrimStart()\
    \ function to remove whitespace from the beginning of a string.\n        // Hint:\
    \ You can use String.TrimEnd() function to remove whitespace from the end of a\
    \ string.\n        // Hint: You can use String.TrimStart() function to remove\
    \ whitespace from the beginning of a string.\n        // Hint: You can use String.TrimEnd()\
    \ function to remove whitespace from the end of a string.\n        // Hint: You\
    \ can use String.TrimStart() function to remove whitespace from the beginning\
    \ of a string.\n        // Hint: You can use String.TrimEnd() function to remove\
    \ whitespace from the end of a string.\n        // Hint: You can use String.TrimStart()\
    \ function to remove whitespace from the beginning of a string.\n        // Hint:\
    \ You can use String.TrimEnd() function to remove whitespace from the end of a\
    \ string.\n        // Hint: You can use String.TrimStart() function to remove\
    \ whitespace from the beginning of a string.\n        // Hint: You can use String.TrimEnd()\
    \ function to remove whitespace from the end of a string.\n        // Hint: You\
    \ can use String.TrimStart() function to remove whitespace from the beginning\
    \ of a string.\n        // Hint: You can use String.TrimEnd() function to remove\
    \ whitespace from the end of a string.\n        // Hint: You can use String.TrimStart()\
    \ function to remove whitespace\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpff1019f0.cs(16,30): error CS0161: ''Problem.ParseMusic(string)'': not
    all code paths return a value

    '
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code goes here\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29de54e070fb4a288e65574fd6f6cf91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29de54e070fb4a288e65574fd6f6cf91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function.\n        // Hint: You can use String.Split()\
    \ to split string into an array of characters.\n        // Hint: You can use List<T>.Add()\
    \ to add elements to a list.\n        // Hint: You can use List<T>.ToArray() to\
    \ convert a list to an array.\n        // Hint: You can use Array.Reverse() to\
    \ reverse an array.\n        // Hint: You can use String.Join() to join an array\
    \ of strings into a single string.\n        // Hint: You can use String.Concat()\
    \ to concatenate two strings.\n        // Hint: You can use String.IndexOf() to\
    \ find the index of a character in a string.\n        // Hint: You can use String.Substring()\
    \ to extract a substring from a string.\n        // Hint: You can use String.Replace()\
    \ to replace a character in a string.\n        // Hint: You can use String.Remove()\
    \ to remove a character from a string.\n        // Hint: You can use String.Insert()\
    \ to insert a character into a string.\n        // Hint: You can use String.LastIndexOf()\
    \ to find the last index of a character in a string.\n        // Hint: You can\
    \ use String.IsNullOrEmpty() to check if a string is null or empty.\n        //\
    \ Hint: You can use String.IsNullOrWhiteSpace() to check if a string is null or\
    \ whitespace.\n        // Hint: You can use String.Trim() to trim whitespace from\
    \ the beginning and end of a string.\n        // Hint: You can use String.TrimStart()\
    \ to trim whitespace from the beginning of a string.\n        // Hint: You can\
    \ use String.TrimEnd() to trim whitespace from the end of a string.\n        //\
    \ Hint: You can use String.TrimEnd() to trim whitespace from the end of a string.\n\
    \        // Hint: You can use String.TrimEnd() to trim whitespace from the end\
    \ of a string.\n        // Hint: You can use String.TrimEnd() to trim whitespace\
    \ from the end of a string.\n        // Hint: You can use String.TrimEnd() to\
    \ trim whitespace\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3xkuxufu.cs(16,30): error CS0161: ''Problem.ParseMusic(string)'': not
    all code paths return a value

    '
  timestamp: 1659976634
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: implement this function\n        return null;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <0603b0fd80e8469f86cb06b1d08d427f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <0603b0fd80e8469f86cb06b1d08d427f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function.\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <da64e14734c2436eaf9f0c5519925177>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <da64e14734c2436eaf9f0c5519925177>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23c6a5515d934c7ab60b61f2b0da6e36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23c6a5515d934c7ab60b61f2b0da6e36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \                beats += 4;\n            } else if (c == '|') {\n           \
    \     result.Add(beats);\n                beats = 0;\n            } else if (c\
    \ == '.') {\n                beats += 1;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d601e67df8748ce9e9abff8c3a1e00b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d601e67df8748ce9e9abff8c3a1e00b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \                beats += 4;\n            } else if (c == '|') {\n           \
    \     result.Add(beats);\n                beats = 0;\n            } else if (c\
    \ == '.') {\n                result.Add(1);\n                beats += 1;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca35870fe21a4421958ddccd400fb766>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca35870fe21a4421958ddccd400fb766>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                beats +=\
    \ 4;\n            } else if (c == '|') {\n                result.Add(beats);\n\
    \                beats = 0;\n            } else {\n                beats += 1;\n\
    \            }\n        }\n        result.Add(beats);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        foreach (char c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ef2f6859af274b7abb77b0813fdbd117>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ef2f6859af274b7abb77b0813fdbd117>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \                beats += 4;\n            } else if (c == '|') {\n           \
    \     result.Add(beats);\n                beats = 0;\n            } else if (c\
    \ == '.') {\n                beats += 1;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d601e67df8748ce9e9abff8c3a1e00b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d601e67df8748ce9e9abff8c3a1e00b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: implement this function.\n        // You can use any language features\
    \ you want.\n        // You can use any data structures you want.\n        //\
    \ You can use any algorithms you want.\n        // You can use any libraries you\
    \ want.\n        // You can use any tools you want.\n        // You can use any\
    \ resources you want.\n        // You can use any other things you want.\n   \
    \     // You can use any other things you want.\n        // You can use any other\
    \ things you want.\n        // You can use any other things you want.\n      \
    \  // You can use any other things you want.\n        // You can use any other\
    \ things you want.\n        // You can use any other things you want.\n      \
    \  // You can use any other things you want.\n        // You can use any other\
    \ things you want.\n        // You can use any other things you want.\n      \
    \  // You can use any other things you want.\n        // You can use any other\
    \ things you want.\n        // You can use any other things you want.\n      \
    \  // You can use any other things you want.\n        // You can use any other\
    \ things you want.\n        // You can use any other things you want.\n      \
    \  // You can use any other things you want.\n        // You can use any other\
    \ things you want.\n        // You can use any other things you want.\n      \
    \  // You can use any other things you want.\n        // You can use any other\
    \ things you want.\n        // You can use any other things you want.\n      \
    \  // You can use any other things you want.\n        // You can use any other\
    \ things you want.\n        // You can use any other things you want.\n      \
    \  // You can use any other things you want.\n        // You can use any other\
    \ things you want.\n        // You can use any other things you want.\n      \
    \  // You can use any other things you want.\n        // You can use any other\
    \ things you want.\n        // You can use any other things you want.\n      \
    \  // You can use any other things you want.\n        // You can use any other\
    \ things you want.\n        // You can use any other things you want.\n      \
    \  // You can use any other things you want.\n        // You can use any other\
    \ things you want.\n       \n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwtyqmc09.cs(16,30): error CS0161: ''Problem.ParseMusic(string)'': not
    all code paths return a value

    '
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var current_note = 0;\n        var\
    \ current_note_length = 0;\n        for (var i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                current_note_length\
    \ += 4;\n            } else if (music_string[i] == '|') {\n                result.Add(current_note_length);\n\
    \                current_note_length = 0;\n            } else if (music_string[i]\
    \ == '.') {\n                current_note_length += 1;\n            }\n      \
    \  }\n        result.Add(current_note_length);\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20f24941c2dd491dac039aa1ed6c9342>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20f24941c2dd491dac039aa1ed6c9342>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = new List<long>();\n  \
    \      var notes = new List<char>();\n        var i = 0;\n        while (i < music_string.Length)\
    \ {\n            if (music_string[i] == 'o') {\n                beats.Add(4);\n\
    \                notes.Add('o');\n                i++;\n            } else if\
    \ (music_string[i] == '.') {\n                beats.Add(1);\n                notes.Add('.');\n\
    \                i++;\n            } else if (music_string[i] == 'o' && music_string[i\
    \ + 1] == '|') {\n                beats.Add(2);\n                notes.Add('o');\n\
    \                i += 2;\n            } else if (music_string[i] == '.' && music_string[i\
    \ + 1] == '|') {\n                beats.Add(1);\n                notes.Add('.');\n\
    \                i += 2;\n            } else {\n                i++;\n       \
    \     }\n        }\n        var j = 0;\n        while (j < notes.Count) {\n  \
    \          var k = j;\n            while (k < notes.Count && notes[k] == notes[j])\
    \ {\n                k++;\n            }\n            result.Add(beats[j] * (k\
    \ - j));\n            j = k;\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ccda9f7903f497db95d721d432c4aea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ccda9f7903f497db95d721d432c4aea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                result.Add(4);\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \            } else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8cf7e027de4a4eb388a3e390ae831dbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8cf7e027de4a4eb388a3e390ae831dbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var beats = 0;\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                beats +=\
    \ 4;\n            } else if (c == '|') {\n                result.Add(beats);\n\
    \                beats = 0;\n            } else {\n                beats += 1;\n\
    \            }\n        }\n        result.Add(beats);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff8698dfb63f4ced93f7f6721fb3359d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code goes here.\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbe426379b2549cb93a96c224609e547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var beats = new List<long>();\n        var current_beat = 0;\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                beats.Add(current_beat);\n\
    \                current_beat += 4;\n            } else if (c == '|') {\n    \
    \            beats.Add(current_beat);\n                current_beat += 1;\n  \
    \          }\n        }\n        return beats;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <24208322bf844bac88b2a29b1b11de93>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <24208322bf844bac88b2a29b1b11de93>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaafa68d537b432e9291d21cddba255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here.\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <9d76bdcaf2614e51912124b12f82b737>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <9d76bdcaf2614e51912124b12f82b737>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // Your code goes here\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29de54e070fb4a288e65574fd6f6cf91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29de54e070fb4a288e65574fd6f6cf91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // Your code goes here\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4c8da2152d04f10989c676f4c3369ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4c8da2152d04f10989c676f4c3369ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var notes = music_string.Split(' ');\n\
    \        foreach (var note in notes) {\n            if (note == \"o\") {\n   \
    \             result.Add(4);\n            } else if (note == \"o|\") {\n     \
    \           result.Add(2);\n            } else if (note == \".|\") {\n       \
    \         result.Add(1);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f048ce0dbe1d44638c39b80c7b722765>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f048ce0dbe1d44638c39b80c7b722765>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   List<long> result = new List<long>();\n        // TODO: Implement this function\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f0d389b5ab4405ab72cd20859861c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   // TODO: Implement this function\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c0c6764e2784c30b7d8f7721d5085f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    public static List<long> ParseMusic(string music_string) {\n     \
    \   var result = new List<long>();\n        var current_note = 0;\n        var\
    \ current_note_length = 0;\n        foreach (var c in music_string) {\n      \
    \      if (c == 'o') {\n                current_note_length = 4;\n           \
    \ } else if (c == '|') {\n                current_note_length /= 2;\n        \
    \    } else if (c == '.') {\n                result.Add(current_note_length);\n\
    \                current_note_length = 0;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21d7b9ed26a84441b16a874bdbb13ae7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21d7b9ed26a84441b16a874bdbb13ae7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976634

name: HumanEval_39_prime_fib
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and\
  \ it's also prime.\n    public static long PrimeFib(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(PrimeFib((1L))\
  \ == (2L));\n    Debug.Assert(PrimeFib((2L)) == (3L));\n    Debug.Assert(PrimeFib((3L))\
  \ == (5L));\n    Debug.Assert(PrimeFib((4L)) == (13L));\n    Debug.Assert(PrimeFib((5L))\
  \ == (89L));\n    Debug.Assert(PrimeFib((6L)) == (233L));\n    Debug.Assert(PrimeFib((7L))\
  \ == (1597L));\n    Debug.Assert(PrimeFib((8L)) == (28657L));\n    Debug.Assert(PrimeFib((9L))\
  \ == (514229L));\n    Debug.Assert(PrimeFib((10L)) == (433494437L));\n    }\n\n\
  }\n"
completions: ["        long a = 1;\n        long b = 1;\n        long c = a + b;\n\
    \        long i = 3;\n        while (true) {\n            if (IsPrime(c)) {\n\
    \                if (i == n) {\n                    return c;\n              \
    \  }\n                i++;\n            }\n            a = b;\n            b =\
    \ c;\n            c = a + b;\n        }", "        long a = 0;\n        long b\
    \ = 1;\n        long c = 0;\n        long i = 0;\n        while (i < n) {\n  \
    \          c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        var fib = new List<long>();\n        fib.Add(1);\n        fib.Add(2);\n\
    \        long i = 2;\n        while (true) {\n            long next = fib[i -\
    \ 1] + fib[i - 2];\n            if (next > long.MaxValue) {\n                break;\n\
    \            }\n            fib.Add(next);\n            i++;\n        }\n    \
    \    var primes = new List<long>();\n        for (long j = 0; j < fib.Count; j++)\
    \ {\n            if (IsPrime(fib[(int)j])) {\n                primes.Add(fib[(int)j]);\n\
    \            }\n        }\n        return primes[(int)n - 1];", "        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (IsPrime(c))\n                i++;\n        }\n\
    \        return c;", "        long a = 0;\n        long b = 1;\n        long c\
    \ = 1;\n        long i = 1;\n        while (i < n) {\n            c = a + b;\n\
    \            a = b;\n            b = c;\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            c = a + b;\n            a = b;\n       \
    \     b = c;\n            if (IsPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;", "        long a = 1;\n        long b = 1;\n\
    \        long c = 0;\n        long i = 2;\n        while (i < n) {\n         \
    \   c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long i = 0;\n        long j = 1;\n        long k = 1;\n        long l =\
    \ 0;\n        while (n > 0) {\n            l = i + j;\n            i = j;\n  \
    \          j = l;\n            if (IsPrime(l)) {\n                n--;\n     \
    \       }\n        }\n        return l;", "        long a = 1;\n        long b\
    \ = 1;\n        long c = 0;\n        long i = 2;\n        while (i < n) {\n  \
    \          c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 1;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = 0;\n        long i = 2;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 1;\n      \
    \  long i = 0;\n        while (i < n) {\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n            a = b;\n            b = c;\n    \
    \        c = a + b;\n        }\n        return c;", "        long a = 1;\n   \
    \     long b = 1;\n        long c = a + b;\n        long i = 3;\n        while\
    \ (i <= n) {\n            a = b;\n            b = c;\n            c = a + b;\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 1;\n        long b = 1;\n        long c\
    \ = a + b;\n        long i = 2;\n        while (i < n) {\n            c = a +\
    \ b;\n            a = b;\n            b = c;\n            if (IsPrime(c)) {\n\
    \                i++;\n            }\n        }\n        return c;", "       \
    \ long a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n\
    \        while (true) {\n            if (IsPrime(c)) {\n                if (i\
    \ == n) {\n                    return c;\n                }\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }", "        long a = 0;\n        long b = 1;\n        long c = 0;\n\
    \        long i = 0;\n        while (i < n) {\n            c = a + b;\n      \
    \      a = b;\n            b = c;\n            if (IsPrime(c)) {\n           \
    \     i++;\n            }\n        }\n        return c;", "        long a = 1;\n\
    \        long b = 1;\n        long c = 2;\n        long i = 2;\n        while\
    \ (i < n) {\n            c = a + b;\n            a = b;\n            b = c;\n\
    \            i++;\n            while (!IsPrime(c)) {\n                c = a +\
    \ b;\n                a = b;\n                b = c;\n                i++;\n \
    \           }\n        }\n        return c;", "        long a = 0;\n        long\
    \ b = 1;\n        long c = 1;\n        long i = 0;\n        while (i < n) {\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        \
    \    a = b;\n            b = c;\n            c = a + b;\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 1;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long i = 1;\n        long\
    \ j = 1;\n        long k = 1;\n        while (k < n) {\n            long t = i\
    \ + j;\n            i = j;\n            j = t;\n            if (IsPrime(j)) {\n\
    \                k++;\n            }\n        }\n        return j;", "       \
    \ long a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n\
    \        while (i < n) {\n            c = a + b;\n            a = b;\n       \
    \     b = c;\n            if (IsPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;", "        long a = 0;\n        long b = 1;\n\
    \        long c = 1;\n        long i = 0;\n        while (i < n) {\n         \
    \   c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 1;\n        long b = 1;\n        long c = a + b;\n        long\
    \ i = 2;\n        while (i < n) {\n            c = a + b;\n            a = b;\n\
    \            b = c;\n            if (IsPrime(c)) {\n                i++;\n   \
    \         }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = 0;\n        long i = 2;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 1;\n        long b = 1;\n        long c = a + b;\n  \
    \      long i = 3;\n        while (i <= n) {\n            a = b;\n           \
    \ b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n            \
    \    i++;\n            }\n        }\n        return c;", "        long a = 1;\n\
    \        long b = 1;\n        long c = 0;\n        long i = 2;\n        while\
    \ (i < n) {\n            c = a + b;\n            a = b;\n            b = c;\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 1;\n        long b = 1;\n        long c\
    \ = 2;\n        long i = 3;\n        while (i < n) {\n            c = a + b;\n\
    \            a = b;\n            b = c;\n            i++;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 1;\n        long b = 1;\n        long c = a + b;\n        long\
    \ i = 2;\n        while (i < n) {\n            c = a + b;\n            a = b;\n\
    \            b = c;\n            if (IsPrime(c)) {\n                i++;\n   \
    \         }\n        }\n        return c;", "        long a = 0;\n        long\
    \ b = 1;\n        long c = 1;\n        long i = 0;\n        while (i < n) {\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        \
    \    a = b;\n            b = c;\n            c = a + b;\n        }\n        return\
    \ c;", "        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = 2;\n        long i = 3;\n        while (true) {\n \
    \           if (IsPrime(c)) {\n                if (i == n) {\n               \
    \     return c;\n                }\n                i++;\n            }\n    \
    \        a = b;\n            b = c;\n            c = a + b;\n        }", "   \
    \     long a = 1;\n        long b = 1;\n        long c = 0;\n        long i =\
    \ 2;\n        while (i < n) {\n            c = a + b;\n            a = b;\n  \
    \          b = c;\n            if (IsPrime(c)) {\n                i++;\n     \
    \       }\n        }\n        return c;", "        long a = 1;\n        long b\
    \ = 1;\n        long c = 0;\n        long i = 1;\n        while (i < n) {\n  \
    \          c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 1;\n        long b = 1;\n        long c = a + b;\n  \
    \      long i = 2;\n        while (i < n) {\n            c = a + b;\n        \
    \    a = b;\n            b = c;\n            i++;\n            while (!IsPrime(c))\
    \ {\n                c = a + b;\n                a = b;\n                b = c;\n\
    \                i++;\n            }\n        }\n        return c;", "       \
    \ long a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n\
    \        while (true) {\n            c = a + b;\n            a = b;\n        \
    \    b = c;\n            if (IsPrime(c)) {\n                i++;\n           \
    \     if (i == n) return c;\n            }\n        }", "        long i = 0;\n\
    \        long j = 1;\n        long k = 0;\n        long count = 0;\n        while\
    \ (count < n) {\n            k = i + j;\n            i = j;\n            j = k;\n\
    \            if (IsPrime(k)) {\n                count++;\n            }\n    \
    \    }\n        return k;", "        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        while (k < n) {\n            long t = i + j;\n       \
    \     i = j;\n            j = t;\n            if (IsPrime(j)) {\n            \
    \    k++;\n            }\n        }\n        return j;", "        long a = 1;\n\
    \        long b = 1;\n        long c = a + b;\n        long i = 2;\n        while\
    \ (i < n) {\n            a = b;\n            b = c;\n            c = a + b;\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        if (n == 1) return 2;\n        if (n == 2) return\
    \ 3;\n        long a = 2;\n        long b = 3;\n        long c = 5;\n        long\
    \ i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n  \
    \          c = a + b;\n            if (IsPrime(c)) i++;\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 1;\n      \
    \  long i = 0;\n        while (i < n) {\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n            a = b;\n            b = c;\n    \
    \        c = a + b;\n        }\n        return c;", "        long a = 1;\n   \
    \     long b = 1;\n        long c = 0;\n        long i = 2;\n        while (i\
    \ < n) {\n            c = a + b;\n            a = b;\n            b = c;\n   \
    \         if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 0;\n        long b = 1;\n        long c\
    \ = 1;\n        long i = 0;\n        while (i < n) {\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n            a = b;\n            b =\
    \ c;\n            c = a + b;\n        }\n        return c;", "        long a =\
    \ 1;\n        long b = 1;\n        long c = 2;\n        long i = 2;\n        while\
    \ (i < n) {\n            c = a + b;\n            a = b;\n            b = c;\n\
    \            i++;\n            if (IsPrime(c)) {\n                i++;\n     \
    \       }\n        }\n        return c;", "        long a = 1;\n        long b\
    \ = 1;\n        long c = a + b;\n        long i = 3;\n        while (i <= n) {\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        \
    \    a = b;\n            b = c;\n            c = a + b;\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 1;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = 2;\n        long i = 2;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 1;\n        long b = 1;\n        long c = a + b;\n  \
    \      long i = 2;\n        while (i < n) {\n            c = a + b;\n        \
    \    a = b;\n            b = c;\n            if (IsPrime(c)) {\n             \
    \   i++;\n            }\n        }\n        return c;", "        long a = 0;\n\
    \        long b = 1;\n        long c = 1;\n        long i = 0;\n        while\
    \ (i < n) {\n            if (IsPrime(c)) {\n                i++;\n           \
    \ }\n            a = b;\n            b = c;\n            c = a + b;\n        }\n\
    \        return c;", "        long a = 0;\n        long b = 1;\n        long c\
    \ = 1;\n        long i = 1;\n        while (i < n) {\n            c = a + b;\n\
    \            a = b;\n            b = c;\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n        }\n        return c;", "        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (IsPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;", "        long a = 1;\n        long b = 1;\n  \
    \      long c = a + b;\n        long i = 2;\n        while (i < n) {\n       \
    \     c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 1;\n        long b = 1;\n        long c = 0;\n        long i =\
    \ 2;\n        while (true) {\n            c = a + b;\n            if (IsPrime(c))\
    \ {\n                if (i == n) {\n                    return c;\n          \
    \      }\n                i++;\n            }\n            a = b;\n          \
    \  b = c;\n        }", "        long a = 0;\n        long b = 1;\n        long\
    \ c = 0;\n        long i = 0;\n        while (i < n) {\n            c = a + b;\n\
    \            a = b;\n            b = c;\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (IsPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;", "        long a = 1;\n        long b = 1;\n  \
    \      long c = 0;\n        long i = 2;\n        while (i < n) {\n           \
    \ c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 1;\n        long b = 1;\n        long c = a + b;\n        long\
    \ i = 2;\n        while (i < n) {\n            c = a + b;\n            a = b;\n\
    \            b = c;\n            if (IsPrime(c)) {\n                i++;\n   \
    \         }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = 2;\n        long i = 2;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (true) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \                if (i == n) {\n                    return c;\n              \
    \  }\n            }\n        }", "        long a = 1;\n        long b = 1;\n \
    \       long c = 2;\n        long i = 2;\n        while (true) {\n           \
    \ if (IsPrime(c)) {\n                if (i == n) {\n                    return\
    \ c;\n                }\n                i++;\n            }\n            a =\
    \ b;\n            b = c;\n            c = a + b;\n        }", "        long a\
    \ = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n      \
    \  while (i < n) {\n            if (IsPrime(c)) {\n                i++;\n    \
    \        }\n            a = b;\n            b = c;\n            c = a + b;\n \
    \       }\n        return c;", "        long a = 1;\n        long b = 1;\n   \
    \     long c = a + b;\n        long i = 2;\n        while (i < n) {\n        \
    \    c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 0;\n        long b = 1;\n        long c = 1;\n        long i =\
    \ 1;\n        while (i < n) {\n            c = a + b;\n            a = b;\n  \
    \          b = c;\n            if (IsPrime(c)) {\n                i++;\n     \
    \       }\n        }\n        return c;", "        var fib = new List<long>();\n\
    \        fib.Add(1);\n        fib.Add(2);\n        long i = 2;\n        while\
    \ (fib.Count < n) {\n            fib.Add(fib[i - 1] + fib[i - 2]);\n         \
    \   i++;\n        }\n        return fib[n - 1];", "        long a = 1;\n     \
    \   long b = 1;\n        long c = a + b;\n        long i = 2;\n        while (i\
    \ < n) {\n            c = a + b;\n            a = b;\n            b = c;\n   \
    \         if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 1;\n        long b = 1;\n        long c\
    \ = a + b;\n        long i = 2;\n        while (i < n) {\n            c = a +\
    \ b;\n            a = b;\n            b = c;\n            if (IsPrime(c)) {\n\
    \                i++;\n            }\n        }\n        return c;", "       \
    \ long a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n\
    \        while (i < n) {\n            c = a + b;\n            a = b;\n       \
    \     b = c;\n            if (IsPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;", "        long a = 1;\n        long b = 1;\n\
    \        long c = 0;\n        long i = 2;\n        while (i < n) {\n         \
    \   c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 1;\n        long b = 1;\n        long c = a + b;\n        long\
    \ i = 2;\n        while (i < n) {\n            c = a + b;\n            a = b;\n\
    \            b = c;\n            if (IsPrime(c))\n                i++;\n     \
    \   }\n        return c;", "        long a = 1;\n        long b = 1;\n       \
    \ long c = a + b;\n        long i = 2;\n        while (i < n) {\n            c\
    \ = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 1;\n        long b = 1;\n        long c = a + b;\n        long\
    \ i = 2;\n        while (i < n) {\n            c = a + b;\n            a = b;\n\
    \            b = c;\n            if (IsPrime(c)) {\n                i++;\n   \
    \         }\n        }\n        return c;", "        long a = 0;\n        long\
    \ b = 1;\n        long c = 1;\n        long i = 0;\n        while (i < n) {\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        \
    \    a = b;\n            b = c;\n            c = a + b;\n        }\n        return\
    \ c;", "        long a = 1;\n        long b = 1;\n        long c = a + b;\n  \
    \      long i = 2;\n        while (i < n) {\n            a = b;\n            b\
    \ = c;\n            c = a + b;\n            if (IsPrime(c)) {\n              \
    \  i++;\n            }\n        }\n        return c;", "        long a = 1;\n\
    \        long b = 1;\n        long c = a + b;\n        long i = 2;\n        while\
    \ (i < n) {\n            c = a + b;\n            a = b;\n            b = c;\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 0;\n        long b = 1;\n        long c\
    \ = 1;\n        long i = 1;\n        while (i < n) {\n            c = a + b;\n\
    \            a = b;\n            b = c;\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (IsPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;", "        long a = 1;\n        long b = 1;\n  \
    \      long c = a + b;\n        long i = 2;\n        while (i < n) {\n       \
    \     c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 1;\n        long b = 1;\n        long c = a + b;\n        long\
    \ i = 2;\n        while (i < n) {\n            c = a + b;\n            a = b;\n\
    \            b = c;\n            if (IsPrime(c)) {\n                i++;\n   \
    \         }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = 0;\n        long i = 2;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 1;\n        long b = 1;\n        long c = a + b;\n  \
    \      long i = 3;\n        while (i <= n) {\n            a = b;\n           \
    \ b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n            \
    \    i++;\n            }\n        }\n        return c;", "        long a = 1;\n\
    \        long b = 1;\n        long c = a + b;\n        long i = 2;\n        while\
    \ (true) {\n            if (IsPrime(c)) {\n                if (i == n) {\n   \
    \                 return c;\n                }\n                i++;\n       \
    \     }\n            a = b;\n            b = c;\n            c = a + b;\n    \
    \    }", "        long a = 0;\n        long b = 1;\n        long c = 1;\n    \
    \    long i = 0;\n        while (i < n) {\n            if (IsPrime(c)) {\n   \
    \             i++;\n            }\n            a = b;\n            b = c;\n  \
    \          c = a + b;\n        }\n        return c;", "        long a = 1;\n \
    \       long b = 1;\n        long c = a + b;\n        long i = 2;\n        while\
    \ (i < n) {\n            a = b;\n            b = c;\n            c = a + b;\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long[] f = new long[n];\n        f[0] = 1;\n   \
    \     f[1] = 1;\n        for (int i = 2; i < n; i++) {\n            f[i] = f[i\
    \ - 1] + f[i - 2];\n        }\n        return f[n - 1];", "        long a = 0;\n\
    \        long b = 1;\n        long c = 0;\n        long i = 0;\n        while\
    \ (i < n) {\n            c = a + b;\n            a = b;\n            b = c;\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long f1 = 1;\n        long f2 = 1;\n        long\
    \ f3 = 2;\n        long i = 3;\n        while (true) {\n            if (IsPrime(f3))\
    \ {\n                if (i == n) {\n                    return f3;\n         \
    \       }\n                i++;\n            }\n            f1 = f2;\n       \
    \     f2 = f3;\n            f3 = f1 + f2;\n        }", "        long a = 0;\n\
    \        long b = 1;\n        long c = 1;\n        while (n > 0) {\n         \
    \   if (IsPrime(c)) {\n                n--;\n            }\n            a = b;\n\
    \            b = c;\n            c = a + b;\n        }\n        return c;", " \
    \       if (n < 1) {\n            throw new ArgumentOutOfRangeException(\"n\"\
    );\n        }\n        if (n == 1) {\n            return 2;\n        }\n     \
    \   if (n == 2) {\n            return 3;\n        }\n        long a = 2;\n   \
    \     long b = 3;\n        long c = 5;\n        long i = 3;\n        while (i\
    \ < n) {\n            a = b;\n            b = c;\n            c = a + b;\n   \
    \         if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 1;\n        long b = 1;\n        long c\
    \ = a + b;\n        long i = 2;\n        while (i < n) {\n            c = a +\
    \ b;\n            a = b;\n            b = c;\n            if (IsPrime(c)) {\n\
    \                i++;\n            }\n        }\n        return c;", "       \
    \ long a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n\
    \        while (i < n) {\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;", "        long i = 0;\n        long j = 1;\n  \
    \      long k = 0;\n        long count = 0;\n        while (count < n) {\n   \
    \         k = i + j;\n            i = j;\n            j = k;\n            if (IsPrime(k))\
    \ {\n                count++;\n            }\n        }\n        return k;", " \
    \       long a = 1;\n        long b = 1;\n        long c = 2;\n        long i\
    \ = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n    \
    \        c = a + b;\n            if (IsPrime(c)) {\n                i++;\n   \
    \         }\n        }\n        return c;", "        long i = 2;\n        long\
    \ a = 1;\n        long b = 1;\n        while (n > 0) {\n            long c = a\
    \ + b;\n            a = b;\n            b = c;\n            if (IsPrime(c)) {\n\
    \                n--;\n            }\n            i++;\n        }\n        return\
    \ a;", "        long a = 0;\n        long b = 1;\n        long c = 1;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long a = 0;\n        long\
    \ b = 1;\n        long c = 0;\n        long i = 0;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 1;\n      \
    \  long i = 0;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = 2;\n        long i = 3;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            i++;\n\
    \            while (!IsPrime(c)) {\n                c = a + b;\n             \
    \   a = b;\n                b = c;\n                i++;\n            }\n    \
    \    }\n        return c;", "        long a = 1;\n        long b = 1;\n      \
    \  long c = a + b;\n        long i = 2;\n        while (i < n) {\n           \
    \ c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 1;\n        long b = 1;\n        long c = 2;\n        long i =\
    \ 3;\n        while (i < n) {\n            a = b;\n            b = c;\n      \
    \      c = a + b;\n            if (IsPrime(c)) {\n                i++;\n     \
    \       }\n        }\n        return c;", "        long a = 1;\n        long b\
    \ = 1;\n        long c = a + b;\n        long i = 3;\n        while (i <= n) {\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        \
    \    a = b;\n            b = c;\n            c = a + b;\n        }\n        return\
    \ c;", "        long a = 1;\n        long b = 1;\n        long c = a + b;\n  \
    \      long i = 2;\n        while (i < n) {\n            c = a + b;\n        \
    \    a = b;\n            b = c;\n            if (IsPrime(c)) {\n             \
    \   i++;\n            }\n        }\n        return c;", "        long a = 1;\n\
    \        long b = 1;\n        long c = a + b;\n        long i = 2;\n        while\
    \ (i < n) {\n            a = b;\n            b = c;\n            c = a + b;\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 1;\n        long b = 1;\n        long c\
    \ = a + b;\n        long i = 2;\n        while (i < n) {\n            a = b;\n\
    \            b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n \
    \               i++;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (IsPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;", "        long a = 1;\n        long b = 1;\n  \
    \      long c = 0;\n        long i = 2;\n        while (i < n) {\n           \
    \ c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 0;\n        long b = 1;\n        long c = 1;\n        long i =\
    \ 1;\n        while (i < n) {\n            c = a + b;\n            a = b;\n  \
    \          b = c;\n            if (IsPrime(c)) {\n                i++;\n     \
    \       }\n        }\n        return c;", "        long a = 1;\n        long b\
    \ = 1;\n        long c = 2;\n        long i = 3;\n        while (i < n) {\n  \
    \          a = b;\n            b = c;\n            c = a + b;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 1;\n        long b = 1;\n        long c = a + b;\n  \
    \      long i = 3;\n        while (i <= n) {\n            a = b;\n           \
    \ b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n            \
    \    i++;\n            }\n        }\n        return c;", "        long a = 1;\n\
    \        long b = 1;\n        long c = a + b;\n        long i = 2;\n        while\
    \ (i < n) {\n            c = a + b;\n            a = b;\n            b = c;\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 1;\n        long b = 1;\n        long c\
    \ = a + b;\n        long i = 2;\n        while (i < n) {\n            c = a +\
    \ b;\n            a = b;\n            b = c;\n            if (IsPrime(c)) {\n\
    \                i++;\n            }\n        }\n        return c;", "       \
    \ long f1 = 1;\n        long f2 = 1;\n        long f3 = 2;\n        long i = 3;\n\
    \        while (true) {\n            if (IsPrime(f3)) {\n                n--;\n\
    \                if (n == 0) {\n                    return f3;\n             \
    \   }\n            }\n            f1 = f2;\n            f2 = f3;\n           \
    \ f3 = f1 + f2;\n            i++;\n        }", "        long a = 1;\n        long\
    \ b = 1;\n        long c = 2;\n        long i = 2;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 1;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long i = 0;\n        long\
    \ j = 1;\n        long k = 0;\n        long count = 0;\n        while (count <\
    \ n) {\n            k = i + j;\n            i = j;\n            j = k;\n     \
    \       if (IsPrime(k)) {\n                count++;\n            }\n        }\n\
    \        return k;", "        // Fibonacci numbers that are also prime.\n    \
    \    var fibs = new List<long>() { 2, 3 };\n        // The index of the last Fibonacci\
    \ number that is also prime.\n        int last = 1;\n        // The index of the\
    \ last Fibonacci number that is also prime and has been checked for primality.\n\
    \        int checked_last = 0;\n        // The index of the last Fibonacci number\
    \ that is also prime and has been checked for primality.\n        long last_checked\
    \ = 3;\n        // The index of the last Fibonacci number that is also prime and\
    \ has been checked for primality.\n        long last_checked_prime = 3;\n    \
    \    // The index of the last Fibonacci number that is also prime and has been\
    \ checked for primality.\n        long last_checked_not_prime = 0;\n        //\
    \ The index of the last Fibonacci number that is also prime and has been checked\
    \ for primality.\n        long last_checked_not_prime_index = 0;\n        // The\
    \ index of the last Fibonacci number that is also prime and has been checked for\
    \ primality.\n        long last_checked_prime_index = 1;\n        // The index\
    \ of the last Fibonacci number that is also prime and has been checked for primality.\n\
    \        long last_checked_index = 1;\n        // The index of the last Fibonacci\
    \ number that is also prime and has been checked for primality.\n        long\
    \ last_checked_prime_prime = 3;\n        // The index of the last Fibonacci number\
    \ that is also prime and has been checked for primality.\n        long last_checked_prime_prime_index\
    \ = 1;\n        // The index of the last Fibonacci number that is also prime and\
    \ has been checked for primality.\n        long last_checked_not_prime_prime =\
    \ 0;\n        // The index of the last Fibonacci number that is also prime and\
    \ has been checked for primality.\n        long last_checked_not_prime_prime_index\
    \ = 0;\n        // The index of the last Fibonacci number that is also prime and\
    \ has been checked for primality.\n        long last_checked_prime_not_prime =\
    \ 3;\n        // The index of the last Fibonacci number that is also", "     \
    \   long a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n\
    \        while (i < n) {\n            c = a + b;\n            a = b;\n       \
    \     b = c;\n            if (IsPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;", "        long a = 1;\n        long b = 1;\n\
    \        long c = 0;\n        long i = 2;\n        while (i < n) {\n         \
    \   c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 1;\n        long b = 1;\n        long c = a + b;\n        long\
    \ i = 3;\n        while (i <= n) {\n            a = b;\n            b = c;\n \
    \           c = a + b;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = 0;\n        long i = 2;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 0;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = 0;\n        long i = 2;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 1;\n      \
    \  long i = 0;\n        while (i < n) {\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n            a = b;\n            b = c;\n    \
    \        c = a + b;\n        }\n        return c;", "        long a = 1;\n   \
    \     long b = 1;\n        long c = a + b;\n        long i = 2;\n        while\
    \ (i < n) {\n            if (IsPrime(c)) {\n                i++;\n           \
    \ }\n            a = b;\n            b = c;\n            c = a + b;\n        }\n\
    \        return c;", "        long a = 1;\n        long b = 1;\n        long c\
    \ = a + b;\n        long i = 2;\n        while (i < n) {\n            a = b;\n\
    \            b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n \
    \               i++;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (true) {\n            if (IsPrime(c)) {\n                if (i == n)\
    \ {\n                    return c;\n                }\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }", "        long a = 1;\n        long b = 1;\n        long c = a + b;\n\
    \        long i = 2;\n        while (i < n) {\n            c = a + b;\n      \
    \      a = b;\n            b = c;\n            if (IsPrime(c)) {\n           \
    \     i++;\n            }\n        }\n        return c;", "        long a = 0;\n\
    \        long b = 1;\n        long c = 1;\n        long i = 1;\n        while\
    \ (i < n) {\n            c = a + b;\n            a = b;\n            b = c;\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 0;\n        long b = 1;\n        long c\
    \ = 0;\n        long i = 0;\n        while (i < n) {\n            c = a + b;\n\
    \            a = b;\n            b = c;\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        for (long i = 0; i < n; i++) {\n      \
    \      long c = a + b;\n            a = b;\n            b = c;\n            while\
    \ (!IsPrime(b)) {\n                b += a;\n            }\n        }\n       \
    \ return b;", "        long a = 1;\n        long b = 1;\n        long c = a +\
    \ b;\n        long i = 2;\n        while (i < n) {\n            a = b;\n     \
    \       b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n      \
    \          i++;\n            }\n        }\n        return c;", "        long a\
    \ = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n      \
    \  while (i < n) {\n            if (IsPrime(c)) {\n                i++;\n    \
    \        }\n            a = b;\n            b = c;\n            c = a + b;\n \
    \       }\n        return c;", "        long a = 1;\n        long b = 1;\n   \
    \     long c = 0;\n        long i = 2;\n        while (i < n) {\n            c\
    \ = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 1;\n        long b = 1;\n        long c = 0;\n        long i =\
    \ 2;\n        while (i < n) {\n            c = a + b;\n            a = b;\n  \
    \          b = c;\n            if (IsPrime(c)) {\n                i++;\n     \
    \       }\n        }\n        return c;", "        long a = 1;\n        long b\
    \ = 1;\n        long c = a + b;\n        long i = 2;\n        while (i < n) {\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        \
    \    a = b;\n            b = c;\n            c = a + b;\n        }\n        return\
    \ c;", "        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = 2;\n        long i = 2;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 1;\n      \
    \  long i = 0;\n        while (i < n) {\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n            a = b;\n            b = c;\n    \
    \        c = a + b;\n        }\n        return c;", "        long a = 1;\n   \
    \     long b = 1;\n        long c = 2;\n        long i = 3;\n        while (true)\
    \ {\n            if (IsPrime(c)) {\n                if (i == n) {\n          \
    \          return c;\n                }\n                i++;\n            }\n\
    \            a = b;\n            b = c;\n            c = a + b;\n        }", " \
    \       long a = 1;\n        long b = 1;\n        long c = a + b;\n        long\
    \ i = 2;\n        while (i < n) {\n            a = b;\n            b = c;\n  \
    \          c = a + b;\n            if (IsPrime(c)) {\n                i++;\n \
    \           }\n        }\n        return c;", "        long a = 0;\n        long\
    \ b = 1;\n        long c = 0;\n        long i = 0;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        var fib = new List<long> { 1, 2 };\n        var i = 2;\n     \
    \   while (true) {\n            var next = fib[i - 1] + fib[i - 2];\n        \
    \    if (next > long.MaxValue) {\n                throw new Exception(\"Overflow\"\
    );\n            }\n            fib.Add(next);\n            if (IsPrime(next))\
    \ {\n                n--;\n                if (n == 0) {\n                   \
    \ return next;\n                }\n            }\n            i++;\n        }",
  "        long a = 0;\n        long b = 1;\n        long c = 1;\n        long i =\
    \ 1;\n        while (i < n) {\n            c = a + b;\n            a = b;\n  \
    \          b = c;\n            if (IsPrime(c)) {\n                i++;\n     \
    \       }\n        }\n        return c;", "        long i = 0;\n        long j\
    \ = 1;\n        long k = 0;\n        long c = 0;\n        while (c < n) {\n  \
    \          k = i + j;\n            i = j;\n            j = k;\n            if\
    \ (IsPrime(k))\n                c++;\n        }\n        return k;", "       \
    \ long a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n\
    \        while (i < n) {\n            c = a + b;\n            a = b;\n       \
    \     b = c;\n            if (IsPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;", "        long a = 1;\n        long b = 1;\n\
    \        long c = 0;\n        long i = 2;\n        while (i < n) {\n         \
    \   c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 1;\n        long b = 1;\n        long c = 0;\n        long i =\
    \ 2;\n        while (i < n) {\n            c = a + b;\n            a = b;\n  \
    \          b = c;\n            if (IsPrime(c)) {\n                i++;\n     \
    \       }\n        }\n        return c;", "        long a = 1;\n        long b\
    \ = 1;\n        long c = a + b;\n        long i = 2;\n        while (i < n) {\n\
    \            a = b;\n            b = c;\n            c = a + b;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 0;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = a + b;\n        long i = 3;\n        while (i <= n)\
    \ {\n            a = b;\n            b = c;\n            c = a + b;\n        \
    \    if (IsPrime(c)) {\n                i++;\n            }\n        }\n     \
    \   return c;", "        long a = 1;\n        long b = 1;\n        long c = a\
    \ + b;\n        long i = 2;\n        while (i < n) {\n            c = a + b;\n\
    \            a = b;\n            b = c;\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (true) {\n            c = a + b;\n            if (IsPrime(c)) {\n \
    \               if (i == n) {\n                    return c;\n               \
    \ }\n                i++;\n            }\n            a = b;\n            b =\
    \ c;\n        }", "        long a = 0;\n        long b = 1;\n        long c =\
    \ 1;\n        long i = 1;\n        while (i < n) {\n            c = a + b;\n \
    \           a = b;\n            b = c;\n            if (IsPrime(c)) {\n      \
    \          i++;\n            }\n        }\n        return c;", "        long a\
    \ = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n      \
    \  while (i < n) {\n            c = a + b;\n            a = b;\n            b\
    \ = c;\n            if (IsPrime(c)) {\n                i++;\n            }\n \
    \       }\n        return c;", "        long a = 1;\n        long b = 1;\n   \
    \     long c = 2;\n        long i = 3;\n        while (true) {\n            if\
    \ (i == n) {\n                return c;\n            }\n            a = b;\n \
    \           b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n  \
    \              i++;\n            }\n        }", "        long a = 1;\n       \
    \ long b = 1;\n        long c = a + b;\n        long i = 2;\n        while (i\
    \ < n) {\n            a = b;\n            b = c;\n            c = a + b;\n   \
    \         if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 1;\n        long b = 1;\n        long c\
    \ = a + b;\n        long i = 2;\n        while (i < n) {\n            c = a +\
    \ b;\n            a = b;\n            b = c;\n            if (IsPrime(c)) {\n\
    \                i++;\n            }\n        }\n        return c;", "       \
    \ var fib = new Fibonacci();\n        long i = 0;\n        long f = 0;\n     \
    \   while (i < n) {\n            f = fib.Next();\n            if (f.IsPrime())\
    \ {\n                i++;\n            }\n        }\n        return f;", "   \
    \     long a = 1;\n        long b = 1;\n        long c = a + b;\n        long\
    \ i = 2;\n        while (i < n) {\n            if (IsPrime(c)) {\n           \
    \     i++;\n            }\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = a + b;\n        long i = 2;\n        while (i < n)\
    \ {\n            c = a + b;\n            a = b;\n            b = c;\n        \
    \    if (IsPrime(c)) {\n                i++;\n            }\n        }\n     \
    \   return c;", "        long a = 0;\n        long b = 1;\n        long c = 1;\n\
    \        long i = 1;\n        while (i < n) {\n            c = a + b;\n      \
    \      a = b;\n            b = c;\n            if (IsPrime(c)) {\n           \
    \     i++;\n            }\n        }\n        return c;", "        long a = 1;\n\
    \        long b = 1;\n        long c = 0;\n        long i = 1;\n        while\
    \ (i < n) {\n            c = a + b;\n            a = b;\n            b = c;\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 1;\n        long b = 1;\n        long c\
    \ = 2;\n        long i = 2;\n        while (i < n) {\n            c = a + b;\n\
    \            a = b;\n            b = c;\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n        }\n        return c;", "        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n    \
    \    while (i < n) {\n            if (IsPrime(c)) {\n                i++;\n  \
    \          }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;", "        long a = 1;\n        long b = 1;\n  \
    \      long c = a + b;\n        long count = 2;\n        while (count < n) {\n\
    \            a = b;\n            b = c;\n            c = a + b;\n            if\
    \ (IsPrime(c)) {\n                count++;\n            }\n        }\n       \
    \ return c;", "        long a = 1;\n        long b = 1;\n        long c = 2;\n\
    \        long i = 3;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n           \
    \     i++;\n            }\n        }\n        return c;", "        long a = 0;\n\
    \        long b = 1;\n        long c = 1;\n        long i = 1;\n        while\
    \ (i < n) {\n            c = a + b;\n            a = b;\n            b = c;\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 0;\n        long b = 1;\n        long c\
    \ = 1;\n        long i = 1;\n        while (i < n) {\n            c = a + b;\n\
    \            a = b;\n            b = c;\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (IsPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;", "        long a = 1;\n        long b = 1;\n  \
    \      long c = 2;\n        long i = 3;\n        while (true) {\n            if\
    \ (IsPrime(c)) {\n                if (n == 1) {\n                    return c;\n\
    \                }\n                n--;\n            }\n            a = b;\n\
    \            b = c;\n            c = a + b;\n            i++;\n        }", " \
    \       long[] fib = new long[n];\n        fib[0] = 1;\n        fib[1] = 1;\n\
    \        long i = 2;\n        while (i < n) {\n            fib[i] = fib[i - 1]\
    \ + fib[i - 2];\n            i++;\n        }\n        return fib[n - 1];", " \
    \       long a = 1;\n        long b = 1;\n        long c = a + b;\n        long\
    \ i = 2;\n        while (i < n) {\n            c = a + b;\n            a = b;\n\
    \            b = c;\n            if (IsPrime(c)) {\n                i++;\n   \
    \         }\n        }\n        return c;", "        long a = 0;\n        long\
    \ b = 1;\n        long c = 1;\n        long i = 1;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 0;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long a = 0;\n        long\
    \ b = 1;\n        long c = 1;\n        long i = 0;\n        while (i < n) {\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        \
    \    a = b;\n            b = c;\n            c = a + b;\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 1;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = a + b;\n        long i = 2;\n        while (i < n)\
    \ {\n            c = a + b;\n            a = b;\n            b = c;\n        \
    \    if (IsPrime(c)) {\n                i++;\n            }\n        }\n     \
    \   return c;", "        long i = 1;\n        long j = 1;\n        long k = 0;\n\
    \        long count = 0;\n        while (true) {\n            k = i + j;\n   \
    \         i = j;\n            j = k;\n            if (IsPrime(k)) {\n        \
    \        count++;\n                if (count == n) {\n                    return\
    \ k;\n                }\n            }\n        }", "        long a = 1;\n   \
    \     long b = 1;\n        long c = 0;\n        long i = 2;\n        while (i\
    \ < n) {\n            c = a + b;\n            a = b;\n            b = c;\n   \
    \         if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 1;\n        long b = 1;\n        long c\
    \ = a + b;\n        long i = 2;\n        while (i < n) {\n            a = b;\n\
    \            b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n \
    \               i++;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            c = a + b;\n            a = b;\n       \
    \     b = c;\n            if (IsPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;", "        long a = 1;\n        long b = 1;\n\
    \        long c = 2;\n        long i = 2;\n        while (i < n) {\n         \
    \   c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     var fib = new List<long>();\n        fib.Add(1);\n        fib.Add(2);\n\
    \        var i = 2;\n        while (true) {\n            fib.Add(fib[i - 1] +\
    \ fib[i - 2]);\n            if (IsPrime(fib[i])) {\n                n--;\n   \
    \             if (n == 0) {\n                    return fib[i];\n            \
    \    }\n            }\n            i++;\n        }", "        long a = 1;\n  \
    \      long b = 1;\n        long c = 0;\n        long i = 2;\n        while (i\
    \ < n) {\n            c = a + b;\n            a = b;\n            b = c;\n   \
    \         if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 1;\n        long b = 1;\n        long c\
    \ = 0;\n        long i = 1;\n        while (i < n) {\n            c = a + b;\n\
    \            a = b;\n            b = c;\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;", "        long a = 1;\n        long b = 1;\n  \
    \      long c = 2;\n        long i = 2;\n        while (i < n) {\n           \
    \ c = a + b;\n            a = b;\n            b = c;\n            i++;\n     \
    \       if (IsPrime(c)) {\n                i++;\n            }\n        }\n  \
    \      return c;", "        long a = 1;\n        long b = 1;\n        long c =\
    \ a + b;\n        long i = 2;\n        while (i < n) {\n            c = a + b;\n\
    \            a = b;\n            b = c;\n            if (IsPrime(c)) {\n     \
    \           i++;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (IsPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;", "        long a = 1;\n        long b = 1;\n  \
    \      long c = a + b;\n        long i = 3;\n        while (i <= n) {\n      \
    \      if (IsPrime(c)) {\n                a = b;\n                b = c;\n   \
    \             c = a + b;\n                i++;\n            } else {\n       \
    \         a = b;\n                b = c;\n                c = a + b;\n       \
    \     }\n        }\n        return c;", "        long a = 1;\n        long b =\
    \ 1;\n        long c = 0;\n        long i = 1;\n        while (i < n) {\n    \
    \        c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long i = 0;\n        long f = 0;\n        long f1 = 1;\n        long f2\
    \ = 1;\n        while (i < n) {\n            f = f1 + f2;\n            f1 = f2;\n\
    \            f2 = f;\n            if (IsPrime(f)) {\n                i++;\n  \
    \          }\n        }\n        return f;", "        long a = 0;\n        long\
    \ b = 1;\n        long c = 0;\n        long i = 0;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            if\
    \ (IsPrime(c)) {\n                i++;\n            }\n        }\n        return\
    \ c;", "        long a = 0;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 0;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = a + b;\n        long i = 2;\n        while (i < n)\
    \ {\n            c = a + b;\n            a = b;\n            b = c;\n        \
    \    if (IsPrime(c)) {\n                i++;\n            }\n        }\n     \
    \   return c;", "        long a = 1;\n        long b = 1;\n        long c = a\
    \ + b;\n        long i = 2;\n        while (i < n) {\n            a = b;\n   \
    \         b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n    \
    \            i++;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            if (IsPrime(c)) {\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;", "        long a = 1;\n        long b = 1;\n  \
    \      long c = a + b;\n        long i = 2;\n        while (i < n) {\n       \
    \     c = a + b;\n            a = b;\n            b = c;\n            if (IsPrime(c))\
    \ {\n                i++;\n            }\n        }\n        return c;", "   \
    \     long a = 0;\n        long b = 1;\n        long c = 1;\n        long i =\
    \ 1;\n        while (i < n) {\n            c = a + b;\n            a = b;\n  \
    \          b = c;\n            if (IsPrime(c)) {\n                i++;\n     \
    \       }\n        }\n        return c;", "        long a = 1;\n        long b\
    \ = 1;\n        long c = a + b;\n        long i = 2;\n        while (i < n) {\n\
    \            if (IsPrime(c)) {\n                i++;\n            }\n        \
    \    a = b;\n            b = c;\n            c = a + b;\n        }\n        return\
    \ c;", "        long a = 1;\n        long b = 1;\n        long c = a + b;\n  \
    \      long i = 2;\n        while (i < n) {\n            c = a + b;\n        \
    \    a = b;\n            b = c;\n            if (IsPrime(c)) {\n             \
    \   i++;\n            }\n        }\n        return c;", "        long a = 1;\n\
    \        long b = 1;\n        long c = a + b;\n        long i = 2;\n        while\
    \ (i < n) {\n            if (IsPrime(c)) {\n                i++;\n           \
    \ }\n            a = b;\n            b = c;\n            c = a + b;\n        }\n\
    \        return c;"]
stop_tokens:
- "\n    }\n"

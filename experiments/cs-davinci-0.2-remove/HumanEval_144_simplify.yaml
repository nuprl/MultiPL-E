name: HumanEval_144_simplify
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Your task is to implement a function that will simplify the\
  \ expression\n    // x * n. The function returns True if x * n evaluates to a whole\
  \ number and False\n    // otherwise. Both x and n, are string representation of\
  \ a fraction, and have the following format,\n    // <numerator>/<denominator> where\
  \ both numerator and denominator are positive whole numbers.\n    // You can assume\
  \ that x, and n are valid fractions, and do not have zero as denominator.\n    public\
  \ static bool Simplify(string x, string n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Simplify((\"\
  1/5\"), (\"5/1\")) == (true));\n    Debug.Assert(Simplify((\"1/6\"), (\"2/1\"))\
  \ == (false));\n    Debug.Assert(Simplify((\"5/1\"), (\"3/1\")) == (true));\n  \
  \  Debug.Assert(Simplify((\"7/10\"), (\"10/2\")) == (false));\n    Debug.Assert(Simplify((\"\
  2/10\"), (\"50/10\")) == (true));\n    Debug.Assert(Simplify((\"7/2\"), (\"4/2\"\
  )) == (true));\n    Debug.Assert(Simplify((\"11/6\"), (\"6/1\")) == (true));\n \
  \   Debug.Assert(Simplify((\"2/3\"), (\"5/2\")) == (false));\n    Debug.Assert(Simplify((\"\
  5/2\"), (\"3/5\")) == (false));\n    Debug.Assert(Simplify((\"2/4\"), (\"8/4\"))\
  \ == (true));\n    Debug.Assert(Simplify((\"2/4\"), (\"4/2\")) == (true));\n   \
  \ Debug.Assert(Simplify((\"1/5\"), (\"5/1\")) == (true));\n    Debug.Assert(Simplify((\"\
  1/5\"), (\"1/5\")) == (false));\n    }\n\n}\n"
completions: ["        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        return den / gcd == 1;",
  "        // Your code goes here.\n        return false;", "        // Your code\
    \ goes here\n        return false;", "        // Your code goes here\n       \
    \ return false;", "        var x_ = x.Split('/');\n        var n_ = n.Split('/');\n\
    \        var x_numerator = BigInteger.Parse(x_[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_[1]);\n        var n_numerator = BigInteger.Parse(n_[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_[1]);\n        var numerator =\
    \ x_numerator * n_numerator;\n        var denominator = x_denominator * n_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return denominator\
    \ == 1;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nNumerator;\n        var resultDenominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(result, resultDenominator);\n\
    \        result /= gcd;\n        resultDenominator /= gcd;\n        return result\
    \ % resultDenominator == 0;", "        var x_split = x.Split('/');\n        var\
    \ n_split = n.Split('/');\n        var x_num = BigInteger.Parse(x_split[0]);\n\
    \        var x_den = BigInteger.Parse(x_split[1]);\n        var n_num = BigInteger.Parse(n_split[0]);\n\
    \        var n_den = BigInteger.Parse(n_split[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return den == 1;",
  "        // Your code goes here\n        var x_split = x.Split('/');\n        var\
    \ n_split = n.Split('/');\n        var x_num = BigInteger.Parse(x_split[0]);\n\
    \        var x_den = BigInteger.Parse(x_split[1]);\n        var n_num = BigInteger.Parse(n_split[0]);\n\
    \        var n_den = BigInteger.Parse(n_split[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return den == 1;",
  "        var x_ = x.Split('/');\n        var n_ = n.Split('/');\n        var x_num\
    \ = BigInteger.Parse(x_[0]);\n        var x_den = BigInteger.Parse(x_[1]);\n \
    \       var n_num = BigInteger.Parse(n_[0]);\n        var n_den = BigInteger.Parse(n_[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return den == 1;",
  "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n      \
    \  var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var resultNumerator = xNumerator * nNumerator;\n\
    \        var resultDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(resultNumerator, resultDenominator);\n  \
    \      resultNumerator /= gcd;\n        resultDenominator /= gcd;\n        return\
    \ resultDenominator == 1;", "        // Your code goes here\n        return false;",
  "        // Your code goes here\n        var x_num = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_den = BigInteger.Parse(x.Split('/')[1]);\n        var n_num = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_den = BigInteger.Parse(n.Split('/')[1]);\n        var num = x_num\
    \ * n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        return num % den == 0;", "        // Your code goes here\n  \
    \      var x_ = x.Split('/');\n        var n_ = n.Split('/');\n        var x_num\
    \ = BigInteger.Parse(x_[0]);\n        var x_den = BigInteger.Parse(x_[1]);\n \
    \       var n_num = BigInteger.Parse(n_[0]);\n        var n_den = BigInteger.Parse(n_[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        // Write your code\
    \ here\n        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return den == 1;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var numerator = x_numerator * n_numerator;\n        var denominator =\
    \ x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        // Your code goes here\n        return\
    \ false;", "        // Your code goes here\n        return false;", "        //\
    \ Your code goes here.\n        return false;", "        // Your code goes here\n\
    \        return false;", "        var xSplit = x.Split('/');\n        var nSplit\
    \ = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n        var\
    \ xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xf = Fraction.Parse(x);\n        var nf = Fraction.Parse(n);\n\
    \        var result = xf * nf;\n        return result.Denominator == 1;", "  \
    \      var xParts = x.Split('/');\n        var nParts = n.Split('/');\n      \
    \  var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var numerator = xNumerator * nNumerator;\n\
    \        var denominator = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n       \
    \ var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        result_numerator /= gcd;\n        result_denominator\
    \ /= gcd;\n        return result_denominator == 1;", "        var x_split = x.Split('/');\n\
    \        var n_split = n.Split('/');\n        var x_num = BigInteger.Parse(x_split[0]);\n\
    \        var x_den = BigInteger.Parse(x_split[1]);\n        var n_num = BigInteger.Parse(n_split[0]);\n\
    \        var n_den = BigInteger.Parse(n_split[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        // Your code goes here\n        var xParts = x.Split('/');\n \
    \       var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        var xSplit = x.Split('/');\n        var\
    \ nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n  \
    \      var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nNumerator;\n        var resultDenominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(result, resultDenominator);\n\
    \        result /= gcd;\n        resultDenominator /= gcd;\n        return result\
    \ % resultDenominator == 0;", "        var x_parts = x.Split('/');\n        var\
    \ n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        // Your code goes here\n        return false;", "        // Your\
    \ code goes here\n        return false;", "        // Your code goes here\n  \
    \      return false;", "        var x_ = x.Split('/');\n        var n_ = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_[0]);\n        var x_den = BigInteger.Parse(x_[1]);\n\
    \        var n_num = BigInteger.Parse(n_[0]);\n        var n_den = BigInteger.Parse(n_[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nNumerator;\n        var resultDenominator\
    \ = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ resultDenominator);\n        result /= gcd;\n        resultDenominator /= gcd;\n\
    \        return result % resultDenominator == 0;", "        var x_tokens = x.Split('/');\n\
    \        var n_tokens = n.Split('/');\n        var x_num = BigInteger.Parse(x_tokens[0]);\n\
    \        var x_den = BigInteger.Parse(x_tokens[1]);\n        var n_num = BigInteger.Parse(n_tokens[0]);\n\
    \        var n_den = BigInteger.Parse(n_tokens[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        // Your code goes here\n        return false;", "        // Your\
    \ code goes here\n        var x_split = x.Split('/');\n        var n_split = n.Split('/');\n\
    \        var x_numerator = BigInteger.Parse(x_split[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_split[1]);\n        var n_numerator = BigInteger.Parse(n_split[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_split[1]);\n        var numerator\
    \ = x_numerator * n_numerator;\n        var denominator = x_denominator * n_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return denominator\
    \ == 1;", "        // Your code goes here.\n        return false;", "        //\
    \ Your code goes here\n        return false;", "        var xNumerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var xDenominator = BigInteger.Parse(x.Split('/')[1]);\n        var nNumerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var nDenominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = xNumerator * nNumerator / (xDenominator * nDenominator);\n\
    \        return result % 1 == 0;", "        // Your code goes here\n        var\
    \ x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_num\
    \ = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var x_num = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_den = BigInteger.Parse(x.Split('/')[1]);\n        var n_num = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_den = BigInteger.Parse(n.Split('/')[1]);\n        var res_num =\
    \ x_num * n_num;\n        var res_den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(res_num,\
    \ res_den);\n        return res_num % gcd == 0 && res_den % gcd == 0;", "    \
    \    var xs = x.Split('/');\n        var ns = n.Split('/');\n        var xn =\
    \ BigInteger.Parse(xs[0]) * BigInteger.Parse(ns[1]);\n        var xd = BigInteger.Parse(xs[1])\
    \ * BigInteger.Parse(ns[0]);\n        var gcd = BigInteger.GreatestCommonDivisor(xn,\
    \ xd);\n        xn /= gcd;\n        xd /= gcd;\n        return xd == 1;", "  \
    \      var xFrac = ParseFraction(x);\n        var nFrac = ParseFraction(n);\n\
    \        var result = xFrac * nFrac;\n        return result.Denominator == 1;",
  "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n      \
    \  var xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        // Your code goes here.\n\
    \        // You can add additional classes to this project.\n        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        // Your code goes here\n\
    \        var x_ = x.Split('/');\n        var n_ = n.Split('/');\n        var x_num\
    \ = BigInteger.Parse(x_[0]);\n        var x_den = BigInteger.Parse(x_[1]);\n \
    \       var n_num = BigInteger.Parse(n_[0]);\n        var n_den = BigInteger.Parse(n_[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nNumerator;\n        var denominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return denominator\
    \ == 1;", "        var x_split = x.Split('/');\n        var n_split = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_split[0]);\n        var x_den = BigInteger.Parse(x_split[1]);\n\
    \        var n_num = BigInteger.Parse(n_split[0]);\n        var n_den = BigInteger.Parse(n_split[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        // Your code goes\
    \ here\n        return false;", "        // Your code goes here\n        return\
    \ false;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_numerator = BigInteger.Parse(x_parts[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_parts[1]);\n        var n_numerator = BigInteger.Parse(n_parts[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_parts[1]);\n        var result_numerator\
    \ = x_numerator * n_numerator;\n        var result_denominator = x_denominator\
    \ * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        result_numerator /= gcd;\n        result_denominator\
    \ /= gcd;\n        return result_denominator == 1;", "        // Your code goes\
    \ here\n        return false;", "        // Your code goes here.\n        return\
    \ false;", "        var xf = Fraction.Parse(x);\n        var nf = Fraction.Parse(n);\n\
    \        var result = xf * nf;\n        return result.Denominator == 1;", "  \
    \      var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n      \
    \  var xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var result = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ denominator);\n        result /= gcd;\n        denominator /= gcd;\n       \
    \ return denominator == 1;", "        var xNum = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var xDen = BigInteger.Parse(x.Split('/')[1]);\n        var nNum = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var nDen = BigInteger.Parse(n.Split('/')[1]);\n        var num = xNum\
    \ * nNum;\n        var den = xDen * nDen;\n        return num % den == 0;", " \
    \       // Your code goes here.\n        return false;", "        var x_numerator\
    \ = BigInteger.Parse(x.Split('/')[0]);\n        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n\
    \        var n_numerator = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n.Split('/')[1]);\n        var result_numerator = x_numerator\
    \ * n_numerator;\n        var result_denominator = x_denominator * n_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(result_numerator, result_denominator);\n\
    \        result_numerator /= gcd;\n        result_denominator /= gcd;\n      \
    \  return result_denominator == 1;", "        var x_num = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_den = BigInteger.Parse(x.Split('/')[1]);\n        var n_num = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_den = BigInteger.Parse(n.Split('/')[1]);\n        var num = x_num\
    \ * n_num;\n        var den = x_den * n_den;\n        return num % den == 0;",
  "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n      \
    \  var xNumerator = BigInteger.Parse(xSplit[0]);\n        var xDenominator = BigInteger.Parse(xSplit[1]);\n\
    \        var nNumerator = BigInteger.Parse(nSplit[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nSplit[1]);\n        var productNumerator = xNumerator *\
    \ nNumerator;\n        var productDenominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(productNumerator, productDenominator);\n\
    \        var simplifiedNumerator = productNumerator / gcd;\n        var simplifiedDenominator\
    \ = productDenominator / gcd;\n        return simplifiedDenominator == 1;", " \
    \       var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n     \
    \   var xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var xnNum = xNum * nNum;\n        var xnDen = xDen * nDen;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(xnNum, xnDen);\n        xnNum /= gcd;\n\
    \        xnDen /= gcd;\n        return xnDen == 1;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        var xn = x.Split('/');\n        var nn\
    \ = n.Split('/');\n        var xnumerator = BigInteger.Parse(xn[0]);\n       \
    \ var xdenominator = BigInteger.Parse(xn[1]);\n        var nnumerator = BigInteger.Parse(nn[0]);\n\
    \        var ndenominator = BigInteger.Parse(nn[1]);\n        var numerator =\
    \ xnumerator * nnumerator;\n        var denominator = xdenominator * ndenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        return denominator / gcd == 1;", "        var x_split = x.Split('/');\n\
    \        var n_split = n.Split('/');\n        var x_num = BigInteger.Parse(x_split[0]);\n\
    \        var x_den = BigInteger.Parse(x_split[1]);\n        var n_num = BigInteger.Parse(n_split[0]);\n\
    \        var n_den = BigInteger.Parse(n_split[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nNumerator;\n        var denominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return denominator\
    \ == 1;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        var x_ = x.Split('/');\n        var n_\
    \ = n.Split('/');\n        var x_num = BigInteger.Parse(x_[0]);\n        var x_den\
    \ = BigInteger.Parse(x_[1]);\n        var n_num = BigInteger.Parse(n_[0]);\n \
    \       var n_den = BigInteger.Parse(n_[1]);\n        var num = x_num * n_num;\n\
    \        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nNumerator;\n        var denominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return denominator\
    \ == 1;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nNumerator;\n        var denominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return numerator\
    \ % denominator == 0;", "        // Your code goes here\n        var x_split =\
    \ x.Split('/');\n        var n_split = n.Split('/');\n        var x_num = BigInteger.Parse(x_split[0]);\n\
    \        var x_den = BigInteger.Parse(x_split[1]);\n        var n_num = BigInteger.Parse(n_split[0]);\n\
    \        var n_den = BigInteger.Parse(n_split[1]);\n        var x_num_n = x_num\
    \ * n_num;\n        var x_den_n = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(x_num_n,\
    \ x_den_n);\n        var x_num_n_simplified = x_num_n / gcd;\n        var x_den_n_simplified\
    \ = x_den_n / gcd;\n        if (x_num_n_simplified % x_den_n_simplified == 0)\
    \ {\n            return true;\n        }\n        return false;", "        var\
    \ xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n        var xNum\
    \ = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_num = BigInteger.Parse(x.Split('/')[0]);\n        var x_den\
    \ = BigInteger.Parse(x.Split('/')[1]);\n        var n_num = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_den = BigInteger.Parse(n.Split('/')[1]);\n        var result =\
    \ x_num * n_num;\n        var den = x_den * n_den;\n        return result % den\
    \ == 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xSplit[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xSplit[1]);\n        var nNumerator = BigInteger.Parse(nSplit[0]);\n\
    \        var nDenominator = BigInteger.Parse(nSplit[1]);\n        var numerator\
    \ = xNumerator * nNumerator;\n        var denominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return denominator\
    \ == 1;", "        // Your code goes here\n        return false;", "        //\
    \ Your code here\n        return false;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        var x_parts = x.Split('/');\n       \
    \ var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nNumerator;\n        var resultDenominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(result, resultDenominator);\n\
    \        result /= gcd;\n        resultDenominator /= gcd;\n        return result\
    \ % resultDenominator == 0;", "        // Your code goes here\n        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var numerator = xNumerator * nNumerator;\n\
    \        var denominator = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        // Your code goes here\n        var xSplit\
    \ = x.Split('/');\n        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        // Your code goes here\n        return false;", "        // Your\
    \ code goes here\n        return false;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n       \
    \ var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var numerator = x_numerator * n_numerator;\n        var denominator =\
    \ x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        // Your code here\n     \
    \   return false;", "        // Your code goes here\n        return false;", " \
    \       // Your code goes here\n        var x_parts = x.Split('/');\n        var\
    \ n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var x_n = x_numerator * n_denominator;\n        var n_n = n_numerator\
    \ * x_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(x_n, n_n);\n\
    \        return x_n / gcd == n_n / gcd;", "        // Your code goes here\n  \
    \      return false;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        // Your code here\n        return false;",
  "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n      \
    \  var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var numerator = xNumerator * nNumerator;\n\
    \        var denominator = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n       \
    \ var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        result_numerator /= gcd;\n        result_denominator\
    \ /= gcd;\n        return result_denominator == 1;", "        // Your code goes\
    \ here\n        return false;", "        var x_parts = x.Split('/');\n       \
    \ var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        // TODO: Implement this function.\n        return false;", " \
    \       var xParts = x.Split('/');\n        var nParts = n.Split('/');\n     \
    \   var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator =\
    \ BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var resultNumerator\
    \ = xNumerator * nNumerator;\n        var resultDenominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(resultNumerator, resultDenominator);\n\
    \        resultNumerator /= gcd;\n        resultDenominator /= gcd;\n        return\
    \ resultDenominator == 1;", "        // Your code goes here.\n        return false;",
  "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n    \
    \    var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xs = x.Split('/');\n\
    \        var ns = n.Split('/');\n        var xn = BigInteger.Parse(xs[0]) * BigInteger.Parse(ns[1]);\n\
    \        var xd = BigInteger.Parse(xs[1]) * BigInteger.Parse(ns[0]);\n       \
    \ var gcd = BigInteger.GreatestCommonDivisor(xn, xd);\n        return xn == xd\
    \ || xn % xd == 0;", "        // Your code goes here\n        return false;",
  "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n      \
    \  var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var numerator = xNumerator * nNumerator;\n\
    \        var denominator = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        var xNumerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var xDenominator = BigInteger.Parse(x.Split('/')[1]);\n        var nNumerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var nDenominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = xNumerator * nNumerator / (xDenominator * nDenominator);\n\
    \        return result % 1 == 0;", "        var xSplit = x.Split('/');\n     \
    \   var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var result = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ denominator);\n        result /= gcd;\n        denominator /= gcd;\n       \
    \ return result % denominator == 0;", "        var xParts = x.Split('/');\n  \
    \      var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var resultNumerator = xNumerator * nNumerator;\n        var resultDenominator\
    \ = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(resultNumerator,\
    \ resultDenominator);\n        resultNumerator /= gcd;\n        resultDenominator\
    \ /= gcd;\n        return resultDenominator == 1;", "        // Your code goes\
    \ here\n        return false;", "        // Your code goes here\n        return\
    \ false;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nNumerator;\n        var denominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return denominator\
    \ == 1;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nNumerator;\n        var denominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        return denominator / gcd == 1;", "        // Your code goes here\n  \
    \      return false;", "        var xSplit = x.Split('/');\n        var nSplit\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == 1;", "        // Your code goes here\n\
    \        return true;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n        var\
    \ xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var xNumN = xNum * nDen;\n        var xDenN = xDen * nNum;\n        return\
    \ xNumN % xDenN == 0;", "        // Your code goes here\n        return false;",
  "        // Your code goes here\n        return false;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nNumerator;\n        var divisor = xDenominator * nDenominator;\n\
    \        return result % divisor == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        var xSplit = x.Split('/');\n        var\
    \ nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n  \
    \      var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nNumerator;\n        var denominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        return denominator / gcd == 1;", "        var xs = x.Split('/');\n  \
    \      var ns = n.Split('/');\n        var xn = BigInteger.Parse(xs[0]) * BigInteger.Parse(ns[1]);\n\
    \        var xd = BigInteger.Parse(xs[1]) * BigInteger.Parse(ns[0]);\n       \
    \ var gcd = BigInteger.GreatestCommonDivisor(xn, xd);\n        xn /= gcd;\n  \
    \      xd /= gcd;\n        return xd == 1;", "        // Your code here\n    \
    \    return false;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        result_numerator /= gcd;\n        result_denominator\
    \ /= gcd;\n        return result_denominator == 1;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var result = xNumerator * nNumerator;\n        var resultDenominator\
    \ = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ resultDenominator);\n        result /= gcd;\n        resultDenominator /= gcd;\n\
    \        return result % resultDenominator == 0;", "        var x_ = x.Split('/');\n\
    \        var n_ = n.Split('/');\n        var x_num = BigInteger.Parse(x_[0]);\n\
    \        var x_den = BigInteger.Parse(x_[1]);\n        var n_num = BigInteger.Parse(n_[0]);\n\
    \        var n_den = BigInteger.Parse(n_[1]);\n        var num = x_num * n_num;\n\
    \        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        // Your code goes here.\n        return\
    \ false;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n   \
    \     var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        result_numerator /= gcd;\n        result_denominator\
    \ /= gcd;\n        return result_denominator == 1;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nNumerator;\n        var divisor = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ divisor);\n        result /= gcd;\n        divisor /= gcd;\n        return result\
    \ % divisor == 0;", "        var xFrac = new Fraction(x);\n        var nFrac =\
    \ new Fraction(n);\n        var result = xFrac * nFrac;\n        return result.IsWholeNumber();",
  "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n      \
    \  var xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNum * nNum;\n        var den = xDen * nDen;\n        return\
    \ result % den == 0;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nNumerator;\n        var resultDenominator\
    \ = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ resultDenominator);\n        result /= gcd;\n        resultDenominator /= gcd;\n\
    \        return result % resultDenominator == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == 1;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        result_numerator /= gcd;\n        result_denominator\
    \ /= gcd;\n        return result_denominator == 1;", "        // Your code goes\
    \ here\n        return false;", "        // Your code goes here\n        return\
    \ false;", "        var xn = x.Split('/');\n        var nn = n.Split('/');\n \
    \       var xnumerator = BigInteger.Parse(xn[0]);\n        var xdenominator =\
    \ BigInteger.Parse(xn[1]);\n        var nnumerator = BigInteger.Parse(nn[0]);\n\
    \        var ndenominator = BigInteger.Parse(nn[1]);\n        var numerator =\
    \ xnumerator * nnumerator;\n        var denominator = xdenominator * ndenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        return denominator / gcd == 1;", "        // Your code here\n       \
    \ var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n        var\
    \ xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        result_numerator /= gcd;\n        result_denominator\
    \ /= gcd;\n        return result_denominator == 1;", "        // Write your code\
    \ here\n        return false;", "        var x_parts = x.Split('/');\n       \
    \ var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        return gcd == 1;", "        // Your code goes here\n        var\
    \ x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_numerator\
    \ = BigInteger.Parse(x_parts[0]);\n        var x_denominator = BigInteger.Parse(x_parts[1]);\n\
    \        var n_numerator = BigInteger.Parse(n_parts[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n_parts[1]);\n        var x_n = x_numerator * n_denominator;\n\
    \        var n_n = n_numerator * x_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(x_n,\
    \ n_n);\n        return gcd == 1;", "        var xSplit = x.Split('/');\n    \
    \    var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xNumerator = BigInteger.Parse(x.Split('/')[0]);\n        var\
    \ xDenominator = BigInteger.Parse(x.Split('/')[1]);\n        var nNumerator =\
    \ BigInteger.Parse(n.Split('/')[0]);\n        var nDenominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        return numerator % denominator == 0;", "        var\
    \ xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var numerator = xNumerator * nNumerator;\n\
    \        var denominator = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        var xFrac = ParseFraction(x);\n     \
    \   var nFrac = ParseFraction(n);\n        var result = xFrac * nFrac;\n     \
    \   return result.Denominator == 1;", "        // TODO: Implement this function\n\
    \        return false;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n        var\
    \ xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        // Your code goes here\n        var x_split = x.Split('/');\n\
    \        var n_split = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_split[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_split[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_split[0]);\n        var n_denominator = BigInteger.Parse(n_split[1]);\n\
    \        var numerator = x_numerator * n_numerator;\n        var denominator =\
    \ x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        // Your code goes here\n        return\
    \ false;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nNumerator;\n        var resultDenominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(result, resultDenominator);\n\
    \        result /= gcd;\n        resultDenominator /= gcd;\n        return result\
    \ % resultDenominator == 0;", "        var xParts = x.Split('/');\n        var\
    \ nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        // Your code goes here.\n\
    \        return false;", "        // Your code goes here\n        return false;",
  "        // Implement your solution here\n        var xSplit = x.Split('/');\n \
    \       var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xSplit[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xSplit[1]);\n        var nNumerator = BigInteger.Parse(nSplit[0]);\n\
    \        var nDenominator = BigInteger.Parse(nSplit[1]);\n        var numerator\
    \ = xNumerator * nNumerator;\n        var denominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return denominator\
    \ == 1;", "        var xNumerator = BigInteger.Parse(x.Split('/')[0]);\n     \
    \   var xDenominator = BigInteger.Parse(x.Split('/')[1]);\n        var nNumerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var nDenominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = xNumerator * nNumerator / (xDenominator * nDenominator);\n\
    \        return result % 1 == 0;", "        var xParts = x.Split('/');\n     \
    \   var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nNumerator;\n        var resultDenominator\
    \ = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ resultDenominator);\n        result /= gcd;\n        resultDenominator /= gcd;\n\
    \        return result % resultDenominator == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_ = x.Split('/');\n        var n_ = n.Split('/');\n     \
    \   var x_num = BigInteger.Parse(x_[0]);\n        var x_den = BigInteger.Parse(x_[1]);\n\
    \        var n_num = BigInteger.Parse(n_[0]);\n        var n_den = BigInteger.Parse(n_[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xs = x.Split('/');\n\
    \        var ns = n.Split('/');\n        var xn = BigInteger.Parse(xs[0]) * BigInteger.Parse(ns[1]);\n\
    \        var xd = BigInteger.Parse(xs[1]) * BigInteger.Parse(ns[0]);\n       \
    \ var gcd = BigInteger.GreatestCommonDivisor(xn, xd);\n        xn /= gcd;\n  \
    \      xd /= gcd;\n        return xd == 1;", "        // Your code goes here\n\
    \        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n  \
    \      var x_numerator = BigInteger.Parse(x_parts[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_parts[1]);\n        var n_numerator = BigInteger.Parse(n_parts[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_parts[1]);\n        var numerator\
    \ = x_numerator * n_numerator;\n        var denominator = x_denominator * n_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return denominator\
    \ == 1;", "        // Your code goes here.\n        return false;", "        var\
    \ xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var resultNumerator = xNumerator * nNumerator;\n\
    \        var resultDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(resultNumerator, resultDenominator);\n  \
    \      resultNumerator /= gcd;\n        resultDenominator /= gcd;\n        return\
    \ resultDenominator == 1;", "        // Your code goes here\n        return true;",
  "        // Your code goes here\n        BigInteger numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        BigInteger denominator = BigInteger.Parse(x.Split('/')[1]);\n       \
    \ BigInteger nNumerator = BigInteger.Parse(n.Split('/')[0]);\n        BigInteger\
    \ nDenominator = BigInteger.Parse(n.Split('/')[1]);\n        BigInteger resultNumerator\
    \ = numerator * nNumerator;\n        BigInteger resultDenominator = denominator\
    \ * nDenominator;\n        BigInteger gcd = BigInteger.GreatestCommonDivisor(resultNumerator,\
    \ resultDenominator);\n        resultNumerator /= gcd;\n        resultDenominator\
    \ /= gcd;\n        return resultDenominator == 1;", "        var xparts = x.Split('/');\n\
    \        var nparts = n.Split('/');\n        var xnumerator = BigInteger.Parse(xparts[0]);\n\
    \        var xdenominator = BigInteger.Parse(xparts[1]);\n        var nnumerator\
    \ = BigInteger.Parse(nparts[0]);\n        var ndenominator = BigInteger.Parse(nparts[1]);\n\
    \        var numerator = xnumerator * nnumerator;\n        var denominator = xdenominator\
    \ * ndenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        // Your code goes here\n\
    \        var x_split = x.Split('/');\n        var n_split = n.Split('/');\n  \
    \      var x_num = BigInteger.Parse(x_split[0]);\n        var x_den = BigInteger.Parse(x_split[1]);\n\
    \        var n_num = BigInteger.Parse(n_split[0]);\n        var n_den = BigInteger.Parse(n_split[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xn = new Fraction(x).Multiply(new\
    \ Fraction(n));\n        return xn.Denominator == 1;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        // Your code goes here\n        var x_numerator\
    \ = BigInteger.Parse(x.Split('/')[0]);\n        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n\
    \        var n_numerator = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n.Split('/')[1]);\n        var result_numerator = x_numerator\
    \ * n_numerator;\n        var result_denominator = x_denominator * n_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(result_numerator, result_denominator);\n\
    \        result_numerator /= gcd;\n        result_denominator /= gcd;\n      \
    \  return result_denominator == 1;", "        var xParts = x.Split('/');\n   \
    \     var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nNumerator;\n        var resultDenominator\
    \ = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ resultDenominator);\n        result /= gcd;\n        resultDenominator /= gcd;\n\
    \        return result % resultDenominator == 0;", "        // Your code goes\
    \ here\n        return false;", "        // Your code here\n        return false;",
  "        // Your code goes here\n        return false;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nNumerator;\n        var divisor = xDenominator\
    \ * nDenominator;\n        return result % divisor == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var productNumerator = xNumerator *\
    \ nNumerator;\n        var productDenominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(productNumerator, productDenominator);\n\
    \        productNumerator /= gcd;\n        productDenominator /= gcd;\n      \
    \  return productDenominator == 1;", "        var xParts = x.Split('/');\n   \
    \     var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        // TODO: Implement this function\n\
    \        return false;", "        var xSplit = x.Split('/');\n        var nSplit\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;"]
stop_tokens:
- "\n    }\n"

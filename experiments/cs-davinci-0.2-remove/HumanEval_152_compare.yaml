name: HumanEval_152_compare
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // I think we all remember that feeling when the result of some\
  \ long-awaited\n    // event is finally known. The feelings and thoughts you have\
  \ at that moment are\n    // definitely worth noting down and comparing.\n    //\
  \ Your task is to determine if a person correctly guessed the results of a number\
  \ of matches.\n    // You are given two arrays of scores and guesses of equal length,\
  \ where each index shows a match. \n    // Return an array of the same length denoting\
  \ how far off each guess was. If they have guessed correctly,\n    // the value\
  \ is 0, and if not, the value is the absolute difference between the guess and the\
  \ score.\n    // example:\n    public static List<long> Compare(List<long> game,\
  \ List<long> guess) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
  \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new\
  \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n\
  \    Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
  \ (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,\
  \ (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,\
  \ (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,\
  \ (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,\
  \ (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,\
  \ (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,\
  \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,\
  \ (long)1L}))));\n    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        for (int i =\
    \ 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n        \
    \        result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i])\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            long diff = Math.Abs(game[i] - guess[i]);\n            result.Add(diff);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            if\
    \ (game[i] == guess[i]) {\n                result.Add(0);\n            } else\
    \ {\n                result.Add(Math.Abs(game[i] - guess[i]));\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        var result = new List<long>();\n        for\
    \ (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i])\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i])\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        // Your code goes\
    \ here\n        List<long> result = new List<long>();\n        for (int i = 0;\
    \ i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n           \
    \     result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n      \
    \          result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        // your code here\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i])\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        for (int i = 0; i\
    \ < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        var result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        // your code here\n        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            if\
    \ (game[i] == guess[i]) {\n                result.Add(0);\n            } else\
    \ {\n                result.Add(Math.Abs(game[i] - guess[i]));\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i])\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n      \
    \          result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        // your code here\n        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i])\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n      \
    \          result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            if (game[i] == guess[i]) {\n                result.Add(0);\n    \
    \        } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i])\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            if (game[i] == guess[i]) {\n                result.Add(0);\n    \
    \        } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            if\
    \ (game[i] == guess[i]) {\n                result.Add(0);\n            } else\
    \ {\n                result.Add(Math.Abs(game[i] - guess[i]));\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i])\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            if\
    \ (game[i] == guess[i]) {\n                result.Add(0);\n            } else\
    \ {\n                result.Add(Math.Abs(game[i] - guess[i]));\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i])\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n      \
    \          result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            if (game[i] == guess[i]) {\n                result.Add(0);\n    \
    \        } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        // your code here\n\
    \        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i])\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            if (game[i] == guess[i]) {\n                result.Add(0);\n    \
    \        } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        // your code here\n\
    \        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> res = new List<long>();\n       \
    \ for (int i = 0; i < game.Count; i++) {\n            res.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return res;", "        List<long> result =\
    \ new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n        \
    \    if (game[i] == guess[i]) {\n                result.Add(0);\n            }\
    \ else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n        \
    \    }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i])\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n      \
    \          result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n      \
    \          result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        //\
    \ your code here\n        List<long> result = new List<long>();\n        for (int\
    \ i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n    \
    \            result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        var result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i])\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            if (game[i] == guess[i]) {\n                result.Add(0);\n    \
    \        } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n      \
    \      if (game[i] == guess[i]) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n     \
    \       }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            if\
    \ (game[i] == guess[i]) {\n                result.Add(0);\n            } else\
    \ {\n                result.Add(Math.Abs(game[i] - guess[i]));\n            }\n\
    \        }\n        return result;", "        List<long> res = new List<long>();\n\
    \        for (int i = 0; i < game.Count; i++) {\n            res.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return res;", "        List<long> result =\
    \ new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n        \
    \    result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]\
    \ - guess[i]));\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_117_select_words
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a string s and a natural number n, you have been tasked\
  \ to implement \n    // a function that returns a list of all words from string\
  \ s that contain exactly \n    // n consonants, in order these words appear in the\
  \ string s.\n    // If the string s is empty then the function should return an\
  \ empty list.\n    // Note: you may assume the input string contains only letters\
  \ and spaces.\n    // Examples:\n    public static List<string> SelectWords(string\
  \ s, long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SelectWords((\"\
  Mary had a little lamb\"), (4L)).Equals((new List<string>(new string[]{(string)\"\
  little\"}))));\n    Debug.Assert(SelectWords((\"Mary had a little lamb\"), (3L)).Equals((new\
  \ List<string>(new string[]{(string)\"Mary\", (string)\"lamb\"}))));\n    Debug.Assert(SelectWords((\"\
  simple white space\"), (2L)).Equals((new List<string>())));\n    Debug.Assert(SelectWords((\"\
  Hello world\"), (4L)).Equals((new List<string>(new string[]{(string)\"world\"}))));\n\
  \    Debug.Assert(SelectWords((\"Uncle sam\"), (3L)).Equals((new List<string>(new\
  \ string[]{(string)\"Uncle\"}))));\n    Debug.Assert(SelectWords((\"\"), (4L)).Equals((new\
  \ List<string>())));\n    Debug.Assert(SelectWords((\"a b c d e f\"), (1L)).Equals((new\
  \ List<string>(new string[]{(string)\"b\", (string)\"c\", (string)\"d\", (string)\"\
  f\"}))));\n    }\n\n}\n"
completions: ["        var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            if (CountConsonants(word)\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       // TODO: Implement this function\n        return null;", "        List<string>\
    \ words = new List<string>();\n        string[] wordsArray = s.Split(' ');\n \
    \       foreach (string word in wordsArray) {\n            if (CountConsonants(word)\
    \ == n) {\n                words.Add(word);\n            }\n        }\n      \
    \  return words;", "        // TODO: Implement this function\n        return null;",
  "        // TODO: Implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: implement\
    \ this function\n        return null;", "        var words = s.Split(' ');\n \
    \       var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            if (word.Count(c => !\"aeiou\".Contains(c)) == n) {\n       \
    \         result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: Implement this method\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: Implement\
    \ this function.\n        return new List<string>();", "        // TODO: Implement\
    \ this function\n        return null;", "        var words = s.Split(' ');\n \
    \       var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            var consonants = 0;\n            foreach (var c in word) {\n\
    \                if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                    consonants++;\n                }\n            }\n   \
    \         if (consonants == n) {\n                result.Add(word);\n        \
    \    }\n        }\n        return result;", "        // TODO: Implement this function\n\
    \        return null;", "        var words = s.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            if (word.Count(c => !IsVowel(c)) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return null;", "        var words = s.Split(' ');\n \
    \       var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            if (CountConsonants(word) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: implement this function\n\
    \        return null;", "        var words = s.Split(' ');\n        var result\
    \ = new List<string>();\n        foreach (var word in words) {\n            if\
    \ (word.Count(c => !IsVowel(c)) == n) {\n                result.Add(word);\n \
    \           }\n        }\n        return result;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            var consonants = 0;\n            foreach (var c in word)\
    \ {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') {\n                    consonants++;\n                }\n            }\n\
    \            if (consonants == n) {\n                result.Add(word);\n     \
    \       }\n        }\n        return result;", "        // TODO: Implement this\
    \ function\n        return null;", "        // TODO: implement the function\n\
    \        return null;", "        // TODO: implement this function\n        return\
    \ null;", "        var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            if (word.Count(c => !IsVowel(c))\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       // TODO: Implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            if (word.Count(c => !IsVowel(c)) == n) {\n           \
    \     result.Add(word);\n            }\n        }\n        return result;", " \
    \       var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            if (word.Count(c => !IsVowel(c))\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: Implement this function.\n        return null;", " \
    \       // TODO: implement this function\n        return null;", "        // TODO:\
    \ Implement this function.\n        return new List<string>();", "        // TODO:\
    \ Implement this function\n        return null;", "        // TODO: Implement\
    \ this function\n        return null;", "        var words = s.Split(' ');\n \
    \       var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            var consonants = word.Where(c => !\"aeiou\".Contains(c)).Count();\n\
    \            if (consonants == n) {\n                result.Add(word);\n     \
    \       }\n        }\n        return result;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            if (word.Count(c => !IsVowel(c)) == n) {\n           \
    \     result.Add(word);\n            }\n        }\n        return result;", " \
    \       // TODO: Implement this function\n        return null;", "        var\
    \ words = s.Split(' ');\n        var result = new List<string>();\n        foreach\
    \ (var word in words) {\n            if (word.Count(c => !IsVowel(c)) == n) {\n\
    \                result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        var words = s.Split(' ');\n        var result\
    \ = new List<string>();\n        foreach (var word in words) {\n            if\
    \ (word.Count(c => !IsVowel(c)) == n) {\n                result.Add(word);\n \
    \           }\n        }\n        return result;", "        // TODO: implement\
    \ this function\n        return null;", "        var words = s.Split(' ');\n \
    \       var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            if (CountConsonants(word) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        var words = s.Split(' ');\n        var result\
    \ = new List<string>();\n        foreach (var word in words) {\n            var\
    \ consonants = word.Where(c => !\"aeiou\".Contains(c)).Count();\n            if\
    \ (consonants == n) {\n                result.Add(word);\n            }\n    \
    \    }\n        return result;", '        return null;', "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: implement this function\n\
    \        return null;", "        // TODO: Implement this function\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       return s.Split(' ').Where(x => x.Count(y => !\"aeiou\".Contains(y)) ==\
    \ n).ToList();", "        // Your code goes here.\n        return new List<string>();",
  "        var words = s.Split(' ');\n        var result = new List<string>();\n \
    \       foreach (var word in words) {\n            if (word.Count(c => !IsVowel(c))\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        var words = s.Split(' ');\n        var result =\
    \ new List<string>();\n        foreach (var word in words) {\n            if (CountConsonants(word)\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       // TODO: Implement this function\n        return null;", "        // TODO:\
    \ Implement this function\n        return null;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: Implement this function.\n        return null;", " \
    \       // TODO: implement this function\n        return null;", "        // TODO:\
    \ Implement this function\n        return null;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        var words = s.Split(' ');\n        var result\
    \ = new List<string>();\n        foreach (var word in words) {\n            var\
    \ count = 0;\n            foreach (var c in word) {\n                if (c !=\
    \ 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                   \
    \ count++;\n                }\n            }\n            if (count == n) {\n\
    \                result.Add(word);\n            }\n        }\n        return result;",
  "        List<string> words = new List<string>();\n        string[] split = s.Split('\
    \ ');\n        foreach (string word in split) {\n            if (word.Length >\
    \ 0) {\n                if (Consonants(word) == n) {\n                    words.Add(word);\n\
    \                }\n            }\n        }\n        return words;", "      \
    \  // TODO: implement this function\n        return null;", "        var words\
    \ = s.Split(' ');\n        var result = new List<string>();\n        foreach (var\
    \ word in words) {\n            var consonants = 0;\n            foreach (var\
    \ c in word) {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u') {\n                    consonants++;\n                }\n     \
    \       }\n            if (consonants == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: implement\
    \ this function\n        return null;", "        var words = s.Split(' ');\n \
    \       var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            if (CountConsonants(word) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        var words = s.Split('\
    \ ');\n        var consonants = new HashSet<char>(\"bcdfghjklmnpqrstvwxyz\".ToCharArray());\n\
    \        var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            var count = 0;\n            foreach (var c in word) {\n     \
    \           if (consonants.Contains(c)) {\n                    count++;\n    \
    \            }\n            }\n            if (count == n) {\n               \
    \ result.Add(word);\n            }\n        }\n        return result;", "    \
    \    // TODO: Implement your solution here\n        return null;", "        //\
    \ TODO: Implement this function\n        return null;", "        // TODO: implement\
    \ this function\n        return null;", "        // TODO: implement this function\n\
    \        return null;", "        // Your code goes here\n        return null;",
  "        var words = s.Split(' ');\n        var result = new List<string>();\n \
    \       foreach (var word in words) {\n            if (CountConsonants(word) ==\
    \ n) {\n                result.Add(word);\n            }\n        }\n        return\
    \ result;", "        // TODO: Implement this function\n        return null;",
  "        var words = s.Split(' ');\n        var result = new List<string>();\n \
    \       foreach (var word in words) {\n            if (word.Count(c => !\"aeiou\"\
    .Contains(c)) == n) {\n                result.Add(word);\n            }\n    \
    \    }\n        return result;", "        // TODO: Implement this function\n \
    \       return null;", "        // TODO: Implement this function\n        return\
    \ null;", "        // TODO: Implement this function\n        return null;", " \
    \       // TODO: Implement this function\n        return null;", "        var\
    \ words = s.Split(' ');\n        var result = new List<string>();\n        foreach\
    \ (var word in words) {\n            if (CountConsonants(word) == n) {\n     \
    \           result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: Implement this function.\n        // Hint: You may find the following\
    \ functions useful:\n        //       - s.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries)\n\
    \        //       - s.Count(c => c == 'a')\n        //       - s.ToLower()\n \
    \       //       - s.Contains(c)\n        //       - s.IndexOf(c)\n        //\
    \       - s.Substring(i, j)\n        //       - s.Remove(i, j)\n        //   \
    \    - s.Insert(i, c)\n        //       - s.Append(c)\n        //       - s.Append(s)\n\
    \        //       - s.Remove(i, j)\n        //       - s.Remove(c)\n        //\
    \       - s.Remove(c, i)\n        //       - s.Remove(c, i, j)\n        //   \
    \    - s.Remove(s)\n        //       - s.Remove(s, i)\n        //       - s.Remove(s,\
    \ i, j)\n        //       - s.Replace(c, c)\n        //       - s.Replace(c, c,\
    \ i)\n        //       - s.Replace(c, c, i, j)\n        //       - s.Replace(s,\
    \ s)\n        //       - s.Replace(s, s, i)\n        //       - s.Replace(s, s,\
    \ i, j)\n        //       - s.ToCharArray()\n        //       - s.ToCharArray(i,\
    \ j)\n        //       - s.ToLower()\n        //       - s.ToUpper()\n       \
    \ //       - s.Trim()\n        //       - s.Trim(c)\n        //       - s.Trim(c,\
    \ i)\n        //       - s.Trim(c, i, j)\n        //       - s.Trim(s)\n     \
    \   //       - s.Trim(s, i)\n        //       - s.Trim(s, i, j)\n        //  \
    \     - s.TrimStart()\n        //       - s.TrimStart", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        var words = s.Split(' ');\n        var result\
    \ = new List<string>();\n        foreach (var word in words) {\n            if\
    \ (word.Count(c => !IsVowel(c)) == n) {\n                result.Add(word);\n \
    \           }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: implement this function\n        return\
    \ null;", "        var words = s.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            if (word.Count(c => !IsVowel(c)) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            if (CountConsonants(word) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: implement\
    \ this function\n        return null;", "        var words = s.Split(' ');\n \
    \       var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            if (word.Count(c => !IsVowel(c)) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return null;", "        var words = s.Split(' ');\n \
    \       var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            if (word.Count(c => !IsVowel(c)) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        var words = s.Split(' ');\n        var result\
    \ = new List<string>();\n        foreach (var word in words) {\n            if\
    \ (word.Count(c => !IsVowel(c)) == n) {\n                result.Add(word);\n \
    \           }\n        }\n        return result;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            if (word.Count(c => !IsVowel(c)) == n) {\n           \
    \     result.Add(word);\n            }\n        }\n        return result;", " \
    \       List<string> result = new List<string>();\n        string[] words = s.Split('\
    \ ');\n        foreach (string word in words) {\n            if (word.Length ==\
    \ 0) continue;\n            if (CountConsonants(word) == n) {\n              \
    \  result.Add(word);\n            }\n        }\n        return result;", "   \
    \     var words = s.Split(' ');\n        var result = new List<string>();\n  \
    \      foreach (var word in words) {\n            if (word.Count(c => !IsVowel(c))\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: Implement this function\n        return\
    \ null;", "        // TODO: Implement this function\n        return null;", " \
    \       // TODO: implement this function\n        return null;", "        var\
    \ words = s.Split(' ');\n        var result = new List<string>();\n        foreach\
    \ (var word in words) {\n            if (word.Count(c => !isVowel(c)) == n) {\n\
    \                result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: implement this function\n        return null;", "        var words\
    \ = s.Split(' ');\n        var result = new List<string>();\n        foreach (var\
    \ word in words) {\n            if (word.Count(c => !IsVowel(c)) == n) {\n   \
    \             result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        List<string> result\
    \ = new List<string>();\n        // TODO: Implement your solution here\n     \
    \   return result;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: Implement this function\n        return null;", " \
    \       // TODO: implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: Implement\
    \ this function\n        List<string> words = new List<string>();\n        string[]\
    \ wordsArray = s.Split(' ');\n        foreach (string word in wordsArray) {\n\
    \            if (ConsonantsCount(word) == n) {\n                words.Add(word);\n\
    \            }\n        }\n        return words;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: Implement this function\n        return\
    \ null;", "        // TODO: Implement this function\n        return null;", " \
    \       // TODO: Implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: implement\
    \ this function\n        return null;", "        // TODO: implement this function\n\
    \        return null;", "        // TODO: Implement this function\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       // Implement this function\n        return new List<string>();", "   \
    \     // TODO: implement this function\n        return null;", "        var words\
    \ = s.Split(' ');\n        var result = new List<string>();\n        foreach (var\
    \ word in words) {\n            var consonants = 0;\n            foreach (var\
    \ c in word) {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u') {\n                    consonants++;\n                }\n     \
    \       }\n            if (consonants == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            if (word.Count(c => !IsVowel(c)) == n) {\n           \
    \     result.Add(word);\n            }\n        }\n        return result;", " \
    \       // your code goes here\n        return null;", "        var words = s.Split('\
    \ ');\n        var consonants = new HashSet<char>(\"bcdfghjklmnpqrstvwxyz\".ToCharArray());\n\
    \        var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            var count = 0;\n            foreach (var c in word) {\n     \
    \           if (consonants.Contains(c)) {\n                    count++;\n    \
    \            }\n            }\n            if (count == n) {\n               \
    \ result.Add(word);\n            }\n        }\n        return result;", "    \
    \    // Implement this function\n        return null;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function.\n\
    \        return new List<string>();", "        // TODO: implement this function\n\
    \        return null;", "        // TODO: Implement this function\n        return\
    \ null;", "        // TODO: Implement this function\n        return null;", " \
    \       var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            if (word.Count(c => !IsVowel(c))\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: Implement this function\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            var consonants = 0;\n    \
    \        foreach (var ch in word) {\n                if (ch != 'a' && ch != 'e'\
    \ && ch != 'i' && ch != 'o' && ch != 'u') {\n                    consonants++;\n\
    \                }\n            }\n            if (consonants == n) {\n      \
    \          result.Add(word);\n            }\n        }\n        return result;",
  "        var words = s.Split(' ');\n        var result = new List<string>();\n \
    \       foreach (var word in words) {\n            if (CountConsonants(word) ==\
    \ n) {\n                result.Add(word);\n            }\n        }\n        return\
    \ result;", "        // TODO: Implement this function.\n        return null;",
  "        // TODO: implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: Implement\
    \ this function\n        return null;", "        var result = new List<string>();\n\
    \        var words = s.Split(' ');\n        foreach (var word in words) {\n  \
    \          var consonants = 0;\n            foreach (var c in word) {\n      \
    \          if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n \
    \                   consonants++;\n                }\n            }\n        \
    \    if (consonants == n) {\n                result.Add(word);\n            }\n\
    \        }\n        return result;", "        var words = s.Split(' ');\n    \
    \    var result = new List<string>();\n        foreach (var word in words) {\n\
    \            if (CountConsonants(word) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: Implement this function.\n        return\
    \ new List<string>();", "        var words = s.Split(' ');\n        var result\
    \ = new List<string>();\n        foreach (var word in words) {\n            if\
    \ (word.Count(c => !IsVowel(c)) == n) {\n                result.Add(word);\n \
    \           }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: implement this function\n\
    \        return null;", "        // TODO: Implement the function here.\n     \
    \   return new List<string>();", "        // TODO: Implement this function\n \
    \       return null;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            if (CountConsonants(word)\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: implement this function\n        return\
    \ null;", "        List<string> words = new List<string>();\n        string[]\
    \ split = s.Split(' ');\n        foreach (string word in split) {\n          \
    \  if (word.Length == 0) {\n                continue;\n            }\n       \
    \     int count = 0;\n            foreach (char c in word) {\n               \
    \ if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n          \
    \          count++;\n                }\n            }\n            if (count ==\
    \ n) {\n                words.Add(word);\n            }\n        }\n        return\
    \ words;", "        // TODO: implement this function\n        return null;", " \
    \       // TODO: Implement this function\n        return null;", "        // TODO:\
    \ Implement this function\n        return null;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            var consonants = 0;\n            foreach (var letter in\
    \ word) {\n                if (letter != 'a' && letter != 'e' && letter != 'i'\
    \ && letter != 'o' && letter != 'u') {\n                    consonants++;\n  \
    \              }\n            }\n            if (consonants == n) {\n        \
    \        result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: implement this function\n        return null;", "        // TODO:\
    \ Implement this function\n        return null;", "        // Implement this function\n\
    \        return new List<string>();", "        var words = s.Split(' ');\n   \
    \     var result = new List<string>();\n        foreach (var word in words) {\n\
    \            if (word.Count(c => !IsVowel(c)) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ the function here.\n        return new List<string>();", "        // TODO: implement\
    \ this function\n        return null;", "        // Implement this function\n\
    \        return null;", "        // TODO: Implement this function\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       // Write your code here\n        return new List<string>();", "      \
    \  // TODO: Implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: implement this function\n        return\
    \ null;", "        var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            var consonants = word.Where(c\
    \ => \"bcdfghjklmnpqrstvwxyz\".Contains(c)).Count();\n            if (consonants\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // Your code goes here.\n        return null;",
  "        // TODO: implement the function here\n        return new List<string>();",
  "        var words = s.Split(' ');\n        var result = new List<string>();\n \
    \       foreach (var word in words) {\n            if (CountConsonants(word) ==\
    \ n) {\n                result.Add(word);\n            }\n        }\n        return\
    \ result;", "        // TODO: implement this function\n        return null;",
  "        var words = s.Split(' ');\n        var result = new List<string>();\n \
    \       foreach (var word in words) {\n            var count = 0;\n          \
    \  foreach (var c in word) {\n                if (c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u') {\n                    count++;\n             \
    \   }\n            }\n            if (count == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            if (CountConsonants(word) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return null;"]
stop_tokens:
- "\n    }\n"

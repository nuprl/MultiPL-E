language: cs
name: HumanEval_122_add_elements
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] < 10)\n            {\n        \
    \        sum += arr[i];\n            }\n            else if (arr[i] < 100)\n \
    \           {\n                sum += arr[i];\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // Write your code here.\n        long sum = 0;\n  \
    \      for (int i = 0; i < k; i++) {\n            if (arr[i] < 100) {\n      \
    \          sum += arr[i];\n            }\n        }\n        return sum;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f74e5d9a86924acfb6d1714870d486c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f74e5d9a86924acfb6d1714870d486c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this\n        long sum = 0;\n   \
    \     for (int i = 0; i < k; i++) {\n            if (arr[i] < 10) {\n        \
    \        sum += arr[i];\n            }\n            else if (arr[i] < 100) {\n\
    \                sum += arr[i];\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement me\n        return 0;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2762fc03786d4425a3ff55192ea4e500>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2762fc03786d4425a3ff55192ea4e500>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr[i] < 100)\
    \ {\n                sum += arr[i];\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] < 100)\n            {\n       \
    \         sum += arr[i];\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long result = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr[i] < 100) {\n                result += arr[i];\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] < 100)\n            {\n       \
    \         sum += arr[i];\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] < 100)\n            {\n       \
    \         sum += arr[i];\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        long sum =\
    \ 0;\n        for (int i = 0; i < k; i++) {\n            if (arr[i] < 100) {\n\
    \                sum += arr[i];\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] < 100)\n            {\n       \
    \         sum += arr[i];\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] < 100)\n            {\n       \
    \         sum += arr[i];\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30adac913e47432390880c4c21fb180f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30adac913e47432390880c4c21fb180f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        return arr.Take((int)k).Where(x => x < 100).Sum();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] >= 10 && arr[i] < 100) {\n                sum += arr[i];\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L,\
    \ (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})),\
    \ (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L,\
    \ (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7b521131a434546819a7e8244d993b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7b521131a434546819a7e8244d993b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30adac913e47432390880c4c21fb180f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30adac913e47432390880c4c21fb180f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30adac913e47432390880c4c21fb180f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30adac913e47432390880c4c21fb180f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: implement this function\n        long sum =\
    \ 0;\n        for (int i = 0; i < k; i++) {\n            if (arr[i] < 100) {\n\
    \                sum += arr[i];\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30adac913e47432390880c4c21fb180f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30adac913e47432390880c4c21fb180f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        return arr.Take((int)k).Where(x => x < 100).Sum();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] > 9 && arr[i] < 100)\n        \
    \    {\n                sum += arr[i];\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b7529aefba64c04a20f0bef4a9144cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b7529aefba64c04a20f0bef4a9144cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fe154a2b83a4980a6898e452d061d78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Constraints:\n    // 1. 1 <= len(arr)\
    \ <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008730

language: cs
name: HumanEval_61_correct_bracketing
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int balance = 0;\n\
    \        foreach (char c in brackets) {\n            if (c == '(') balance++;\n\
    \            else if (c == ')') balance--;\n            if (balance < 0) return\
    \ false;\n        }\n        return balance == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') count++;\n \
    \           else if (c == ')') count--;\n            if (count < 0) return false;\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') count++;\n \
    \           else if (c == ')') count--;\n            if (count < 0) return false;\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') depth++;\n \
    \           else if (c == ')') depth--;\n            if (depth < 0) return false;\n\
    \        }\n        return depth == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') depth++;\n \
    \           else if (c == ')') depth--;\n            if (depth < 0) return false;\n\
    \        }\n        return depth == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        // TODO: implement\
    \ this function.\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <41a163e3f6ec4f27ba5b8873fc92cc3e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <41a163e3f6ec4f27ba5b8873fc92cc3e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') count++;\n \
    \           else if (c == ')') count--;\n            if (count < 0) return false;\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int balance = 0;\n\
    \        foreach (char c in brackets) {\n            if (c == '(') balance++;\n\
    \            else if (c == ')') balance--;\n            if (balance < 0) return\
    \ false;\n        }\n        return balance == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') depth++;\n \
    \           else depth--;\n            if (depth < 0) return false;\n        }\n\
    \        return depth == 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') count++;\n \
    \           else if (c == ')') count--;\n            if (count < 0) return false;\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') count++;\n \
    \           else if (c == ')') count--;\n            if (count < 0) return false;\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int open = 0;\n  \
    \      foreach (char c in brackets) {\n            if (c == '(') {\n         \
    \       open++;\n            } else {\n                open--;\n             \
    \   if (open < 0) {\n                    return false;\n                }\n  \
    \          }\n        }\n        return open == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') count++;\n \
    \           else if (c == ')') count--;\n            if (count < 0) return false;\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') depth++;\n \
    \           else depth--;\n            if (depth < 0) return false;\n        }\n\
    \        return depth == 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') depth++;\n \
    \           else if (c == ')') depth--;\n            if (depth < 0) return false;\n\
    \        }\n        return depth == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') depth++;\n \
    \           else if (c == ')') depth--;\n            if (depth < 0) return false;\n\
    \        }\n        return depth == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') count++;\n \
    \           else if (c == ')') count--;\n            if (count < 0) return false;\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int balance = 0;\n\
    \        foreach (char c in brackets) {\n            if (c == '(') {\n       \
    \         balance += 1;\n            } else if (c == ')') {\n                balance\
    \ -= 1;\n            } else {\n                throw new ArgumentException(\"\
    Invalid character in brackets\");\n            }\n            if (balance < 0)\
    \ {\n                return false;\n            }\n        }\n        return balance\
    \ == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    ()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') count++;\n \
    \           else if (c == ')') count--;\n            if (count < 0) return false;\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int balance = 0;\n\
    \        foreach (char c in brackets) {\n            if (c == '(') {\n       \
    \         balance += 1;\n            } else if (c == ')') {\n                balance\
    \ -= 1;\n            } else {\n                throw new Exception(\"Invalid character\
    \ in brackets\");\n            }\n            if (balance < 0) {\n           \
    \     return false;\n            }\n        }\n        return balance == 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    ()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') count++;\n \
    \           else if (c == ')') count--;\n            if (count < 0) return false;\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char ch in brackets) {\n            if (ch == '(') {\n      \
    \          count++;\n            } else if (ch == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int balance = 0;\n\
    \        foreach (char c in brackets) {\n            if (c == '(') {\n       \
    \         balance += 1;\n            } else if (c == ')') {\n                balance\
    \ -= 1;\n            } else {\n                throw new Exception(\"Invalid character\
    \ in brackets string\");\n            }\n            if (balance < 0) {\n    \
    \            return false;\n            }\n        }\n        return balance ==\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    ()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') count++;\n \
    \           else if (c == ')') count--;\n            if (count < 0) return false;\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') count++;\n \
    \           else if (c == ')') count--;\n            if (count < 0) return false;\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') count++;\n \
    \           else if (c == ')') count--;\n            if (count < 0) return false;\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int balance = 0;\n\
    \        foreach (char c in brackets) {\n            if (c == '(') {\n       \
    \         balance += 1;\n            } else if (c == ')') {\n                balance\
    \ -= 1;\n            } else {\n                throw new Exception(\"Invalid character\"\
    );\n            }\n            if (balance < 0) {\n                return false;\n\
    \            }\n        }\n        return balance == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int depth = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        depth += 1;\n            } else if (c == ')') {\n                depth\
    \ -= 1;\n            }\n            if (depth < 0) {\n                return false;\n\
    \            }\n        }\n        return depth == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    public\
    \ static bool CorrectBracketing(string brackets) {\n        int count = 0;\n \
    \       foreach (char c in brackets) {\n            if (c == '(') {\n        \
    \        count++;\n            } else if (c == ')') {\n                count--;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008704

language: cs
name: HumanEval_74_total_match
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        return lst1.Sum(x => x.Length) < lst2.Sum(x
    => x.Length) ? lst1 : lst2;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e863115a80164fdeb01b76e9aa134439>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e863115a80164fdeb01b76e9aa134439>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach
    (string s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach
    (string s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1
    < sum2) {\n            return lst1;\n        } else {\n            return lst2;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Write your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Your code goes here\n        int lst1Total
    = 0;\n        int lst2Total = 0;\n        foreach (string s in lst1) {\n            lst1Total
    += s.Length;\n        }\n        foreach (string s in lst2) {\n            lst2Total
    += s.Length;\n        }\n        if (lst1Total < lst2Total) {\n            return
    lst1;\n        } else {\n            return lst2;\n        }\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),
    (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8242147b5be14e158260f4d55fd292b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8242147b5be14e158260f4d55fd292b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string str in lst1) {\n            lst1Total += str.Length;\n
    \       }\n        foreach (string str in lst2) {\n            lst2Total += str.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <56ac9c1c261e43a3b642c1d7637819ef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <56ac9c1c261e43a3b642c1d7637819ef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string s in lst1) {\n            lst1Total += s.Length;\n
    \       }\n        foreach (string s in lst2) {\n            lst2Total += s.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach
    (string s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach
    (string s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1
    < sum2) {\n            return lst1;\n        } else {\n            return lst2;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Write your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        return lst1.Sum(x => x.Length) < lst2.Sum(x
    => x.Length) ? lst1 : lst2;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e863115a80164fdeb01b76e9aa134439>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e863115a80164fdeb01b76e9aa134439>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Write your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Write your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string str in lst1) {\n            lst1Total += str.Length;\n
    \       }\n        foreach (string str in lst2) {\n            lst2Total += str.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else if (lst2Total < lst1Total) {\n            return lst2;\n        } else {\n
    \           return lst1;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d58b72ab261b468ba36b9eb3fad561d8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d58b72ab261b468ba36b9eb3fad561d8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string str in lst1) {\n            lst1Total += str.Length;\n
    \       }\n        foreach (string str in lst2) {\n            lst2Total += str.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else if (lst2Total < lst1Total) {\n            return lst2;\n        } else {\n
    \           return lst1;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d58b72ab261b468ba36b9eb3fad561d8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d58b72ab261b468ba36b9eb3fad561d8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // TODO: Implement this function\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <ffe4e4b314ec48deb9097e5afebe6a1e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <ffe4e4b314ec48deb9097e5afebe6a1e>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string s in lst1) {\n            lst1Total += s.Length;\n
    \       }\n        foreach (string s in lst2) {\n            lst2Total += s.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // TODO: Implement this function\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <ffe4e4b314ec48deb9097e5afebe6a1e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <ffe4e4b314ec48deb9097e5afebe6a1e>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string str in lst1) {\n            total1 += str.Length;\n        }\n
    \       foreach (string str in lst2) {\n            total2 += str.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71208bfbad6746b69da29f5880ecc73f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71208bfbad6746b69da29f5880ecc73f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int totalChars1 = 0;\n        int totalChars2
    = 0;\n        foreach (string s in lst1) {\n            totalChars1 += s.Length;\n
    \       }\n        foreach (string s in lst2) {\n            totalChars2 += s.Length;\n
    \       }\n        if (totalChars1 < totalChars2) {\n            return lst1;\n
    \       } else {\n            return lst2;\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),
    (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6ff4ea3a7d2d492ea1aad9e95ef1c813>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6ff4ea3a7d2d492ea1aad9e95ef1c813>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach
    (string s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach
    (string s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1
    < sum2) {\n            return lst1;\n        } else {\n            return lst2;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        return lst1.Sum(s => s.Length) < lst2.Sum(s
    => s.Length) ? lst1 : lst2;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b2cc5af0fdc44b77b23852a81a606681>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b2cc5af0fdc44b77b23852a81a606681>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Write your code here\n        int total1
    = 0;\n        int total2 = 0;\n        for (int i = 0; i < lst1.Count; i++) {\n
    \           total1 += lst1[i].Length;\n        }\n        for (int i = 0; i <
    lst2.Count; i++) {\n            total2 += lst2[i].Length;\n        }\n        if
    (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <346b753c238a4f8794774013c81d6e90>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <346b753c238a4f8794774013c81d6e90>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string s in lst1) {\n            lst1Total += s.Length;\n
    \       }\n        foreach (string s in lst2) {\n            lst2Total += s.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1)\n            total1 += s.Length;\n        foreach
    (string s in lst2)\n            total2 += s.Length;\n        if (total1 < total2)\n
    \           return lst1;\n        else\n            return lst2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),
    (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c70c18684d09426fa16a1e81a2373d4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c70c18684d09426fa16a1e81a2373d4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string str in lst1) {\n            total1 += str.Length;\n        }\n
    \       foreach (string str in lst2) {\n            total2 += str.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71208bfbad6746b69da29f5880ecc73f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71208bfbad6746b69da29f5880ecc73f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <c526ff5d4ffd4c28a61463b1b780e344>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <c526ff5d4ffd4c28a61463b1b780e344>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string s in lst1) {\n            lst1Total += s.Length;\n
    \       }\n        foreach (string s in lst2) {\n            lst2Total += s.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string s in lst1) {\n            lst1Total += s.Length;\n
    \       }\n        foreach (string s in lst2) {\n            lst2Total += s.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach
    (string s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach
    (string s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1
    < sum2) {\n            return lst1;\n        } else {\n            return lst2;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Your code goes here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <bd62311c65c84115b985da4015b07626>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <bd62311c65c84115b985da4015b07626>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Write your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // TODO: implement this function\n        int
    total1 = 0;\n        int total2 = 0;\n        foreach (string s in lst1) {\n            total1
    += s.Length;\n        }\n        foreach (string s in lst2) {\n            total2
    += s.Length;\n        }\n        if (total1 < total2) {\n            return lst1;\n
    \       }\n        else if (total2 < total1) {\n            return lst2;\n        }\n
    \       else {\n            return lst1;\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),
    (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39d85994b0b3452780964c8de1e4bb4c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39d85994b0b3452780964c8de1e4bb4c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string s in lst1) {\n            lst1Total += s.Length;\n
    \       }\n        foreach (string s in lst2) {\n            lst2Total += s.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Write your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach
    (string s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach
    (string s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1
    < sum2) {\n            return lst1;\n        } else {\n            return lst2;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Write your code here\n        int sum1
    = 0;\n        int sum2 = 0;\n        foreach (string s in lst1) {\n            sum1
    += s.Length;\n        }\n        foreach (string s in lst2) {\n            sum2
    += s.Length;\n        }\n        if (sum1 < sum2) {\n            return lst1;\n
    \       } else {\n            return lst2;\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),
    (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13805e4daaee47e692111999733a5d5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13805e4daaee47e692111999733a5d5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string s in lst1) {\n            lst1Total += s.Length;\n
    \       }\n        foreach (string s in lst2) {\n            lst2Total += s.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach
    (string s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach
    (string s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1
    < sum2) {\n            return lst1;\n        } else {\n            return lst2;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       for (int i = 0; i < lst1.Count; i++) {\n            total1 += lst1[i].Length;\n
    \       }\n        for (int i = 0; i < lst2.Count; i++) {\n            total2
    += lst2[i].Length;\n        }\n        if (total1 < total2) {\n            return
    lst1;\n        }\n        return lst2;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43ef3e5e02654384baca485cecea96eb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43ef3e5e02654384baca485cecea96eb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Write your code here\n        int total1
    = 0;\n        int total2 = 0;\n        foreach (string s in lst1) {\n            total1
    += s.Length;\n        }\n        foreach (string s in lst2) {\n            total2
    += s.Length;\n        }\n        if (total1 < total2) {\n            return lst1;\n
    \       } else {\n            return lst2;\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),
    (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8642a5535c04358bd1c2ad771f8b4ff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8642a5535c04358bd1c2ad771f8b4ff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string s in lst1) {\n            lst1Total += s.Length;\n
    \       }\n        foreach (string s in lst2) {\n            lst2Total += s.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string s in lst1) {\n            lst1Total += s.Length;\n
    \       }\n        foreach (string s in lst2) {\n            lst2Total += s.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach
    (string s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach
    (string s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1
    < sum2) {\n            return lst1;\n        } else {\n            return lst2;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // write your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <fcd5fb85480042c1a569e6346d1251af>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <fcd5fb85480042c1a569e6346d1251af>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string s in lst1) {\n            lst1Total += s.Length;\n
    \       }\n        foreach (string s in lst2) {\n            lst2Total += s.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Write your code here\n        int total1
    = 0;\n        int total2 = 0;\n        foreach (string s in lst1) {\n            total1
    += s.Length;\n        }\n        foreach (string s in lst2) {\n            total2
    += s.Length;\n        }\n        if (total1 < total2) {\n            return lst1;\n
    \       } else {\n            return lst2;\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),
    (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8642a5535c04358bd1c2ad771f8b4ff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8642a5535c04358bd1c2ad771f8b4ff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // write your code here\n        int total1
    = 0;\n        int total2 = 0;\n        foreach (string s in lst1) {\n            total1
    += s.Length;\n        }\n        foreach (string s in lst2) {\n            total2
    += s.Length;\n        }\n        if (total1 < total2) {\n            return lst1;\n
    \       } else {\n            return lst2;\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),
    (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b7061ff2c81440d9be2469d35250a81>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b7061ff2c81440d9be2469d35250a81>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // TODO: Implement this function\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <ffe4e4b314ec48deb9097e5afebe6a1e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <ffe4e4b314ec48deb9097e5afebe6a1e>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach
    (string s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach
    (string s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1
    < sum2) {\n            return lst1;\n        } else {\n            return lst2;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // TODO: Implement this function\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <ffe4e4b314ec48deb9097e5afebe6a1e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <ffe4e4b314ec48deb9097e5afebe6a1e>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach
    (string s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach
    (string s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1
    < sum2) {\n            return lst1;\n        } else {\n            return lst2;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // write your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <fcd5fb85480042c1a569e6346d1251af>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <fcd5fb85480042c1a569e6346d1251af>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach
    (string s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach
    (string s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1
    < sum2) {\n            return lst1;\n        } else {\n            return lst2;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90df44efd984744abf8e809628612ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // TODO: Implement this function\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <ffe4e4b314ec48deb9097e5afebe6a1e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <ffe4e4b314ec48deb9097e5afebe6a1e>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <38ba17e175174b7684aeec554124fb9f>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Write your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Write your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <e30ea4fb9d464aff82bb84a44b761f17>:0
    \n"
  stdout: ''
  timestamp: 1659976653
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n
    \       foreach (string s in lst1) {\n            total1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n
    \       if (total1 < total2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657df4a3807d495bb09280040d76074b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int count1 = 0;\n        int count2 = 0;\n
    \       foreach (string s in lst1) {\n            count1 += s.Length;\n        }\n
    \       foreach (string s in lst2) {\n            count2 += s.Length;\n        }\n
    \       if (count1 < count2) {\n            return lst1;\n        } else {\n            return
    lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <516dbae05778428bbd8abdb5be0726ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <516dbae05778428bbd8abdb5be0726ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976654
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total
    = 0;\n        foreach (string s in lst1) {\n            lst1Total += s.Length;\n
    \       }\n        foreach (string s in lst2) {\n            lst2Total += s.Length;\n
    \       }\n        if (lst1Total < lst2Total) {\n            return lst1;\n        }
    else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\",
    (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new
    string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\",
    (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbaf9a35155e4d50ac2e4efec0b3850f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976653
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts two lists of strings and returns
    the list that has \n    // total number of chars in the all strings of the list
    less than the other list.\n    // if the two lists have the same number of chars,
    return the first list.\n    // Examples\n    public static List<string> TotalMatch(List<string>
    lst1, List<string> lst2) {\n        // Your code goes here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\",
    (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"hi\",
    (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"4\"})),
    (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\", (string)\"4\",
    (string)\"5\"}))).Equals((new List<string>(new string[]{(string)\"4\"}))));\n
    \   Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"})),
    (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new
    List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new
    string[]{(string)\"hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new
    string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new
    List<string>()), (new List<string>(new string[]{(string)\"this\"}))).Equals((new
    List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),
    (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00015] in <bd62311c65c84115b985da4015b07626>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00015] in <bd62311c65c84115b985da4015b07626>:0
    \n"
  stdout: ''
  timestamp: 1659976653

language: cs
name: HumanEval_133_sum_squares
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here\n       \
    \ return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <744e503bda5244f5abea3ea397f0b657>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <744e503bda5244f5abea3ea397f0b657>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // TODO: Implement this function.\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7fef9481613471982dfc0f14b41709b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7fef9481613471982dfc0f14b41709b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Sum(x\
    \ => x * x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ x in lst) {\n            sum += (long)Math.Ceiling(x) * (long)Math.Ceiling(x);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (var\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (var\
    \ item in lst)\n        {\n            sum += (long)Math.Ceiling(item) * (long)Math.Ceiling(item);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        for (int\
    \ i = 0; i < lst.Count; i++) {\n            sum += (long)Math.Ceiling(lst[i])\
    \ * (long)Math.Ceiling(lst[i]);\n        }\n        return sum;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f}))) == (84L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.4f, (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)100.0f, (float)1.0f,\
    \ (float)15.0f, (float)2.0f}))) == (10230L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)10000.0f, (float)10000.0f}))) == (200000000L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.4f, (float)4.6f,\
    \ (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f}))) == (1086L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f}))) == (0L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f}))) ==\
    \ (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here\n       \
    \ return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <744e503bda5244f5abea3ea397f0b657>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <744e503bda5244f5abea3ea397f0b657>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  long sum = 0;\n        foreach (float f in lst) {\n            sum += (long)Math.Ceiling(f)\
    \ * (long)Math.Ceiling(f);\n        }\n        return sum;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f}))) == (84L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.4f, (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)100.0f, (float)1.0f,\
    \ (float)15.0f, (float)2.0f}))) == (10230L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)10000.0f, (float)10000.0f}))) == (200000000L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.4f, (float)4.6f,\
    \ (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f}))) == (1086L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f}))) == (0L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f}))) ==\
    \ (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // TODO: Implement this function\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42e08c9d6cb54deaa4a8000f143600c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42e08c9d6cb54deaa4a8000f143600c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Sum(x\
    \ => x * x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here\n       \
    \ return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <744e503bda5244f5abea3ea397f0b657>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <744e503bda5244f5abea3ea397f0b657>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // TODO: Implement this function\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42e08c9d6cb54deaa4a8000f143600c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42e08c9d6cb54deaa4a8000f143600c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // TODO: Implement this\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b3d1d0e3263d43f98cd2147ade8eb54b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b3d1d0e3263d43f98cd2147ade8eb54b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here.\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba1210163dd04f069d1b0c6fd6ad335a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba1210163dd04f069d1b0c6fd6ad335a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (var\
    \ item in lst)\n        {\n            sum += (long)Math.Ceiling(item) * (long)Math.Ceiling(item);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (var\
    \ item in lst)\n        {\n            sum += (long)Math.Ceiling(item) * (long)Math.Ceiling(item);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // TODO: Implement this function\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42e08c9d6cb54deaa4a8000f143600c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42e08c9d6cb54deaa4a8000f143600c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7143c371ff1484e90c6326f6976037b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7143c371ff1484e90c6326f6976037b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // TODO: Implement this function\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42e08c9d6cb54deaa4a8000f143600c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42e08c9d6cb54deaa4a8000f143600c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (var\
    \ item in lst)\n        {\n            sum += (long)Math.Ceiling(item) * (long)Math.Ceiling(item);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Sum(x\
    \ => x * x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // TODO: Implement the method\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b9f5dd40d0a4afd886752453b63b81a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b9f5dd40d0a4afd886752453b63b81a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // TODO: Implement this function\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42e08c9d6cb54deaa4a8000f143600c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42e08c9d6cb54deaa4a8000f143600c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f}))) == (84L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.4f, (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)100.0f, (float)1.0f,\
    \ (float)15.0f, (float)2.0f}))) == (10230L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)10000.0f, (float)10000.0f}))) == (200000000L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.4f, (float)4.6f,\
    \ (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f}))) == (1086L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f}))) == (0L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f}))) ==\
    \ (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <187ada77c1bd4ca29a2317dd81b0295b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <187ada77c1bd4ca29a2317dd81b0295b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here\n       \
    \ return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <744e503bda5244f5abea3ea397f0b657>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <744e503bda5244f5abea3ea397f0b657>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (var\
    \ item in lst)\n        {\n            sum += (long)Math.Ceiling(item) * (long)Math.Ceiling(item);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (var\
    \ item in lst)\n        {\n            sum += (long)Math.Ceiling(item) * (long)Math.Ceiling(item);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst)\n        {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7143c371ff1484e90c6326f6976037b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7143c371ff1484e90c6326f6976037b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Sum(x\
    \ => x * x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7143c371ff1484e90c6326f6976037b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7143c371ff1484e90c6326f6976037b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here\n       \
    \ return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <744e503bda5244f5abea3ea397f0b657>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <744e503bda5244f5abea3ea397f0b657>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // TODO: Implement this function.\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7fef9481613471982dfc0f14b41709b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7fef9481613471982dfc0f14b41709b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Sum(x\
    \ => x * x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Sum(x\
    \ => x * x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c814f3e7484d2f967c66261da1daec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here.\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af09b833aef41119ca20c4e72784cfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7143c371ff1484e90c6326f6976037b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7143c371ff1484e90c6326f6976037b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        return lst.Select(x => (long)Math.Ceiling(x)).Select(x\
    \ => x * x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            sum += (long)Math.Ceiling(f) * (long)Math.Ceiling(f);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        long sum = 0;\n        foreach (float\
    \ num in lst) {\n            sum += (long)Math.Ceiling(num) * (long)Math.Ceiling(num);\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f})))\
    \ == (84L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f,\
    \ (float)4.2f, (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Write your code here\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba486ff34a3342c9abe2ea572c966239>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // your code here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7143c371ff1484e90c6326f6976037b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7143c371ff1484e90c6326f6976037b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a list of numbers.\n    // You need to return\
    \ the sum of squared numbers in the given list,\n    // round each element in\
    \ the list to the upper int(Ceiling) first.\n    // Examples:\n    public static\
    \ long SumSquares(List<float> lst) {\n        // Your code goes here\n       \
    \ return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f}))) == (14L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.0f, (float)2.0f,\
    \ (float)3.0f}))) == (14L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f}))) == (84L));\n\
    \    Debug.Assert(SumSquares((new List<float>(new float[]{(float)1.4f, (float)4.2f,\
    \ (float)0.0f}))) == (29L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-2.4f, (float)1.0f, (float)1.0f}))) == (6L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)100.0f, (float)1.0f, (float)15.0f, (float)2.0f})))\
    \ == (10230L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)10000.0f,\
    \ (float)10000.0f}))) == (200000000L));\n    Debug.Assert(SumSquares((new List<float>(new\
    \ float[]{(float)-1.4f, (float)4.6f, (float)6.3f}))) == (75L));\n    Debug.Assert(SumSquares((new\
    \ List<float>(new float[]{(float)-1.4f, (float)17.9f, (float)18.9f, (float)19.9f})))\
    \ == (1086L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)0.0f})))\
    \ == (0L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f})))\
    \ == (1L));\n    Debug.Assert(SumSquares((new List<float>(new float[]{(float)-1.0f,\
    \ (float)1.0f, (float)0.0f}))) == (2L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <744e503bda5244f5abea3ea397f0b657>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <744e503bda5244f5abea3ea397f0b657>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750

language: cs
name: HumanEval_31_is_prime
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     long m = (long)Math.Sqrt(n);\n        for (long i = 3; i <= m; i += 2) {\n\
    \            if (n % i == 0) return false;\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i ==\
    \ 0) return false;\n        }\n        return true;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n  \
    \  Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) ==\
    \ (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) {\n            return\
    \ false;\n        }\n        if (n == 2) {\n            return true;\n       \
    \ }\n        if (n % 2 == 0) {\n            return false;\n        }\n       \
    \ for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n    \
    \            return false;\n            }\n        }\n        return true;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i ==\
    \ 0) return false;\n        }\n        return true;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n  \
    \  Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) ==\
    \ (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n < 4) return true;\n        if (n % 2 == 0) return false;\n    \
    \    if (n < 9) return true;\n        if (n % 3 == 0) return false;\n        if\
    \ (n < 25) return true;\n        int s = (int)Math.Sqrt(n);\n        for (int\
    \ i = 5; i <= s; i += 6) {\n            if (n % i == 0) return false;\n      \
    \      if (n % (i + 2) == 0) return false;\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i ==\
    \ 0) return false;\n        }\n        return true;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n  \
    \  Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) ==\
    \ (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) {\n            return\
    \ false;\n        }\n        if (n == 2) {\n            return true;\n       \
    \ }\n        if (n % 2 == 0) {\n            return false;\n        }\n       \
    \ for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n    \
    \            return false;\n            }\n        }\n        return true;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) {\n            return\
    \ false;\n        }\n        if (n == 2) {\n            return true;\n       \
    \ }\n        if (n % 2 == 0) {\n            return false;\n        }\n       \
    \ for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n    \
    \            return false;\n            }\n        }\n        return true;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) {\n            return\
    \ false;\n        }\n        if (n == 2) {\n            return true;\n       \
    \ }\n        if (n % 2 == 0) {\n            return false;\n        }\n       \
    \ for (long i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n < 4) return true;\n        if (n % 2 == 0) return false;\n    \
    \    if (n < 9) return true;\n        if (n % 3 == 0) return false;\n        if\
    \ (n < 25) return true;\n        int s = (int)Math.Sqrt(n);\n        for (int\
    \ i = 5; i <= s; i += 6) {\n            if (n % i == 0) return false;\n      \
    \      if (n % (i + 2) == 0) return false;\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n < 4) return true;\n        if (n % 2 == 0) return false;\n    \
    \    if (n < 9) return true;\n        if (n % 3 == 0) return false;\n        if\
    \ (n < 25) return true;\n        int s = (int)Math.Sqrt(n);\n        for (int\
    \ i = 5; i <= s; i += 6) {\n            if (n % i == 0) return false;\n      \
    \      if (n % (i + 2) == 0) return false;\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) {\n           \
    \ return false;\n        }\n        if (n <= 3) {\n            return true;\n\
    \        }\n        if (n % 2 == 0 || n % 3 == 0) {\n            return false;\n\
    \        }\n        for (long i = 5; i * i <= n; i += 6) {\n            if (n\
    \ % i == 0 || n % (i + 2) == 0) {\n                return false;\n           \
    \ }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i ==\
    \ 0) return false;\n        }\n        return true;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n  \
    \  Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) ==\
    \ (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     if (n < 9) return true;\n        if (n % 3 == 0) return false;\n       \
    \ if (n % 5 == 0) return false;\n        long limit = (long)Math.Sqrt(n);\n  \
    \      for (long i = 7; i <= limit; i += 30) {\n            if (n % i == 0) return\
    \ false;\n            if (n % (i + 4) == 0) return false;\n            if (n %\
    \ (i + 6) == 0) return false;\n            if (n % (i + 10) == 0) return false;\n\
    \            if (n % (i + 12) == 0) return false;\n            if (n % (i + 16)\
    \ == 0) return false;\n            if (n % (i + 22) == 0) return false;\n    \
    \        if (n % (i + 24) == 0) return false;\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) {\n            return\
    \ false;\n        }\n        if (n == 2) {\n            return true;\n       \
    \ }\n        if (n % 2 == 0) {\n            return false;\n        }\n       \
    \ long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n\
    \            if (n % i == 0) {\n                return false;\n            }\n\
    \        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i ==\
    \ 0) return false;\n        }\n        return true;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n  \
    \  Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) ==\
    \ (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) {\n            return\
    \ false;\n        }\n        if (n == 2) {\n            return true;\n       \
    \ }\n        if (n % 2 == 0) {\n            return false;\n        }\n       \
    \ for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n    \
    \            return false;\n            }\n        }\n        return true;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i ==\
    \ 0) return false;\n        }\n        return true;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n  \
    \  Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) ==\
    \ (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i ==\
    \ 0) return false;\n        }\n        return true;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n  \
    \  Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) ==\
    \ (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n < 4) return true;\n        if (n % 2 == 0) return false;\n    \
    \    if (n < 9) return true;\n        if (n % 3 == 0) return false;\n        if\
    \ (n < 25) return true;\n        int s = (int)Math.Sqrt(n);\n        for (int\
    \ i = 5; i <= s; i += 6) {\n            if (n % i == 0) return false;\n      \
    \      if (n % (i + 2) == 0) return false;\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n < 4) return true;\n        if (n % 2 == 0) return false;\n    \
    \    if (n < 9) return true;\n        if (n % 3 == 0) return false;\n        if\
    \ (n < 25) return true;\n        int s = (int)Math.Sqrt(n);\n        for (int\
    \ i = 5; i <= s; i += 6) {\n            if (n % i == 0) return false;\n      \
    \      if (n % (i + 2) == 0) return false;\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n < 4) return true;\n        if (n % 2 == 0) return false;\n    \
    \    for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) {\n            return\
    \ false;\n        }\n        if (n == 2) {\n            return true;\n       \
    \ }\n        if (n % 2 == 0) {\n            return false;\n        }\n       \
    \ for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n    \
    \            return false;\n            }\n        }\n        return true;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i ==\
    \ 0) return false;\n        }\n        return true;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n  \
    \  Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) ==\
    \ (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     long m = (long)Math.Sqrt(n);\n        for (long i = 3; i <= m; i += 2) {\n\
    \            if (n % i == 0) return false;\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i ==\
    \ 0) return false;\n        }\n        return true;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n  \
    \  Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) ==\
    \ (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     long m = (long)Math.Sqrt(n);\n        for (long i = 3; i <= m; i += 2) {\n\
    \            if (n % i == 0) return false;\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n < 4) return true;\n        if (n % 2 == 0) return false;\n    \
    \    if (n < 9) return true;\n        if (n % 3 == 0) return false;\n        if\
    \ (n < 25) return true;\n        int s = (int)Math.Sqrt(n);\n        for (int\
    \ i = 5; i <= s; i += 6) {\n            if (n % i == 0) return false;\n      \
    \      if (n % (i + 2) == 0) return false;\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) {\n           \
    \ return false;\n        }\n        if (n <= 3) {\n            return true;\n\
    \        }\n        if (n % 2 == 0 || n % 3 == 0) {\n            return false;\n\
    \        }\n        long i = 5;\n        while (i * i <= n) {\n            if\
    \ (n % i == 0 || n % (i + 2) == 0) {\n                return false;\n        \
    \    }\n            i += 6;\n        }\n        return true;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n\
    \    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n <= 1) {\n           \
    \ return false;\n        }\n        if (n <= 3) {\n            return true;\n\
    \        }\n        if (n % 2 == 0 || n % 3 == 0) {\n            return false;\n\
    \        }\n        for (long i = 5; i * i <= n; i += 6) {\n            if (n\
    \ % i == 0 || n % (i + 2) == 0) {\n                return false;\n           \
    \ }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n < 4) return true;\n        if (n % 2 == 0) return false;\n    \
    \    if (n < 9) return true;\n        if (n % 3 == 0) return false;\n        if\
    \ (n < 25) return true;\n        int s = (int)Math.Sqrt(n);\n        for (int\
    \ i = 5; i <= s; i += 6) {\n            if (n % i == 0) return false;\n      \
    \      if (n % (i + 2) == 0) return false;\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L))\
    \ == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L))\
    \ == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L))\
    \ == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L))\
    \ == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L))\
    \ == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L))\
    \ == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L))\
    \ == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L))\
    \ == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L))\
    \ == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L))\
    \ == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015689

language: cs
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(x => char.IsUpper(x) ? char.ToLower(x) :\
    \ char.ToUpper(x)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] result = new char[str.Length];\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (char.IsLower(str[i])) {\n                result[i] =\
    \ char.ToUpper(str[i]);\n            } else {\n                result[i] = char.ToLower(str[i]);\n\
    \            }\n        }\n        return new string(result);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c - 'a'\
    \ + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c\
    \ - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n      \
    \      }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] result = new char[str.Length];\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (Char.IsUpper(str[i])) {\n                result[i] =\
    \ Char.ToLower(str[i]);\n            } else {\n                result[i] = Char.ToUpper(str[i]);\n\
    \            }\n        }\n        return new string(result);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                chars[i]\
    \ = char.ToLower(chars[i]);\n            } else if (char.IsLower(chars[i])) {\n\
    \                chars[i] = char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            char c = str[i];\n            if (char.IsUpper(c)) {\n          \
    \      result += char.ToLower(c);\n            } else {\n                result\
    \ += char.ToUpper(c);\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (char.IsLower(charArray[i])) {\n                charArray[i]\
    \ = char.ToUpper(charArray[i]);\n            } else if (char.IsUpper(charArray[i]))\
    \ {\n                charArray[i] = char.ToLower(charArray[i]);\n            }\n\
    \        }\n        return new string(charArray);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (char.IsUpper(charArray[i])) {\n                charArray[i]\
    \ = char.ToLower(charArray[i]);\n            } else if (char.IsLower(charArray[i]))\
    \ {\n                charArray[i] = char.ToUpper(charArray[i]);\n            }\n\
    \        }\n        return new string(charArray);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] result = new char[str.Length];\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (char.IsUpper(str[i])) {\n                result[i] =\
    \ char.ToLower(str[i]);\n            } else {\n                result[i] = char.ToUpper(str[i]);\n\
    \            }\n        }\n        return new string(result);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsUpper(chars[i])) {\n                chars[i]\
    \ = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i])) {\n\
    \                chars[i] = Char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsUpper(chars[i])) {\n                chars[i]\
    \ = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i])) {\n\
    \                chars[i] = Char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        // Convert the string to a char array.\n        char[] array = str.ToCharArray();\n\
    \        // Loop through the array.\n        for (int i = 0; i < array.Length;\
    \ i++) {\n            // If the character is lowercase, make it uppercase.\n \
    \           if (char.IsLower(array[i])) {\n                array[i] = char.ToUpper(array[i]);\n\
    \            }\n            // If the character is uppercase, make it lowercase.\n\
    \            else if (char.IsUpper(array[i])) {\n                array[i] = char.ToLower(array[i]);\n\
    \            }\n        }\n        // Return the new string.\n        return new\
    \ string(array);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] arr = str.ToCharArray();\n        for (int i = 0; i < arr.Length;\
    \ i++) {\n            if (char.IsUpper(arr[i])) {\n                arr[i] = char.ToLower(arr[i]);\n\
    \            } else if (char.IsLower(arr[i])) {\n                arr[i] = char.ToUpper(arr[i]);\n\
    \            }\n        }\n        return new string(arr);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsUpper(chars[i])) {\n                chars[i]\
    \ = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i])) {\n\
    \                chars[i] = Char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] output = new char[str.Length];\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            char c = str[i];\n            if (c >= 'a' && c <= 'z')\
    \ {\n                output[i] = (char)(c - 'a' + 'A');\n            } else if\
    \ (c >= 'A' && c <= 'Z') {\n                output[i] = (char)(c - 'A' + 'a');\n\
    \            } else {\n                output[i] = c;\n            }\n       \
    \ }\n        return new string(output);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (char.IsUpper(charArray[i])) {\n                charArray[i]\
    \ = char.ToLower(charArray[i]);\n            } else if (char.IsLower(charArray[i]))\
    \ {\n                charArray[i] = char.ToUpper(charArray[i]);\n            }\n\
    \        }\n        return new string(charArray);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                chars[i]\
    \ = char.ToLower(chars[i]);\n            } else if (char.IsLower(chars[i])) {\n\
    \                chars[i] = char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (char.IsLower(charArray[i])) {\n                charArray[i]\
    \ = char.ToUpper(charArray[i]);\n            } else if (char.IsUpper(charArray[i]))\
    \ {\n                charArray[i] = char.ToLower(charArray[i]);\n            }\n\
    \        }\n        return new string(charArray);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c - 32));\n\
    \            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c\
    \ + 32));\n            } else {\n                sb.Append(c);\n            }\n\
    \        }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c))\n                sb.Append(char.ToLower(c));\n\
    \            else\n                sb.Append(char.ToUpper(c));\n        }\n  \
    \      return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] arr = str.ToCharArray();\n        for (int i = 0; i < arr.Length;\
    \ i++) {\n            if (char.IsLower(arr[i])) {\n                arr[i] = char.ToUpper(arr[i]);\n\
    \            } else if (char.IsUpper(arr[i])) {\n                arr[i] = char.ToLower(arr[i]);\n\
    \            }\n        }\n        return new string(arr);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c))\n                sb.Append(char.ToLower(c));\n\
    \            else\n                sb.Append(char.ToUpper(c));\n        }\n  \
    \      return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                chars[i]\
    \ = char.ToLower(chars[i]);\n            } else if (char.IsLower(chars[i])) {\n\
    \                chars[i] = char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] arr = str.ToCharArray();\n        for (int i = 0; i < arr.Length;\
    \ i++) {\n            if (char.IsUpper(arr[i])) {\n                arr[i] = char.ToLower(arr[i]);\n\
    \            } else if (char.IsLower(arr[i])) {\n                arr[i] = char.ToUpper(arr[i]);\n\
    \            }\n        }\n        return new string(arr);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (Char.IsUpper(str[i])) {\n                result += Char.ToLower(str[i]);\n\
    \            } else {\n                result += Char.ToUpper(str[i]);\n     \
    \       }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            char c = chars[i];\n            if (char.IsUpper(c)) {\n\
    \                chars[i] = char.ToLower(c);\n            } else if (char.IsLower(c))\
    \ {\n                chars[i] = char.ToUpper(c);\n            }\n        }\n \
    \       return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                chars[i]\
    \ = char.ToLower(chars[i]);\n            } else if (char.IsLower(chars[i])) {\n\
    \                chars[i] = char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (char.IsUpper(charArray[i])) {\n                charArray[i]\
    \ = char.ToLower(charArray[i]);\n            } else if (char.IsLower(charArray[i]))\
    \ {\n                charArray[i] = char.ToUpper(charArray[i]);\n            }\n\
    \        }\n        return new string(charArray);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c\
    \ - 'a' + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n           \
    \     sb.Append((char)(c - 'A' + 'a'));\n            } else {\n              \
    \  sb.Append(c);\n            }\n        }\n        return sb.ToString();\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c - 'a'\
    \ + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c\
    \ - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n      \
    \      }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsUpper(chars[i])) {\n                chars[i]\
    \ = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i])) {\n\
    \                chars[i] = Char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] flipped = new char[str.Length];\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            char c = str[i];\n            if (char.IsUpper(c)) {\n \
    \               flipped[i] = char.ToLower(c);\n            } else {\n        \
    \        flipped[i] = char.ToUpper(c);\n            }\n        }\n        return\
    \ new string(flipped);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] result = new char[str.Length];\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (char.IsLower(str[i])) {\n                result[i] =\
    \ char.ToUpper(str[i]);\n            } else {\n                result[i] = char.ToLower(str[i]);\n\
    \            }\n        }\n        return new string(result);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] arr = str.ToCharArray();\n        for (int i = 0; i < arr.Length;\
    \ i++) {\n            if (char.IsUpper(arr[i])) {\n                arr[i] = char.ToLower(arr[i]);\n\
    \            } else if (char.IsLower(arr[i])) {\n                arr[i] = char.ToUpper(arr[i]);\n\
    \            }\n        }\n        return new string(arr);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                chars[i]\
    \ = char.ToLower(chars[i]);\n            } else if (char.IsLower(chars[i])) {\n\
    \                chars[i] = char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c - 'a'\
    \ + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c\
    \ - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n      \
    \      }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (char.IsUpper(str[i])) {\n                result += char.ToLower(str[i]);\n\
    \            } else {\n                result += char.ToUpper(str[i]);\n     \
    \       }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c - 'a'\
    \ + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c\
    \ - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n      \
    \      }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            char c = chars[i];\n            if (c >= 'a' && c <= 'z')\
    \ {\n                chars[i] = (char)(c - 'a' + 'A');\n            } else if\
    \ (c >= 'A' && c <= 'Z') {\n                chars[i] = (char)(c - 'A' + 'a');\n\
    \            }\n        }\n        return new string(chars);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c - 'a'\
    \ + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c\
    \ - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n      \
    \      }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c - 'a'\
    \ + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c\
    \ - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n      \
    \      }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c - 'a'\
    \ + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c\
    \ - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n      \
    \      }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (char.IsLower(charArray[i])) {\n                charArray[i]\
    \ = char.ToUpper(charArray[i]);\n            } else if (char.IsUpper(charArray[i]))\
    \ {\n                charArray[i] = char.ToLower(charArray[i]);\n            }\n\
    \        }\n        return new string(charArray);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                chars[i]\
    \ = char.ToLower(chars[i]);\n            } else if (char.IsLower(chars[i])) {\n\
    \                chars[i] = char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c - 'a'\
    \ + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c\
    \ - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n      \
    \      }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsUpper(chars[i])) {\n                chars[i]\
    \ = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i])) {\n\
    \                chars[i] = Char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (char.IsUpper(charArray[i])) {\n                charArray[i]\
    \ = char.ToLower(charArray[i]);\n            } else if (char.IsLower(charArray[i]))\
    \ {\n                charArray[i] = char.ToUpper(charArray[i]);\n            }\n\
    \        }\n        return new string(charArray);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                chars[i]\
    \ = char.ToLower(chars[i]);\n            } else if (char.IsLower(chars[i])) {\n\
    \                chars[i] = char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c - 'a'\
    \ + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c\
    \ - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n      \
    \      }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsUpper(chars[i])) {\n                chars[i]\
    \ = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i])) {\n\
    \                chars[i] = Char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] flipped = new char[str.Length];\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (Char.IsUpper(str[i])) {\n                flipped[i]\
    \ = Char.ToLower(str[i]);\n            } else {\n                flipped[i] =\
    \ Char.ToUpper(str[i]);\n            }\n        }\n        return new string(flipped);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] arr = str.ToCharArray();\n        for (int i = 0; i < arr.Length;\
    \ i++) {\n            if (char.IsUpper(arr[i])) {\n                arr[i] = char.ToLower(arr[i]);\n\
    \            } else if (char.IsLower(arr[i])) {\n                arr[i] = char.ToUpper(arr[i]);\n\
    \            }\n        }\n        return new string(arr);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            char c = str[i];\n            if (c >= 'a' &&\
    \ c <= 'z') {\n                sb.Append((char)(c - 'a' + 'A'));\n           \
    \ } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c - 'A'\
    \ + 'a'));\n            } else {\n                sb.Append(c);\n            }\n\
    \        }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c - 'a'\
    \ + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c\
    \ - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n      \
    \      }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsUpper(chars[i])) {\n                chars[i]\
    \ = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i])) {\n\
    \                chars[i] = Char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                chars[i]\
    \ = char.ToLower(chars[i]);\n            } else if (char.IsLower(chars[i])) {\n\
    \                chars[i] = char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (char.IsLower(charArray[i])) {\n                charArray[i]\
    \ = char.ToUpper(charArray[i]);\n            } else if (char.IsUpper(charArray[i]))\
    \ {\n                charArray[i] = char.ToLower(charArray[i]);\n            }\n\
    \        }\n        return new string(charArray);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c\
    \ - 'a' + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n           \
    \     sb.Append((char)(c - 'A' + 'a'));\n            } else {\n              \
    \  sb.Append(c);\n            }\n        }\n        return sb.ToString();\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (char.IsLower(charArray[i])) {\n                charArray[i]\
    \ = char.ToUpper(charArray[i]);\n            } else if (char.IsUpper(charArray[i]))\
    \ {\n                charArray[i] = char.ToLower(charArray[i]);\n            }\n\
    \        }\n        return new string(charArray);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (char.IsLower(charArray[i])) {\n                charArray[i]\
    \ = char.ToUpper(charArray[i]);\n            } else if (char.IsUpper(charArray[i]))\
    \ {\n                charArray[i] = char.ToLower(charArray[i]);\n            }\n\
    \        }\n        return new string(charArray);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                chars[i]\
    \ = char.ToLower(chars[i]);\n            } else if (char.IsLower(chars[i])) {\n\
    \                chars[i] = char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] c = str.ToCharArray();\n        for (int i = 0; i < c.Length;\
    \ i++) {\n            if (char.IsUpper(c[i])) {\n                c[i] = char.ToLower(c[i]);\n\
    \            } else if (char.IsLower(c[i])) {\n                c[i] = char.ToUpper(c[i]);\n\
    \            }\n        }\n        return new string(c);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c)).ToArray());\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] result = new char[str.Length];\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (Char.IsUpper(str[i])) {\n                result[i] =\
    \ Char.ToLower(str[i]);\n            } else {\n                result[i] = Char.ToUpper(str[i]);\n\
    \            }\n        }\n        return new string(result);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                chars[i]\
    \ = char.ToLower(chars[i]);\n            } else if (char.IsLower(chars[i])) {\n\
    \                chars[i] = char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsUpper(chars[i])) {\n                chars[i]\
    \ = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i])) {\n\
    \                chars[i] = Char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                chars[i]\
    \ = char.ToLower(chars[i]);\n            } else if (char.IsLower(chars[i])) {\n\
    \                chars[i] = char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] result = new char[str.Length];\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (char.IsUpper(str[i])) {\n                result[i] =\
    \ char.ToLower(str[i]);\n            } else {\n                result[i] = char.ToUpper(str[i]);\n\
    \            }\n        }\n        return new string(result);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsUpper(chars[i])) {\n                chars[i]\
    \ = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i])) {\n\
    \                chars[i] = Char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        var sb = new StringBuilder();\n        foreach (var c in str) {\n   \
    \         if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] arr = str.ToCharArray();\n        for (int i = 0; i < arr.Length;\
    \ i++) {\n            if (arr[i] >= 'a' && arr[i] <= 'z') {\n                arr[i]\
    \ = (char)(arr[i] - 32);\n            } else if (arr[i] >= 'A' && arr[i] <= 'Z')\
    \ {\n                arr[i] = (char)(arr[i] + 32);\n            }\n        }\n\
    \        return new string(arr);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    public static string FlipCase(string str) {\n\
    \        char[] arr = str.ToCharArray();\n        for (int i = 0; i < arr.Length;\
    \ i++) {\n            if (arr[i] >= 'a' && arr[i] <= 'z') {\n                arr[i]\
    \ = (char)(arr[i] - 'a' + 'A');\n            } else if (arr[i] >= 'A' && arr[i]\
    \ <= 'Z') {\n                arr[i] = (char)(arr[i] - 'A' + 'a');\n          \
    \  }\n        }\n        return new string(arr);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750

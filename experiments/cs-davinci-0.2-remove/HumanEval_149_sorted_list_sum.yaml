name: HumanEval_149_sorted_list_sum
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function that accepts a list of strings as a parameter,\n\
  \    // deletes the strings that have odd lengths from it,\n    // and returns the\
  \ resulted list with a sorted order,\n    // The list is always a list of strings\
  \ and never an array of numbers,\n    // and it may contain duplicates.\n    //\
  \ The order of the list should be ascending by length of each word, and you\n  \
  \  // should return the list sorted by that rule.\n    // If two words have the\
  \ same length, sort the list alphabetically.\n    // The function should return\
  \ a list of strings in sorted order.\n    // You may assume that all words will\
  \ have the same length.\n    // For example:\n    public static List<string> SortedListSum(List<string>\
  \ lst) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortedListSum((new\
  \ List<string>(new string[]{(string)\"aa\", (string)\"a\", (string)\"aaa\"}))).Equals((new\
  \ List<string>(new string[]{(string)\"aa\"}))));\n    Debug.Assert(SortedListSum((new\
  \ List<string>(new string[]{(string)\"school\", (string)\"AI\", (string)\"asdf\"\
  , (string)\"b\"}))).Equals((new List<string>(new string[]{(string)\"AI\", (string)\"\
  asdf\", (string)\"school\"}))));\n    Debug.Assert(SortedListSum((new List<string>(new\
  \ string[]{(string)\"d\", (string)\"b\", (string)\"c\", (string)\"a\"}))).Equals((new\
  \ List<string>())));\n    Debug.Assert(SortedListSum((new List<string>(new string[]{(string)\"\
  d\", (string)\"dcba\", (string)\"abcd\", (string)\"a\"}))).Equals((new List<string>(new\
  \ string[]{(string)\"abcd\", (string)\"dcba\"}))));\n    Debug.Assert(SortedListSum((new\
  \ List<string>(new string[]{(string)\"AI\", (string)\"ai\", (string)\"au\"}))).Equals((new\
  \ List<string>(new string[]{(string)\"AI\", (string)\"ai\", (string)\"au\"}))));\n\
  \    Debug.Assert(SortedListSum((new List<string>(new string[]{(string)\"a\", (string)\"\
  b\", (string)\"b\", (string)\"c\", (string)\"c\", (string)\"a\"}))).Equals((new\
  \ List<string>())));\n    Debug.Assert(SortedListSum((new List<string>(new string[]{(string)\"\
  aaaa\", (string)\"bbbb\", (string)\"dd\", (string)\"cc\"}))).Equals((new List<string>(new\
  \ string[]{(string)\"cc\", (string)\"dd\", (string)\"aaaa\", (string)\"bbbb\"}))));\n\
  \    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

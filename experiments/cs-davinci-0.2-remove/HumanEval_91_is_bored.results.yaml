language: cs
name: HumanEval_91_is_bored
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ here.\n        return 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9aa22423fe8c4f8cb86014d385badd4d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9aa22423fe8c4f8cb86014d385badd4d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        int i = 0;\n        while (i < S.Length) {\n            if (S[i]\
    \ == 'I') {\n                count++;\n                while (i < S.Length &&\
    \ S[i] != '.' && S[i] != '?' && S[i] != '!') {\n                    i++;\n   \
    \             }\n            }\n            i++;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ee1b235bdcb64c608620cd4a247f4e59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ee1b235bdcb64c608620cd4a247f4e59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(new char[] { ' ' });\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <11a68e86487f43ecb810b84019b4ee26>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long boredoms = 0;\n        string[] sentences = S.Split(new char[]\
    \ { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n    \
    \        if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <deee57c038b943c8a869e732a28417d7>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long count = 0;\n        string[] sentences = S.Split(new char[] {\
    \ '.', '?', '!' });\n        foreach (string sentence in sentences) {\n      \
    \      if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n  \
    \          }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e17ab01154940a6bde4a4326df0dd77>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long count = 0;\n        string[] sentences = S.Split(new char[] {\
    \ '.', '?', '!' });\n        foreach (string sentence in sentences) {\n      \
    \      if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n  \
    \          }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e17ab01154940a6bde4a4326df0dd77>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        return S.Split(new char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"\
    I\"));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f1b0747ca44c43b4ea62e7fea3bf93>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(new char[] { ' ' });\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                boredoms++;\n            }\n        }\n       \
    \ return boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <78a02f15aac248d79d569a58276ebc13>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \            if (words.Length > 0 && words[0] == \"I\") {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        int count = 0;\n        string[] sentences = S.Split('.', '?', '!');\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d54e1293d29e45089fb1c47c2a124b83>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        long boredoms = 0;\n     \
    \   foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9e3da156f6304e6283c9680d83526439>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eff7ed14fc534002aeae5276dbc394d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eff7ed14fc534002aeae5276dbc394d2>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long count = 0;\n        string[] words = S.Split('.', '?', '!');\n\
    \        foreach (string word in words) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1240f9bc7564965b5cfda026a87bf5d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1240f9bc7564965b5cfda026a87bf5d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        return 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1ec467fb6d44e45aa4abfa4cec98244>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1ec467fb6d44e45aa4abfa4cec98244>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        var count\
    \ = 0;\n        var words = S.Split(' ', '.', '?', '!');\n        foreach (var\
    \ word in words) {\n            if (word == \"I\") {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2471df03bb604661b325ba16dd6cf234>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <460dc9d9f3174d94bfdc5274d33781d3>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae0cd95aa55d412fa7e4ebb7956700b1>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(' ');\n            if (words.Length > 0 && words[0] == \"I\"\
    ) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd593e24fd854b97afff06142fd7dc9d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Split the\
    \ string into sentences.\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        // Count the number of sentences that start with \"I\"\
    .\n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0eef0596828f4529a9758a448fdc2e4d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        int count = 0;\n        string[] words = S.Split('.', '?', '!');\n\
    \        foreach (string word in words) {\n            if (word.Length > 0 &&\
    \ word[0] == 'I') {\n                count++;\n            }\n        }\n    \
    \    return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f1dfef92a6c42429f037c57b77c6425>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f1dfef92a6c42429f037c57b77c6425>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        var boredoms\
    \ = 0;\n        var sentences = S.Split(new char[] { '.', '?', '!' });\n     \
    \   foreach (var sentence in sentences) {\n            if (sentence.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7f97e24da3bd4e59aced9799d512f198>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7f97e24da3bd4e59aced9799d512f198>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long count = 0;\n        string[] sentences = S.Split(new char[] {\
    \ '.', '?', '!' });\n        foreach (string sentence in sentences) {\n      \
    \      if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n  \
    \          }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e17ab01154940a6bde4a4326df0dd77>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ here.\n        return 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9aa22423fe8c4f8cb86014d385badd4d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9aa22423fe8c4f8cb86014d385badd4d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // \"I am\
    \ bored.\" => 1\n        // \"I am not bored.\" => 0\n        // \"I am bored.\
    \ I am not bored.\" => 2\n        // \"I am bored. I am not bored. I am bored.\"\
    \ => 3\n        // \"I am bored. I am not bored. I am bored. I am not bored.\"\
    \ => 4\n        // \"I am bored. I am not bored. I am bored. I am not bored. I\
    \ am bored.\" => 5\n        // \"I am bored. I am not bored. I am bored. I am\
    \ not bored. I am bored. I am not bored.\" => 6\n        // \"I am bored. I am\
    \ not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\"\
    \ => 7\n        // \"I am bored. I am not bored. I am bored. I am not bored. I\
    \ am bored. I am not bored. I am bored. I am not bored.\" => 8\n        // \"\
    I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored.\" => 9\n        // \"I am bored. I am\
    \ not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored.\" => 10\n        // \"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored.\" => 11\n   \
    \     // \"I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored.\" => 12\n        // \"I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored.\" => 13\n\
    \        // \"I am bored. I am not bored. I am bored.\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpocbddo8r.cs(13,24): error CS0161: ''Problem.IsBored(string)'': not all
    code paths return a value

    '
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Split the\
    \ string into sentences.\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        // Count the number of sentences that start with \"I\"\
    .\n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0eef0596828f4529a9758a448fdc2e4d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        var boredoms\
    \ = 0;\n        var sentences = S.Split(new char[] { '.', '?', '!' });\n     \
    \   foreach (var sentence in sentences) {\n            if (sentence.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7f97e24da3bd4e59aced9799d512f198>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7f97e24da3bd4e59aced9799d512f198>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ goes here\n        return 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42c69ffa42f94c70a69b5b208b92b63e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42c69ffa42f94c70a69b5b208b92b63e>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        return S.Split('.',\
    \ '?', '!').Count(s => s.Trim().StartsWith(\"I\"));\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cd5230eba39f4ad2a8e17f0abf5f12df>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        int i = 0;\n        while (i < S.Length) {\n            if (S[i]\
    \ == 'I') {\n                boredoms++;\n                while (i < S.Length\
    \ && S[i] != '.' && S[i] != '?' && S[i] != '!') {\n                    i++;\n\
    \                }\n            }\n            i++;\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a545c1e8086e4c35b64c6506f3ad43ef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a545c1e8086e4c35b64c6506f3ad43ef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        var boredoms\
    \ = 0;\n        var sentences = S.Split(new[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0acd0d6085524100bd323f2e74f04453>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach (string\
    \ word in words) {\n            if (word.StartsWith(\"I\")) {\n              \
    \  count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61d21531f5b34698b193901f8e7da2f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61d21531f5b34698b193901f8e7da2f7>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(new char[] { ' ' });\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                boredoms++;\n            }\n        }\n       \
    \ return boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <78a02f15aac248d79d569a58276ebc13>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        int i = 0;\n        while (i < S.Length) {\n            if (S[i]\
    \ == 'I') {\n                boredoms++;\n                while (i < S.Length\
    \ && S[i] != '.' && S[i] != '?' && S[i] != '!') {\n                    i++;\n\
    \                }\n            }\n            i++;\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a545c1e8086e4c35b64c6506f3ad43ef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a545c1e8086e4c35b64c6506f3ad43ef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ goes here\n        return 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42c69ffa42f94c70a69b5b208b92b63e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42c69ffa42f94c70a69b5b208b92b63e>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Split the\
    \ string into sentences.\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        // Count the number of sentences that start with \"I\"\
    .\n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0eef0596828f4529a9758a448fdc2e4d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        var boredoms\
    \ = 0;\n        var sentences = S.Split(new char[] { '.', '?', '!' });\n     \
    \   foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2c81837e6f94b2a89048e64f5ffb9ca>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // This is\
    \ a boring sentence.\n        // I am not bored.\n        // I am bored!\n   \
    \     // I am bored?\n        // I am bored.\n        // I am bored!\n       \
    \ // I am bored?\n        // I am bored.\n        // I am bored!\n        // I\
    \ am bored?\n        // I am bored.\n        // I am bored!\n        // I am bored?\n\
    \        // I am bored.\n        // I am bored!\n        // I am bored?\n    \
    \    // I am bored.\n        // I am bored!\n        // I am bored?\n        //\
    \ I am bored.\n        // I am bored!\n        // I am bored?\n        // I am\
    \ bored.\n        // I am bored!\n        // I am bored?\n        // I am bored.\n\
    \        // I am bored!\n        // I am bored?\n        // I am bored.\n    \
    \    // I am bored!\n        // I am bored?\n        // I am bored.\n        //\
    \ I am bored!\n        // I am bored?\n        // I am bored.\n        // I am\
    \ bored!\n        // I am bored?\n        // I am bored.\n        // I am bored!\n\
    \        // I am bored?\n        // I am bored.\n        // I am bored!\n    \
    \    // I am bored?\n        // I am bored.\n        // I am bored!\n        //\
    \ I am bored?\n        // I am bored.\n        // I am bored!\n        // I am\
    \ bored?\n        // I am bored.\n        // I am bored!\n        // I am bored?\n\
    \        // I am bored.\n        // I am bored!\n        // I am bored?\n    \
    \    // I am bored.\n        // I am bored!\n        // I am bored?\n        //\
    \ I am bored.\n        // I am bored!\n        // I am bored?\n        // I am\
    \ bored.\n        // I am bored!\n        // I am bored?\n        // I am bored.\n\
    \        // I am bored!\n        // I am bored?\n        // I am bored.\n    \
    \    // I am bored!\n        // I am bored?\n        // I am bored.\n        //\
    \ I am bored!\n        // I am\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9knho8bv.cs(13,24): error CS0161: ''Problem.IsBored(string)'': not all
    code paths return a value

    '
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        long count = 0;\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350cc1a6ef894d64bf6bf5d4e84f689b>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split(new char[] { '.', '?', '!' });\n    \
    \    foreach (string word in words) {\n            if (word.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cb5aa4b8af77407186f1ffbfc4385576>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long count = 0;\n        string[] split = S.Split('.', '?', '!');\n\
    \        foreach (string s in split) {\n            if (s.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <37923af2f44b449495b32c8a86dce77d>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Split the\
    \ string into sentences\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        // Count the number of sentences that start with \"I\"\
    \n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f13526475a084e58886a0e0df28b5d2d>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach (string\
    \ word in words) {\n            if (word.StartsWith(\"I\")) {\n              \
    \  count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61d21531f5b34698b193901f8e7da2f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61d21531f5b34698b193901f8e7da2f7>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ here\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4e4c9ff19364e0d8fab7a53ba01f723>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4e4c9ff19364e0d8fab7a53ba01f723>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Split the\
    \ string into sentences.\n        var sentences = S.Split(new[] { '.', '?', '!'\
    \ }, StringSplitOptions.RemoveEmptyEntries);\n        // Count the number of sentences\
    \ that start with \"I\".\n        return sentences.Count(s => s.Trim().StartsWith(\"\
    I\"));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f6d73db397f4d6e88369ad5a37ba047>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach (string\
    \ word in words) {\n            if (word.StartsWith(\"I\")) {\n              \
    \  count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61d21531f5b34698b193901f8e7da2f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61d21531f5b34698b193901f8e7da2f7>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long count = 0;\n        string[] sentences = S.Split(new char[] {\
    \ '.', '?', '!' });\n        foreach (string sentence in sentences) {\n      \
    \      if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n  \
    \          }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e17ab01154940a6bde4a4326df0dd77>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <580c26150dee4378ac524428a1c78ef8>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        int count = 0;\n        string[] words = S.Split('.', '?', '!');\n\
    \        foreach (string word in words) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a9a82b52320046f087319ee039ae93e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a9a82b52320046f087319ee039ae93e3>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split(new char[] { '.', '?', '!' });\n    \
    \    foreach (string word in words) {\n            if (word.StartsWith(\"I\"))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82010e0202c24027ba591dd81c6ee9a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82010e0202c24027ba591dd81c6ee9a8>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Split the\
    \ string into sentences.\n        var sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        // Count the sentences that start with \"I\".\n        return\
    \ sentences.Count(s => s.Trim().StartsWith(\"I\"));\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9999f29f6b154a009be514af3b13f276>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        int i = 0;\n        while (i < S.Length) {\n            if (S[i]\
    \ == 'I') {\n                count++;\n                while (i < S.Length &&\
    \ S[i] != '.' && S[i] != '?' && S[i] != '!') {\n                    i++;\n   \
    \             }\n            }\n            i++;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ee1b235bdcb64c608620cd4a247f4e59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ee1b235bdcb64c608620cd4a247f4e59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // \"I am\
    \ bored.\" => 1\n        // \"I am not bored.\" => 0\n        // \"I am bored.\
    \ I am not bored.\" => 2\n        // \"I am bored. I am not bored. I am bored.\"\
    \ => 3\n        // \"I am bored. I am not bored. I am bored. I am not bored.\"\
    \ => 4\n        // \"I am bored. I am not bored. I am bored. I am not bored. I\
    \ am bored.\" => 5\n        // \"I am bored. I am not bored. I am bored. I am\
    \ not bored. I am bored. I am not bored.\" => 6\n        // \"I am bored. I am\
    \ not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\"\
    \ => 7\n        // \"I am bored. I am not bored. I am bored. I am not bored. I\
    \ am bored. I am not bored. I am bored. I am not bored.\" => 8\n        // \"\
    I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored.\" => 9\n        // \"I am bored. I am\
    \ not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored.\" => 10\n        // \"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored.\" => 11\n   \
    \     // \"I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored.\" => 12\n        // \"I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored.\" => 13\n\
    \        // \"I am bored. I am not bored. I am bored.\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpocbddo8r.cs(13,24): error CS0161: ''Problem.IsBored(string)'': not all
    code paths return a value

    '
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach (string\
    \ word in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d8161f2b4dc445190f48ef2bf97b704>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long count = 0;\n        string[] sentences = S.Split(new char[] {\
    \ '.', '?', '!' });\n        foreach (string sentence in sentences) {\n      \
    \      if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n  \
    \          }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e17ab01154940a6bde4a4326df0dd77>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ here\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4e4c9ff19364e0d8fab7a53ba01f723>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4e4c9ff19364e0d8fab7a53ba01f723>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        // Split the string into sentences.\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            // Split the sentence into words.\n            string[]\
    \ words = sentence.Split(' ');\n            // If the first word is \"I\", it's\
    \ a boredom.\n            if (words.Length > 0 && words[0] == \"I\") {\n     \
    \           boredoms++;\n            }\n        }\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <72768a1c3d7d4f02b88c4df0f4b64631>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        int i = 0;\n        while (i < S.Length) {\n            if (S[i]\
    \ == 'I') {\n                count++;\n                while (i < S.Length &&\
    \ S[i] != '.' && S[i] != '?' && S[i] != '!') {\n                    i++;\n   \
    \             }\n            }\n            i++;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ee1b235bdcb64c608620cd4a247f4e59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ee1b235bdcb64c608620cd4a247f4e59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        var count\
    \ = 0;\n        var words = S.Split(' ', '.', '?', '!');\n        foreach (var\
    \ word in words) {\n            if (word == \"I\") {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2471df03bb604661b325ba16dd6cf234>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // I am not\
    \ bored.\n        // I am bored.\n        // I am not bored. I am not bored.\n\
    \        // I am bored. I am bored.\n        // I am not bored. I am bored. I\
    \ am not bored. I am bored.\n        // I am not bored. I am not bored. I am bored.\
    \ I am bored.\n        // I am not bored. I am not bored. I am not bored. I am\
    \ not bored.\n        // I am bored. I am bored. I am bored. I am bored.\n   \
    \     // I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored.\n        // I am bored. I am bored. I am bored. I am bored. I am\
    \ bored.\n        // I am not bored. I am not bored. I am not bored. I am not\
    \ bored. I am not bored. I am not bored.\n        // I am bored. I am bored. I\
    \ am bored. I am bored. I am bored. I am bored.\n        // I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored.\n        // I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored.\n        // I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored.\n        // I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored.\n        // I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\n        // I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored.\n        // I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe0h7f2go.cs(13,24): error CS0161: ''Problem.IsBored(string)'': not all
    code paths return a value

    '
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        int i = 0;\n        while (i < S.Length) {\n            if (S[i]\
    \ == 'I') {\n                boredoms++;\n                while (i < S.Length\
    \ && S[i] != '.' && S[i] != '?' && S[i] != '!') {\n                    i++;\n\
    \                }\n            }\n            i++;\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a545c1e8086e4c35b64c6506f3ad43ef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a545c1e8086e4c35b64c6506f3ad43ef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ goes here.\n        return 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f37149f975474ac0ada51bc865f68fb9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f37149f975474ac0ada51bc865f68fb9>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        for (int i = 0; i < S.Length; i++) {\n            if (S[i] ==\
    \ 'I') {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7ee92b71effb41c7964bb3504f5c03b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7ee92b71effb41c7964bb3504f5c03b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        var boredoms\
    \ = 0;\n        var words = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (var word in words) {\n            var firstWord = word.Split(' ')[0];\n   \
    \         if (firstWord == \"I\") {\n                boredoms++;\n           \
    \ }\n        }\n        return boredoms;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a7c73c9b876c4a9482a900bb142e4e52>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        var count\
    \ = 0;\n        var words = S.Split('.', '?', '!');\n        foreach (var word\
    \ in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n            \
    \    count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76be92144e514cd09777ccb729aded89>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        // Split the string into sentences.\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            // Split the sentence into words.\n            string[]\
    \ words = sentence.Split(new char[] { ' ' });\n            // If the first word\
    \ is \"I\", we have a boredom.\n            if (words.Length > 0 && words[0] ==\
    \ \"I\") {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0b70d49c7d542e89b02320b1cd60f71>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(new char[] { ' ' });\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <11a68e86487f43ecb810b84019b4ee26>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(new char[] { ' ' });\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <11a68e86487f43ecb810b84019b4ee26>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Split the\
    \ string into sentences.\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        // Count the number of sentences that start with \"I\"\
    .\n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0eef0596828f4529a9758a448fdc2e4d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(' ');\n            if (words.Length > 0 && words[0] == \"I\"\
    ) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd593e24fd854b97afff06142fd7dc9d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(new char[] { ' ' });\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <11a68e86487f43ecb810b84019b4ee26>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(' ');\n            if (words.Length > 0 && words[0] == \"I\"\
    ) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd593e24fd854b97afff06142fd7dc9d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long count = 0;\n        string[] words = S.Split('.', '?', '!');\n\
    \        foreach (string word in words) {\n            if (word.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5d1bde06f9640d4a9fe3458a755422a>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(' ');\n            if (words.Length > 0 && words[0] == \"I\"\
    ) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd593e24fd854b97afff06142fd7dc9d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(' ');\n            if (words.Length > 0 && words[0] == \"I\"\
    ) {\n                boredoms++;\n            }\n        }\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf34838ac1246adbd3b50155b1a290c>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach (string\
    \ word in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d8161f2b4dc445190f48ef2bf97b704>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        var sentences = S.Split(new char[] { '.', '?', '!' });\n     \
    \   foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\"))\n                boredoms++;\n        }\n        return boredoms;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <53c98c7e701b4ed1814becdb65c574af>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Split the\
    \ string into sentences.\n        var sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        // Count the number of sentences that start with \"I\".\n \
    \       return sentences.Count(s => s.Trim().StartsWith(\"I\"));\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0d1db0db8194894bb3a72bef15e588b>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        int i = 0;\n        while (i < S.Length) {\n            if (S[i]\
    \ == 'I') {\n                count++;\n                while (i < S.Length &&\
    \ S[i] != '.' && S[i] != '?' && S[i] != '!') {\n                    i++;\n   \
    \             }\n            }\n            i++;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ee1b235bdcb64c608620cd4a247f4e59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ee1b235bdcb64c608620cd4a247f4e59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ goes here\n        return 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42c69ffa42f94c70a69b5b208b92b63e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42c69ffa42f94c70a69b5b208b92b63e>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // \"I am\
    \ bored.\" => 1\n        // \"I am not bored.\" => 0\n        // \"I am bored.\
    \ I am not bored.\" => 2\n        // \"I am bored. I am not bored. I am bored.\"\
    \ => 3\n        // \"I am bored. I am not bored. I am bored. I am not bored.\"\
    \ => 4\n        // \"I am bored. I am not bored. I am bored. I am not bored. I\
    \ am bored.\" => 5\n        // \"I am bored. I am not bored. I am bored. I am\
    \ not bored. I am bored. I am not bored.\" => 6\n        // \"I am bored. I am\
    \ not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\"\
    \ => 7\n        // \"I am bored. I am not bored. I am bored. I am not bored. I\
    \ am bored. I am not bored. I am bored. I am not bored.\" => 8\n        // \"\
    I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored.\" => 9\n        // \"I am bored. I am\
    \ not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored.\" => 10\n        // \"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored.\" => 11\n   \
    \     // \"I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored.\" => 12\n        // \"I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored.\" => 13\n\
    \        // \"I am bored. I am not bored. I am bored.\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpocbddo8r.cs(13,24): error CS0161: ''Problem.IsBored(string)'': not all
    code paths return a value

    '
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        for (int i = 0; i < S.Length; i++) {\n            if (S[i] ==\
    \ 'I') {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7ee92b71effb41c7964bb3504f5c03b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7ee92b71effb41c7964bb3504f5c03b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Split the\
    \ string into sentences.\n        var sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        // Count the number of sentences that start with \"I\".\n \
    \       return sentences.Count(s => s.Trim().StartsWith(\"I\"));\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0d1db0db8194894bb3a72bef15e588b>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eff7ed14fc534002aeae5276dbc394d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eff7ed14fc534002aeae5276dbc394d2>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(' ');\n            if (words.Length > 0 && words[0] == \"I\"\
    ) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd593e24fd854b97afff06142fd7dc9d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // I am bored.\
    \ I am not bored. I am bored.\n        // Should return 3.\n        // I am not\
    \ bored. I am not bored. I am not bored.\n        // Should return 0.\n      \
    \  // I am bored. I am bored. I am bored. I am bored.\n        // Should return\
    \ 4.\n        // I am bored. I am not bored. I am bored. I am not bored.\n   \
    \     // Should return 2.\n        // I am bored. I am bored. I am bored. I am\
    \ bored. I am bored.\n        // Should return 5.\n        // I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored.\n        // Should return\
    \ 6.\n        // I am bored. I am bored. I am bored. I am bored. I am bored. I\
    \ am bored. I am bored.\n        // Should return 7.\n        // I am bored. I\
    \ am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\n\
    \        // Should return 8.\n        // I am bored. I am bored. I am bored. I\
    \ am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\n    \
    \    // Should return 9.\n        // I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\n\
    \        // Should return 10.\n        // I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored.\n        // Should return 11.\n        // I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored.\n        // Should return 12.\n\
    \        // I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored.\n        //\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7cm1s7l7.cs(13,24): error CS0161: ''Problem.IsBored(string)'': not all
    code paths return a value

    '
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ goes here.\n        return 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f37149f975474ac0ada51bc865f68fb9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f37149f975474ac0ada51bc865f68fb9>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        var boredoms\
    \ = 0;\n        var sentences = S.Split(new char[] { '.', '?', '!' });\n     \
    \   foreach (var sentence in sentences) {\n            var words = sentence.Split(new\
    \ char[] { ' ' });\n            if (words.Length > 0 && words[0] == \"I\") {\n\
    \                boredoms++;\n            }\n        }\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bfdfc98c21e2429ca5ee8e1f2576a02b>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(' ');\n            if (words.Length > 0 && words[0] == \"I\"\
    ) {\n                boredoms++;\n            }\n        }\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf34838ac1246adbd3b50155b1a290c>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach (string\
    \ word in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d8161f2b4dc445190f48ef2bf97b704>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ here\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4e4c9ff19364e0d8fab7a53ba01f723>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4e4c9ff19364e0d8fab7a53ba01f723>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(' ');\n            if (words.Length > 0 && words[0] == \"I\"\
    ) {\n                boredoms++;\n            }\n        }\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf34838ac1246adbd3b50155b1a290c>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // The string\
    \ \"I am bored.\" contains 1 boredom.\n        // The string \"I am bored. I am\
    \ not.\" contains 2 boredoms.\n        // The string \"I am bored. I am not. I\
    \ am.\" contains 3 boredoms.\n        // The string \"I am bored. I am not. I\
    \ am. I am not.\" contains 4 boredoms.\n        // The string \"I am bored. I\
    \ am not. I am. I am not. I am.\" contains 5 boredoms.\n        // The string\
    \ \"I am bored. I am not. I am. I am not. I am. I am not.\" contains 6 boredoms.\n\
    \        // The string \"I am bored. I am not. I am. I am not. I am. I am not.\
    \ I am.\" contains 7 boredoms.\n        // The string \"I am bored. I am not.\
    \ I am. I am not. I am. I am not. I am. I am not.\" contains 8 boredoms.\n   \
    \     // The string \"I am bored. I am not. I am. I am not. I am. I am not. I\
    \ am. I am not. I am.\" contains 9 boredoms.\n        // The string \"I am bored.\
    \ I am not. I am. I am not. I am. I am not. I am. I am not. I am. I am not.\"\
    \ contains 10 boredoms.\n        // The string \"I am bored. I am not. I am. I\
    \ am not. I am. I am not. I am. I am not. I am. I am not. I am.\" contains 11\
    \ boredoms.\n        // The string \"I am bored. I am not. I am. I am not. I am.\
    \ I am not. I am. I am not. I am. I am not. I am. I am not.\" contains 12 boredoms.\n\
    \        // The string \"I am bored. I am not. I am. I am not. I am. I am not.\
    \ I am. I am not. I am. I am not. I am. I am not. I am.\" contains 13 boredoms.\n\
    \        // The string \"I am bored. I am not. I am. I am not. I am. I am not.\
    \ I am. I am not. I am. I am not.\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu7sgi2ml.cs(13,24): error CS0161: ''Problem.IsBored(string)'': not all
    code paths return a value

    '
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ here\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4e4c9ff19364e0d8fab7a53ba01f723>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4e4c9ff19364e0d8fab7a53ba01f723>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach (string\
    \ word in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d8161f2b4dc445190f48ef2bf97b704>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim()\
    \ == \"I\") {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82bb44a85ebe497dbcc766451476e325>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82bb44a85ebe497dbcc766451476e325>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45be016154e64edf8cd7e0ad13b00b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45be016154e64edf8cd7e0ad13b00b9e>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Length\
    \ > 0 && sentence[0] == 'I') {\n                count++;\n            }\n    \
    \    }\n        return count;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e9e01bba7e07480f8c109ad576e125b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e9e01bba7e07480f8c109ad576e125b7>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        var sentences = S.Split(new char[] { '.', '?', '!' });\n     \
    \   foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba1ef86f372b4e6b85dd7eeab014c1b8>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long boredoms = 0;\n        string[] sentences = S.Split(new char[]\
    \ { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n    \
    \        if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <deee57c038b943c8a869e732a28417d7>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <580c26150dee4378ac524428a1c78ef8>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach (string\
    \ word in words) {\n            if (word.StartsWith(\"I\")) {\n              \
    \  count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61d21531f5b34698b193901f8e7da2f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61d21531f5b34698b193901f8e7da2f7>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long count = 0;\n        string[] sentences = S.Split(new char[] {\
    \ '.', '?', '!' });\n        foreach (string sentence in sentences) {\n      \
    \      if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n  \
    \          }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e17ab01154940a6bde4a4326df0dd77>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach (string\
    \ word in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d8161f2b4dc445190f48ef2bf97b704>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split(new char[] { '.', '?', '!' });\n    \
    \    foreach (string word in words) {\n            if (word.StartsWith(\"I\"))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82010e0202c24027ba591dd81c6ee9a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82010e0202c24027ba591dd81c6ee9a8>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // The string\
    \ \"I am bored.\" contains 1 boredom.\n        // The string \"I am bored. I am\
    \ not.\" contains 2 boredoms.\n        // The string \"I am bored. I am not. I\
    \ am.\" contains 3 boredoms.\n        // The string \"I am bored. I am not. I\
    \ am. I am not.\" contains 4 boredoms.\n        // The string \"I am bored. I\
    \ am not. I am. I am not. I am.\" contains 5 boredoms.\n        // The string\
    \ \"I am bored. I am not. I am. I am not. I am. I am not.\" contains 6 boredoms.\n\
    \        // The string \"I am bored. I am not. I am. I am not. I am. I am not.\
    \ I am.\" contains 7 boredoms.\n        // The string \"I am bored. I am not.\
    \ I am. I am not. I am. I am not. I am. I am not.\" contains 8 boredoms.\n   \
    \     // The string \"I am bored. I am not. I am. I am not. I am. I am not. I\
    \ am. I am not. I am.\" contains 9 boredoms.\n        // The string \"I am bored.\
    \ I am not. I am. I am not. I am. I am not. I am. I am not. I am. I am not.\"\
    \ contains 10 boredoms.\n        // The string \"I am bored. I am not. I am. I\
    \ am not. I am. I am not. I am. I am not. I am. I am not. I am.\" contains 11\
    \ boredoms.\n        // The string \"I am bored. I am not. I am. I am not. I am.\
    \ I am not. I am. I am not. I am. I am not. I am. I am not.\" contains 12 boredoms.\n\
    \        // The string \"I am bored. I am not. I am. I am not. I am. I am not.\
    \ I am. I am not. I am. I am not. I am. I am not. I am.\" contains 13 boredoms.\n\
    \        // The string \"I am bored. I am not. I am. I am not. I am. I am not.\
    \ I am. I am not. I am. I am not.\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu7sgi2ml.cs(13,24): error CS0161: ''Problem.IsBored(string)'': not all
    code paths return a value

    '
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eff7ed14fc534002aeae5276dbc394d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eff7ed14fc534002aeae5276dbc394d2>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <14bf1237a8bb435e92815ab77d08b595>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ goes here\n        return 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42c69ffa42f94c70a69b5b208b92b63e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42c69ffa42f94c70a69b5b208b92b63e>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach (string\
    \ word in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d8161f2b4dc445190f48ef2bf97b704>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        var boredoms\
    \ = 0;\n        var sentences = S.Split(new char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f486cd26cb044078982a77816bdda123>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach (string\
    \ word in words) {\n            if (word.StartsWith(\"I\")) {\n              \
    \  count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61d21531f5b34698b193901f8e7da2f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61d21531f5b34698b193901f8e7da2f7>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <580c26150dee4378ac524428a1c78ef8>:0 \n"
  stdout: ''
  timestamp: 1660015752
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // I am not\
    \ bored.\n        // I am bored.\n        // I am not bored!\n        // I am\
    \ not bored?\n        // I am not bored. I am not bored. I am not bored.\n   \
    \     // I am not bored. I am not bored. I am bored.\n        // I am not bored.\
    \ I am not bored. I am bored. I am not bored.\n        // I am not bored. I am\
    \ not bored. I am bored. I am not bored. I am bored.\n        // I am not bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored.\n  \
    \      // I am not bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored.\n        // I am not bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\n\
    \        // I am not bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored.\n        // I am not\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored.\n        // I am not\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored.\n      \
    \  // I am not bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored.\n        // I am not bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored.\n        // I\
    \ am not bored. I am not bored. I am bored. I am not bored. I am bored.\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjj2dpxsj.cs(13,24): error CS0161: ''Problem.IsBored(string)'': not all
    code paths return a value

    '
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Your code\
    \ here.\n        return 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9aa22423fe8c4f8cb86014d385badd4d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9aa22423fe8c4f8cb86014d385badd4d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(new char[] { ' ' });\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <11a68e86487f43ecb810b84019b4ee26>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Split the\
    \ string into sentences.\n        var sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        long count = 0;\n        foreach (var sentence in sentences)\
    \ {\n            // Split the sentence into words.\n            var words = sentence.Split(new\
    \ char[] { ' ' });\n            if (words.Length > 0 && words[0] == \"I\") {\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8afbec2bf3854a27bb15043105ee6b34>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        // Split the string into sentences.\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            // Split the sentence into words.\n            string[]\
    \ words = sentence.Split(new char[] { ' ' });\n            if (words.Length >\
    \ 0 && words[0] == \"I\") {\n                boredoms++;\n            }\n    \
    \    }\n        return boredoms;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60d976fe1e94426d957a5c1037b563d7>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(new char[] { ' ' });\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <11a68e86487f43ecb810b84019b4ee26>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Split the\
    \ string into sentences.\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        // Count the number of sentences that start with \"I\"\
    .\n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0eef0596828f4529a9758a448fdc2e4d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        var boredoms\
    \ = 0;\n        var words = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (var word in words) {\n            if (word.StartsWith(\"I\")) {\n         \
    \       boredoms++;\n            }\n        }\n        return boredoms;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3cd1f991ad474e1ba9f01dda1982f478>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3cd1f991ad474e1ba9f01dda1982f478>:0 \n"
  stdout: ''
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // Split the\
    \ string into sentences.\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        // Count the number of sentences that start with \"I\"\
    .\n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0eef0596828f4529a9758a448fdc2e4d>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        // This is\
    \ a boring sentence.\n        // This is a boring sentence!\n        // This is\
    \ a boring sentence?\n        // This is a boring sentence.\n        // I am bored!\n\
    \        // I am bored.\n        // I am bored?\n        // I am bored!\n    \
    \    // I am bored.\n        // I am bored?\n        // I am bored!\n        //\
    \ I am bored.\n        // I am bored?\n        // I am bored!\n        // I am\
    \ bored.\n        // I am bored?\n        // I am bored!\n        // I am bored.\n\
    \        // I am bored?\n        // I am bored!\n        // I am bored.\n    \
    \    // I am bored?\n        // I am bored!\n        // I am bored.\n        //\
    \ I am bored?\n        // I am bored!\n        // I am bored.\n        // I am\
    \ bored?\n        // I am bored!\n        // I am bored.\n        // I am bored?\n\
    \        // I am bored!\n        // I am bored.\n        // I am bored?\n    \
    \    // I am bored!\n        // I am bored.\n        // I am bored?\n        //\
    \ I am bored!\n        // I am bored.\n        // I am bored?\n        // I am\
    \ bored!\n        // I am bored.\n        // I am bored?\n        // I am bored!\n\
    \        // I am bored.\n        // I am bored?\n        // I am bored!\n    \
    \    // I am bored.\n        // I am bored?\n        // I am bored!\n        //\
    \ I am bored.\n        // I am bored?\n        // I am bored!\n        // I am\
    \ bored.\n        // I am bored?\n        // I am bored!\n        // I am bored.\n\
    \        // I am bored?\n        // I am bored!\n        // I am bored.\n    \
    \    // I am bored?\n        // I am bored!\n        // I am bored.\n        //\
    \ I am bored?\n        // I am bored!\n        // I am bored.\n        // I am\
    \ bored?\n        // I am bored!\n        // I am bored.\n        // I am bored?\n\
    \        // I am bored!\n        // I am bored.\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi949r7he.cs(13,24): error CS0161: ''Problem.IsBored(string)'': not all
    code paths return a value

    '
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f99c5e2dc7324eaea0c756c8f15ec0f5>:0 \n"
  stdout: ''
  timestamp: 1660015751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c280654bdb0c4ef286173d2a6a9773a6>:0 \n"
  stdout: ''
  timestamp: 1660015751

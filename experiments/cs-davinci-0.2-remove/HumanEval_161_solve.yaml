name: HumanEval_161_solve
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse\
  \ its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n\
  \    // If the string contains no letters, reverse the string.\n    // The function\
  \ should return the resulted string.\n    // Examples\n    public static string\
  \ Solve(string s) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"\
  AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\"\
  )));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"\
  #a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"\
  #aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"\
  #$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\"\
  )));\n    }\n\n}\n"
completions: ["        // Write your code here\n        return \"\";", "        if\
    \ (!s.Any(char.IsLetter)) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return new string(s.Select(c => char.IsLetter(c) ? (char.IsUpper(c)\
    \ ? char.ToLower(c) : char.ToUpper(c)) : c).ToArray());", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ // To debug: Console.Error.WriteLine(\"Debug messages...\");\n        return\
    \ \"\";", "        // Write your code here\n        return \"\";", "        //\
    \ Write your code here\n        return \"\";", "        // Write your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return null;", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        if (s.Any(char.IsLetter)) {\n            return new\
    \ string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n\
    \        }", "        // Write your code here\n        return \"\";", "      \
    \  // Write your code here\n        return \"\";", "        // Write your code\
    \ here\n        return \"\";", "        // Write your code here.\n        return\
    \ \"\";", "        if (s.Any(char.IsLetter)) {\n            return new string(s.Select(c\
    \ => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c) :\
    \ c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n\
    \        }", "        // Write your code here\n        return \"\";", "      \
    \  // Write your code here\n        return \"\";", "        // Write your code\
    \ here\n        return \"\";", "        // Write your code here\n        return\
    \ \"\";", "        // Write your code here\n        return \"\";", "        if\
    \ (s.Length == 0) return s;\n        bool hasLetter = false;\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i])) {\n      \
    \          hasLetter = true;\n                break;\n            }\n        }\n\
    \        if (!hasLetter) {\n            var sb = new StringBuilder(s);\n     \
    \       sb.Reverse();\n            return sb.ToString();\n        }\n        var\
    \ sb2 = new StringBuilder();\n        for (int i = 0; i < s.Length; i++) {\n \
    \           if (char.IsLetter(s[i])) {\n                sb2.Append(char.IsUpper(s[i])\
    \ ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n            } else {\n        \
    \        sb2.Append(s[i]);\n            }\n        }\n        return sb2.ToString();",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here.\n        return \"\";", "        // Write your code here\n      \
    \  return \"\";", "        // Write your code here\n        return \"\";", " \
    \       // Write your code here.\n        return \"\";", "        if (s.Length\
    \ == 0) {\n            return s;\n        }\n        bool hasLetter = false;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i]))\
    \ {\n                hasLetter = true;\n                break;\n            }\n\
    \        }\n        if (!hasLetter) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        StringBuilder sb = new StringBuilder();\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i])) {\n      \
    \          if (char.IsUpper(s[i])) {\n                    sb.Append(char.ToLower(s[i]));\n\
    \                } else {\n                    sb.Append(char.ToUpper(s[i]));\n\
    \                }\n            } else {\n                sb.Append(s[i]);\n \
    \           }\n        }\n        return sb.ToString();", "        if (s.Length\
    \ == 0) return s;\n        StringBuilder sb = new StringBuilder();\n        bool\
    \ hasLetter = false;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (char.IsLetter(s[i])) {\n                hasLetter = true;\n          \
    \      sb.Append(char.IsUpper(s[i]) ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n\
    \            } else {\n                sb.Append(s[i]);\n            }\n     \
    \   }\n        if (!hasLetter) {\n            return new string(sb.ToString().Reverse().ToArray());\n\
    \        }\n        return sb.ToString();", "        // Write your code here\n\
    \        return \"\";", "        if (s.Length == 0) return s;\n        var sb\
    \ = new StringBuilder();\n        for (int i = 0; i < s.Length; i++) {\n     \
    \       if (char.IsLetter(s[i])) {\n                if (char.IsUpper(s[i])) {\n\
    \                    sb.Append(char.ToLower(s[i]));\n                } else {\n\
    \                    sb.Append(char.ToUpper(s[i]));\n                }\n     \
    \       } else {\n                sb.Append(s[i]);\n            }\n        }\n\
    \        return sb.ToString();", "        // Write your code here\n        return\
    \ \"\";", "        // Write your code here\n        return \"\";", "        //\
    \ Write your code here\n        return \"\";", "        // Write your code here\n\
    \        return \"\";", "        if (s.Any(char.IsLetter)) {\n            return\
    \ new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)\
    \ : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new\
    \ string(s.Reverse().ToArray());\n        }", "        // Write your code here\n\
    \        return \"\";", "        // Write your code here.\n        return \"\"\
    ;", "        // Write your code here\n        return \"\";", "        // Write\
    \ your code here.\n        return \"\";", "        if (s.Length == 0) return s;\n\
    \        if (s.All(c => !char.IsLetter(c))) return new string(s.Reverse().ToArray());\n\
    \        return new string(s.Select(c => char.IsLetter(c) ? (char.IsUpper(c) ?\
    \ char.ToLower(c) : char.ToUpper(c)) : c).ToArray());", "        if (s.Length\
    \ == 0) return s;\n        var sb = new StringBuilder();\n        for (int i =\
    \ 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i])) {\n          \
    \      sb.Append(char.IsUpper(s[i]) ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n\
    \            } else {\n                sb.Append(s[i]);\n            }\n     \
    \   }\n        return sb.ToString();", "        if (s.Length == 0) return s;\n\
    \        var sb = new StringBuilder();\n        bool hasLetter = false;\n    \
    \    for (int i = 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i]))\
    \ {\n                hasLetter = true;\n                sb.Append(char.IsUpper(s[i])\
    \ ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n            } else {\n        \
    \        sb.Append(s[i]);\n            }\n        }\n        return hasLetter\
    \ ? sb.ToString() : new string(sb.ToString().Reverse().ToArray());", "       \
    \ if (s.Any(char.IsLetter)) {\n            return new string(s.Select(c => char.IsLetter(c)\
    \ ? char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c) : c).ToArray());\n   \
    \     } else {\n            return new string(s.Reverse().ToArray());\n      \
    \  }", "        if (s.Any(char.IsLetter)) {\n            return new string(s.Select(c\
    \ => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c) :\
    \ c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n\
    \        }", "        // Write your code here\n        return \"\";", "      \
    \  if (s.Length == 0) return s;\n        var sb = new StringBuilder();\n     \
    \   bool hasLetter = false;\n        for (int i = 0; i < s.Length; i++) {\n  \
    \          if (char.IsLetter(s[i])) {\n                hasLetter = true;\n   \
    \             sb.Append(char.IsUpper(s[i]) ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n\
    \            } else {\n                sb.Append(s[i]);\n            }\n     \
    \   }\n        return hasLetter ? sb.ToString() : new string(sb.ToString().Reverse().ToArray());",
  "        if (s.Length == 0) return s;\n        if (s.All(c => !char.IsLetter(c)))\
    \ return new string(s.Reverse().ToArray());\n        return new string(s.Select(c\
    \ => char.IsLetter(c) ? (char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c))\
    \ : c).ToArray());", "        string result = \"\";\n        bool hasLetter =\
    \ false;\n        for (int i = 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i]))\
    \ {\n                hasLetter = true;\n                result += char.IsUpper(s[i])\
    \ ? char.ToLower(s[i]) : char.ToUpper(s[i]);\n            } else {\n         \
    \       result += s[i];\n            }\n        }\n        if (!hasLetter) {\n\
    \            result = new string(result.Reverse().ToArray());\n        }\n   \
    \     return result;", "        // Write your code here\n        return \"\";",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      if (s.Length == 0) {\n            return s;\n        }\n        var sb\
    \ = new StringBuilder();\n        for (int i = 0; i < s.Length; i++) {\n     \
    \       if (char.IsLetter(s[i])) {\n                sb.Append(char.IsUpper(s[i])\
    \ ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n            } else {\n        \
    \        sb.Append(s[i]);\n            }\n        }\n        return sb.ToString();",
  "        // Write your code here\n        return \"\";", "        bool hasLetter\
    \ = false;\n        for (int i = 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i]))\
    \ {\n                hasLetter = true;\n                break;\n            }\n\
    \        }\n        if (!hasLetter) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        var sb = new StringBuilder();\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (char.IsLetter(s[i])) {\n                sb.Append(char.IsUpper(s[i])\
    \ ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n            } else {\n        \
    \        sb.Append(s[i]);\n            }\n        }\n        return sb.ToString();",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Your code goes here.\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here.\n        return \"\";", "        // Your code\
    \ goes here.\n        return \"\";", "        if (s.Length == 0) return s;\n \
    \       if (s.All(c => !char.IsLetter(c))) return new string(s.Reverse().ToArray());\n\
    \        var sb = new StringBuilder();\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (char.IsLetter(s[i])) {\n                sb.Append(char.IsUpper(s[i])\
    \ ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n            } else {\n        \
    \        sb.Append(s[i]);\n            }\n        }\n        return sb.ToString();",
  "        // Write your code here\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here.\n        return \"\";", "        if (s.Length\
    \ == 0) return s;\n        var sb = new StringBuilder();\n        for (int i =\
    \ 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i])) {\n          \
    \      if (char.IsUpper(s[i])) sb.Append(char.ToLower(s[i]));\n              \
    \  else sb.Append(char.ToUpper(s[i]));\n            } else {\n               \
    \ sb.Append(s[i]);\n            }\n        }\n        return sb.ToString();",
  "        if (s.Length == 0) return s;\n        if (s.All(c => !char.IsLetter(c)))\
    \ return new string(s.Reverse().ToArray());\n        var sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i]))\
    \ {\n                sb.Append(char.IsUpper(s[i]) ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n\
    \            } else {\n                sb.Append(s[i]);\n            }\n     \
    \   }\n        return sb.ToString();", "        // Write your code here\n    \
    \    return \"\";", "        // Your code goes here.\n        return \"\";", " \
    \       // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here\n        return \"\";", "        // Write your\
    \ code here.\n        return \"\";", "        if (s.Any(char.IsLetter)) {\n  \
    \          return new string(s.Select(c => char.IsLetter(c) ? \n             \
    \   char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c) : c).ToArray());\n   \
    \     } else {\n            return new string(s.Reverse().ToArray());\n      \
    \  }", "        // Write your code here\n        return \"\";", "        // Write\
    \ your code here\n        return \"\";", "        // Write your code here\n  \
    \      return \"\";", "        var sb = new StringBuilder();\n        var hasLetter\
    \ = false;\n        for (int i = 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i]))\
    \ {\n                hasLetter = true;\n                sb.Append(char.IsUpper(s[i])\
    \ ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n            } else {\n        \
    \        sb.Append(s[i]);\n            }\n        }\n        if (!hasLetter) {\n\
    \            sb.Reverse();\n        }\n        return sb.ToString();", "     \
    \   // Write your code here\n        return \"\";", "        // Write your code\
    \ here\n        return \"\";", "        if (s.Any(char.IsLetter)) {\n        \
    \    return new string(s.Select(c => char.IsLetter(c) ? (char.IsUpper(c) ? char.ToLower(c)\
    \ : char.ToUpper(c)) : c).ToArray());\n        } else {\n            return new\
    \ string(s.Reverse().ToArray());\n        }", "        // Write your code here.\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        if (s.Length == 0) return s;\n  \
    \      var sb = new StringBuilder();\n        bool hasLetter = false;\n      \
    \  for (int i = 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i]))\
    \ {\n                hasLetter = true;\n                sb.Append(char.IsUpper(s[i])\
    \ ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n            } else {\n        \
    \        sb.Append(s[i]);\n            }\n        }\n        return hasLetter\
    \ ? sb.ToString() : new string(sb.ToString().Reverse().ToArray());", "       \
    \ // Write your code here\n        return null;", "        // Write your code\
    \ here\n        return \"\";", "        if (s.Any(char.IsLetter)) {\n        \
    \    return new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)\
    \ : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new\
    \ string(s.Reverse().ToArray());\n        }", "        // Write your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        if (s.Any(char.IsLetter)) {\n            return new string(s.Select(c =>\
    \ char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c) : c).ToArray());\n\
    \        } else {\n            return new string(s.Reverse().ToArray());\n   \
    \     }", "        // Your code here\n        return \"\";", "        // Write\
    \ your code here.\n        return \"\";", "        // Write your code here\n \
    \       return \"\";", "        var letters = s.Where(c => char.IsLetter(c)).ToArray();\n\
    \        if (letters.Length == 0) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        var sb = new StringBuilder();\n        foreach (var c in s)\
    \ {\n            if (char.IsLetter(c)) {\n                sb.Append(char.IsUpper(c)\
    \ ? char.ToLower(c) : char.ToUpper(c));\n            } else {\n              \
    \  sb.Append(c);\n            }\n        }\n        return sb.ToString();", " \
    \       if (s.All(c => !char.IsLetter(c))) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return new string(s.Select(c => char.IsLetter(c) ? (char.IsUpper(c)\
    \ ? char.ToLower(c) : char.ToUpper(c)) : c).ToArray());", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here.\n        return \"\";", " \
    \       // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", '        // Your code goes here', "      \
    \  if (s.Length == 0) return s;\n        bool hasLetter = false;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i])) {\n \
    \               hasLetter = true;\n                break;\n            }\n   \
    \     }\n        if (!hasLetter) return new string(s.Reverse().ToArray());\n \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (char.IsLetter(s[i])) {\n                if (char.IsUpper(s[i]))\
    \ sb.Append(char.ToLower(s[i]));\n                else sb.Append(char.ToUpper(s[i]));\n\
    \            } else {\n                sb.Append(s[i]);\n            }\n     \
    \   }\n        return sb.ToString();", "        // Write your code here\n    \
    \    return \"\";", "        bool hasLetter = false;\n        for (int i = 0;\
    \ i < s.Length; i++) {\n            if (char.IsLetter(s[i])) {\n             \
    \   hasLetter = true;\n                break;\n            }\n        }\n    \
    \    if (!hasLetter) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        var sb = new StringBuilder();\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (char.IsLetter(s[i])) {\n                sb.Append(char.IsUpper(s[i])\
    \ ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n            } else {\n        \
    \        sb.Append(s[i]);\n            }\n        }\n        return sb.ToString();",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here.\n      \
    \  return null;", "        // Write your code here\n        return \"\";", " \
    \       // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here\n        return \"\";", "        // TODO: Implement\
    \ your solution here\n        return \"\";", "        // Write your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        // TODO: Implement your solution here\n        return \"\";", "       \
    \ if (s.Length == 0) return \"\";\n        if (s.Length == 1) return s[0].ToString();\n\
    \        if (s.Length == 2) return s[1].ToString() + s[0].ToString();\n      \
    \  if (s.Length == 3) return s[2].ToString() + s[1].ToString() + s[0].ToString();\n\
    \        if (s.Length == 4) return s[3].ToString() + s[2].ToString() + s[1].ToString()\
    \ + s[0].ToString();\n        if (s.Length == 5) return s[4].ToString() + s[3].ToString()\
    \ + s[2].ToString() + s[1].ToString() + s[0].ToString();\n        if (s.Length\
    \ == 6) return s[5].ToString() + s[4].ToString() + s[3].ToString() + s[2].ToString()\
    \ + s[1].ToString() + s[0].ToString();\n        if (s.Length == 7) return s[6].ToString()\
    \ + s[5].ToString() + s[4].ToString() + s[3].ToString() + s[2].ToString() + s[1].ToString()\
    \ + s[0].ToString();\n        if (s.Length == 8) return s[7].ToString() + s[6].ToString()\
    \ + s[5].ToString() + s[4].ToString() + s[3].ToString() + s[2].ToString() + s[1].ToString()\
    \ + s[0].ToString();\n        if (s.Length == 9) return s[8].ToString() + s[7].ToString()\
    \ + s[6].ToString() + s[5].ToString() + s[4].ToString() + s[3].ToString() + s[2].ToString()\
    \ + s[1].ToString() + s[0].ToString();\n        if (s.Length == 10) return s[9].ToString()\
    \ + s[8].ToString() + s[7].ToString() + s[6].ToString() + s[5].ToString", "  \
    \      if (s.Any(char.IsLetter)) {\n            return new string(s.Select(c =>\
    \ char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c) : c).ToArray());\n\
    \        } else {\n            return new string(s.Reverse().ToArray());\n   \
    \     }", "        // Write your code here\n        return \"\";", "        //\
    \ Write your code here\n        return \"\";", "        // Write your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        if (s.Length == 0) return s;\n        var sb = new StringBuilder();\n \
    \       bool hasLetter = false;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            if (char.IsLetter(s[i])) {\n                hasLetter = true;\n \
    \               sb.Append(char.IsUpper(s[i]) ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n\
    \            } else {\n                sb.Append(s[i]);\n            }\n     \
    \   }\n        return hasLetter ? sb.ToString() : new string(sb.ToString().Reverse().ToArray());",
  "        // Write your code here.\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        if (s.Length == 0) return \"\";\n\
    \        var sb = new StringBuilder();\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (char.IsLetter(s[i])) {\n                if (char.IsUpper(s[i]))\
    \ sb.Append(char.ToLower(s[i]));\n                else sb.Append(char.ToUpper(s[i]));\n\
    \            } else {\n                sb.Append(s[i]);\n            }\n     \
    \   }\n        return sb.ToString();", "        if (s.Any(char.IsLetter)) {\n\
    \            return new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c)\
    \ ? char.ToLower(c) : char.ToUpper(c) : c).ToArray());\n        } else {\n   \
    \         return new string(s.Reverse().ToArray());\n        }", "        // Your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        if (s.Length == 0) return s;\n        if (s.All(c =>\
    \ !char.IsLetter(c))) return Reverse(s);\n        var sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i]))\
    \ {\n                if (char.IsUpper(s[i])) {\n                    sb.Append(char.ToLower(s[i]));\n\
    \                } else {\n                    sb.Append(char.ToUpper(s[i]));\n\
    \                }\n            } else {\n                sb.Append(s[i]);\n \
    \           }\n        }\n        return sb.ToString();", "        // Write your\
    \ code here\n        return null;", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here.\n        return \"\";", " \
    \       if (s.All(c => !char.IsLetter(c))) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return new string(s.Select(c => char.IsLetter(c) ? \n    \
    \        char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c) : c).ToArray());",
  "        // Write your code here\n        return \"\";", "        if (s.Length ==\
    \ 0) {\n            return s;\n        }\n        StringBuilder sb = new StringBuilder();\n\
    \        bool hasLetter = false;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            char c = s[i];\n            if (char.IsLetter(c)) {\n           \
    \     hasLetter = true;\n                if (char.IsUpper(c)) {\n            \
    \        sb.Append(char.ToLower(c));\n                } else {\n             \
    \       sb.Append(char.ToUpper(c));\n                }\n            } else {\n\
    \                sb.Append(c);\n            }\n        }\n        if (hasLetter)\
    \ {\n            return sb.ToString();\n        } else {\n            return new\
    \ string(sb.ToString().Reverse().ToArray());\n        }", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here.\n        return \"\";", "        // Write your\
    \ code here.\n        return \"\";", "        // Write your code here.\n     \
    \   return \"\";", "        // Write your code here\n        return \"\";", " \
    \       // Write your code here\n        return \"\";", "        if (s.Length\
    \ == 0) return s;\n        if (s.Length == 1) return s[0].ToString().ToUpper();\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (char.IsLetter(s[i])) {\n                if\
    \ (char.IsUpper(s[i])) sb.Append(char.ToLower(s[i]));\n                else sb.Append(char.ToUpper(s[i]));\n\
    \            } else {\n                sb.Append(s[i]);\n            }\n     \
    \   }\n        return sb.ToString();", "        // Write your code here\n    \
    \    return \"\";", "        if (s.Length == 0) return s;\n        var sb = new\
    \ StringBuilder();\n        bool hasLetter = false;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (char.IsLetter(s[i])) {\n               \
    \ hasLetter = true;\n                sb.Append(char.IsUpper(s[i]) ? char.ToLower(s[i])\
    \ : char.ToUpper(s[i]));\n            } else {\n                sb.Append(s[i]);\n\
    \            }\n        }\n        if (!hasLetter) {\n            return new string(sb.ToString().Reverse().ToArray());\n\
    \        }\n        return sb.ToString();", "        if (s.Any(char.IsLetter))\
    \ {\n            return new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c)\
    \ ? char.ToLower(c) : char.ToUpper(c) : c).ToArray());\n        } else {\n   \
    \         return new string(s.Reverse().ToArray());\n        }", "        // Write\
    \ your code here\n        return \"\";", "        // Write your code here\n  \
    \      return \"\";", "        // Write your code here.\n        return \"\";",
  "        // Write your code here\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        // Write your code here.\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here\n        return \"\";"]
stop_tokens:
- "\n    }\n"

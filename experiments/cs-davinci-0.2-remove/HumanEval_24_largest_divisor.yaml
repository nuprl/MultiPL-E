name: HumanEval_24_largest_divisor
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // For a given number n, find the largest number that divides n\
  \ evenly, smaller than n\n    public static long LargestDivisor(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
  \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
  \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
  \ == (7L));\n    }\n\n}\n"
completions: ["        long largestDivisor = 1;\n        for (long i = 2; i <= n /\
    \ 2; i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;", "        for (long\
    \ i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n                return\
    \ i;\n            }\n        }\n        return 1;", "        long max = 1;\n \
    \       for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n      \
    \          max = i;\n            }\n        }\n        return max;", "       \
    \ long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--) {\n \
    \           if (n % i == 0) {\n                return i;\n            }\n    \
    \    }\n        return 1;", "        long largestDivisor = 1;\n        for (long\
    \ i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        for\
    \ (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n            \
    \    return i;\n            }\n        }\n        return 1;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;", "        for (long i = n - 1; i > 0; i--) {\n            if\
    \ (n % i == 0) {\n                return i;\n            }\n        }\n      \
    \  return 1;", "        long largestDivisor = 1;\n        long sqrt = (long)Math.Sqrt(n);\n\
    \        for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n \
    \               largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;", "        long largestDivisor = 1;\n        for (long i = 2;\
    \ i < n; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ largestDivisor = 1;\n        for (long i = 2; i * i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                largestDivisor = i;\n            }\n  \
    \      }\n        return largestDivisor;", "        for (long i = n - 1; i > 0;\
    \ i--) {\n            if (n % i == 0) {\n                return i;\n         \
    \   }\n        }\n        return 1;", "        for (long i = n - 1; i > 0; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return -1;", "        for (long i = n - 1; i > 0; i--) {\n\
    \            if (n % i == 0) {\n                return i;\n            }\n   \
    \     }\n        return 1;", "        for (long i = n - 1; i > 0; i--) {\n   \
    \         if (n % i == 0) {\n                return i;\n            }\n      \
    \  }\n        return 1;", "        long max = (long)Math.Sqrt(n);\n        for\
    \ (long i = max; i > 1; i--) {\n            if (n % i == 0) {\n              \
    \  return i;\n            }\n        }\n        return 1;", "        for (long\
    \ i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n                return\
    \ i;\n            }\n        }\n        return -1;", "        long largest = 1;\n\
    \        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           largest = i;\n            }\n        }\n        return largest;",
  "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;", "     \
    \   long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i ==\
    \ 0) {\n                largestDivisor = i;\n            }\n        }\n      \
    \  return largestDivisor;", "        for (long i = n - 1; i > 0; i--) {\n    \
    \        if (n % i == 0) {\n                return i;\n            }\n       \
    \ }\n        return 1;", "        long largestDivisor = 1;\n        for (long\
    \ i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        for\
    \ (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n            \
    \    return i;\n            }\n        }\n        return 0;", "        long i\
    \ = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n        \
    \        n /= i;\n            } else {\n                i++;\n            }\n\
    \        }\n        return n;", "        long largestDivisor = 0;\n        for\
    \ (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n               \
    \ largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                largestDivisor = i;\n           \
    \ }\n        }\n        return largestDivisor;", "        long max = 1;\n    \
    \    for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n    \
    \            max = i;\n            }\n        }\n        return max;", "     \
    \   long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n       \
    \     if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;", "        long i = 2;\n        while\
    \ (i * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n   \
    \         } else {\n                i++;\n            }\n        }\n        return\
    \ n;", "        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;", "        long i =\
    \ n - 1;\n        while (n % i != 0) {\n            i--;\n        }\n        return\
    \ i;", "        long largestDivisor = 1;\n        for (long i = 2; i <= n; i++)\
    \ {\n            if (n % i == 0) {\n                largestDivisor = i;\n    \
    \        }\n        }\n        return largestDivisor;", "        long limit =\
    \ (long)Math.Sqrt(n);\n        for (long i = limit; i > 1; i--) {\n          \
    \  if (n % i == 0) {\n                return i;\n            }\n        }\n  \
    \      return 1;", "        long largestDivisor = 1;\n        for (long i = 2;\
    \ i <= n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                largestDivisor = i;\n            }\n       \
    \ }\n        return largestDivisor;", "        for (long i = n - 1; i > 0; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;", "        long largestDivisor = 1;\n        for\
    \ (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n           \
    \     largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        long i = 2;\n        while (i < n) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n            i++;\n        }\n      \
    \  return 1;", "        long i = 2;\n        while (n % i != 0) {\n          \
    \  i++;\n        }\n        return i;", "        long largestDivisor = 1;\n  \
    \      for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n  \
    \              largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;", "     \
    \   long largest = 0;\n        for (long i = 1; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                largest = i;\n            }\n        }\n   \
    \     return largest;", "        for (long i = n - 1; i > 0; i--) {\n        \
    \    if (n % i == 0) {\n                return i;\n            }\n        }\n\
    \        return 1;", "        long i = 2;\n        while (i * i <= n) {\n    \
    \        if (n % i == 0) {\n                n /= i;\n            } else {\n  \
    \              i++;\n            }\n        }\n        return n;", "        long\
    \ i = 2;\n        while (i < n) {\n            if (n % i == 0) {\n           \
    \     return n / i;\n            }\n            i++;\n        }\n        return\
    \ 1;", "        long max = n / 2;\n        for (long i = max; i > 1; i--) {\n\
    \            if (n % i == 0) {\n                return i;\n            }\n   \
    \     }\n        return 1;", "        for (long i = n - 1; i > 0; i--) {\n   \
    \         if (n % i == 0) {\n                return i;\n            }\n      \
    \  }\n        return 1;", "        long largestDivisor = 1;\n        for (long\
    \ i = 2; i < n; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n            if\
    \ (n % i == 0) {\n                largestDivisor = i;\n            }\n       \
    \ }\n        return largestDivisor;", "        long largestDivisor = 1;\n    \
    \    for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n        \
    \        largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        long largestDivisor = 1;\n        long sqrt = (long)Math.Sqrt(n);\n   \
    \     for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n    \
    \            largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 0;", "     \
    \   long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i ==\
    \ 0) {\n                largestDivisor = i;\n            }\n        }\n      \
    \  return largestDivisor;", "        for (long i = n - 1; i > 0; i--) {\n    \
    \        if (n % i == 0) {\n                return i;\n            }\n       \
    \ }\n        return 1;", "        long max = (long)Math.Sqrt(n);\n        for\
    \ (long i = max; i > 1; i--) {\n            if (n % i == 0) {\n              \
    \  return i;\n            }\n        }\n        return 1;", "        long max\
    \ = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--) {\n          \
    \  if (n % i == 0) {\n                return i;\n            }\n        }\n  \
    \      return 1;", "        for (long i = n - 1; i > 0; i--) {\n            if\
    \ (n % i == 0) {\n                return i;\n            }\n        }\n      \
    \  return 1;", "        long largestDivisor = 1;\n        for (long i = 2; i <=\
    \ n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        for\
    \ (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n            \
    \    return i;\n            }\n        }\n        return 1;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i ==\
    \ 0) {\n                largestDivisor = i;\n            }\n        }\n      \
    \  return largestDivisor;", "        long largestDivisor = 1;\n        for (long\
    \ i = 2; i < n; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ i = n - 1;\n        while (i > 0) {\n            if (n % i == 0) {\n       \
    \         return i;\n            }\n            i--;\n        }\n        return\
    \ 1;", "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0)\
    \ {\n                return i;\n            }\n        }\n        return 0;",
  "        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;", "        long largestDivisor = 1;\n        for\
    \ (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n           \
    \     largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        long max = 0;\n        for (long i = 1; i < n; i++) {\n            if (n\
    \ % i == 0) {\n                max = i;\n            }\n        }\n        return\
    \ max;", "        long largestDivisor = 1;\n        for (long i = 2; i <= n /\
    \ 2; i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;", "        for (long\
    \ i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n                return\
    \ i;\n            }\n        }\n        return 0;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;", "        long largestDivisor = 1;\n        for (long i = 2;\
    \ i <= n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ largest = 0;\n        for (long i = 1; i < n; i++) {\n            if (n % i\
    \ == 0) {\n                largest = i;\n            }\n        }\n        return\
    \ largest;", "        for (long i = n - 1; i > 0; i--) {\n            if (n %\
    \ i == 0) {\n                return i;\n            }\n        }\n        return\
    \ 1;", "        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;", "        long largest\
    \ = 1;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largest = i;\n            }\n        }\n        return largest;",
  "        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n    \
    \        if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;", "        for (long i = n - 1; i >\
    \ 0; i--) {\n            if (n % i == 0) {\n                return i;\n      \
    \      }\n        }\n        return 1;", "        long largestDivisor = 1;\n \
    \       for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0)\
    \ {\n                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;", "        for (long i = n - 1; i > 0; i--) {\n            if\
    \ (n % i == 0) {\n                return i;\n            }\n        }\n      \
    \  return 1;", "        long max = (long)Math.Sqrt(n);\n        for (long i =\
    \ max; i > 1; i--) {\n            if (n % i == 0) {\n                return i;\n\
    \            }\n        }\n        return 1;", "        for (long i = n - 1; i\
    \ > 0; i--) {\n            if (n % i == 0) {\n                return i;\n    \
    \        }\n        }\n        return 1;", "        for (long i = n - 1; i > 0;\
    \ i--) {\n            if (n % i == 0) {\n                return i;\n         \
    \   }\n        }\n        return 1;", "        for (long i = n - 1; i > 0; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;", "        long largestDivisor = 1;\n        for\
    \ (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        for\
    \ (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) return i;\n    \
    \    }\n        return 0;", "        long max = (long)Math.Sqrt(n);\n        for\
    \ (long i = max; i > 1; i--) {\n            if (n % i == 0) {\n              \
    \  return i;\n            }\n        }\n        return 1;", "        long i =\
    \ 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n          \
    \      n /= i;\n            } else {\n                i++;\n            }\n  \
    \      }\n        return n;", "        long largestDivisor = 1;\n        for (long\
    \ i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n         \
    \   if (n % i == 0) {\n                largestDivisor = i;\n            }\n  \
    \      }\n        return largestDivisor;", "        long i = n - 1;\n        while\
    \ (i > 0) {\n            if (n % i == 0) return i;\n            i--;\n       \
    \ }\n        return 1;", "        long max = (long)Math.Sqrt(n);\n        for\
    \ (long i = max; i > 1; i--) {\n            if (n % i == 0) {\n              \
    \  return i;\n            }\n        }\n        return 1;", "        for (long\
    \ i = n - 1; i > 0; i--) {\n            if (n % i == 0) return i;\n        }\n\
    \        return 1;", "        long largest = 1;\n        for (long i = 2; i <=\
    \ Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n                largest\
    \ = i;\n            }\n        }\n        return largest;", "        long sqrt\
    \ = (long)Math.Sqrt(n);\n        for (long i = sqrt; i > 1; i--) {\n         \
    \   if (n % i == 0) {\n                return i;\n            }\n        }\n \
    \       return 1;", "        long largestDivisor = 1;\n        for (long i = 2;\
    \ i <= n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ largest = 1;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n\
    \ % i == 0) {\n                largest = i;\n            }\n        }\n      \
    \  return largest;", "        for (long i = n - 1; i > 0; i--) {\n           \
    \ if (n % i == 0) {\n                return i;\n            }\n        }\n   \
    \     return 1;", "        long largestDivisor = 1;\n        for (long i = 2;\
    \ i <= n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        for\
    \ (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n            \
    \    return i;\n            }\n        }\n        return 1;", "        long max\
    \ = 1;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n            }\n        }\n        return max;", " \
    \       long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n   \
    \         if (n % i == 0) {\n                largestDivisor = i;\n           \
    \ }\n        }\n        return largestDivisor;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i ==\
    \ 0) {\n                largestDivisor = i;\n            }\n        }\n      \
    \  return largestDivisor;", "        long max = 0;\n        for (long i = 1; i\
    \ < n; i++) {\n            if (n % i == 0) {\n                max = i;\n     \
    \       }\n        }\n        return max;", "        long max = (long)Math.Sqrt(n);\n\
    \        for (long i = max; i > 1; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;", "     \
    \   for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) return i;\n\
    \        }\n        return 1;", "        long d = n - 1;\n        while (n % d\
    \ != 0) {\n            d--;\n        }\n        return d;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i ==\
    \ 0) {\n                largestDivisor = i;\n            }\n        }\n      \
    \  return largestDivisor;", "        for (long i = n - 1; i > 0; i--) {\n    \
    \        if (n % i == 0) {\n                return i;\n            }\n       \
    \ }\n        return 1;", "        long max = (long)Math.Sqrt(n);\n        for\
    \ (long i = max; i > 1; i--) {\n            if (n % i == 0) {\n              \
    \  return i;\n            }\n        }\n        return 1;", "        for (long\
    \ i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n                return\
    \ i;\n            }\n        }\n        return 0;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i ==\
    \ 0) {\n                largestDivisor = i;\n            }\n        }\n      \
    \  return largestDivisor;", "        long largestDivisor = 1;\n        for (long\
    \ i = 2; i < n; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n      \
    \          n /= i;\n            } else {\n                i++;\n            }\n\
    \        }\n        return n;", "        long i = 2;\n        while (i * i <=\
    \ n) {\n            if (n % i == 0) {\n                n /= i;\n            }\
    \ else {\n                i++;\n            }\n        }\n        return n;",
  "        long i = n - 1;\n        while (n % i != 0) {\n            i--;\n     \
    \   }\n        return i;", "        long largestDivisor = 1;\n        for (long\
    \ i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n         \
    \   if (n % i == 0) {\n                largestDivisor = i;\n            }\n  \
    \      }\n        return largestDivisor;", "        long largestDivisor = 1;\n\
    \        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;", "     \
    \   long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;", "        for (long i = n - 1; i > 0; i--) {\n            if\
    \ (n % i == 0) {\n                return i;\n            }\n        }\n      \
    \  return 0;", "        long largestDivisor = 1;\n        for (long i = 2; i <=\
    \ n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ i = n / 2;\n        while (i > 1) {\n            if (n % i == 0) {\n       \
    \         return i;\n            }\n            i--;\n        }\n        return\
    \ 1;", "        long largestDivisor = 1;\n        for (long i = 2; i < n; i++)\
    \ {\n            if (n % i == 0) {\n                largestDivisor = i;\n    \
    \        }\n        }\n        return largestDivisor;", "        long max = (long)Math.Sqrt(n);\n\
    \        for (long i = max; i > 1; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;", "     \
    \   for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n      \
    \          return i;\n            }\n        }\n        return 1;", "        long\
    \ largestDivisor = 1;\n        for (long i = 2; i * i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                largestDivisor = i;\n            }\n  \
    \      }\n        return largestDivisor;", "        for (long i = n - 1; i > 0;\
    \ i--) {\n            if (n % i == 0) return i;\n        }\n        return 1;",
  "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;", "     \
    \   long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;", "        for (long i = n - 1;\
    \ i > 0; i--) {\n            if (n % i == 0) {\n                return i;\n  \
    \          }\n        }\n        return 1;", "        long i = 2;\n        while\
    \ (i * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n   \
    \         } else {\n                i++;\n            }\n        }\n        return\
    \ n;", "        long max = 1;\n        for (long i = 2; i <= n / 2; i++) {\n \
    \           if (n % i == 0) {\n                max = i;\n            }\n     \
    \   }\n        return max;", "        long max = 0;\n        for (long i = 1;\
    \ i < n; i++) {\n            if (n % i == 0) {\n                max = i;\n   \
    \         }\n        }\n        return max;", "        for (long i = n - 1; i\
    \ > 0; i--) {\n            if (n % i == 0) {\n                return i;\n    \
    \        }\n        }\n        return 1;", "        for (long i = n - 1; i > 0;\
    \ i--) {\n            if (n % i == 0) {\n                return i;\n         \
    \   }\n        }\n        return 1;", "        long largestDivisor = 1;\n    \
    \    for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n         \
    \       largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n    \
    \        if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;", "        long largestDivisor = 1;\n\
    \        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;", "     \
    \   long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n       \
    \     if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;", "        long largest = 1;\n    \
    \    for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n         \
    \       largest = i;\n            }\n        }\n        return largest;", "  \
    \      long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                largestDivisor = i;\n           \
    \ }\n        }\n        return largestDivisor;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i * i <= n; i++) {\n            if (n % i ==\
    \ 0) {\n                largestDivisor = i;\n            }\n        }\n      \
    \  return largestDivisor;", "        long largestDivisor = 1;\n        for (long\
    \ i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        for\
    \ (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n            \
    \    return i;\n            }\n        }\n        return 1;", "        long i\
    \ = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n        \
    \        n /= i;\n            } else {\n                i++;\n            }\n\
    \        }\n        return n;", "        long largestDivisor = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n               \
    \ largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        long i = n - 1;\n        while (i > 0) {\n            if (n % i == 0) {\n\
    \                return i;\n            }\n            i--;\n        }\n     \
    \   return 1;", "        long largest = 1;\n        for (long i = 2; i <= n /\
    \ 2; i++) {\n            if (n % i == 0) {\n                largest = i;\n   \
    \         }\n        }\n        return largest;", "        for (long i = n - 1;\
    \ i > 0; i--) {\n            if (n % i == 0) {\n                return i;\n  \
    \          }\n        }\n        return 1;", "        long largestDivisor = 1;\n\
    \        for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;", "        for (long i = n - 1; i > 0; i--) {\n            if\
    \ (n % i == 0) {\n                return i;\n            }\n        }\n      \
    \  return -1;", "        long largestDivisor = 1;\n        for (long i = 2; i\
    \ <= n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ max = 0;\n        for (long i = 1; i < n; i++) {\n            if (n % i == 0)\
    \ {\n                max = i;\n            }\n        }\n        return max;",
  "        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;", "        long max = (long)Math.Sqrt(n);\n\
    \        for (long i = max; i > 1; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;", "     \
    \   long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n\
    \                n /= i;\n            } else {\n                i++;\n       \
    \     }\n        }\n        return n;", "        long largestDivisor = 1;\n  \
    \      for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n  \
    \              largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;", "     \
    \   long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;", "        for (long i = n - 1;\
    \ i > 0; i--) {\n            if (n % i == 0) {\n                return i;\n  \
    \          }\n        }\n        return 1;", "        for (long i = n - 1; i >\
    \ 0; i--) {\n            if (n % i == 0) {\n                return i;\n      \
    \      }\n        }\n        return 0;", "        long i = 2;\n        while (i\
    \ * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n      \
    \      } else {\n                i++;\n            }\n        }\n        return\
    \ n;", "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0)\
    \ {\n                return i;\n            }\n        }\n        return 0;",
  "        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n       \
    \         return i;\n            }\n        }\n        return 1;", "        for\
    \ (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n            \
    \    return i;\n            }\n        }\n        return 1;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i ==\
    \ 0) {\n                largestDivisor = i;\n            }\n        }\n      \
    \  return largestDivisor;", "        for (long i = n - 1; i > 0; i--) {\n    \
    \        if (n % i == 0) {\n                return i;\n            }\n       \
    \ }\n        return 1;", "        long max = n / 2;\n        for (long i = max;\
    \ i > 1; i--) {\n            if (n % i == 0) {\n                return i;\n  \
    \          }\n        }\n        return 1;", "        long i = 2;\n        while\
    \ (i * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n   \
    \         } else {\n                i++;\n            }\n        }\n        return\
    \ n;", "        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;", "        for (long\
    \ i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n                return\
    \ i;\n            }\n        }\n        return 1;", "        for (long i = n -\
    \ 1; i > 0; i--) {\n            if (n % i == 0) {\n                return i;\n\
    \            }\n        }\n        return 1;", "        long largestDivisor =\
    \ 1;\n        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;", "        long largestDivisor = 1;\n        for (long i = 2;\
    \ i <= n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ largest = 1;\n        for (long i = 2; i * i <= n; i++) {\n            if (n\
    \ % i == 0) {\n                largest = i;\n            }\n        }\n      \
    \  return largest;", "        long largestDivisor = 1;\n        for (long i =\
    \ 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                largestDivisor = i;\n            }\n       \
    \ }\n        return largestDivisor;", "        long largestDivisor = 1;\n    \
    \    for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n    \
    \            largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;", "     \
    \   long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n       \
    \     if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;", "        for (long i = n - 1; i >\
    \ 0; i--) {\n            if (n % i == 0) {\n                return i;\n      \
    \      }\n        }\n        return 1;", "        long largestDivisor = 1;\n \
    \       for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n \
    \               largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;", "        for (long i = n - 1; i > 0; i--) {\n            if\
    \ (n % i == 0) {\n                return i;\n            }\n        }\n      \
    \  return 1;", "        long largestDivisor = 1;\n        for (long i = 2; i <=\
    \ n / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n         \
    \   if (n % i == 0) {\n                largestDivisor = i;\n            }\n  \
    \      }\n        return largestDivisor;", "        long i = 2;\n        while\
    \ (i * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n   \
    \         } else {\n                i++;\n            }\n        }\n        return\
    \ n;", "        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i ==\
    \ 0) {\n                largestDivisor = i;\n            }\n        }\n      \
    \  return largestDivisor;", "        for (long i = n - 1; i > 0; i--) {\n    \
    \        if (n % i == 0) {\n                return i;\n            }\n       \
    \ }\n        return 1;", "        long largestDivisor = 1;\n        for (long\
    \ i = 2; i < n; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        for\
    \ (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n            \
    \    return i;\n            }\n        }\n        return 1;", "        long i\
    \ = n - 1;\n        while (i > 0) {\n            if (n % i == 0) {\n         \
    \       return i;\n            }\n            i--;\n        }\n        return\
    \ 1;", "        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;", "        for (long\
    \ i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n                return\
    \ i;\n            }\n        }\n        return 1;", "        long largest = 1;\n\
    \        for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n\
    \                largest = i;\n            }\n        }\n        return largest;",
  "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_88_sort_array
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given an array of non-negative integers, return a copy of the\
  \ given array after sorting,\n    // you will sort the given array in ascending\
  \ order if the sum( first index value, last index value) is odd,\n    // or sort\
  \ it in descending order if the sum( first index value, last index value) is even.\n\
  \    // Note:\n    // * don't change the given array.\n    // Examples:\n    public\
  \ static List<long> SortArray(List<long> array) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortArray((new\
  \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(SortArray((new List<long>(new\
  \ long[]{(long)5L}))).Equals((new List<long>(new long[]{(long)5L}))));\n    Debug.Assert(SortArray((new\
  \ List<long>(new long[]{(long)2L, (long)4L, (long)3L, (long)0L, (long)1L, (long)5L}))).Equals((new\
  \ List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))));\n\
  \    Debug.Assert(SortArray((new List<long>(new long[]{(long)2L, (long)4L, (long)3L,\
  \ (long)0L, (long)1L, (long)5L, (long)6L}))).Equals((new List<long>(new long[]{(long)6L,\
  \ (long)5L, (long)4L, (long)3L, (long)2L, (long)1L, (long)0L}))));\n    Debug.Assert(SortArray((new\
  \ List<long>(new long[]{(long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
  \ (long)2L}))));\n    Debug.Assert(SortArray((new List<long>(new long[]{(long)15L,\
  \ (long)42L, (long)87L, (long)32L, (long)11L, (long)0L}))).Equals((new List<long>(new\
  \ long[]{(long)0L, (long)11L, (long)15L, (long)32L, (long)42L, (long)87L}))));\n\
  \    Debug.Assert(SortArray((new List<long>(new long[]{(long)21L, (long)14L, (long)23L,\
  \ (long)11L}))).Equals((new List<long>(new long[]{(long)23L, (long)21L, (long)14L,\
  \ (long)11L}))));\n    }\n\n}\n"
completions: ["        // Write your code here\n        return null;", "        //\
    \ Write your code here\n        return null;", "        // Write your code here\n\
    \        return array;", "        // Write your code here\n        return array;",
  "        // Write your code here.\n        return array;", "        // Write your\
    \ code here.\n        var sum = array[0] + array[array.Count - 1];\n        var\
    \ isOdd = sum % 2 == 1;\n        var sorted = array.OrderBy(x => x).ToList();\n\
    \        if (isOdd) {\n            sorted.Reverse();\n        }\n        return\
    \ sorted;", "        long sum = array[0] + array[array.Count - 1];\n        if\
    \ (sum % 2 == 0) {\n            array.Sort((a, b) => (int)(b - a));\n        }\
    \ else {\n            array.Sort((a, b) => (int)(a - b));\n        }\n       \
    \ return array;", "        // Write your code here\n        return array;", " \
    \       long sum = array[0] + array[array.Count - 1];\n        if (sum % 2 ==\
    \ 0) {\n            array.Sort((a, b) => (int)(b - a));\n        } else {\n  \
    \          array.Sort((a, b) => (int)(a - b));\n        }\n        return array;",
  "        // Write your code here\n        return array;", '        return array;',
  "        var sum = array[0] + array[array.Count - 1];\n        var sorted = array.OrderBy(x\
    \ => x).ToList();\n        if (sum % 2 == 0) {\n            sorted.Reverse();\n\
    \        }\n        return sorted;", "        long sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => (int)(b\
    \ - a));\n        } else {\n            array.Sort((a, b) => (int)(a - b));\n\
    \        }\n        return array;", "        // Write your code here\n       \
    \ return array;", "        var sum = array[0] + array[array.Count - 1];\n    \
    \    if (sum % 2 == 0) {\n            array.Sort((x, y) => y.CompareTo(x));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        List<long> result = new List<long>();\n        long sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \            result = array;\n        } else {\n            array.Sort();\n  \
    \          result = array;\n        }\n        return result;", "        // Write\
    \ your code here\n        return array;", "        // Write your code here\n \
    \       return array;", "        var sum = array[0] + array[array.Count - 1];\n\
    \        var result = new List<long>(array);\n        if (sum % 2 == 0) {\n  \
    \          result.Sort((a, b) => b.CompareTo(a));\n        } else {\n        \
    \    result.Sort();\n        }\n        return result;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        var isOdd = sum % 2 == 1;\n        var sorted\
    \ = array.OrderBy(x => x).ToList();\n        if (isOdd) {\n            sorted.Reverse();\n\
    \        }\n        return sorted;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        var sorted = array.OrderBy(x => x).ToList();\n        if (sum\
    \ % 2 == 0) {\n            sorted.Reverse();\n        }\n        return sorted;",
  "        // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return array;", "        List<long> result = new List<long>();\n\
    \        if (array.Count == 0) {\n            return result;\n        }\n    \
    \    if (array.Count == 1) {\n            result.Add(array[0]);\n            return\
    \ result;\n        }\n        if (array.Count == 2) {\n            if ((array[0]\
    \ + array[1]) % 2 == 0) {\n                result.Add(array[1]);\n           \
    \     result.Add(array[0]);\n            } else {\n                result.Add(array[0]);\n\
    \                result.Add(array[1]);\n            }\n            return result;\n\
    \        }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n    \
    \        result.Add(array[array.Count - 1]);\n            result.AddRange(SortArray(array.GetRange(1,\
    \ array.Count - 2)));\n            result.Add(array[0]);\n        } else {\n \
    \           result.Add(array[0]);\n            result.AddRange(SortArray(array.GetRange(1,\
    \ array.Count - 2)));\n            result.Add(array[array.Count - 1]);\n     \
    \   }\n        return result;", "        // Write your code here\n        return\
    \ array;", "        // Write your code here\n        return array;", "       \
    \ var result = new List<long>(array);\n        if (array.Count == 0) return result;\n\
    \        var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 ==\
    \ 0) {\n            result.Sort((a, b) => b.CompareTo(a));\n        } else {\n\
    \            result.Sort((a, b) => a.CompareTo(b));\n        }\n        return\
    \ result;", "        // Write your code here.\n        return null;", "      \
    \  // Write your code here\n        return array;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => b.CompareTo(a));\n        } else {\n            array.Sort();\n      \
    \  }\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        var sorted = array.OrderBy(x => x).ToList();\n        if (sum\
    \ % 2 == 0) {\n            sorted.Reverse();\n        }\n        return sorted;",
  "        // Write your code here.\n        return array;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => (int)(b - a));\n        } else {\n            array.Sort((a, b) => (int)(a\
    \ - b));\n        }\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        var sorted = array.OrderBy(x => x).ToList();\n        if (sum\
    \ % 2 == 0) {\n            sorted.Reverse();\n        }\n        return sorted;",
  "        if (array.Count == 0) {\n            return array;\n        }\n       \
    \ long sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0) {\n\
    \            array.Sort((a, b) => b.CompareTo(a));\n        } else {\n       \
    \     array.Sort();\n        }\n        return array;", "        // Write your\
    \ code here.\n        var result = new List<long>();\n        var odd = new List<long>();\n\
    \        var even = new List<long>();\n        for (int i = 0; i < array.Count;\
    \ i++) {\n            if (array[i] % 2 == 0) {\n                even.Add(array[i]);\n\
    \            } else {\n                odd.Add(array[i]);\n            }\n   \
    \     }\n        odd.Sort();\n        even.Sort();\n        even.Reverse();\n\
    \        if (array[0] % 2 == 0) {\n            result.AddRange(even);\n      \
    \      result.AddRange(odd);\n        } else {\n            result.AddRange(odd);\n\
    \            result.AddRange(even);\n        }\n        return result;", "   \
    \     var sum = array[0] + array[array.Count - 1];\n        var sorted = array.OrderBy(x\
    \ => x).ToList();\n        if (sum % 2 == 0) {\n            sorted.Reverse();\n\
    \        }\n        return sorted;", "        long sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => (int)(b\
    \ - a));\n        } else {\n            array.Sort((a, b) => (int)(a - b));\n\
    \        }\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        var isOdd = sum % 2 == 1;\n        var result = new List<long>(array);\n\
    \        result.Sort(isOdd ? (IComparer<long>)new OddComparer() : new EvenComparer());\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     for (int i = 0; i < array.Count; i++) {\n            result.Add(array[i]);\n\
    \        }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n    \
    \        result.Sort((a, b) => (int)(b - a));\n        } else {\n            result.Sort((a,\
    \ b) => (int)(a - b));\n        }\n        return result;", "        var sum =\
    \ array[0] + array[array.Count - 1];\n        if (sum % 2 == 0) {\n          \
    \  array.Sort((a, b) => b.CompareTo(a));\n        } else {\n            array.Sort();\n\
    \        }\n        return array;", "        // Write your code here\n       \
    \ return array;", "        // Write your code here\n        return array;", " \
    \       long sum = array[0] + array[array.Count - 1];\n        if (sum % 2 ==\
    \ 0) {\n            array.Sort((a, b) => (int)(b - a));\n        } else {\n  \
    \          array.Sort((a, b) => (int)(a - b));\n        }\n        return array;",
  "        var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0)\
    \ {\n            array.Sort((a, b) => (int)(b - a));\n        } else {\n     \
    \       array.Sort((a, b) => (int)(a - b));\n        }\n        return array;",
  "        // Write your code here\n        return null;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => b.CompareTo(a));\n        } else {\n            array.Sort();\n      \
    \  }\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        var isOdd = sum % 2 == 1;\n        var sorted = array.OrderBy(x\
    \ => x).ToList();\n        if (isOdd) {\n            sorted.Reverse();\n     \
    \   }\n        return sorted;", "        long sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Write your code here.\n        return array;", "        var result =\
    \ new List<long>(array);\n        if (array.Count == 0) {\n            return\
    \ result;\n        }\n        if (array.Count == 1) {\n            return result;\n\
    \        }\n        if (array.Count == 2) {\n            if (array[0] > array[1])\
    \ {\n                var temp = array[0];\n                array[0] = array[1];\n\
    \                array[1] = temp;\n            }\n            return result;\n\
    \        }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n    \
    \        result.Sort();\n            result.Reverse();\n        } else {\n   \
    \         result.Sort();\n        }\n        return result;", "        // Write\
    \ your code here\n        return null;", "        // Write your code here\n  \
    \      return array;", "        // Write your code here\n        return array;",
  "        var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0)\
    \ {\n            array.Sort((x, y) => (int)(y - x));\n        } else {\n     \
    \       array.Sort((x, y) => (int)(x - y));\n        }\n        return array;",
  "        // Write your code here\n        return array;", "        // Write your\
    \ code here\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        var result = new List<long>(array);\n        if (array.Count == 0) return\
    \ result;\n        if (array.Count == 1) return result;\n        var sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            result.Sort((a,\
    \ b) => b.CompareTo(a));\n        } else {\n            result.Sort((a, b) =>\
    \ a.CompareTo(b));\n        }\n        return result;", "        // Write your\
    \ code here\n        return array;", "        // Write your code here\n      \
    \  return array;", "        long sum = array[0] + array[array.Count - 1];\n  \
    \      if (sum % 2 == 0) {\n            array.Sort((a, b) => (int)(b - a));\n\
    \        } else {\n            array.Sort((a, b) => (int)(a - b));\n        }\n\
    \        return array;", "        // Write your code here\n        return array;",
  "        var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0)\
    \ {\n            array.Sort((a, b) => b.CompareTo(a));\n        } else {\n   \
    \         array.Sort();\n        }\n        return array;", "        // Write\
    \ your code here.\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => (int)(b\
    \ - a));\n        } else {\n            array.Sort((a, b) => (int)(a - b));\n\
    \        }\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        var result = new List<long>(array);\n        if (sum % 2 == 0)\
    \ {\n            result.Sort((a, b) => b.CompareTo(a));\n        } else {\n  \
    \          result.Sort();\n        }\n        return result;", "        // Write\
    \ your code here\n        return array;", "        // Write your code here\n \
    \       return array;", "        // Write your code here\n        return array;",
  "        var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0)\
    \ {\n            array.Sort((a, b) => b.CompareTo(a));\n        } else {\n   \
    \         array.Sort();\n        }\n        return array;", "        // Write\
    \ your code here\n        return array;", "        // Write your code here\n \
    \       return null;", "        var sum = array[0] + array[array.Count - 1];\n\
    \        var sorted = array.OrderBy(x => x).ToList();\n        if (sum % 2 ==\
    \ 0) {\n            sorted.Reverse();\n        }\n        return sorted;", " \
    \       // Write your code here\n        return array;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => b.CompareTo(a));\n        } else {\n            array.Sort();\n      \
    \  }\n        return array;", "        var result = new List<long>(array);\n \
    \       if (array.Count == 0) return result;\n        if (array.Count == 1) return\
    \ result;\n        if (array.Count == 2) {\n            if ((array[0] + array[1])\
    \ % 2 == 0) {\n                result[0] = array[1];\n                result[1]\
    \ = array[0];\n            }\n            return result;\n        }\n        var\
    \ first = array[0];\n        var last = array[array.Count - 1];\n        var sum\
    \ = first + last;\n        var isEven = sum % 2 == 0;\n        var isOdd = sum\
    \ % 2 == 1;\n        if (isEven) {\n            result.Sort((a, b) => b.CompareTo(a));\n\
    \        }\n        if (isOdd) {\n            result.Sort((a, b) => a.CompareTo(b));\n\
    \        }\n        return result;", "        // Write your code here\n      \
    \  return array;", "        var sum = array[0] + array[array.Count - 1];\n   \
    \     if (sum % 2 == 0) {\n            array.Sort((x, y) => (int)(y - x));\n \
    \       } else {\n            array.Sort((x, y) => (int)(x - y));\n        }\n\
    \        return array;", "        // Write your code here\n        return array;",
  "        var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0)\
    \ {\n            array.Sort((a, b) => b.CompareTo(a));\n        } else {\n   \
    \         array.Sort();\n        }\n        return array;", "        // Write\
    \ your code here\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        var sorted = array.OrderBy(x => x).ToList();\n        if (sum\
    \ % 2 == 0) {\n            sorted.Reverse();\n        }\n        return sorted;",
  "        var result = new List<long>(array);\n        if (array.Count == 0) {\n\
    \            return result;\n        }\n        var first = array[0];\n      \
    \  var last = array[array.Count - 1];\n        var sum = first + last;\n     \
    \   if (sum % 2 == 0) {\n            result.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            result.Sort((a, b) => a.CompareTo(b));\n      \
    \  }\n        return result;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0)\
    \ {\n            array.Sort((a, b) => b.CompareTo(a));\n        } else {\n   \
    \         array.Sort();\n        }\n        return array;", "        // Write\
    \ your code here\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        var sorted = array.OrderBy(x => x).ToList();\n        if (sum\
    \ % 2 == 0) {\n            sorted.Reverse();\n        }\n        return sorted;",
  "        // Write your code here\n        return array;", "        // Write your\
    \ code here\n        var sum = array[0] + array[array.Count - 1];\n        if\
    \ (sum % 2 == 0) {\n            array.Sort((a, b) => (int)(b - a));\n        }\
    \ else {\n            array.Sort((a, b) => (int)(a - b));\n        }\n       \
    \ return array;", "        // Write your code here\n        return null;", " \
    \       var result = new List<long>(array);\n        if (array.Count == 0) {\n\
    \            return result;\n        }\n        var first = array[0];\n      \
    \  var last = array[array.Count - 1];\n        if ((first + last) % 2 == 0) {\n\
    \            result.Sort((a, b) => b.CompareTo(a));\n        } else {\n      \
    \      result.Sort();\n        }\n        return result;", "        long sum =\
    \ array[0] + array[array.Count - 1];\n        if (sum % 2 == 0) {\n          \
    \  array.Sort((a, b) => (int)(b - a));\n        } else {\n            array.Sort((a,\
    \ b) => (int)(a - b));\n        }\n        return array;", "        var sum =\
    \ array[0] + array[array.Count - 1];\n        if (sum % 2 == 0) {\n          \
    \  array.Sort((a, b) => (int)(b - a));\n        } else {\n            array.Sort((a,\
    \ b) => (int)(a - b));\n        }\n        return array;", "        // Write your\
    \ code here\n        return array;", "        // Write your code here.\n     \
    \   return array;", "        var sum = array[0] + array[array.Count - 1];\n  \
    \      var isOdd = sum % 2 == 1;\n        var result = new List<long>(array);\n\
    \        result.Sort();\n        if (!isOdd) {\n            result.Reverse();\n\
    \        }\n        return result;", "        long sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => -1 * a.CompareTo(b));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return array;", "        if (array == null || array.Count\
    \ == 0) {\n            return array;\n        }\n        var sum = array[0] +\
    \ array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((x,\
    \ y) => (int)(y - x));\n        } else {\n            array.Sort((x, y) => (int)(x\
    \ - y));\n        }\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => (int)(b\
    \ - a));\n        } else {\n            array.Sort((a, b) => (int)(a - b));\n\
    \        }\n        return array;", "        // Write your code here.\n      \
    \  return array;", "        // Write your code here.\n        return array;",
  "        var sum = array[0] + array[array.Count - 1];\n        var sorted = array.OrderBy(x\
    \ => x).ToList();\n        if (sum % 2 == 0) {\n            sorted.Reverse();\n\
    \        }\n        return sorted;", "        // Write your code here\n      \
    \  return array;", "        // Write your code here.\n        return array;",
  "        // Write your code here\n        return array;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        var isOdd = sum % 2 == 1;\n        var sorted\
    \ = array.OrderBy(x => x).ToList();\n        if (isOdd) {\n            sorted.Reverse();\n\
    \        }\n        return sorted;", "        // Write your code here\n      \
    \  return array;", "        // Write your code here\n        return array;", " \
    \       // Write your code here\n        return array;", "        // Write your\
    \ code here\n        return null;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Write your code here.\n        return array;", "        if (array.Count\
    \ == 0) return array;\n        var sum = array[0] + array[array.Count - 1];\n\
    \        if (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Write your code here\n        return array;", "        // Write your\
    \ code here\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => (int)(b\
    \ - a));\n        } else {\n            array.Sort((a, b) => (int)(a - b));\n\
    \        }\n        return array;", "        // Write your code here\n       \
    \ return array;", "        // Write your code here\n        return array;", " \
    \       var sum = array[0] + array[array.Count - 1];\n        var sorted = array.OrderBy(x\
    \ => x).ToList();\n        if (sum % 2 == 0) {\n            sorted.Reverse();\n\
    \        }\n        return sorted;", "        // Write your code here.\n     \
    \   return array;", "        // Write your code here\n        return array;",
  "        var sum = array[0] + array[array.Count - 1];\n        var isOdd = sum %\
    \ 2 == 1;\n        var sorted = array.OrderBy(x => x).ToList();\n        if (isOdd)\
    \ {\n            sorted.Reverse();\n        }\n        return sorted;", "    \
    \    var sum = array[0] + array[array.Count - 1];\n        var sorted = array.OrderBy(x\
    \ => x).ToList();\n        if (sum % 2 == 0) sorted.Reverse();\n        return\
    \ sorted;", "        // Write your code here\n        return array;", "      \
    \  var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0) {\n\
    \            array.Sort((a, b) => (int)(b - a));\n        } else {\n         \
    \   array.Sort((a, b) => (int)(a - b));\n        }\n        return array;", " \
    \       // Write your code here\n        return array;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => (int)(b - a));\n        } else {\n            array.Sort((a, b) => (int)(a\
    \ - b));\n        }\n        return array;", "        var result = new List<long>(array);\n\
    \        if (array.Count == 0) return result;\n        if (array.Count == 1) return\
    \ result;\n        if (array.Count == 2) {\n            if ((array[0] + array[1])\
    \ % 2 == 0) {\n                result[0] = array[1];\n                result[1]\
    \ = array[0];\n            }\n            return result;\n        }\n        var\
    \ left = 0;\n        var right = array.Count - 1;\n        while (left < right)\
    \ {\n            if ((array[left] + array[right]) % 2 == 0) {\n              \
    \  result[left] = array[right];\n                result[right] = array[left];\n\
    \                left++;\n                right--;\n            } else {\n   \
    \             left++;\n            }\n        }\n        return result;", "  \
    \      // Write your code here.\n        return array;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => b.CompareTo(a));\n        } else {\n            array.Sort();\n      \
    \  }\n        return array;", "        long sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Write your code here\n        return array;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        var isOdd = sum % 2 == 1;\n        var sorted\
    \ = array.OrderBy(x => x).ToList();\n        if (isOdd) {\n            sorted.Reverse();\n\
    \        }\n        return sorted;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        var isOdd = sum % 2 == 1;\n        var sorted = array.OrderBy(x\
    \ => x).ToList();\n        if (isOdd) {\n            sorted.Reverse();\n     \
    \   }\n        return sorted;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Write your code here\n        return null;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        var result = new List<long>(array);\n   \
    \     if (sum % 2 == 0) {\n            result.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            result.Sort();\n        }\n        return result;",
  "        // Write your code here.\n        return array;", "        // Write your\
    \ code here.\n        return array;", "        // Write your code here\n     \
    \   return array;", "        var result = new List<long>(array);\n        if (array.Count\
    \ == 0) {\n            return result;\n        }\n        var first = array[0];\n\
    \        var last = array[array.Count - 1];\n        var sum = first + last;\n\
    \        if (sum % 2 == 0) {\n            result.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            result.Sort((a, b) => a.CompareTo(b));\n      \
    \  }\n        return result;", "        // Write your code here\n        return\
    \ null;", "        var sum = array[0] + array[array.Count - 1];\n        var result\
    \ = array.ToList();\n        if (sum % 2 == 0) {\n            result.Sort((a,\
    \ b) => b.CompareTo(a));\n        } else {\n            result.Sort();\n     \
    \   }\n        return result;", "        if (array.Count == 0) return array;\n\
    \        var sum = array[0] + array[array.Count - 1];\n        var isOdd = sum\
    \ % 2 == 1;\n        var sorted = array.OrderBy(x => x).ToList();\n        if\
    \ (isOdd) return sorted;\n        sorted.Reverse();\n        return sorted;",
  "        // Write your code here\n        return array;", "        long sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => (int)(b - a));\n        } else {\n            array.Sort((a, b) => (int)(a\
    \ - b));\n        }\n        return array;", "        // Write your code here\n\
    \        return null;", "        // Write your code here\n        return array;",
  "        long sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0)\
    \ {\n            array.Sort((a, b) => (int)(b - a));\n        } else {\n     \
    \       array.Sort((a, b) => (int)(a - b));\n        }\n        return array;",
  "        // Write your code here.\n        if (array.Count == 0) {\n           \
    \ return array;\n        }\n        var first = array[0];\n        var last =\
    \ array[array.Count - 1];\n        var sum = first + last;\n        var isOdd\
    \ = sum % 2 == 1;\n        if (isOdd) {\n            array.Sort();\n        }\
    \ else {\n            array.Sort((a, b) => b.CompareTo(a));\n        }\n     \
    \   return array;", "        var sum = array[0] + array[array.Count - 1];\n  \
    \      var sorted = array.OrderBy(x => x).ToList();\n        if (sum % 2 == 0)\
    \ {\n            sorted.Reverse();\n        }\n        return sorted;", "    \
    \    var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0) {\n\
    \            array.Sort((a, b) => b.CompareTo(a));\n        } else {\n       \
    \     array.Sort();\n        }\n        return array;", "        if (array.Count\
    \ == 0) return array;\n        var sum = array[0] + array[array.Count - 1];\n\
    \        if (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Write your code here\n        long sum = array[0] + array[array.Count\
    \ - 1];\n        List<long> result = new List<long>();\n        if (sum % 2 ==\
    \ 0) {\n            result = array.OrderByDescending(x => x).ToList();\n     \
    \   } else {\n            result = array.OrderBy(x => x).ToList();\n        }\n\
    \        return result;", "        // Write your code here.\n        return array;",
  "        var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0)\
    \ {\n            array.Sort((a, b) => (int)(b - a));\n        } else {\n     \
    \       array.Sort((a, b) => (int)(a - b));\n        }\n        return array;",
  "        // Write your code here\n        return array;", "        long sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => (int)(b - a));\n        } else {\n            array.Sort((a, b) => (int)(a\
    \ - b));\n        }\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        long sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0)\
    \ {\n            array.Sort((x, y) => (int)(y - x));\n        } else {\n     \
    \       array.Sort((x, y) => (int)(x - y));\n        }\n        return array;",
  "        var sum = array[0] + array[array.Count - 1];\n        var isOdd = sum %\
    \ 2 == 1;\n        var sorted = array.OrderBy(x => x).ToList();\n        if (!isOdd)\
    \ {\n            sorted.Reverse();\n        }\n        return sorted;", "    \
    \    var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0) {\n\
    \            array.Sort((x, y) => (int)(y - x));\n        } else {\n         \
    \   array.Sort((x, y) => (int)(x - y));\n        }\n        return array;", " \
    \       // Write your code here.\n        return array;", "        // Write your\
    \ code here.\n        return array;", "        // Write your code here\n     \
    \   return null;", "        var sum = array[0] + array[array.Count - 1];\n   \
    \     var sorted = array.OrderBy(x => x).ToList();\n        if (sum % 2 == 0)\
    \ {\n            sorted.Reverse();\n        }\n        return sorted;", "    \
    \    // Write your code here\n        return null;", "        long sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => (int)(b - a));\n        } else {\n            array.Sort((a, b) => (int)(a\
    \ - b));\n        }\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        var sorted = array.OrderBy(x => x).ToList();\n        if (sum\
    \ % 2 == 0) {\n            sorted.Reverse();\n        }\n        return sorted;",
  "        var sum = array[0] + array[array.Count - 1];\n        var isOdd = sum %\
    \ 2 == 1;\n        var sorted = array.OrderBy(x => x).ToList();\n        if (isOdd)\
    \ {\n            sorted.Reverse();\n        }\n        return sorted;", "    \
    \    // Write your code here\n        return array;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        var isEven = sum % 2 == 0;\n        var result\
    \ = new List<long>(array);\n        result.Sort();\n        if (!isEven) {\n \
    \           result.Reverse();\n        }\n        return result;", "        //\
    \ Write your code here\n        long sum = array[0] + array[array.Count - 1];\n\
    \        if (sum % 2 == 0) {\n            array.Sort((a, b) => (int)(b - a));\n\
    \        } else {\n            array.Sort((a, b) => (int)(a - b));\n        }\n\
    \        return array;", "        List<long> result = new List<long>();\n    \
    \    if (array.Count == 0) return result;\n        long first = array[0];\n  \
    \      long last = array[array.Count - 1];\n        if ((first + last) % 2 ==\
    \ 0) {\n            array.Sort();\n            array.Reverse();\n        } else\
    \ {\n            array.Sort();\n        }\n        foreach (long item in array)\
    \ {\n            result.Add(item);\n        }\n        return result;", "    \
    \    var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0) {\n\
    \            array.Sort((a, b) => b.CompareTo(a));\n        } else {\n       \
    \     array.Sort();\n        }\n        return array;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => b.CompareTo(a));\n        } else {\n            array.Sort();\n      \
    \  }\n        return array;", "        // Write your code here.\n        return\
    \ null;", "        // Write your code here\n        var sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => (int)(b\
    \ - a));\n        } else {\n            array.Sort((a, b) => (int)(a - b));\n\
    \        }\n        return array;", "        // Write your code here\n       \
    \ List<long> result = new List<long>();\n        if (array.Count == 0)\n     \
    \       return result;\n        if (array.Count == 1)\n            return array;\n\
    \        if (array.Count == 2)\n        {\n            if ((array[0] + array[1])\
    \ % 2 == 0)\n            {\n                result.Add(array[1]);\n          \
    \      result.Add(array[0]);\n            }\n            else\n            {\n\
    \                result.Add(array[0]);\n                result.Add(array[1]);\n\
    \            }\n            return result;\n        }\n        List<long> odd\
    \ = new List<long>();\n        List<long> even = new List<long>();\n        for\
    \ (int i = 0; i < array.Count; i++)\n        {\n            if (array[i] % 2 ==\
    \ 0)\n                even.Add(array[i]);\n            else\n                odd.Add(array[i]);\n\
    \        }\n        even.Sort();\n        odd.Sort();\n        if ((array[0] +\
    \ array[array.Count - 1]) % 2 == 0)\n        {\n            even.Reverse();\n\
    \            odd.Reverse();\n        }\n        for (int i = 0; i < odd.Count;\
    \ i++)\n            result.Add(odd[i]);\n        for (int i = 0; i < even.Count;\
    \ i++)\n            result.Add(even[i]);\n        return result;", "        //\
    \ Write your code here\n        return array;", "        // Write your code here\n\
    \        return array;", "        // Write your code here.\n        return array;",
  "        // Write your code here\n        return array;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => b.CompareTo(a));\n        } else {\n            array.Sort();\n      \
    \  }\n        return array;", "        // Write your code here\n        return\
    \ array;", "        // Write your code here\n        return null;", "        //\
    \ Write your code here\n        return array;", "        var sum = array[0] +\
    \ array[array.Count - 1];\n        var result = new List<long>(array);\n     \
    \   if (sum % 2 == 0) {\n            result.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            result.Sort();\n        }\n        return result;",
  "        var result = new List<long>(array);\n        if (array.Count == 0) {\n\
    \            return result;\n        }\n        var isEven = (array[0] + array[array.Count\
    \ - 1]) % 2 == 0;\n        result.Sort((a, b) => isEven ? b.CompareTo(a) : a.CompareTo(b));\n\
    \        return result;", "        long sum = array[0] + array[array.Count - 1];\n\
    \        if (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        if (array.Count == 0) {\n            return array;\n        }\n       \
    \ var first = array[0];\n        var last = array[array.Count - 1];\n        var\
    \ sum = first + last;\n        if (sum % 2 == 0) {\n            return array.OrderByDescending(x\
    \ => x).ToList();\n        }\n        return array.OrderBy(x => x).ToList();",
  "        var sum = array[0] + array[array.Count - 1];\n        var isEven = sum\
    \ % 2 == 0;\n        var sorted = array.OrderBy(x => x).ToList();\n        if\
    \ (isEven) {\n            sorted.Reverse();\n        }\n        return sorted;",
  "        // Write your code here\n        return array;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => b.CompareTo(a));\n        } else {\n            array.Sort();\n      \
    \  }\n        return array;", "        var sum = array[0] + array[array.Count\
    \ - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Write your code here\n        return null;", "        var sum = array[0]\
    \ + array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => b.CompareTo(a));\n        } else {\n            array.Sort();\n      \
    \  }\n        return array;"]
stop_tokens:
- "\n    }\n"

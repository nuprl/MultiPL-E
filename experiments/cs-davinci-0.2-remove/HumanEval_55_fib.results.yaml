language: cs
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 0)\n            throw new ArgumentException(\"\
    n must be non-negative\");\n        if (n < 2)\n            return n;\n      \
    \  long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n            long\
    \ c = a + b;\n            a = b;\n            b = c;\n        }\n        return\
    \ b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n - 1; i++) {\n            long c = a + b;\n     \
    \       a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (int i = 0; i < n; i++) {\n            long c = a + b;\n          \
    \  a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (int i = 0; i < n; i++) {\n            long c = a + b;\n          \
    \  a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 2; i <= n; i++) {\n            long c = a + b;\n        \
    \    a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 2; i <= n; i++) {\n            long c = a + b;\n        \
    \    a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) {\n            return 0;\n        }\n   \
    \     if (n == 1) {\n            return 1;\n        }\n        long a = 0;\n \
    \       long b = 1;\n        for (long i = 2; i <= n; i++) {\n            long\
    \ c = a + b;\n            a = b;\n            b = c;\n        }\n        return\
    \ b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 0) throw new ArgumentException();\n        if\
    \ (n == 0) return 0;\n        if (n == 1) return 1;\n        long a = 0, b = 1;\n\
    \        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n      \
    \      a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 0) throw new ArgumentException();\n        if\
    \ (n == 0) return 0;\n        if (n == 1) return 1;\n        long a = 0, b = 1;\n\
    \        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n      \
    \      a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 2; i <= n; i++) {\n            long c = a + b;\n        \
    \    a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 0)\n            throw new ArgumentException(\"\
    n must be non-negative\");\n        if (n < 2)\n            return n;\n      \
    \  long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n            long\
    \ c = a + b;\n            a = b;\n            b = c;\n        }\n        return\
    \ b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long t = a + b;\n         \
    \   a = b;\n            b = t;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 2; i <= n; i++) {\n            long c = a + b;\n        \
    \    a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 2; i <= n; i++) {\n            long c = a + b;\n        \
    \    a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 0) throw new ArgumentException();\n        if\
    \ (n == 0) return 0;\n        if (n == 1) return 1;\n        long a = 0, b = 1;\n\
    \        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n      \
    \      a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 2; i <= n; i++) {\n            long c = a + b;\n        \
    \    a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 2; i <= n; i++) {\n            long c = a + b;\n        \
    \    a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        var a = BigInteger.One;\n        var b = BigInteger.One;\n\
    \        for (var i = 0; i < n; i++) {\n            var c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return (long)a;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d506f116de264b4db58c2f0aa3d42dbc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d506f116de264b4db58c2f0aa3d42dbc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 2; i <= n; i++) {\n            long c = a + b;\n        \
    \    a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n - 1; i++) {\n            long c = a + b;\n     \
    \       a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 0) throw new ArgumentException();\n        if\
    \ (n == 0) return 0;\n        if (n == 1) return 1;\n        long a = 0, b = 1;\n\
    \        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n      \
    \      a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) {\n            return n;\n        }\n    \
    \    long a = 0;\n        long b = 1;\n        for (long i = 0; i < n - 1; i++)\
    \ {\n            long c = a + b;\n            a = b;\n            b = c;\n   \
    \     }\n        return b;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) {\n            return n;\n        }\n    \
    \    long a = 0;\n        long b = 1;\n        for (long i = 0; i < n - 1; i++)\
    \ {\n            long c = a + b;\n            a = b;\n            b = c;\n   \
    \     }\n        return b;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (int i = 2; i <= n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) {\n            return 0;\n        }\n   \
    \     if (n == 1) {\n            return 1;\n        }\n        long a = 0;\n \
    \       long b = 1;\n        for (long i = 2; i <= n; i++) {\n            long\
    \ c = a + b;\n            a = b;\n            b = c;\n        }\n        return\
    \ b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 2; i <= n; i++) {\n            long c = a + b;\n        \
    \    a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        BigInteger a = 0;\n        BigInteger b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            BigInteger c = a + b;\n       \
    \     a = b;\n            b = c;\n        }\n        return (long)a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n - 1; i++) {\n            long c = a + b;\n     \
    \       a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 2; i <= n; i++) {\n            long c = a + b;\n        \
    \    a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) {\n            return 0;\n        }\n   \
    \     var a = BigInteger.One;\n        var b = BigInteger.One;\n        for (long\
    \ i = 3; i <= n; i++) {\n            var c = a + b;\n            a = b;\n    \
    \        b = c;\n        }\n        return (long)b;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 0) throw new ArgumentException();\n        if\
    \ (n < 2) return n;\n        long a = 0, b = 1;\n        for (long i = 2; i <=\
    \ n; i++) {\n            long c = a + b;\n            a = b;\n            b =\
    \ c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 2; i <= n; i++) {\n            long c = a + b;\n        \
    \    a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 0) throw new ArgumentException();\n        if\
    \ (n == 0) return 0;\n        if (n == 1) return 1;\n        long a = 0, b = 1;\n\
    \        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n      \
    \      a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 2) return n;\n        long a = 0, b = 1;\n  \
    \      for (int i = 0; i < n; i++) {\n            long c = a + b;\n          \
    \  a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n < 0) throw new ArgumentException();\n        if\
    \ (n == 0) return 0;\n        if (n == 1) return 1;\n        long a = 0, b = 1;\n\
    \        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n      \
    \      a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n\
    \        long a = 0, b = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     long c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        long a = 0;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    public static long\
    \ Fib(long n) {\n        if (n == 0) {\n            return 0;\n        }\n   \
    \     if (n == 1) {\n            return 1;\n        }\n        long a = 0;\n \
    \       long b = 1;\n        for (long i = 2; i <= n; i++) {\n            long\
    \ c = a + b;\n            a = b;\n            b = c;\n        }\n        return\
    \ b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015750
